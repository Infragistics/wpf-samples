<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:controls="clr-namespace:IGExtensions.Common.Controls;assembly=IGExtensions.Common" mc:Ignorable="d">
    <!--
       xmlns:vsm="clr-namespace:System.Windows;assembly=IGExtensions.Common"
     xmlns:vsm="clr-namespace:System.Windows;assembly=IGExtensions.Common"
    xmlns:vsm2="clr-namespace:IGExtensions.Framework.Visuals;assembly=IGExtensions.Framework"
      xmlns:vsm3="clr-namespace:System.Windows;assembly=PresentationFramework"
     xmlns:visuals="http://schemas.infragistics.com/xaml/IGShowcase/visuals"
    
    -->
    <!--NOTE: this ResourceDictionary should contain only style resources that shared in this application -->
 
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IGShowcase.FinanceDashboard;component/Assets/Styles/AppBrushes.xaml"/>
        <!--<ResourceDictionary Source="/IGShowcase.FinanceDashboard;component/Assets/Styles/GlobalStyles.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="AppShadowRightRectangleStyle" TargetType="Rectangle">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="OpacityMask" Value="{StaticResource AppShadowOpacityMask}"/>
        <Setter Property="Fill" Value="{StaticResource AppShadowRightBrush}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="0,0,-30,0"/>
    </Style>

    <Style x:Key="AppShadowLeftRectangleStyle" TargetType="Rectangle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="OpacityMask" Value="{StaticResource AppShadowOpacityMask}"/>
        <Setter Property="Fill" Value="{StaticResource AppShadowLeftBrush}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="-30,0,0,0"/>
    </Style>

    <!-- About: Text Style -->
    <Style x:Key="AboutTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}" />
        <Setter Property="FontSize" Value="13.333"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- AppLogo: Text Style -->    
    <Style x:Key="AppLogoText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}" />
        <Setter Property="FontSize" Value="22.667"/>
        <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="Margin" Value="0,1,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!-- AppLogoBottom: Text Style -->    
    <Style x:Key="AppLogoBottomText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}" />
        <Setter Property="FontSize" Value="9.333"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Margin" Value="1,-4,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Opacity" Value="0.7"/>
    </Style>
    
    <!-- Tooltip: Text Style -->
    <Style x:Key="TooltipText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}" />
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxWidth" Value="250"/>
    </Style>
	
    <!-- Tooltip Style -->
    <Style x:Key="AppToolTipStyle" TargetType="ContentControl">
        <Setter Property="Background" Value="{StaticResource TooltipBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="Opacity" Value="0.95"/>
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        <!--<ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource AppToolTipStyle}" TargetType="ToolTip"/>	
   
    <Style x:Key="ToolTip" TargetType="Border">
        <Setter Property="Padding" Value="2,2"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TooltipBackground}"/>
    </Style>

    <!-- ******************** Selected Stock Symbol / Name / LU ********************** -->

    <!-- Stock Name Style -->
    <Style x:Key="StockDetailsSymbolTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource StockDetailsFgBrush}"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- Stock Trade Price Style -->
    <Style x:Key="StockDetailsTradeAmountTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource StockDetailsFgBrush}" />
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- Stock Percentage Change Style -->
    <Style x:Key="StockDetailsChangeTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GreenText}" />
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- Last Update Text Style -->
    <Style x:Key="StockDetailsLastUpdateTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource StockDetailsFgBrush}" />
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>


    <!-- ******************** Selected Stock Details ********************** -->

    <!-- Grid: Data Cell -->
    <Style x:Key="StockDetailsDataTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource StockDetailsDataTextFgBrush}" />
        <Setter Property="FontSize" Value="13.333"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Height" Value="21"/>
    </Style>

    <!-- Grid: Title Cell -->
    <Style x:Key="StockDetailsLabelTextBlock" TargetType="TextBlock" BasedOn="{StaticResource StockDetailsDataTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource StockDetailsFgBrush}" />
    </Style>


    <!-- ******************** Chart Titles / Labels ********************** -->

    <!-- Title TextBlock Style -->
    <Style x:Key="ChartTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}" />
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="Margin" Value="10,3,10,0"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>


    <!-- Chart Titles Grid Style -->
    <Style x:Key="ChartTitleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource ChartTitleGridBgBrush}" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,2,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Opacity" Value="0.7"/>
    </Style>

    <!-- ChartType Title Style -->
    <Style x:Key="ChooseChartTypeTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,10,6,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- ChartType RadioButton Style -->
    <Style x:Key="ChartTypeRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="{StaticResource ChartType_RadioButtonBgBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ChartType_RadioButtonFgBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
         <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Width="46" Height="26" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                		<DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="active" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="focused" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{TemplateBinding Background}"/>
						<Rectangle x:Name="path" Fill="{StaticResource ChartType_RadioButtonTopFill}" Opacity="0"/>
						<Rectangle x:Name="active" Fill="{StaticResource ChartType_RadioButtonActiveFill}" Opacity="0"/>
						<Rectangle x:Name="focused" Stroke="{StaticResource ChartType_RadioButtonActiveFill}" Opacity="0"/>
						<Rectangle x:Name="pressed" Fill="{StaticResource ChartType_RadioButtonActiveFill}" Opacity="0"/>
                    	<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Width="46" Margin="0" Height="26"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TickerAddButtonContentTemplate" >
        <!--<TextBlock TextWrapping="NoWrap" FontFamily="Arial" FontSize="14" Foreground="{StaticResource Brush_008}" FontWeight="Bold"  Text="{TemplateBinding Content}"/>-->

        <TextBlock TextWrapping="NoWrap" FontFamily="Arial" FontSize="14" Foreground="{StaticResource ForegroundBrush}" FontWeight="Bold"  Text="{Binding Content}"/>

    </DataTemplate>

    <!-- Add Button Style-->
    <Style x:Key="TickerAddButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="58" Height="auto" Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0:0:0.1"  Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0:0:0.1"  Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0"  Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="{StaticResource Color_025}"/>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="rectangle" Fill="{StaticResource TickerAddButtonRectangleFill}" Stroke="{StaticResource TickerAddRectangleStroke}" UseLayoutRounding="False" />
						<Rectangle x:Name="over" Fill="{StaticResource TickerAddButtonOverFill}" Stroke="{StaticResource TickerAddButtonOverStroke}" UseLayoutRounding="False" Opacity="0"/>                        
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


  <!-- *********************************  ButtonStyle  ********************************* -->
    <Style x:Key="MetroButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="10,0,10,2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnHoverBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnPressedBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForeground}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource btnBackgroundBrush}" Stroke="{StaticResource btnBorderBrush}" StrokeThickness="1"/>
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource btnPressedBrush}" Visibility="Collapsed" StrokeThickness="2"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElementFill}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <!-- ******************** Time Range Filter ********************** -->
    <!-- RadioButton Style -->
    <Style x:Key="StockTimeSelctorRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <!--<Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="50" />-->
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Margin" Value="8,0"/>
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="1"/>
          <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Height="{TemplateBinding Height}" Cursor="Hand" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Background="{StaticResource StockTimeSelctorBorderBgBrush}" Margin="0,1,0,0" Visibility="Collapsed"/>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="13,0" Visibility="Collapsed"/>
                        <TextBlock Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" VerticalAlignment="Center" d:LayoutOverrides="Width" HorizontalAlignment="Center" 
                                   FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DialogButton Style  ********************************* -->
    <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <ContentPresenter x:Name="contentPresenter" Opacity="0.7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <!-- *********************************  Button Brushes  ********************************* -->
    <SolidColorBrush x:Key="ButtonNormalStroke" Color="#FF413D39"/>
    <LinearGradientBrush x:Key="ButtonNormalFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF514C48" Offset="1"/>
        <GradientStop Color="#FF79746E"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonHoverStroke" Color="#FFC62D36"/>
    <LinearGradientBrush x:Key="ButtonHoverFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFF4E5B"/>
        <GradientStop Color="#FFE43D49" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonPressedFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC62D36"/>
        <GradientStop Color="#FFD3404B" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonFocusedFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF484440"/>
        <GradientStop Color="#FF33302D" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonFocusedStroke" Color="#FFB2141E"/>
    <LinearGradientBrush x:Key="ButtonDisabledFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF8D8983"/>
        <GradientStop Color="#FF5B5652" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PopUpFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF35322F"/>
        <GradientStop Color="#FF211F1D" Offset="1"/>
    </LinearGradientBrush>

    <!-- *********************************  ScrollViewer Style ********************************* -->

    <!--<Style x:Key="ScrollViewerStyle1" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" HorizontalAlignment="Stretch" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18" Style="{StaticResource ScrollbarStyle}"/>
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="1,0" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollbarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <SolidColorBrush x:Key="PopUpStroke" Color="#00211F1D"/>
    <SolidColorBrush x:Key="ComboBoxForeground" Color="White"/>
    <Color x:Key="ComboBoxHoverColor">DodgerBlue</Color>
    <SolidColorBrush x:Key="ComboBoxSelectedBrush" Color="{StaticResource ComboBoxHoverColor}"/>
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="HorizontalComboToggle" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="26"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="hover" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonHoverStroke}" Fill="{StaticResource ButtonHoverFill}" Grid.ColumnSpan="2"/>
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--d:LayoutOverrides="Width"-->
                        <Grid Grid.Column="1" >
                            <Path
								Height="8"
								Width="8"
								Stretch="Fill"
								Opacity="1"
								Data="M 1524,285 C1524,285 1524,288 1524,288 1524,288 1521,288 1521,288 1521,288 1521,289.875 1521,289.875 1521,289.875 1524,289.875 1524,289.875 1524,289.875 1524,293 1524,293 1524,293 1526,293 1526,293 1526,293 1526,289.875 1526,289.875 1526,289.875 1529,289.875 1529,289.875 1529,289.875 1529,288 1529,288 1529,288 1526,288 1526,288 1526,288 1526,285 1526,285 1526,285 1524,285 1524,285 z"
								Fill="#ffffff" UseLayoutRounding="False" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ComboBoxFocusBrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FFBCAB96" Offset="0.936"/>
        <GradientStop Color="#FFDAD2C8"/>
    </LinearGradientBrush>
    
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource ComboBoxHoverColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="hoverText"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".44" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectedText">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hoverText" d:IsOptimized="True"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectedTextShadow">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focusedText">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverText">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focusedTextShadow1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded"/>
                                <VisualState x:Name="BeforeLoaded"/>
                                <VisualState x:Name="BeforeUnloaded"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="selectedTextShadow" Foreground="Black" Visibility="Collapsed">
                            <ContentControl.Effect>
                                <BlurEffect Radius="4"/>
                            </ContentControl.Effect>
                            <ContentPresenter x:Name="contentPresenter4" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                        <ContentControl x:Name="focusedTextShadow1" Foreground="Black" Visibility="Collapsed">
                            <ContentControl.Effect>
                                <BlurEffect Radius="4"/>
                            </ContentControl.Effect>
                            <ContentPresenter x:Name="contentPresenter5" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                        <ContentControl x:Name="hoverText" Foreground="White">
                            <ContentPresenter x:Name="contentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                        <ContentControl x:Name="focusedText" Foreground="{StaticResource ComboBoxFocusBrush}" Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                        <ContentControl x:Name="selectedText" Foreground="{StaticResource ComboBoxSelectedBrush}" Visibility="Collapsed">
                            <ContentPresenter x:Name="contentPresenter3" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalComboBox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForeground}"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="26"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                        <!--<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownToggle" d:IsOptimized="True"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="dropDown" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="normal" Opacity="1" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonNormalStroke}" Fill="{StaticResource ButtonNormalFill}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="dropDown" IsHitTestVisible="false" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonHoverStroke}" Fill="{StaticResource ButtonPressedFill}" Grid.ColumnSpan="2" />
                        <Rectangle x:Name="focused" IsHitTestVisible="false" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonFocusedStroke}" Fill="{StaticResource ButtonFocusedFill}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="disabled" IsHitTestVisible="false" Opacity="0" RadiusX="3" RadiusY="3" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonNormalStroke}" Fill="{StaticResource ButtonDisabledFill}" Grid.ColumnSpan="2"/>

                        <Border x:Name="ContentPresenterBorder" Grid.ColumnSpan="2">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="DropDownToggle"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  HorizontalAlignment="Stretch"
                                                  HorizontalContentAlignment="Right"
                                                  Margin="0"
                                                  Style="{StaticResource HorizontalComboToggle}"
                                                  VerticalAlignment="Stretch" Grid.ColumnSpan="2"/>
                                <ContentPresenter x:Name="ContentPresenter"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   Margin="6,2,2,2"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <!--<TextBlock Text=" " Foreground="White"/>-->
                                </ContentPresenter>
                            </Grid>
                        </Border>

                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ErrorBrush}" BorderThickness="2" CornerRadius="3" Visibility="Collapsed" Grid.ColumnSpan="2">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <system:Boolean>true</system:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </Border>
                        <!--Popup Margin="0,27,0,0"-->
                        <!--Border MaxHeight="130"  Height="Auto" d:LayoutOverrides="HorizontalAlignment"-->
                        
                        <Popup x:Name="Popup" Margin="0" >
                            <Border x:Name="PopupBorder"
                                    Height="Auto" Margin="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3"
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="{StaticResource PopUpStroke}"
                                    Background="{StaticResource PopUpFill}">
                                <!--Style="{StaticResource ScrollViewerStyle1}"-->
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
     
    <!--<SolidColorBrush x:Key="GridSplitterForeground" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="GridSplitterBorderBrush" Color="Transparent" />-->

    <!-- ********************************** GridSplitter Style **********************************-->
    <Style x:Key="GridSplitterStyle222" TargetType="controls:GridSplitter">
        <!--<Setter Property="Foreground" Value="{StaticResource GridSplitterForeground}" />
        <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />-->
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="{TemplateBinding Background}" Opacity="0.8" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:GridSplitter">
                    <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
                        <!-- VSM -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- Background -->
                        <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" />
                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalTemplate" Height="10">
                            <StackPanel Height="6" VerticalAlignment="Center">
                                <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="{TemplateBinding Foreground}" />
                                <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Grid>
                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="10">
                            <StackPanel Width="6" VerticalAlignment="Center" Orientation="Horizontal">
                                <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="{TemplateBinding Foreground}" />
                                <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Grid>
                        <!-- Focus Visual -->
                        <Rectangle x:Name="FocusVisual" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                        <!--<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" MinHeight="8" MinWidth="8">
                            <Grid>
                                <StackPanel x:Name="HGrip" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                </StackPanel>
                                <StackPanel x:Name="VGrip" Width="8" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Vertical" Visibility="Collapsed">
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                    <Rectangle Fill="{StaticResource GlyphBackgroundBrush}" Height="2" Margin="2" StrokeThickness="0" Width="2" />
                                </StackPanel>
                            </Grid>
                        </Border>-->
                    </Grid>
                   <!--<ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="HGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="VGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="VGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterHoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterHoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
