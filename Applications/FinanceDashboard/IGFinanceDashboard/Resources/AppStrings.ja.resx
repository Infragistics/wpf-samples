<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppView_About" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="AppInfo" xml:space="preserve">
    <value>ファイナンス ダッシュボードは、Infragistics データ チャート コントロールの金融業界で使用できる機能を紹介しています。このアプリケーションでは、データ チャートは、財務チャートにおいて高いパフォーマンスとスピードを確認できます。データ チャートでは、数百万のデータ ポイントや大規模なデータセットにおいて、リアルタイムな更新をサポートします。さらに、このコントロールでは主要な統計や技術的な指標、および主要な競合他者との比較などができます。また、表示オプションは、ズームバーで 1 か月、3 か月、6 か月、1 年間、5 年間、10 年間 　および Max が選択できます。比較解析では、会社の株価と主要な競合のチャート表示を実現しています。このサンプルは実際の業務アプリケーションまたは顧客向けのアプリケーションとして実現できます。</value>
  </data>
  <data name="ADD" xml:space="preserve">
    <value>追加</value>
  </data>
  <data name="DataColumn_Ask" xml:space="preserve">
    <value>指し値</value>
  </data>
  <data name="DataColumn_Bid" xml:space="preserve">
    <value>入札</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>チャート</value>
  </data>
  <data name="DataColumn_Daily_High" xml:space="preserve">
    <value>高値</value>
  </data>
  <data name="DataColumn_Daily_Low" xml:space="preserve">
    <value>安値</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>ja</value>
  </data>
  <data name="RangeFilter_MAX" xml:space="preserve">
    <value>最大範囲</value>
  </data>
  <data name="DataColumn_Open" xml:space="preserve">
    <value>始値</value>
  </data>
  <data name="Please_Wait" xml:space="preserve">
    <value>少々お待ちください...</value>
  </data>
  <data name="Price_Over_Time" xml:space="preserve">
    <value>価格の変動</value>
  </data>
  <data name="DataColumn_P_E" xml:space="preserve">
    <value>P/E</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>範囲</value>
  </data>
  <data name="Sales_Volume" xml:space="preserve">
    <value>売上データ</value>
  </data>
  <data name="Stock_Price" xml:space="preserve">
    <value>株価</value>
  </data>
  <data name="Type_Ticker_Here" xml:space="preserve">
    <value>銘柄または名前を入力してください</value>
  </data>
  <data name="ChartType_Area" xml:space="preserve">
    <value>エリア チャート</value>
  </data>
  <data name="ChartType_Area_Desc" xml:space="preserve">
    <value>ベースライン (ダウ平均株価など) に対する株価の動向を比較します。</value>
  </data>
  <data name="ChartType_CandleStick" xml:space="preserve">
    <value>ローソク足チャート</value>
  </data>
  <data name="ChartType_CandleStick_Desc" xml:space="preserve">
    <value>取引のボリュームによる株の動向を表示します。</value>
  </data>
  <data name="ChartType_Line" xml:space="preserve">
    <value>折れ線チャート</value>
  </data>
  <data name="ChartType_Line_Desc" xml:space="preserve">
    <value>時間とともに変化する価格をトラッキングします。</value>
  </data>
  <data name="ChartType_OHLC" xml:space="preserve">
    <value>O-H-L-C</value>
  </data>
  <data name="ChartType_OHLC_Desc" xml:space="preserve">
    <value>各日の始値および終値の動向を表示します。</value>
  </data>
  <data name="DataColumn_Change" xml:space="preserve">
    <value>変更 %</value>
  </data>
  <data name="Company_Summary_Info" xml:space="preserve">
    <value>業種ノードをクリックすると子会社を表示できます</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>会社名</value>
  </data>
  <data name="DataColumn_Div_Yield" xml:space="preserve">
    <value>配当率 (%)</value>
  </data>
  <data name="HeatMap_Filter" xml:space="preserve">
    <value>フィルター</value>
  </data>
  <data name="Grid_Net_Profit_Margin" xml:space="preserve">
    <value>純利益
</value>
  </data>
  <data name="Grid_Price_to_Book" xml:space="preserve">
    <value>株価純資産 (mrq)</value>
  </data>
  <data name="Grid_Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>フリー キャッシュ フロー (mrq)</value>
  </data>
  <data name="AppView_Heat_Map" xml:space="preserve">
    <value>ヒート マップ</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>ブラック セクター ノードを左クリックしてドリルダウンできます。右クリックで戻ります。</value>
  </data>
  <data name="DataColumn_Market_Cap" xml:space="preserve">
    <value>マーケット キャップ</value>
  </data>
  <data name="Market_Description" xml:space="preserve">
    <value>マーケット</value>
  </data>
  <data name="DataColumn_Net_Profit_Margin" xml:space="preserve">
    <value>純利益</value>
  </data>
  <data name="DataColumn_Price_to_Book" xml:space="preserve">
    <value>株価純資産 (mrq)</value>
  </data>
  <data name="DataColumn_Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>フリー キャッシュ フロー (mrq)</value>
  </data>
  <data name="DataColumn_ROE" xml:space="preserve">
    <value>ROE %</value>
  </data>
  <data name="AppView_Stocks_Chart" xml:space="preserve">
    <value>株価チャート</value>
  </data>
  <data name="HeatMap_Title" xml:space="preserve">
    <value>ヒートマップ</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>株価ダッシュボード</value>
  </data>
  <data name="AppSubTitle" xml:space="preserve">
    <value>株価の変動を視覚化</value>
  </data>
  <data name="Chart_AxisScale" xml:space="preserve">
    <value>スケール</value>
  </data>
  <data name="Chart_AxisScale_Desc" xml:space="preserve">
    <value>株価値をリニアまたは対数的軸スケールに表示します。</value>
  </data>
  <data name="Chart_AxisScale_Linear" xml:space="preserve">
    <value>リニア</value>
  </data>
  <data name="Chart_AxisScale_Logarithmic" xml:space="preserve">
    <value>対数</value>
  </data>
  <data name="Chart_Trendline" xml:space="preserve">
    <value>チャート トレンドライン</value>
  </data>
  <data name="Chart_Trendline_Desc" xml:space="preserve">
    <value>株価値のトレンドを表示するか、チャートのトレンドラインを無効にします。</value>
  </data>
  <data name="ChartType_RangeArea" xml:space="preserve">
    <value>範囲チャート</value>
  </data>
  <data name="ChartType_RangeArea_Desc" xml:space="preserve">
    <value>株価値を高値および安値の範囲と比較します。</value>
  </data>
  <data name="ChartType_StepArea" xml:space="preserve">
    <value>ステップ チャート</value>
  </data>
  <data name="ChartType_StepArea_Desc" xml:space="preserve">
    <value>終値を表示します。</value>
  </data>
  <data name="RangeFilter_10Y" xml:space="preserve">
    <value>10Y</value>
  </data>
  <data name="RangeFilter_10Y_Desc" xml:space="preserve">
    <value>10 年間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_1M" xml:space="preserve">
    <value>1M</value>
  </data>
  <data name="RangeFilter_1M_Desc" xml:space="preserve">
    <value>1 月間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_1Y" xml:space="preserve">
    <value>1Y</value>
  </data>
  <data name="RangeFilter_1Y_Desc" xml:space="preserve">
    <value>1 年間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_2Y" xml:space="preserve">
    <value>2Y</value>
  </data>
  <data name="RangeFilter_2Y_Desc" xml:space="preserve">
    <value>2 年間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_3M" xml:space="preserve">
    <value>3M</value>
  </data>
  <data name="RangeFilter_3M_Desc" xml:space="preserve">
    <value>3 月間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_3Y" xml:space="preserve">
    <value>3Y</value>
  </data>
  <data name="RangeFilter_3Y_Desc" xml:space="preserve">
    <value>3 年間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_5Y" xml:space="preserve">
    <value>5Y</value>
  </data>
  <data name="RangeFilter_5Y_Desc" xml:space="preserve">
    <value>5 年間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_6M" xml:space="preserve">
    <value>6M</value>
  </data>
  <data name="RangeFilter_6M_Desc" xml:space="preserve">
    <value>6 月間の株価データを表示します。</value>
  </data>
  <data name="RangeFilter_Desc" xml:space="preserve">
    <value>株価範囲</value>
  </data>
  <data name="RangeFilter_MAX_Desc" xml:space="preserve">
    <value>最大時間範囲の株価データを表示します。</value>
  </data>
  <data name="Stock_DataIsMissing" xml:space="preserve">
    <value>株取引は終了しました。</value>
  </data>
  <data name="DataColumn_AnualRange" xml:space="preserve">
    <value>年の範囲</value>
  </data>
  <data name="DataColumn_DailyRange" xml:space="preserve">
    <value>日の範囲</value>
  </data>
  <data name="DataColumn_Vol" xml:space="preserve">
    <value>出来高</value>
  </data>
  <data name="AppInfoOLD" xml:space="preserve">
    <value>ファイナンス ダッシュボードは、Infragistics データ チャートおよびツリーマップ コントロールの金融業界で使用できる機能を紹介しています。アプリケーションの株価チャート ビューは、高速株価チャート用に最適化された高速データ チャート コントロールを使用して構築しています。データ チャートでは、数百万のデータ ポイントや大規模なデータセットにおいて、リアルタイムな更新をサポートします。さらに、このコントロールでは主要な統計や技術的な指標、および主要な競合他者との比較などができます。また、表示オプションは、ズーム バーで 1 か月、3 か月、6 か月、1 年間、5 年間、10 年間 　および Max が選択できます。比較解析では、会社の株価と主要な競合のチャート表示を実現しています。新しいヒート マップ ビューでは TreeMap および Grid コントロールを使用し、マーケットの現在の状況をスペースを有効に使用して直観的に表現しています。このサンプルは実際の業務アプリケーションまたは顧客向けのアプリケーションとして実現できます。</value>
  </data>
</root>