<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppView_About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ADD" xml:space="preserve">
    <value>ADD</value>
  </data>
  <data name="AppInfo" xml:space="preserve">
    <value>The Finance Dashboard is an interactive application demonstrating the capabilities of Infragistics Data Chart control applied to the Financial Services industry. In this application, the Data Chart has been optimized for high speed financial charting.  The Data Chart supports large datasets with millions of data points and real time updates.  In addition, this control enables key statistical and technical indicators as well as comparisons to key competitors.  Viewing options include 1 month, 3 months, 6 months, 1 year, 5 years, 10 years and “Max” with zoom bar. In addition, the comparative analysis charts a company stock price with key competitors. Real-world applications of this sample may include inclusion into a line-of-business application or an external customer facing application.</value>
  </data>
  <data name="DataColumn_Ask" xml:space="preserve">
    <value>Ask</value>
  </data>
  <data name="DataColumn_Bid" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="DataColumn_Change" xml:space="preserve">
    <value>Change %</value>
  </data>
  <data name="ChartType_Area" xml:space="preserve">
    <value>Area Chart</value>
  </data>
  <data name="ChartType_Area_Desc" xml:space="preserve">
    <value>Compare stock performance against a baseline (e.g., Dow average).</value>
  </data>
  <data name="ChartType_CandleStick" xml:space="preserve">
    <value>Candle Stick Chart</value>
  </data>
  <data name="ChartType_CandleStick_Desc" xml:space="preserve">
    <value>See how stock performs each day along with its volume of trading.</value>
  </data>
  <data name="ChartType_Line" xml:space="preserve">
    <value>Line Chart</value>
  </data>
  <data name="ChartType_Line_Desc" xml:space="preserve">
    <value>See how the stock price changes over time.</value>
  </data>
  <data name="ChartType_OHLC" xml:space="preserve">
    <value>O-H-L-C</value>
  </data>
  <data name="ChartType_OHLC_Desc" xml:space="preserve">
    <value>See how the stock performs on opening and closing each day.</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>CHART</value>
  </data>
  <data name="Company_Summary_Info" xml:space="preserve">
    <value>Click on an Industry node to view it's child companies</value>
  </data>
  <data name="DataColumn_Daily_High" xml:space="preserve">
    <value>Daily High</value>
  </data>
  <data name="DataColumn_Daily_Low" xml:space="preserve">
    <value>Daily Low</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DataColumn_Div_Yield" xml:space="preserve">
    <value>Div. Yield %</value>
  </data>
  <data name="DataColumn_EBITA" xml:space="preserve">
    <value>EBITA</value>
  </data>
  <data name="DataColumn_EPS" xml:space="preserve">
    <value>EPS</value>
  </data>
  <data name="HeatMap_Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Grid_Net_Profit_Margin" xml:space="preserve">
    <value>Net Profit
Margin</value>
  </data>
  <data name="Grid_Price_to_Book" xml:space="preserve">
    <value>Price to Book
Value (mrq)</value>
  </data>
  <data name="Grid_Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>Price to Free
Cash Flow (mrq)</value>
  </data>
  <data name="AppView_Heat_Map" xml:space="preserve">
    <value>Heat Map</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Left-click on a black Sector node to drill down and right-click to go back.</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="Market_Description" xml:space="preserve">
    <value>The Market</value>
  </data>
  <data name="RangeFilter_MAX" xml:space="preserve">
    <value>MAX</value>
  </data>
  <data name="DataColumn_Market_Cap" xml:space="preserve">
    <value>Mkt Cap</value>
  </data>
  <data name="DataColumn_Net_Profit_Margin" xml:space="preserve">
    <value>Net Profit Margin</value>
  </data>
  <data name="DataColumn_Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Please_Wait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Price_Over_Time" xml:space="preserve">
    <value>Price Over Time</value>
  </data>
  <data name="DataColumn_Price_to_Book" xml:space="preserve">
    <value>Price to Book Value (mrq)</value>
  </data>
  <data name="DataColumn_Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>Price to Free Cash Flow (mrq)</value>
  </data>
  <data name="DataColumn_P_E" xml:space="preserve">
    <value>P/E</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>RANGE</value>
  </data>
  <data name="DataColumn_ROE" xml:space="preserve">
    <value>ROE %</value>
  </data>
  <data name="Sales_Volume" xml:space="preserve">
    <value>Sales Volume</value>
  </data>
  <data name="AppView_Stocks_Chart" xml:space="preserve">
    <value>Stocks Chart</value>
  </data>
  <data name="Stock_Price" xml:space="preserve">
    <value>Stock Price</value>
  </data>
  <data name="Type_Ticker_Here" xml:space="preserve">
    <value>Type Stock Symbol or Name</value>
  </data>
  <data name="DataColumn_Vol" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="RangeFilter_10Y_Desc" xml:space="preserve">
    <value>Displays stock data for last 10 years</value>
  </data>
  <data name="RangeFilter_1M_Desc" xml:space="preserve">
    <value>Displays stock data for the last month</value>
  </data>
  <data name="RangeFilter_1Y_Desc" xml:space="preserve">
    <value>Displays stock data for the last  year</value>
  </data>
  <data name="RangeFilter_3M_Desc" xml:space="preserve">
    <value>Displays stock data for last 3 months</value>
  </data>
  <data name="RangeFilter_5Y_Desc" xml:space="preserve">
    <value>Displays stock data for last 5 years</value>
  </data>
  <data name="RangeFilter_6M_Desc" xml:space="preserve">
    <value>Displays stock data for last 6 months</value>
  </data>
  <data name="HeatMap_Title" xml:space="preserve">
    <value>Heat Map</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>FINANCE STOCK DASHBOARD</value>
  </data>
  <data name="RangeFilter_2Y_Desc" xml:space="preserve">
    <value>Displays stock data for last 2 years</value>
  </data>
  <data name="RangeFilter_3Y_Desc" xml:space="preserve">
    <value>Displays stock data for last 3 years</value>
  </data>
  <data name="AppSubTitle" xml:space="preserve">
    <value>VISUALIZING CHANGES OF FINANCIAL STOCK VALUES</value>
  </data>
  <data name="Chart_AxisScale_Linear" xml:space="preserve">
    <value>Linear</value>
  </data>
  <data name="Chart_AxisScale_Logarithmic" xml:space="preserve">
    <value>Logarithmic</value>
  </data>
  <data name="Chart_AxisScale" xml:space="preserve">
    <value>SCALE</value>
  </data>
  <data name="Chart_AxisScale_Desc" xml:space="preserve">
    <value>See how stock values look like on linear or logarithmic axis scales.</value>
  </data>
  <data name="ChartType_RangeArea" xml:space="preserve">
    <value>Range Chart</value>
  </data>
  <data name="ChartType_RangeArea_Desc" xml:space="preserve">
    <value>Compare stock performance against a range of high and low values.</value>
  </data>
  <data name="ChartType_StepArea" xml:space="preserve">
    <value>Step Chart</value>
  </data>
  <data name="ChartType_StepArea_Desc" xml:space="preserve">
    <value>See how the stock performs on closing each day.</value>
  </data>
  <data name="Chart_Trendline" xml:space="preserve">
    <value>Chart Trendline</value>
  </data>
  <data name="Chart_Trendline_Desc" xml:space="preserve">
    <value>See trends of stock values or turn off trend lines in the chart.</value>
  </data>
  <data name="RangeFilter_10Y" xml:space="preserve">
    <value>10Y</value>
  </data>
  <data name="RangeFilter_1M" xml:space="preserve">
    <value>1M</value>
  </data>
  <data name="RangeFilter_1Y" xml:space="preserve">
    <value>1Y</value>
  </data>
  <data name="RangeFilter_2Y" xml:space="preserve">
    <value>2Y</value>
  </data>
  <data name="RangeFilter_3M" xml:space="preserve">
    <value>3M</value>
  </data>
  <data name="RangeFilter_5Y" xml:space="preserve">
    <value>5Y</value>
  </data>
  <data name="RangeFilter_6M" xml:space="preserve">
    <value>6M</value>
  </data>
  <data name="RangeFilter_MAX_Desc" xml:space="preserve">
    <value>Displays stock data for maximum time range</value>
  </data>
  <data name="Stock_DataIsMissing" xml:space="preserve">
    <value>Stock is not trading on the market anymore!</value>
  </data>
  <data name="RangeFilter_3Y" xml:space="preserve">
    <value>3Y</value>
  </data>
  <data name="RangeFilter_Desc" xml:space="preserve">
    <value>Stock Range</value>
  </data>
  <data name="DataColumn_AnualRange" xml:space="preserve">
    <value>Annual Range</value>
  </data>
  <data name="DataColumn_DailyRange" xml:space="preserve">
    <value>Daily Range</value>
  </data>
  <data name="AppInfoOLD" xml:space="preserve">
    <value>The Finance Dashboard is an interactive application demonstrating the capabilities of Infragistics Data Chart and Tree Map controls applied to the Financial Services industry. The Stock Chart view of the application is built using the Data Chart, which has been optimized for high speed financial charting.  The Data Chart supports large datasets with millions of data points and real time updates.  In addition, this control enables key statistical and technical indicators as well as comparisons to key competitors.  Viewing options include 1 month, 3 months, 6 months, 1 year, 5 years, 10 years and “Max” with zoom bar. In addition, the comparative analysis charts a company stock price with key competitors. The new Heat Map view uses the Treemap and Grid controls to visually represent the current state of the Market in a space efficient layout. Real-world applications of this sample may include inclusion into a line-of-business application or an external customer facing application.</value>
  </data>
</root>