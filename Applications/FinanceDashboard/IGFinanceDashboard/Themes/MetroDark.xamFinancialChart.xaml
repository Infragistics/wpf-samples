<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.infragistics.com/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igEditors="http://infragistics.com/Editors"
                    xmlns:mscorlib="clr-namespace:System;assembly=mscorlib">

    <!--  *********************************  RESOURCES  *********************************  -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MetroDark.Colors.xaml" />
        <ResourceDictionary Source="MetroDark.Styles.WPF.xaml" />
		<ResourceDictionary Source="MetroDark.xamDataChart.xaml" />
        <ResourceDictionary Source="MetroDark.xamZoomSlider.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="ForegroundBrushHover" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="ForegroundBrushSelected" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>

    <SolidColorBrush x:Key="FinancialChartBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ToolbarBackgroundBrush" Color="{StaticResource Color_000}"/>
    <SolidColorBrush x:Key="ToolbarBorderBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="ToolbarElementSeparatorBackgroundBrush" Color="{StaticResource Color_006}"/>

    <!--  Toolbar RadioButton Brushes  -->
    <SolidColorBrush x:Key="ToolbarRadioButtonBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ToolbarRadioButtonBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ToolbarRadioButtonHoverBackgroundBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ToolbarRadioButtonHoverBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ToolbarRadioButtonCheckedBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToolbarRadioButtonCheckedBorderBrush" Color="{StaticResource Color_024}"/>

    <!--  Toolbar Button Brushes  -->
    <SolidColorBrush x:Key="ToolbarButtonBackgroundBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ToolbarButtonBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ToolbarButtonHoverBackgroundBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ToolbarButtonHoverBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ToolbarButtonPressedBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToolbarButtonPressedBorderBrush" Color="{StaticResource Color_024}"/>

    <!--  Positive Brushes - Used for: Chart Brushes, Chart Outlines, Indicator Brushes, Overlay Outlines -->
    <ig:BrushCollection x:Key="PositiveBrushes">
        <SolidColorBrush Color="{StaticResource Color_024}" />
        <SolidColorBrush Color="{StaticResource Color_066}" />
        <SolidColorBrush Color="{StaticResource Color_037}" />
        <SolidColorBrush Color="{StaticResource Color_049}" />
        <SolidColorBrush Color="{StaticResource Color_052}" />
        <SolidColorBrush Color="{StaticResource Color_058}" />
        <SolidColorBrush Color="{StaticResource Color_061}" />
    </ig:BrushCollection>

    <!--  Overlay Brushes  -->
    <ig:BrushCollection x:Key="OverlayBrushes">
        <SolidColorBrush Color="{StaticResource Color_024}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_066}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_037}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_049}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_052}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_058}" Opacity="0.3"/>
        <SolidColorBrush Color="{StaticResource Color_061}" Opacity="0.3"/>
    </ig:BrushCollection>

    <!--  Negative Brushes  -->
    <ig:BrushCollection x:Key="NegativeBrushes">
        <SolidColorBrush Color="{StaticResource Color_028}"/>
    </ig:BrushCollection>

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
    <Thickness x:Key="FinancialChartPadding">15,10,0,10</Thickness>
    <Thickness x:Key="FinancialToolbarMargin">0,0,0,5</Thickness>
    <Thickness x:Key="TextLabelMargin">0,0,5,0</Thickness>
    <Thickness x:Key="ToolbarButtonPadding">8,3,8,3</Thickness>
    <Thickness x:Key="ToolbarElementSeparation">0,0,10,0</Thickness>
    <Thickness x:Key="ToolbarElementSmallerSeparation">0,0,5,0</Thickness>
    <Thickness x:Key="ToolbarButtonThickness">1</Thickness>
    <Thickness x:Key="RadioButtonMargin">0,0,4,0</Thickness>
    <Thickness x:Key="ButtonTextMargin">5,0</Thickness>
    <mscorlib:Double x:Key="RadioButtonWidth">30</mscorlib:Double>
    <mscorlib:Double x:Key="ChartTypePickerWidth">100</mscorlib:Double>
    <CornerRadius x:Key="ToolbarButtonCornerRadius">0</CornerRadius>
    <mscorlib:Double x:Key="PickersPathOpacity">0.7</mscorlib:Double>
    <mscorlib:Double x:Key="MetroMinHeight">30</mscorlib:Double>

    <!--  Strings  -->
    <ig:SRProvider x:Key="strings" />

    <!--  *********************************  ICONS  *********************************  -->
    <!--  Indicator Icon  -->
    <Geometry x:Key="IndicatorIcon">M 40.1213 33.4645 L 34.4645 39.1213 L 35.8787 40.5355 L 40.5 35.915 L 43.585 39 L 45 37.585 L 44.915 37.5 L 48.71 33.71 L 50 35 L 50 31 L 46 31 L 47.29 32.29 L 43.5 36.085 L 40.8787 33.4645 L 40.5 33.845 L 40.1213 33.4645 ZM 36 42.2031 L 36 47 L 38 47 L 38 41.075 C 37.3218 41.7305 36.687 42.2031 36 42.2031 ZM 39 40.0549 L 39 47 L 41 47 L 41 38.675 L 40.75 38.4531 C 40.0986 38.9417 39.5269 39.511 39 40.0549 ZM 42 39.67 L 42 47 L 44 47 L 44 40.4449 L 43.75 40.4531 C 42.7668 40.4531 42.5354 40.2404 42 39.67 ZM 45 40.145 L 45 47 L 47 47 L 47 37.955 C 46.1204 38.9313 45.6923 39.73 45 40.145 ZM 48 36.975 L 48 47 L 50 47 L 50 36.365 C 49.6666 36.3746 49.3334 36.3142 49 36.2031 C 48.6226 36.4644 48.2924 36.7231 48 36.975 Z</Geometry>

    <!--  Overlay Icon  -->
    <Geometry x:Key="OverlayIcon">M 154 40 L 162 44 L 170 40 L 167.625 38.6563 L 162 41.4063 L 156.5938 38.4375 L 154 40 ZM 154 44 L 162 48 L 170 44 L 167.5 42.5625 L 162 45.4063 L 156.5 42.5313 L 154 44 ZM 154 36 L 162 40 L 170 36 L 162 32 L 154 36 Z</Geometry>

    <!--  DropDown Arrow  -->
    <Geometry x:Key="DropDownArrow">M 0 0 L 10 0 L 5 6 L 0 0 Z</Geometry>

    <!--  ********************************* Toolbar Labels Style  *********************************  -->
    <Style x:Key="ToolbarLabelsStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{StaticResource TextLabelMargin}" />
    </Style>

    <!--  ********************************* XamFinancialChart Style  *********************************  -->
    <Style TargetType="local:XamFinancialChart" BasedOn="{StaticResource {ComponentResourceKey {x:Type ig:XamXYChart}, XYChartStyle}}">
        <Setter Property="Background" Value="{StaticResource FinancialChartBackgroundBrush}" />
        <Setter Property="Brushes" Value="{StaticResource PositiveBrushes}"/>
        <Setter Property="Outlines" Value="{StaticResource PositiveBrushes}"/>
        <Setter Property="OverlayBrushes" Value="{StaticResource OverlayBrushes}" />
        <Setter Property="OverlayOutlines" Value="{StaticResource PositiveBrushes}" />
        <Setter Property="VolumeBrushes" Value="{StaticResource PositiveBrushes}" />
        <Setter Property="VolumeOutlines" Value="{StaticResource PositiveBrushes}" />
        <Setter Property="TrendLineBrushes" Value="{StaticResource PositiveBrushes}" />
        <Setter Property="IndicatorBrushes" Value="{StaticResource PositiveBrushes}" />
        <Setter Property="IndicatorNegativeBrushes" Value="{StaticResource NegativeBrushes}" />
        <Setter Property="NegativeBrushes" Value="{StaticResource NegativeBrushes}" />
        <Setter Property="NegativeOutlines" Value="{StaticResource NegativeBrushes}" />
        <Setter Property="YAxisLabelLocation" Value="OutsideRight" />
        <Setter Property="YAxisLabelHorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="{StaticResource FinancialChartPadding}" />
        <Setter Property="IsVerticalZoomEnabled" Value="False" />
        <Setter Property="YAxisAbbreviateLargeNumbers" Value="True" />
        <Setter Property="Resolution" Value="{x:Static mscorlib:Double.NaN}" />
        <Setter Property="TrendLinePeriod" Value="7" />
        <Setter Property="XAxisMajorStroke" Value="{x:Null}" />
        <Setter Property="YAxisTickLength" Value="0" />
        <Setter Property="YAxisMajorStrokeThickness" Value="1" />
        <Setter Property="YAxisStrokeThickness" Value="2" />
        <Setter Property="YAxisStroke" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamFinancialChart">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="toolbarRow" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" x:Name="indicatorRow" />
                            <RowDefinition Height="Auto" x:Name="volumeRow" />
                            <RowDefinition Height="Auto" x:Name="zoomSliderRow" />
                        </Grid.RowDefinitions>
                        <local:FinancialChartToolbar x:Name="toolbar" Margin="{StaticResource FinancialToolbarMargin}" />
                        <ContentControl Margin="{TemplateBinding Padding}" Grid.Row="1">
                            <ig:XamDataChart x:Name="DataChart">
                                <ig:SyncManager.SyncSettings>
                                    <ig:SyncSettings SyncChannel="one" SynchronizeHorizontally="True" SynchronizeVertically="False"/>
                                </ig:SyncManager.SyncSettings>
                            </ig:XamDataChart>
                        </ContentControl>
                        <StackPanel x:Name="indicatorPane" Visibility="Collapsed" Grid.Row="2" Margin="{TemplateBinding Padding}"/>
                        <ContentControl x:Name="volumePane" Visibility="Collapsed" Grid.Row="3" Margin="{TemplateBinding Padding}"/>
                        <Grid x:Name="zoomSliderPane" Visibility="Collapsed" Grid.Row="4" Margin="{TemplateBinding Padding}">
                            <ig:XamZoomSlider x:Name="zoomSlider" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ToolbarRadioButton Style  *********************************  -->
    <Style x:Key="ToolbarRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ToolbarRadioButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarRadioButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource ToolbarButtonThickness}"/>
        <Setter Property="Padding" Value="{StaticResource ToolbarButtonPadding}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Cursor="Hand">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                CornerRadius="{StaticResource ToolbarButtonCornerRadius}">
                            <ContentControl x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                        </Border>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrushHover}"/>
                <Setter Property="Background" Value="{StaticResource ToolbarRadioButtonHoverBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToolbarRadioButtonHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrushSelected}"/>
                <Setter Property="Background" Value="{StaticResource ToolbarRadioButtonCheckedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToolbarRadioButtonCheckedBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  FinancialChartRangeSelector Style  *********************************  -->
    <Style TargetType="local:FinancialChartRangeSelector">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FinancialChartRangeSelector">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource ToolbarRadioButtonStyle}"/>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="oneMonth" Grid.Column="0"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource RadioButtonMargin}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.OneMonth}"
                                     Content="{Binding FinancialChart_RangeSelector_OneMonth, Source={StaticResource strings}}" />
                        <RadioButton x:Name="threeMonths" Grid.Column="1"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource RadioButtonMargin}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.ThreeMonths}"
                                     Content="{Binding FinancialChart_RangeSelector_ThreeMonths, Source={StaticResource strings}}" />
                        <RadioButton x:Name="sixMonths" Grid.Column="2"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource RadioButtonMargin}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.SixMonths}"
                                     Content="{Binding FinancialChart_RangeSelector_SixMonths, Source={StaticResource strings}}" />
                        <RadioButton x:Name="ytd" Grid.Column="3"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource RadioButtonMargin}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.YearToDate}"
                                     Content="{Binding FinancialChart_RangeSelector_YearToDate, Source={StaticResource strings}}" />
                        <RadioButton x:Name="oneYear" Grid.Column="4"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource RadioButtonMargin}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.OneYear}"
                                     Content="{Binding FinancialChart_RangeSelector_OneYear, Source={StaticResource strings}}" />
                        <RadioButton x:Name="all" Grid.Column="5"
                                     MinWidth="{StaticResource RadioButtonWidth}" Margin="{StaticResource ToolbarElementSeparation}"
                                     local:FinancialChartRangeSelector.Option="{x:Static local:FinancialChartRangeSelectorOption.All}"
                                     Content="{Binding FinancialChart_RangeSelector_All, Source={StaticResource strings}}" />
                        <TextBlock Text="{Binding FinancialChart_RangeSelector_From, Source={StaticResource strings}}"
                                   MinWidth="30" Grid.Column="6" Margin="{StaticResource TextLabelMargin}"
                                   TextAlignment="Right" Style="{StaticResource ToolbarLabelsStyle}"/>
                        <igEditors:XamDateTimeEditor x:Name="fromPicker" Grid.Column="7" Theme="MetroDark"
                                                     Margin="{StaticResource ToolbarElementSmallerSeparation}" 
                                                     Height="{StaticResource MetroMinHeight}"/>
                        <TextBlock Text="{Binding FinancialChart_RangeSelector_To, Source={StaticResource strings}}"
                                   Grid.Column="8" MinWidth="20" Margin="{StaticResource TextLabelMargin}"
                                   TextAlignment="Right" Style="{StaticResource ToolbarLabelsStyle}"/>
                        <igEditors:XamDateTimeEditor x:Name="toPicker" Grid.Column="9" Theme="MetroDark"
                                                     Margin="0" Height="{StaticResource MetroMinHeight}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  PickerButton Style  *********************************  -->
    <Style x:Key="PickerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ToolbarButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ToolbarButtonThickness}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="{StaticResource ToolbarButtonPadding}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" Padding="{TemplateBinding Padding}"
                            CornerRadius="{StaticResource ToolbarButtonCornerRadius}">
                        <StackPanel Orientation="Horizontal">
                            <ContentControl x:Name="contentControl" Focusable="False"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            Foreground="{TemplateBinding Foreground}" Opacity="{StaticResource PickersPathOpacity}">
                                <ContentPresenter Content="{Binding Illustration, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:FinancialChartEnumCollectionPicker}}"/>
                            </ContentControl>
                            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:FinancialChartEnumCollectionPicker}}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="{StaticResource ButtonTextMargin}"/>
                            <Path x:Name="Arrow" Data="{StaticResource DropDownArrow}" Fill="{TemplateBinding Foreground}" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,2,0,0" Opacity="{StaticResource PickersPathOpacity}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrushHover}"/>
                <Setter Property="Background" Value="{StaticResource ToolbarButtonHoverBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToolbarButtonHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrushSelected}"/>
                <Setter Property="Background" Value="{StaticResource ToolbarButtonPressedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ToolbarButtonPressedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsOpen, ElementName=popup}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrushSelected}" />
                <Setter Property="Background" Value="{StaticResource ToolbarButtonPressedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ToolbarButtonPressedBorderBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  FinancialChartIndicatorCollectionPicker Style  *********************************  -->
    <Style TargetType="local:FinancialChartEnumCollectionPicker" x:Key="FinancialChartIndicatorCollectionPickerStyle">
        <Setter Property="Illustration">
            <Setter.Value>
                <Path x:Name="Icon" Width="16" Height="16"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"
                      Data="{StaticResource IndicatorIcon}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FinancialChartEnumCollectionPicker">
                    <Grid>
                        <Button x:Name="button" Content="{TemplateBinding Title}"
                                Style="{StaticResource PickerButtonStyle}" />
                        <Popup x:Name="popup" StaysOpen="False" >
                            <ListBox x:Name="list" SelectionMode="Multiple" ItemsSource="{TemplateBinding ItemsSource}"
                                     Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ListBoxItemStyle}"/>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:FinancialChartIndicatorPicker" BasedOn="{StaticResource FinancialChartIndicatorCollectionPickerStyle}">
        <Setter Property="Title" Value="{Binding FinancialChart_Toolbar_Indicator, Source={StaticResource strings}}" />
    </Style>

    <!--  *********************************  FinancialChartOverlayCollectionPicker Style  *********************************  -->
    <Style TargetType="local:FinancialChartEnumCollectionPicker" x:Key="FinancialChartOverlayCollectionPickerStyle"
           BasedOn="{StaticResource FinancialChartIndicatorCollectionPickerStyle}">
        <Setter Property="Illustration">
            <Setter.Value>
                <Path x:Name="Icon" Width="16" Height="16"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"
                      Data="{StaticResource OverlayIcon}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:FinancialChartOverlayPicker" BasedOn="{StaticResource FinancialChartOverlayCollectionPickerStyle}">
        <Setter Property="Title" Value="{Binding FinancialChart_Toolbar_Overlay, Source={StaticResource strings}}" />
    </Style>

    <!--  *********************************  financialChartEnumPicker Style  *********************************  -->
    <Style x:Key="financialChartEnumPickerStyle" TargetType="local:FinancialChartEnumPicker" >
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FinancialChartEnumPicker">
                    <ComboBox x:Name="picker" ItemsSource="{TemplateBinding ItemsSource}" Style="{StaticResource ComboBoxStyle}"
                              ItemContainerStyle="{StaticResource ComboBoxItemStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:FinancialChartEnumPicker" BasedOn="{StaticResource financialChartEnumPickerStyle}" />

    <!--  *********************************  FinancialChartToolbar Style  *********************************  -->
    <Style TargetType="local:FinancialChartToolbar">
        <Setter Property="Background" Value="{StaticResource ToolbarBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FinancialChartToolbar">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                            <local:FinancialChartIndicatorPicker x:Name="indicatorPicker" Margin="{StaticResource ToolbarElementSmallerSeparation}"/>
                            <local:FinancialChartOverlayPicker x:Name="overlayPicker" Margin="{StaticResource ToolbarElementSmallerSeparation}"/>
                            <Rectangle Width="1" Fill="{StaticResource ToolbarElementSeparatorBackgroundBrush}"
                                       Margin="{StaticResource ToolbarElementSeparation}"/>
                            <local:FinancialChartRangeSelector x:Name="rangeSelector" Margin="{StaticResource ToolbarElementSeparation}"/>
                            <Rectangle Width="1" Fill="{StaticResource ToolbarElementSeparatorBackgroundBrush}"
                                       Margin="{StaticResource ToolbarElementSeparation}"/>
                            <TextBlock Text="{Binding FinancialChart_ChartTypePicker_Label, Source={StaticResource strings}}" 
                                       Style="{StaticResource ToolbarLabelsStyle}"/>
                            <local:FinancialChartTypePicker x:Name="chartTypePicker" Margin="{StaticResource ToolbarElementSeparation}" 
                                                            Width="{StaticResource ChartTypePickerWidth}" 
                                                            Style="{StaticResource financialChartEnumPickerStyle}"/>
                            <TextBlock Text="{Binding FinancialChart_VolumeTypePicker_Label, Source={StaticResource strings}}" 
                                       Grid.Column="2" Style="{StaticResource ToolbarLabelsStyle}"/>
                            <local:FinancialChartVolumeTypePicker x:Name="volumeTypePicker" Width="{StaticResource ChartTypePickerWidth}" 
                                                                  Style="{StaticResource financialChartEnumPickerStyle}"
                                                                  Margin="{StaticResource ToolbarElementSeparation}"/>
                            <TextBlock Text="{Binding FinancialChart_TrendlinePicker_Label, Source={StaticResource strings}}" Grid.Column="2" 
                                       Style="{StaticResource ToolbarLabelsStyle}"/>
                            <local:FinancialChartTrendLineTypePicker x:Name="trendLineTypePicker"
                                                                     Style="{StaticResource financialChartEnumPickerStyle}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>