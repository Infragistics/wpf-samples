<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:dv="http://schemas.infragistics.com/xaml" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:igControls="http://schemas.infragistics.com/xaml" 
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:local="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:commonControls="clr-namespace:IGExtensions.Common.Controls;assembly=IGExtensions.Common"
                    mc:Ignorable="d">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IGShowcase.MediaTimeline;component/Assets/Styles/AppBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ******************** Color Brushes ********************** -->
    <!-- ComboBoxItem Brushes -->
    <SolidColorBrush x:Key="ComboBoxItemHoverFillBrush" Color="#FFE7E7E7" />
    <SolidColorBrush x:Key="ComboBoxItemHoverBorderBrush" Color="#FF858585" />
    <SolidColorBrush x:Key="ComboBoxItemPressedFillBrush" Color="#FF00AADE" />
    <SolidColorBrush x:Key="ComboBoxItemPressedBorderBrush" Color="#FF00AADE" />
    <SolidColorBrush x:Key="DisabledVisualElement" Color="#99FFFFFF" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="#FF3F3F3F" />
    <SolidColorBrush x:Key="LightForegroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TransparentBrush" Color="#00FFFFFF" />

    <!-- ComboBoxToggleButton Brushes -->
    <SolidColorBrush x:Key="ComboBoxToggleButtonFillBrush" Color="#FFF9F9F9" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonStrokeBrush" Color="#FFB9B9B9" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedFillBrush" Color="#FF00AADE" />
    <SolidColorBrush x:Key="ComboToggleButtonDropDownSeparatorFillBrush" Color="#FFE7E7E7" />
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedStrokeBrush" Color="#FF00AADE" />

    <!-- ComboBox Brushes -->
    <SolidColorBrush x:Key="ComboBoxFillBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBoxStrokeBrush" Color="#FFB9B9B9"/>
    <SolidColorBrush x:Key="ComboBoxReadOnlyStrokeBrush" Color="#FFB9B9B9"/>
    <SolidColorBrush x:Key="ComboBoxHoverFillBrush" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="ComboBoxHoverStrokeBrush" Color="#FF858585"/>
    <SolidColorBrush x:Key="ComboBoxFocusedStrokeBrush" Color="#FF00AADE"/>
    <SolidColorBrush x:Key="ComboBoxDisabledFillBrush" Color="#99FFFFFF"/>
    <SolidColorBrush x:Key="ComboBoxReadOnlyFillBrush" Color="#33565656"/>
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PopupBorderBrush" Color="#FFB9B9B9"/>

    <!-- Visual Glyphs brushes -->
    <SolidColorBrush x:Key="GlyphNormalFillBrush" Color="#FF858585" />
    <SolidColorBrush x:Key="GlyphHoverFillBrush" Color="#FF565656" />
    <SolidColorBrush x:Key="GlyphPressedFillBrush" Color="#FF00AADE" />
    <SolidColorBrush x:Key="GlyphDisabledFillBrush" Color="#FFD7D7D7" />

    <Color x:Key="normal">#FF006481</Color>
    <Color x:Key="hover">#FF005770</Color>
    <Color x:Key="pressed">#FF00485d</Color>

    <!-- Zoombar Brushes -->
    <SolidColorBrush x:Key="ZoombarScaleResizerFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="HScrollLeftArrowFillBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScrollRightArrowFillBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VScrollTopArrowFillBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VScrollBottomArrowFillBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScrollLeftArrowHoverFillBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="HScrollRightArrowHoverFillBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="VScrollTopArrowHoverFillBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="VScrollBottomArrowHoverFillBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="HScrollLeftArrowPressedFillBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="HScrollRightArrowPressedFillBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="VScrollTopArrowPressedFillBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="VScrollBottomArrowPressedFillBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="HScrollLeftArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HScrollRightArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="VScrollTopArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="VScrollBottomArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HThumbBackgroundBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="VThumbBackgroundBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="HThumbBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VThumbBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HBaseBackgroundBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="VBaseBackgroundBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="HScrollbarElementBorderBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="VScrollbarElementBorderBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="VScaleTopBackgroundBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VScaleBottomBackgroundBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VScaleTopBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="VScaleBottomBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScaleLeftBackgroundBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScaleRightBackgroundBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScaleLeftBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScaleRightBorderBrush" Color="{StaticResource normal}"/>
    <SolidColorBrush x:Key="HScaleLeftHoverBackgroundBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="HScaleRightHoverBackgroundBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="HScaleLeftPressedBackgroundBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="HScaleRightPressedBackgroundBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="VScaleTopHoverBackgroundBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="VScaleBottomHoverBackgroundBrush" Color="{StaticResource hover}"/>
    <SolidColorBrush x:Key="VScaleTopPressedBackgroundBrush" Color="{StaticResource pressed}"/>
    <SolidColorBrush x:Key="VScaleBottomPressedBackgroundBrush" Color="{StaticResource pressed}"/>

    <!-- Solid Brushes -->
    <SolidColorBrush x:Key="NavigationBackgroundColorBrush" Color="#FF484848" />
    <SolidColorBrush x:Key="NavigationForegroundColorBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="HighLightColorBrush" Color="#FF0097FC" />
    <SolidColorBrush x:Key="HoverHyperlinkForegroundColorBrush" Color="#FFEBF7FF" />
    <SolidColorBrush x:Key="HoverHyperLinkBackgroundColorBrush" Color="#FF747474" />
    <SolidColorBrush x:Key="BodyTextColorBrush" Color="#FF313131" />
    <SolidColorBrush x:Key="InputBorder_over" Color="#FF5E5E5E" />
    <SolidColorBrush x:Key="InputBorder_Grey" Color="#FF909090" />
    <SolidColorBrush x:Key="GreyText" Color="#FF666666" />
    <SolidColorBrush x:Key="BaseColorBrush" Color="#FF1F3B53" />
    <SolidColorBrush x:Key="HighlightBrush" Color="#FF6DBDD1" />
    <SolidColorBrush x:Key="tlSceneInnerBorderBrush" Color="#7FFFFFFF" />
    <SolidColorBrush x:Key="TrackBorderBrush" Color="#FFA3AEB9" />
    <SolidColorBrush x:Key="TrackBackgroundBrush" Color="#FFE6EFF7" />
    <Color x:Key="MainColor">#FF3C688D</Color>
    <SolidColorBrush x:Key="MainBrushColor" Color="{StaticResource MainColor}" />
    <SolidColorBrush x:Key="ScrollBarBgColor" Color="Gainsboro" />
    <SolidColorBrush x:Key="GreyArrow_over" Color="#FF5A5A5A" />
    <SolidColorBrush x:Key="GreyButton_Normal" Color="#FF9C9C9C" />
    <SolidColorBrush x:Key="ScrollBarTumb" Color="#FF9E9E9E" />

    <!-- Gradient Brushes -->
    <LinearGradientBrush x:Key="NotActivatedBorderBrush1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEEEEEE" />
        <GradientStop Color="#FFE1E1e1" Offset="1" />
        <GradientStop Color="#FFE4E4E4" Offset="0.248" />
        <GradientStop Color="#FFE4E4E4" Offset="0.25" />
        <GradientStop Color="#FFEEEEEE" Offset="0.121" />
        <GradientStop Color="#FFE2E2E2" Offset="0.513" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ActivatedBorderBrush1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD7E6F2" />
        <GradientStop Color="#FFAFC8DF" Offset="1" />
        <GradientStop Color="#FFECF2F8" Offset="0.248" />
        <GradientStop Color="#FFC5DAEC" Offset="0.25" />
        <GradientStop Color="#FFDFEBF5" Offset="0.121" />
        <GradientStop Color="#FFB5CDE3" Offset="0.513" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BaseBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFa3aeb9" Offset="0" />
                <GradientStop Color="#FF8399a9" Offset="0.3700000047683716" />
                <GradientStop Color="#FF718597" Offset="0.3709999918937683" />
                <GradientStop Color="#FF617584" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BaseOverlayBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFffffff" Offset="0" />
                <GradientStop Color="#f9ffffff" Offset="0.3700000047683716" />
                <GradientStop Color="#e4ffffff" Offset="0.6299999952316284" />
                <GradientStop Color="#c6ffffff" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="IconBackgroundBrush" EndPoint="0.4,1" StartPoint="0.4,0.133">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF657988" Offset="0" />
                <GradientStop Color="#FFabb8c2" Offset="0.977" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ActiveResizeBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0" />
                <GradientStop Color="#F2FFFFFF" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnHoverBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFb5bdc8" Offset="0" />
                <GradientStop Color="#FF8399a9" Offset="0.370" />
                <GradientStop Color="#FF718597" Offset="0.370" />
                <GradientStop Color="#FFb9c1ca" Offset="0.906" />
                <GradientStop Color="#FFb9c1ca" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="btnPressedBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF6b7c8d" Offset="0" />
                <GradientStop Color="#FF4d606f" Offset="0.370" />
                <GradientStop Color="#FF465460" Offset="0.370" />
                <GradientStop Color="#FF262d33" Offset="0.906" />
                <GradientStop Color="#FF262d33" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <!-- CommonValidationToolTip Template -->
    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25" />
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />
            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock Margin="8,4,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="#FFFFFFFF" Text="{Binding (Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- ValidationToolTip Template -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform" />
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4" />
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3" />
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2" />
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1" />
            <Border Background="#FFDC000C" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- AutoCompleteBox Style -->
    <Style x:Key="MediaAutoCompleteBoxStyle" TargetType="commonControls:AutoCompleteBox">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="3,2,2,2" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="MinWidth" Value="45" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="commonControls:AutoCompleteBox">
                    <Grid Opacity="{TemplateBinding Opacity}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="PopupOpened" />
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="PopupClosed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" From="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBox x:Name="Text" IsTabStop="True" Padding="{TemplateBinding Padding}" Foreground="#FF666666" FontSize="12" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource InputBorder_Grey}" Margin="0" VerticalContentAlignment="Center" Height="31"/>
                        <Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Template="{StaticResource CommonValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12" Background="Transparent">
                                <Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
                                <Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup" Margin="0" Width="370">
                            <Grid Opacity="{TemplateBinding Opacity}" Width="370">
                                <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" BorderThickness="0" Opacity="0">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="1" Y="1" />
                                    </Border.RenderTransform>
                                    <Border HorizontalAlignment="Stretch" Opacity="1.0" CornerRadius="0" Padding="0" BorderBrush="#FFD6D6D6" BorderThickness="1">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform X="-1" Y="-1" />
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFC8C8C8" Offset="0" />
                                                <GradientStop Color="#AADDDDDD" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ListBox x:Name="Selector" Background="{TemplateBinding Background}" BorderThickness="0" Foreground="{TemplateBinding Foreground}" ItemTemplate="{TemplateBinding ItemTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                                    </Border>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- Search Button-->
    <Style x:Key="searchButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource SearchButtonBackgroundBrush}" Margin="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <!--<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="/IGShowcase.MediaTimeline;component/Fonts/segoeui_0.ttf#Segoe UI" FontSize="16" Margin="0,0,0,2" VerticalAlignment="Center" Foreground="White" />-->
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Filter Labels-->
    <Style x:Key="FilterLabels" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="#FF00AADE"/>
        <Setter Property="FontFamily" Value="/IGShowcase.MediaTimeline;component/Fonts/segoeui_0.ttf#Segoe UI" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!-- *********************************  ComboBoxItem Style  ********************************* -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="#FF666666" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="fillColor" Fill="{StaticResource ComboBoxItemHoverFillBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboBoxItemHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="CheckedBd" Fill="{StaticResource ComboBoxItemPressedFillBrush}" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{StaticResource ComboBoxItemPressedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{StaticResource LightForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource ComboBoxItemPressedFillBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ComboBoxToggleButton Style   ********************************* -->
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedFillBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledFillBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ArrowSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Bd" Fill="{StaticResource TransparentBrush}" Grid.ColumnSpan="2" />
                        <Grid Grid.Column="1">
                            <Rectangle Width="1" Fill="{StaticResource ComboToggleButtonDropDownSeparatorFillBrush}" HorizontalAlignment="Left" Margin="-1,5,0,5" />
                            <Path x:Name="Arrow" Width="10" Height="6" Fill="{StaticResource GlyphNormalFillBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
                            <Path x:Name="ArrowSelected" Width="10" Height="6" Visibility="Collapsed" Fill="{StaticResource GlyphPressedFillBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TransparentComboBox Style -->
    <Style x:Key="TransparentComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2"/>
        <Setter Property="Foreground" Value="#FF666666" />
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates"/>
                            <VisualStateGroup x:Name="ValidationStates"/>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="Transparent" Stroke="Transparent" StrokeThickness="0" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="hover" Fill="Transparent" Stroke="Transparent"  StrokeThickness="0" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}"  BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" CornerRadius="2">
                                <ScrollViewer x:Name="DropDownScrollViewer" >
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Center" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <Rectangle x:Name="focused" Stroke="{StaticResource ComboBoxFocusedStrokeBrush}" StrokeThickness="0" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="disabled" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxFillBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ******************************************************** ZOOMBAR STYLES ******************************************************** -->

    <!-- *********************************  HorizontalScrollLeft Style  ********************************* -->
    <Style x:Key="HorizontalScrollLeftStyle" TargetType="ContentControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowHover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowPressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollLeftArrowDisabledFillBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10,-10,0,-10"/>
                        <Path x:Name="Arrow" Fill="{StaticResource HScrollLeftArrowFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="1" Data="M 7,18 C7,18 0,13 0,13 0,13 7,8 7,8 7,8 7,18 7,18 z" />
                        <Path x:Name="ArrowHover" Fill="{StaticResource HScrollLeftArrowHoverFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="0" Data="M 7,18 C7,18 0,13 0,13 0,13 7,8 7,8 7,8 7,18 7,18 z" />
                        <Path x:Name="ArrowPressed" Fill="{StaticResource HScrollLeftArrowPressedFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="0" Data="M 7,18 C7,18 0,13 0,13 0,13 7,8 7,8 7,8 7,18 7,18 z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************  HorizontalScrollRight Style  ********************************* -->
    <Style x:Key="HorizontalScrollRightStyle" TargetType="ContentControl">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowHover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowPressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollRightArrowDisabledFillBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="0,-10,-10,-10"/>
                        <Path x:Name="Arrow" Fill="{StaticResource HScrollRightArrowFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="1" Data="M 17,8 C17,8 24,13 24,13 24,13 17,18 17,18 17,18 17,8 17,8 z" />
                        <Path x:Name="ArrowHover" Fill="{StaticResource HScrollRightArrowHoverFillBrush}"  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="0" Data="M 17,8 C17,8 24,13 24,13 24,13 17,18 17,18 17,18 17,8 17,8 z" />
                        <Path x:Name="ArrowPressed" Fill="{StaticResource HScrollRightArrowPressedFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="10" Width="6" Stretch="Fill" Opacity="0" Data="M 17,8 C17,8 24,13 24,13 24,13 17,18 17,18 17,18 17,8 17,8 z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  VerticalScrollTop Style  ********************************* -->
    <Style x:Key="VerticalScrollTopStyle" TargetType="ContentControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowHover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowPressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollTopArrowDisabledFillBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10,-10,-10,0"/>
                        <Path x:Name="Arrow" Fill="{StaticResource VScrollTopArrowFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="1" Data="M 7,7 C7,7 12,0 12,0 12,0 17,7 17,7 17,7 7,7 7,7 z" />
                        <Path x:Name="ArrowHover" Fill="{StaticResource VScrollTopArrowHoverFillBrush}"  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="0" Data="M 7,7 C7,7 12,0 12,0 12,0 17,7 17,7 17,7 7,7 7,7 z" />
                        <Path x:Name="ArrowPressed" Fill="{StaticResource VScrollTopArrowPressedFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="0" Data="M 7,7 C7,7 12,0 12,0 12,0 17,7 17,7 17,7 7,7 7,7 z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  VerticalScrollBottom Style  ********************************* -->
    <Style x:Key="VerticalScrollBottomStyle" TargetType="ContentControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowHover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowPressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollBottomArrowDisabledFillBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10,0,-10,-10"/>
                        <Path x:Name="Arrow" Fill="{StaticResource VScrollBottomArrowFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="1" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Path x:Name="ArrowHover" Fill="{StaticResource VScrollBottomArrowHoverFillBrush}"  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="0" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Path x:Name="ArrowPressed" Fill="{StaticResource VScrollBottomArrowPressedFillBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Height="6" Width="10" Stretch="Fill" Opacity="0" Data="M 17,19 C17,19 12,26 12,26 12,26 7,19 7,19 7,19 17,19 17,19 z" StrokeThickness="{TemplateBinding BorderThickness}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  HorizontalScaleLeft Style  ********************************* -->
    <Style x:Key="HorizontalScaleLeftStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{StaticResource HScaleLeftBackgroundBrush}" BorderBrush="{StaticResource HScaleLeftBorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScaleHover"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScalePressed"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Thumb" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-8,-10"/>
                            <Border x:Name="ScaleHover" BorderThickness="0" Background="{StaticResource HScaleLeftHoverBackgroundBrush}" Opacity="0"/>
                            <Border x:Name="ScalePressed" BorderThickness="0" Background="{StaticResource HScaleLeftPressedBackgroundBrush}" Opacity="0"/>
                            <Grid x:Name="Thumb" Height="6" Width="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Width="1" HorizontalAlignment="Left"/>
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Width="1" HorizontalAlignment="Right"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  HorizontalScaleRight Style  ********************************* -->
    <Style x:Key="HorizontalScaleRightStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{StaticResource HScaleRightBackgroundBrush}" BorderBrush="{StaticResource HScaleRightBorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScaleHover"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScalePressed"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Thumb" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-8,-10"/>
                            <Border x:Name="ScaleHover" Background="{StaticResource HScaleRightHoverBackgroundBrush}" Opacity="0"/>
                            <Border x:Name="ScalePressed" Background="{StaticResource HScaleRightPressedBackgroundBrush}" Opacity="0"/>
                            <Grid x:Name="Thumb" Height="6" Width="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Width="1" HorizontalAlignment="Left"/>
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Width="1" HorizontalAlignment="Right"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  VerticalScaleTop Style  ********************************* -->
    <Style x:Key="VerticalScaleTopStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{StaticResource VScaleTopBackgroundBrush}" BorderBrush="{StaticResource VScaleTopBorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScaleHover"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScalePressed"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Thumb" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10,-8"/>
                            <Border x:Name="ScaleHover" Opacity="0" Background="{StaticResource VScaleTopHoverBackgroundBrush}"/>
                            <Border x:Name="ScalePressed" Opacity="0" Background="{StaticResource VScaleTopPressedBackgroundBrush}"/>
                            <Grid x:Name="Thumb" Width="6" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Height="1" VerticalAlignment="Top"/>
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Height="1" Grid.Row="1" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  VerticalScaleBottom Style  ********************************* -->
    <Style x:Key="VerticalScaleBottomStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border BorderBrush="{StaticResource VScaleBottomBorderBrush}" Background="{StaticResource VScaleBottomBackgroundBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScaleHover"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ScalePressed"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Thumb" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10,-8"/>
                            <Border x:Name="ScaleHover" BorderThickness="0" Opacity="0" Background="{StaticResource VScaleBottomHoverBackgroundBrush}"/>
                            <Border x:Name="ScalePressed" BorderThickness="0" Opacity="0" Background="{StaticResource VScaleBottomPressedBackgroundBrush}"/>
                            <Grid x:Name="Thumb" Width="6" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Height="1" VerticalAlignment="Top"/>
                                <Rectangle Fill="{StaticResource ZoombarScaleResizerFillBrush}" Height="1" Grid.Row="1" VerticalAlignment="Bottom"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamZoombar Style  ********************************* -->
    <Style x:Key="XamZoombarStyle" TargetType="local:XamZoombar">
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamZoombar">
                    <Grid>
                        <Canvas x:Name="HorizontalRootCanvasElement" Background="{TemplateBinding Background}">
                            <Grid x:Name="HorizontalScrollbarElement">
                                <Border BorderBrush="{StaticResource HScrollbarElementBorderBrush}" BorderThickness="1" Background="{StaticResource HBaseBackgroundBrush}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="HorizontalTrackElement" BorderThickness="1,0,1,1" Background="{StaticResource TransparentBrush}" Grid.Column="1" Margin="0,2,0,1">
                                        <Border BorderThickness="1" Margin="0,1,0,0">
                                            <Border BorderThickness="1" />
                                        </Border>
                                    </Border>
                                    <Grid Cursor="Hand">
                                        <ContentControl x:Name="HorizontalScrollLeftElement" Style="{StaticResource HorizontalScrollLeftStyle}"/>
                                    </Grid>
                                    <Grid Cursor="Hand" Grid.Column="2">
                                        <ContentControl x:Name="HorizontalScrollRightElement" Style="{StaticResource HorizontalScrollRightStyle}"/>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="HorizontalPreviewElement" Margin="30,0,30,0">
                                    <ContentPresenter Content="{TemplateBinding HorizontalPreviewContent}"/>
                                </Grid>
                            </Grid>
                            <ContentControl x:Name="HorizontalThumbElement" Cursor="Hand" HorizontalContentAlignment="Stretch" Style="{TemplateBinding HorizontalThumbStyle}" UseLayoutRounding="False" VerticalContentAlignment="Stretch" Height="19">
                                <Grid>
                                    <Border BorderThickness="0,1,0,1" UseLayoutRounding="False" Background="{StaticResource HThumbBackgroundBrush}" BorderBrush="{StaticResource HThumbBorderBrush}"/>
                                </Grid>
                            </ContentControl>
                            <ContentControl x:Name="HorizontalScaleLeftElement" Cursor="SizeWE" HorizontalContentAlignment="Stretch" Style="{StaticResource HorizontalScaleLeftStyle}" VerticalContentAlignment="Stretch" Width="20" Margin="0" Canvas.Left="138" Height="19"/>
                            <ContentControl x:Name="HorizontalScaleRightElement" Cursor="SizeWE" HorizontalContentAlignment="Stretch" Style="{StaticResource HorizontalScaleRightStyle}" VerticalContentAlignment="Stretch" Width="20" Height="19"/>
                        </Canvas>
                        <Canvas x:Name="VerticalRootCanvasElement" Background="{TemplateBinding Background}">
                            <Grid x:Name="VerticalScrollbarElement">
                                <Border BorderBrush="{StaticResource VScrollbarElementBorderBrush}" BorderThickness="1" Background="{StaticResource VBaseBackgroundBrush}" />
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Margin="1,0" Grid.Row="1" BorderThickness="1,1,0,1" >
                                        <Border BorderThickness="1,1,0,1">
                                            <Border x:Name="VerticalTrackElement" Background="{StaticResource TransparentBrush}" BorderThickness="1,1,0,1"/>
                                        </Border>
                                    </Border>
                                    <Grid Cursor="Hand">
                                        <ContentControl x:Name="VerticalScrollTopElement" Style="{StaticResource VerticalScrollTopStyle}"/>
                                    </Grid>
                                    <Grid Cursor="Hand" Grid.Row="2">
                                        <ContentControl x:Name="VerticalScrollBottomElement" Style="{StaticResource VerticalScrollBottomStyle}"/>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="VerticalPreviewElement" Margin="0,30,0,30">
                                    <ContentPresenter Content="{TemplateBinding VerticalPreviewContent}"/>
                                </Grid>
                            </Grid>
                            <ContentControl x:Name="VerticalThumbElement" Cursor="Hand" HorizontalContentAlignment="Stretch" Style="{TemplateBinding VerticalThumbStyle}" UseLayoutRounding="False" VerticalContentAlignment="Stretch">
                                <Grid>
                                    <Border BorderThickness="1,0" UseLayoutRounding="False" Background="{StaticResource VThumbBackgroundBrush}" BorderBrush="{StaticResource VThumbBorderBrush}"/>
                                </Grid>
                            </ContentControl>
                            <ContentControl x:Name="VerticalScaleTopElement" Cursor="SizeNS" HorizontalContentAlignment="Stretch" Style="{StaticResource VerticalScaleTopStyle}" VerticalContentAlignment="Stretch" Height="20"/>
                            <ContentControl x:Name="VerticalScaleBottomElement" Cursor="SizeNS" HorizontalContentAlignment="Stretch" Style="{StaticResource VerticalScaleBottomStyle}" VerticalContentAlignment="Stretch" Height="20" Canvas.Top="22"/>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:XamZoombar" BasedOn="{StaticResource XamZoombarStyle}"/>
</ResourceDictionary>