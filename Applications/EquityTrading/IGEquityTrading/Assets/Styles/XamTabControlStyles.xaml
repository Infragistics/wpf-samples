<ResourceDictionary    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:igWindows="http://infragistics.com/Windows" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonBrushes.xaml" />
        <ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
    <!-- *********************************  TabButton Style  ********************************* -->
    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLight}"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="Auto">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Pressed"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Path x:Name="normal" Margin="0" Data="M-0.02,0.02 C-0.02,0.02 45.96,2.81E-14 45.96,2.81E-14 C45.96,2.81E-14 45.98,10.66 46,16 C46,17.10 45.10,18 44,18 L2,18 C0.89,18 0,17.10 0,16 C-0.00,10.67 -0.02,0.02 -0.02,0.02 z" Fill="{StaticResource GreyButton_Normal}" Stretch="Fill" UseLayoutRounding="False"/>
                        <Path x:Name="hover" Margin="0" Data="M-0.02,0.02 C-0.02,0.02 45.96,2.81E-14 45.96,2.81E-14 C45.96,2.81E-14 45.98,10.66 46,16 C46,17.10 45.10,18 44,18 L2,18 C0.89,18 0,17.10 0,16 C-0.00,10.67 -0.02,0.02 -0.02,0.02 z" Fill="Red" Opacity="0" Stretch="Fill" UseLayoutRounding="False"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,-2,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TabItem Style  ********************************* -->
    <Style x:Key="TabItemExStyle1" TargetType="{x:Type igWindows:TabItemEx}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalFill}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:TabItemEx}">
                    <Grid SnapsToDevicePixels="True">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="LocationStates">
                                <win:VisualState x:Name="Bottom"/>
                                <win:VisualState x:Name="Bottom_MouseOverTab"/>
                                <win:VisualState x:Name="Left_MouseOverTab"/>
                                <win:VisualState x:Name="Right_MouseOverTab"/>
                                <win:VisualState x:Name="Top"/>
                                <win:VisualState x:Name="Top_MouseOverTab"/>
                                <win:VisualState x:Name="Left"/>
                                <win:VisualState x:Name="Right"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="SelectionStates">
                                <win:VisualState x:Name="Unselected"/>
                                <win:VisualState x:Name="Selected"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FocusStates">
                                <win:VisualState x:Name="Unfocused"/>
                                <win:VisualState x:Name="Focused"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ValidationStates">
                                <win:VisualState x:Name="Valid"/>
                                <win:VisualState x:Name="InvalidFocused"/>
                                <win:VisualState x:Name="InvalidUnfocused"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="3,3,0,0" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedFill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ButtonHoverFill}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Blue"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonNormalFill}"/>
                            <Setter Property="Foreground" Value="#8CFFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  XamTabControl Style  ********************************* -->
    <Style x:Key="XamTabControlStyle1" TargetType="{x:Type igWindows:XamTabControl}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource GridBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:XamTabControl}">
                    <Grid ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0"/>
                            <ColumnDefinition x:Name="gridCol1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="gridRow0" Height="Auto"/>
                            <RowDefinition x:Name="gridRow1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="ContentPanel" Grid.Row="1" Margin="0,-1,0,0" Background="{TemplateBinding Background}" BorderThickness="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Visibility="Visible">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF3D3D3D"/>
                                    <GradientStop Offset="1" Color="#003D3D3D"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border Margin="0,1,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Border CornerRadius="5">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" Height="{TemplateBinding TabItemContentHeight}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding SelectedContent}" ContentSource="SelectedContent" ContentTemplate="{TemplateBinding SelectedContentTemplate}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Border>
                        </Border>
                        <DockPanel x:Name="PART_HeaderArea" Margin="0,0,0,1" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PreTabItemContent" Content="{TemplateBinding PreTabItemContent}" ContentTemplate="{TemplateBinding PreTabItemContentTemplate}" DockPanel.Dock="Left"/>
                            <Button x:Name="CloseButton" Command="igWindows:TabControlCommands.CloseSelected" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Right" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="PostTabItemContent" Content="{TemplateBinding PostTabItemContent}" ContentTemplate="{TemplateBinding PostTabItemContentTemplate}" DockPanel.Dock="Right"/>
                            <igWindows:XamPager x:Name="PART_TabItemScrollViewer" CanContentScroll="True" HorizontalScrollBarVisibility="{TemplateBinding TabItemHorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding TabItemVerticalScrollBarVisibility}">
                                <ItemsPresenter x:Name="PART_TabHeaderPanel" Margin="2,2,1,0"/>
                            </igWindows:XamPager>
                        </DockPanel>
                        <Popup x:Name="PART_Popup" Width="{TemplateBinding PreferredDropDownExtent}" AllowsTransparency="True" CustomPopupPlacementCallback="{TemplateBinding PreferredDropDownPlacementCallback}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Custom" PopupAnimation="{Binding DropDownAnimation, RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="False">
                            <Border BorderBrush="#FFD0CEBF" BorderThickness="0,0,1,1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_SelectedContentHostMinimized" Height="{TemplateBinding TabItemContentHeight}" HorizontalAlignment="{Binding HorizontalAlignment, ElementName=PART_SelectedContentHost}" Margin="{TemplateBinding Padding}" VerticalAlignment="{Binding VerticalAlignment, ElementName=PART_SelectedContentHost}" Content="{x:Null}" ContentSource="SelectedContent" ContentTemplate="{TemplateBinding SelectedContentTemplate}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowTabHeaderCloseButton" Value="True">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="DropDownAnimation" Value="None"/>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="PART_Popup" Property="Width" Value="{Binding PreferredDropDownExtent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,1,3,0"/>
                            <Setter TargetName="PreTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,0,3,2"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,0,3,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="CloseButton" Property="Margin" Value="3,0,3,1"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="3,2,3,0"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="3,2,3,0"/>
                            <Setter TargetName="PART_HeaderArea" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="gridRow0" Property="Height" Value="*"/>
                            <Setter TargetName="gridRow1" Property="Height" Value="Auto"/>
                            <Setter TargetName="PART_Popup" Property="Width" Value="{Binding PreferredDropDownExtent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="CloseButton" Property="Margin" Value="0,0,4,3"/>
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="CloseButton" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="CloseButton" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="PART_HeaderArea" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="gridRow0" Property="Height" Value="0"/>
                            <Setter TargetName="gridCol0" Property="Width" Value="Auto"/>
                            <Setter TargetName="gridCol1" Property="Width" Value="*"/>
                            <Setter TargetName="PreTabItemContent" Property="DockPanel.Dock" Value="Top"/>
                            <Setter TargetName="PostTabItemContent" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="PART_Popup" Property="Height" Value="{Binding PreferredDropDownExtent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="PostTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="PreTabItemContent" Property="Margin" Value="5,3,4,3"/>
                            <Setter TargetName="CloseButton" Property="Margin" Value="4,0,0,3"/>
                            <Setter TargetName="CloseButton" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="CloseButton" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="PART_HeaderArea" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_HeaderArea" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="gridRow0" Property="Height" Value="0"/>
                            <Setter TargetName="gridCol0" Property="Width" Value="*"/>
                            <Setter TargetName="gridCol1" Property="Width" Value="Auto"/>
                            <Setter TargetName="PreTabItemContent" Property="DockPanel.Dock" Value="Top"/>
                            <Setter TargetName="PostTabItemContent" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="PART_Popup" Property="Height" Value="{Binding PreferredDropDownExtent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMinimized" Value="True">
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>