<ResourceDictionary     
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:ig="http://schemas.infragistics.com/xaml" 
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
    xmlns:igThemes="http://infragistics.com/Themes" 
    xmlns:igWindows="http://infragistics.com/Windows" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonBrushes.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  TileButton Style  ********************************* -->
    <Style x:Key="TileButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="Auto" Height="Auto">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Pressed"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FocusStates">
                                <win:VisualState x:Name="Unfocused"/>
                                <win:VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Focused1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="#FF212121" RadiusX="3" RadiusY="3"/>
                        <Rectangle x:Name="hover" Fill="{DynamicResource SelectedFill}" Opacity="0" RadiusX="3" RadiusY="3"/>
                        <Rectangle x:Name="Focused1" Fill="{DynamicResource ButtonFocusFill}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{DynamicResource SelectedFill}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TileHeaderPresenter Style  ********************************* -->
    <Style x:Key="TileHeaderPresenterStyle1" TargetType="{x:Type igPrim:TileHeaderPresenter}">
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.SmallCaptionHeightKey}}" />
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6,0,6,0" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:TileHeaderPresenter}">
                    <Grid>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal" />
                                <win:VisualState x:Name="MouseOver" />
                                <win:VisualState x:Name="Disabled" />
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="MinimizedStates">
                                <win:VisualState x:Name="NotMinimized" />
                                <win:VisualState x:Name="Maximized" />
                                <win:VisualState x:Name="Minimized" />
                                <win:VisualState x:Name="MinimizedExpanded" />
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="DragStates">
                                <win:VisualState x:Name="Dragging" />
                                <win:VisualState x:Name="NotDragging" />
                                <win:VisualState x:Name="SwapTarget" />
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ValidationStates">
                                <win:VisualState x:Name="Valid" />
                                <win:VisualState x:Name="InvalidFocused" />
                                <win:VisualState x:Name="InvalidUnfocused" />
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush igThemes:ResourceWasher.WashGroup="BaseColor" StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FF434343" />
                                    <GradientStop Offset="1" Color="#FF2F2F2F" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                                <DockPanel>
                                    <!-- TODO: Command="igTiles:Tile.CloseCommand" -->
                                    <!--<Button x:Name="closeBtn" Width="22" Height="20" VerticalAlignment="Center" Command="ig:XamTile.CloseAction" CommandParameter="{TemplateBinding Tile}" DockPanel.Dock="Right" Focusable="False" Opacity="1" Style="{DynamicResource TileButton}" Visibility="{Binding Tile.CloseButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Path Width="8" Height="8" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Data="M 1.33,0 C1.33,0 0,1.33 0,1.33 0,1.33 2.66,4 2.66,4 2.66,4 0,6.66 0,6.66 0,6.66 1.33,8 1.33,8 1.33,8 4,5.33 4,5.33 4,5.33 6.66,8 6.66,8 6.66,8 8,6.66 8,6.66 8,6.66 5.33,4 5.33,4 5.33,4 8,1.33 8,1.33 8,1.33 6.66,0 6.66,0 6.66,0 4,2.66 4,2.66 4,2.66 1.33,0 1.33,0 z" Fill="#ffffff" Opacity="1" Stretch="Fill" />
                                    </Button>-->
                                    <Button x:Name="closeBtn" Width="22" Height="20" VerticalAlignment="Center" AutomationProperties.Name="ToggleMaximized" IsTabStop="False" Visibility="{Binding Path=Tile.CloseButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource TileButton}" Opacity="1" Tag="{TemplateBinding Tile}">
                                        <ig:Commanding.Command>
                                            <igPrim:TileCommandSource EventName="Click" CommandType="Close" ParameterBinding="{Binding Path=Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ig:Commanding.Command>
                                        <Path Width="8" Height="8" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Data="M 1.33,0 C1.33,0 0,1.33 0,1.33 0,1.33 2.66,4 2.66,4 2.66,4 0,6.66 0,6.66 0,6.66 1.33,8 1.33,8 1.33,8 4,5.33 4,5.33 4,5.33 6.66,8 6.66,8 6.66,8 8,6.66 8,6.66 8,6.66 5.33,4 5.33,4 5.33,4 8,1.33 8,1.33 8,1.33 6.66,0 6.66,0 6.66,0 4,2.66 4,2.66 4,2.66 1.33,0 1.33,0 z" Fill="#ffffff" Opacity="1" Stretch="Fill" />
                                    </Button>
                                    <!-- TODO: Command="igTiles:Tile.ToggleMaximizedCommand" -->
                                    <!--<Button x:Name="maximizeBtn" Width="22" Height="20" Margin="5,0,3,0" ClickMode="Release" Command="ig:XamTile.ToggleMaximized" CommandParameter="{TemplateBinding Tile}" DockPanel.Dock="Right" Focusable="False" Opacity="1" Style="{DynamicResource TileButton}" Tag="{TemplateBinding Tile}" Visibility="{Binding Tile.MaximizeButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}">
                                      <Path Width="10" Height="8" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Data="M 3,2.96 C3,2.96 9,2.96 9,2.96 9,2.96 9,7 9,7 9,7 3,7 3,7 3,7 3,2.96 3,2.96 zM 1,1 C1,1 1,9 1,9 1,9 11,9 11,9 11,9 11,1 11,1 11,1 1,1 1,1 z" Fill="#ffffff" Opacity="1" Stretch="Fill"/>
                                     </Button>-->
                                    <Button x:Name="maximizeBtn" Width="22" Height="20" VerticalAlignment="Center" AutomationProperties.Name="ToggleMaximized" IsTabStop="False" Visibility="{Binding Path=Tile.MaximizeButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource TileButton}" Opacity="1" Tag="{TemplateBinding Tile}">
                                        <ig:Commanding.Command>
                                            <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMaximized" ParameterBinding="{Binding Path=Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ig:Commanding.Command>
                                        <Path Width="10" Height="8" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Data="M 3,2.96 C3,2.96 9,2.96 9,2.96 9,2.96 9,7 9,7 9,7 3,7 3,7 3,7 3,2.96 3,2.96 zM 1,1 C1,1 1,9 1,9 1,9 11,9 11,9 11,9 11,1 11,1 11,1 1,1 1,1 z" Fill="#ffffff" Opacity="1" Stretch="Fill" />
                                    </Button>
                                    <!-- TODO: Command="igTiles:Tile.ToggleMinimizedExpansionCommand" -->
                                    <!--<Button x:Name="expandBtn" Width="22" Height="20" VerticalAlignment="Center" Command="ig:XamTile.ToggleMinimizedExpansion" CommandParameter="{TemplateBinding Tile}" DockPanel.Dock="Right" Focusable="False" Opacity="1" Style="{DynamicResource TileButton}" Tag="{TemplateBinding Tile}" Visibility="{Binding XamTile.ExpandButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}">
                                      <Path Width="14" Height="11" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Data="M 2,4.96 C2,4.96 7,4.96 7,4.96 7,4.96 7,9 7,9 7,9 2,9 2,9 2,9 2,4.96 2,4.96 zM 7,3 C7,3 7,1.96 7,1.96 7,1.96 12,1.96 12,1.96 12,1.96 12,6 12,6 12,6 9,6 9,6 9,6 9,3 9,3 9,3 7,3 7,3 zM 5,0 C5,0 5,3 5,3 5,3 0,3 0,3 0,3 0,11 0,11 0,11 9,11 9,11 9,11 9,7.93 9,7.93 9,7.93 14,7.93 14,7.93 14,7.93 14,0 14,0 14,0 5,0 5,0 z" Fill="#ffffff" Opacity="1" Stretch="Fill"/>
                                     </Button>-->
                                    <Button x:Name="expandBtn" Width="22" Height="20" VerticalAlignment="Center" AutomationProperties.Name="ToggleExpandCollapse" IsTabStop="False" Visibility="{Binding Path=Tile.ExpandButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{TemplateBinding Tile}" Style="{StaticResource TileButton}" Opacity="1" Tag="{TemplateBinding Tile}">
                                        <ig:Commanding.Command>
                                            <igPrim:TileCommandSource EventName="Click" CommandType="ToggleMinimizedExpansion" ParameterBinding="{Binding Path=Tile, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ig:Commanding.Command>
                                        <Path Width="14" Height="11" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Data="M 2,4.96 C2,4.96 7,4.96 7,4.96 7,4.96 7,9 7,9 7,9 2,9 2,9 2,9 2,4.96 2,4.96 zM 7,3 C7,3 7,1.96 7,1.96 7,1.96 12,1.96 12,1.96 12,1.96 12,6 12,6 12,6 9,6 9,6 9,6 9,3 9,3 9,3 7,3 7,3 zM 5,0 C5,0 5,3 5,3 5,3 0,3 0,3 0,3 0,11 0,11 0,11 9,11 9,11 9,11 9,7.93 9,7.93 9,7.93 14,7.93 14,7.93 14,7.93 14,0 14,0 14,0 5,0 5,0 z" Fill="#ffffff" Opacity="1" Stretch="Fill" />
                                    </Button>

                                    <Image x:Name="image" DockPanel.Dock="Left" Source="{Binding Tile.Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None">
                                        <Image.Visibility>
                                            <Binding Path="Tile.HasImage" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Image.Visibility>
                                    </Image>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,0,10,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </DockPanel>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Tile Area Splitter  Style  ********************************* -->
    <Style TargetType="{x:Type igPrim:TileAreaSplitter}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:TileAreaSplitter}">
                    <Border Background="#FF606060" BorderBrush="#FF313131" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                        <Grid>
                            <Grid x:Name="verticalGlyphs">
                                <!--Fill="{DynamicResource {x:Static igTiles:TileBrushKeys.TileAreaSplitterGlyphBackgroundFillKey}}"-->
                                <Path Width="2" Height="14" Margin="2" Data="M 0,12 C0,12 0,14 0,14 0,14 2,14 2,14 2,14 2,12 2,12 2,12 0,12 0,12 zM 0,8 C0,8 0,10 0,10 0,10 2,10 2,10 2,10 2,8 2,8 2,8 0,8 0,8 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z" Fill="Red" Opacity="1" Stretch="Fill"/>
                            </Grid>
                            <Grid x:Name="horizontalGlyphs" Visibility="Collapsed">
                                <!--Fill="{DynamicResource {x:Static igTiles:TileBrushKeys.TileAreaSplitterGlyphBackgroundFillKey}}"-->
                                <Path Width="14" Height="2" Margin="2,2,0,0" Data="M 2,0 C2,0 0,0 0,0 0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 zM 6,0 C6,0 4,0 4,0 4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 zM 10,0 C10,0 8,0 8,0 8,0 8,2 8,2 8,2 10,2 10,2 10,2 10,0 10,0 zM 14,0 C14,0 12,0 12,0 12,0 12,2 12,2 12,2 14,2 14,2 14,2 14,0 14,0 z" Fill="Lime" Stretch="Fill"/>
                                <Path Width="14" Height="2" Margin="0,0,0,0" Data="M 2,0 C2,0 0,0 0,0 0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 zM 6,0 C6,0 4,0 4,0 4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 zM 10,0 C10,0 8,0 8,0 8,0 8,2 8,2 8,2 10,2 10,2 10,2 10,0 10,0 zM 14,0 C14,0 12,0 12,0 12,0 12,2 12,2 12,2 14,2 14,2 14,2 14,0 14,0 z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="verticalGlyphs" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="horizontalGlyphs" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="6"/>-->
            <!--<Setter Property="Cursor" Value="ScrollNS" />-->
            <!--TODO: apply-->
            <!--<Setter Property="Cursor" Value="{x:Static igPrim:TileAreaSplitter.VerticalSplitterCursor}"/>-->
            <!--</Trigger>-->
            <!--<Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="6"/>-->
            <!--<Setter Property="Cursor" Value="SizeWE" />-->
            <!--TODO: apply-->
            <!--<Setter Property="Cursor" Value="{x:Static igPrim:TileAreaSplitter.HorizontalSplitterCursor}"/>-->
            <!--</Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- *********************************  Tiles Style  ********************************* -->
    <Style x:Key="TileStyle1" TargetType="{x:Type ig:XamTile}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:XamTile}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2,2,1,1" SnapsToDevicePixels="True">
                        <Border.Background>
                            <SolidColorBrush Color="#FF2F2F2F"/>
                        </Border.Background>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="MinimizedStates">
                                <win:VisualState x:Name="Maximized"/>
                                <win:VisualState x:Name="Minimized"/>
                                <win:VisualState x:Name="MinimizedExpanded"/>
                                <win:VisualState x:Name="NotMinimized"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="DragStates">
                                <win:VisualState x:Name="SwapTarget"/>
                                <win:VisualState x:Name="Dragging"/>
                                <win:VisualState x:Name="NotDragging"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ValidationStates">
                                <win:VisualState x:Name="Valid"/>
                                <win:VisualState x:Name="InvalidFocused"/>
                                <win:VisualState x:Name="InvalidUnfocused"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <igWindows:CardPanel>
                            <DockPanel Margin="{TemplateBinding Padding}">
                                <!-- TODO apply Style="{DynamicResource TileHeaderPresenterStyle1}"-->
                                <igPrim:TileHeaderPresenter x:Name="TileHeader" Style="{DynamicResource TileHeaderPresenterStyle1}" Height="26" AutomationProperties.AutomationId="TileHeader" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" DockPanel.Dock="Top"  Tile="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border Background="#FF1B1B1B" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplateResolved}" Visibility="{TemplateBinding ContentVisibility}"/>
                                </Border>
                            </DockPanel>
                            <Rectangle x:Name="Overlay" RadiusX="1" RadiusY="1"/>
                        </igWindows:CardPanel>
                    </Border>
                    <!-- TODO: check -->
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Border" Property="Opacity" Value="0.75"/>
                        </Trigger>
                        <Trigger Property="IsSwapTarget" Value="True">
                            <Setter TargetName="Overlay" Property="Fill" Value="#7F009AC1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>