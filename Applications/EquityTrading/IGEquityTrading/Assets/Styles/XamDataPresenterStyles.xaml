<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:igDp="http://infragistics.com/DataPresenter" 
    xmlns:igWindows="http://infragistics.com/Windows" 
    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonBrushes.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->

        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/XamWindowsStyles.xaml" />-->

    </ResourceDictionary.MergedDictionaries>


    <!-- *********************************  RecordScrollTipInfo DataTemplate  ********************************* -->
    <HierarchicalDataTemplate DataType="{x:Type igDp:RecordScrollTipInfo}" ItemsSource="{Binding Children}">
        <HierarchicalDataTemplate.Resources>
            <DataTemplate DataType="{x:Type igDp:DataRecord}">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter Margin="0,0,3,0" VerticalAlignment="Center" Content="{Binding FieldLayout.ScrollTipField.Label}" TextBlock.Foreground="#FFededed"/>
                    <!-- AS 5/31/07 BR22875 -->
                    <!--<TextBlock VerticalAlignment="Center" Text=":" Margin="0,0,2,0"/>-->
                    <TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Foreground="{StaticResource ForegroundLight}" Text=":" Visibility="{Binding FieldLayout.ScrollTipField.HasLabel, Converter={StaticResource BoolToVisConverter}}"/>
                    <igDp:CellValuePresenter Margin="0" Field="{Binding FieldLayout.ScrollTipField}" Padding="0"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type igDp:GroupByRecord}">
                <TextBlock Margin="0,3" Foreground="{StaticResource ForegroundLight}" Text="{Binding Description}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type igDp:ExpandableFieldRecord}">
                <TextBlock Margin="0,3" Foreground="{StaticResource ForegroundLight}" Text="{Binding Description}"/>
            </DataTemplate>
            <!--SSP 6/7/08 BR33580 - Added SummaryRecord data template-->
            <DataTemplate DataType="{x:Type igDp:SummaryRecord}">
                <TextBlock Margin="0,3" Foreground="{StaticResource ForegroundLight}" Text="{Binding Description}"/>
            </DataTemplate>
        </HierarchicalDataTemplate.Resources>
        <ContentControl Content="{Binding Record}"/>
    </HierarchicalDataTemplate>
    <!-- *********************************  RecordScrollTip  ********************************* -->
    <Style TargetType="{x:Type igDp:RecordScrollTip}">
        <!-- BasedOn="{StaticResource {x:Type ToolTip}}"> -->
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:RecordScrollTip}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="outerBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#99000000" BorderThickness="1" CornerRadius="4" Opacity="1">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5"/>
                            </Border.Effect>
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.50,1.04" EndPoint="0.50,0.04">
                                    <GradientStop Offset="0.60" Color="#9900CCFF"/>
                                    <GradientStop Offset="0.97" Color="#FF00CCFF"/>
                                    <GradientStop Offset="0.02" Color="#3300CCFF"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="innerBorder" HorizontalAlignment="Stretch" Margin="1,1,1,1" VerticalAlignment="Stretch" BorderBrush="#ffffff" BorderThickness="0" CornerRadius="5.39,5.39,5.39,5.39" Opacity="1"/>
                        <ContentPresenter Margin="5,5,5,5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                            <Setter TargetName="outerBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="innerBorder" Property="CornerRadius" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TreeView ItemsSource="{Binding}">
                        <TreeView.Style>
                            <Style TargetType="{x:Type TreeView}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="Foreground" Value="#767676"/>
                            </Style>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="true"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <StackPanel Orientation="Vertical">
                                                <ContentPresenter x:Name="PART_Header" Grid.ColumnSpan="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"/>
                                                <StackPanel x:Name="ItemsHostPanel" Orientation="Horizontal">
                                                    <FrameworkElement Height="0" MinWidth="10"/>
                                                    <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  SummaryInnerButton Style  ********************************* -->
    <Style x:Key="SummaryInnerButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{DynamicResource CellItemNormalBorderBrush}" RadiusX="3" RadiusY="3"/>
                        <Rectangle x:Name="hover" Fill="{DynamicResource ButtonNormalBorder}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="{x:Null}" StrokeThickness="0"/>
                        <TextBlock HorizontalAlignment="Center" Margin="5,0,5,2" VerticalAlignment="Center" Foreground="#FFCCCCCC" Text="{TemplateBinding Content}" TextWrapping="Wrap" d:LayoutOverrides="Width, Height"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBackgroundHover, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBorder, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}"/>
        <Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}"/>
    </Style>
    <!-- *********************************  Summary Record Header Presenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:SummaryRecordHeaderPresenter}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryRecordHeaderPresenter}">
                    <Border Background="{x:Null}" BorderBrush="{x:Null}">
                        <TextBlock Margin="{TemplateBinding Padding}" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" Text="{Binding SummaryRecord.SummaryRecordHeaderResolved, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Padding" Value="3,3,3,3"/>
    </Style>
    <!-- *********************************  Summary Result Presenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:SummaryResultPresenter}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryResultPresenter}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="{TemplateBinding Padding}" ToolTip="{Binding SummaryResult.ToolTipResolved, RelativeSource={RelativeSource TemplatedParent}}">
                        <TextBlock Text="{Binding SummaryResult.DisplayTextAsync, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,2"/>
    </Style>
    <!-- *********************************  Summary Cell Presenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:SummaryCellPresenter}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryCellPresenter}">
                    <igDp:SummaryCellPresenterLayoutElement/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  Summary Button and PopUp Style  ********************************* -->
    <Style TargetType="{x:Type igDp:SummaryButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryButton}">
                    <Grid Height="{TemplateBinding Height}">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Pressed"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle x:Name="rectangle2" Width="12" Height="14" Fill="{DynamicResource SelectedFill}" Opacity="0" RadiusX="2" RadiusY="2" Stroke="{x:Null}" StrokeThickness="1" Visibility="Visible"/>
                            <Path x:Name="path" Width="5" Height="7" HorizontalAlignment="Center" Margin="2,2,2,2" VerticalAlignment="Center" Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.56 2,3.56 2,3.56 0,1 0,1 0,1 0,0 0,0 z" Fill="Gainsboro" Stretch="Fill" Stroke="{x:Null}" d:LayoutOverrides="Width, Height"/>
                        </Grid>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" HorizontalOffset="0" IsOpen="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" SnapsToDevicePixels="True" StaysOpen="False" VerticalOffset="4">
                            <!-- JJD 3/5/09 - TFS5971/BR32606 - set focus scope to true and navigation settings-->
                            <Border x:Name="border" BorderBrush="#FF0D0D0D" BorderThickness="0.5" CornerRadius="0" FocusManager.IsFocusScope="True" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Contained">
                                <Border.Background>
                                    <!-- Header Opacity Mask Brush -->
                                    <LinearGradientBrush StartPoint="0.5,0.80" EndPoint="0.5,-0.13">
                                        <GradientStop Offset="1" Color="#FF303030"/>
                                        <GradientStop Color="#FF0D0D0D"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid Width="Auto" Height="Auto">
                                    <Rectangle x:Name="InnerBackground" Margin="2,2,2,2" Fill="{x:Null}" RadiusX="3" RadiusY="3" Stroke="{x:Null}" Visibility="Visible"/>
                                    <StackPanel Margin="5,5,5,5">
                                        <igDp:SummaryCalculatorSelectionControl x:Name="CalculatorSelectionControl" Field="{TemplateBinding Field}"/>
                                        <StackPanel HorizontalAlignment="Right" Margin="0,5,3,0" Orientation="Horizontal">
                                            <Button x:Name="RowSummaryOkButton" Width="Auto" Height="Auto" Margin="0,0,5,0" Content="Ok" IsDefault="True" Style="{DynamicResource SummaryInnerButton}"/>
                                            <!-- JJD 3/5/09 - TFS5971/BR32606 - set IsCancel to True-->
                                            <Button x:Name="RowSummaryCancelButton" Width="Auto" Height="Auto" Content="Cancel" IsCancel="True" Style="{DynamicResource SummaryInnerButton}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rectangle2" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  SummaryRecordPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:SummaryRecordPresenter}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HeaderAreaBackground" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!-- Expansion Checkbox -->
                            <igWindows:ExpansionIndicator x:Name="ExpansionIndicator" Grid.Column="0" Grid.Row="2" Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}" CommandParameter="{TemplateBinding Record}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ExpansionIndicatorStyle1}" ToggleMode="Manual" Visibility="{Binding ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!-- Header Background -->
                            <igWindows:CardPanel x:Name="SpacerFill" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="Visible">
                                <Rectangle x:Name="fill" Margin="0,0,0,0" Fill="{TemplateBinding HeaderAreaBackground}"/>
                            </igWindows:CardPanel>
                            <!-- Header Content -->
                            <ContentPresenter x:Name="PART_HeaderContentSite" Grid.Column="2" Grid.Row="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding HeaderContent}" d:IsHidden="True" Visibility="Visible"/>
                            <!-- SSP 5/6/08 - Record Separators - Added separator rectangle -->
                            <Border x:Name="RecordSeparator" Height="6" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Background="#FF252525" BorderBrush="#FF1B1B1B" BorderThickness="0,1" Visibility="Collapsed"/>
                            <!-- Record Content -->
                            <ContentPresenter x:Name="PART_RecordContentSite" Grid.Column="2" Grid.Row="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding ContentAreaMargins}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"/>
                        </Grid>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="5"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Width" Value="10"/>
                            <Setter TargetName="RecordSeparator" Property="Height" Value="Auto"/>
                            <Setter TargetName="RecordSeparator" Property="Background" Value="Red"/>
                        </Trigger>
                        <Trigger Property="ShouldDisplayRecordContent" Value="False">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal"/>
                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"/>
                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="3"/>
                        </MultiTrigger>
                        <Trigger Property="IsHeaderRecord" Value="True">
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="0"/>
                        </Trigger>
                        <Trigger Property="HasHeaderContent" Value="False">
                            <Setter TargetName="SpacerFill" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsFixedOnBottom" Value="true">
                            <Setter Property="Margin" Value="0,2,0,0"/>
                            <Setter TargetName="Background" Property="BorderThickness" Value="0,1,0,0"/>
                        </Trigger>
                        <Trigger Property="HasSeparatorBefore" Value="true">
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                <Condition Property="Orientation" Value="Vertical"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="3"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                <Condition Property="Orientation" Value="Horizontal"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="3"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                        <!-- Record Content {DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBorder, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" -->
                        <Rectangle Fill="{DynamicResource {ComponentResourceKey ResourceId=CardBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}"/>
                        <ContentPresenter x:Name="PART_RecordContentSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"/>
                    </igWindows:CardPanel>
                </ControlTemplate>
            </Setter.Value>
            <!--<Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:SummaryRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                  
                        <Rectangle Fill="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, CardBackground}}"/>
                        <ContentPresenter x:Name="PART_RecordContentSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"/>
                    </igWindows:CardPanel>
                </ControlTemplate>
            </Setter.Value>-->
        </Setter>
    </Style>
    <!-- *********************************  LabelPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:LabelPresenter}">
        <Setter Property="Padding" Value="0,0,6,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="LabelHighlight" Value="#FF161616"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="InnerBorderBrush" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}"/>
        <Setter Property="OuterBorderBrush" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ToolTip" Value="{Binding Field.ToolTip, RelativeSource={x:Static RelativeSource.Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:LabelPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbHighlightOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.17" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fishHeadHighlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.17" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHighlightOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="fishHeadHighlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeIn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOut">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="SummaryButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="FixedButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeInFilterButton">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOutFilterButton">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="FilterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="labelCntr" Height="{TemplateBinding Height}" Margin="0" Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="fishColumn" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Pressed"/>
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="Disabled"/>
                                <win:VisualState x:Name="MouseOver"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="DragStates">
                                <win:VisualState x:Name="Dragging"/>
                                <win:VisualState x:Name="DragSource"/>
                                <win:VisualState x:Name="NotDragging"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="LocationStates">
                                <win:VisualState x:Name="CellArea"/>
                                <win:VisualState x:Name="HeaderArea"/>
                                <win:VisualState x:Name="FieldChooser"/>
                                <win:VisualState x:Name="GroupByArea"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="SelectionStates">
                                <win:VisualState x:Name="Selected"/>
                                <win:VisualState x:Name="Unselected"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="SortStates">
                                <win:VisualState x:Name="SortAscending"/>
                                <win:VisualState x:Name="SortDescending"/>
                                <win:VisualState x:Name="Unsorted"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <!-- Background Bar -->
                        <Border x:Name="background" Width="Auto" Height="Auto" Background="{DynamicResource HeaderCellFill}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True"/>
                        <!-- Highlight -->
                        <Border x:Name="highlight" Width="Auto" Height="Auto" Margin="0,0,1,1" Background="{DynamicResource SelectedFill}" Opacity="0" SnapsToDevicePixels="True"/>
                        <Border x:Name="lineOuter" Width="Auto" Height="Auto" Margin="0,0,0,0" Background="Transparent" BorderBrush="{TemplateBinding OuterBorderBrush}" BorderThickness="0" CornerRadius="1.55" SnapsToDevicePixels="True"/>
                        <Border x:Name="lineInner" Width="Auto" Height="Auto" Margin="1,1,1,1" Background="Transparent" BorderThickness="1" CornerRadius="0.55" SnapsToDevicePixels="True"/>
                        <Path x:Name="fishHead" Grid.Column="1" HorizontalAlignment="Left" Margin="0,1" Data="M0,20 C0,20 3.89,10 3.89,10 3.89,10 0,0 0,0 0,0 0,20 0,20 z" Fill="#FF4D4D4D" SnapsToDevicePixels="True" Stretch="Fill" Visibility="Collapsed"/>
                        <Path x:Name="fishHeadHighlight" Grid.Column="1" HorizontalAlignment="Left" Margin="0,1" Data="M0,20 C0,20 3.89,10 3.89,10 3.89,10 0,0 0,0 0,0 0,20 0,20 z" Fill="{DynamicResource CellItemSelectedBackgroundBrush}" SnapsToDevicePixels="True" Stretch="Fill" Visibility="Collapsed"/>
                        <Grid x:Name="sortIndicatorAndLabel" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="LabelContent" Margin="6,-2,0,0" VerticalAlignment="Center" Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Focusable="False" d:LayoutOverrides="Width, Height"/>
                            <igWindows:SortIndicator x:Name="SortIndicator" Width="Auto" Grid.Column="1" HorizontalAlignment="Right" Margin="5,0,0,0" VerticalAlignment="Center" SortStatus="{TemplateBinding SortStatus}" Visibility="Collapsed"/>
                            <igDp:SummaryButton x:Name="SummaryButton" Width="Auto" Grid.Column="2" HorizontalAlignment="Right" Margin="5,0,0,0" VerticalAlignment="Center" Field="{TemplateBinding Field}" Foreground="White" Opacity="0.4" Visibility="Collapsed"/>
                            <igDp:FilterButton x:Name="FilterButton" Width="Auto" Grid.Column="3" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Center" Field="{TemplateBinding Field}" Opacity="0.4" Visibility="{TemplateBinding FilterButtonVisibility}"/>
                            <igDp:FixedFieldButton x:Name="FixedButton" Width="Auto" Grid.Column="4" HorizontalAlignment="Left" Margin="2,0,2,0" VerticalAlignment="Center" Field="{TemplateBinding Field}" Opacity="0.4" Visibility="{TemplateBinding FixedButtonVisibility}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HighlightAsPrimary" Value="true">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="HorizontalAlignment" Value="Center">
                            <Setter TargetName="SortIndicator" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="SortIndicator" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="SortIndicator" Property="Margin" Value="0,5,0,0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="sbHighlightOn_BeginStoryboard" Storyboard="{StaticResource sbHighlightOn}"/>
                                <BeginStoryboard x:Name="SigmaFadeIn_BeginStoryboard" Storyboard="{StaticResource SigmaFadeOut}"/>
                                <BeginStoryboard x:Name="SigmaFadeIn_BeginStoryboard1" Storyboard="{StaticResource SigmaFadeIn}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="sbHighlightOff_BeginStoryboard" Storyboard="{StaticResource sbHighlightOff}"/>
                                <BeginStoryboard x:Name="SigmaFadeOut_BeginStoryboard" Storyboard="{StaticResource SigmaFadeOut}"/>
                                <StopStoryboard BeginStoryboardName="SigmaFadeIn_BeginStoryboard1"/>
                                <StopStoryboard BeginStoryboardName="sbHighlightOn_BeginStoryboard"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasActiveFilters" SourceName="FilterButton" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="HasActiveFilters" SourceName="FilterButton" Value="True">
                            <Setter TargetName="FilterButton" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Ascending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Descending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsInGroupByArea, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="background" Property="CornerRadius" Value="2,0,0,2"/>
                            <Setter TargetName="highlight" Property="CornerRadius" Value="2,0,0,2"/>
                            <Setter TargetName="lineOuter" Property="CornerRadius" Value="2,0,0,2"/>
                            <Setter TargetName="lineInner" Property="CornerRadius" Value="2,0,0,2"/>
                            <Setter TargetName="background" Property="BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="lineOuter" Property="BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="lineInner" Property="BorderThickness" Value="1,1,0,1"/>
                            <Setter TargetName="lineInner" Property="Margin" Value="1,1,0,1"/>
                            <Setter TargetName="fishHead" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="fishHeadHighlight" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="fishColumn" Property="Width" Value="14"/>
                        </DataTrigger>
                        <Trigger Property="IsInFieldChooser" Value="true">
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="FilterButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="FixedButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SummaryButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="labelCntr" Property="Margin" Value="0,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsDragIndicator" Value="True">
                            <Setter Property="Padding" Value="0"/>
                            <Setter TargetName="labelCntr" Property="Margin" Value="2,4"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="highlight" Property="Opacity" Value="0"/>
                            <Setter TargetName="fishHeadHighlight" Property="Opacity" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NormalForeground">
        <Setter Property="Control.Foreground" Value="White"/>
    </Style>
    <!-- *********************************  CellValuePresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:CellValuePresenter}">
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BackgroundActive"  Value="Transparent"/>
        <Setter Property="BorderActiveBrush" Value="Transparent"/>
        <Setter Property="ForegroundStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundActiveStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundAlternateStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundPrimaryStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundSelectedStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundFieldSelectedStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundHoverStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="ForegroundHoverStyle" Value="{StaticResource NormalForeground}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:CellValuePresenter}">
                    <igWindows:CardPanel>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="SelectionStates">
                                <win:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Active1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="FieldSelected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Active1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Unselected"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Disabled"/>
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Normal"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ActiveStates">
                                <win:VisualState x:Name="Inactive"/>
                                <win:VisualState x:Name="Active"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="Active1" SnapsToDevicePixels="True" Stroke="{TemplateBinding BorderActiveBrush}" StrokeThickness="1" Visibility="Collapsed" Fill="{TemplateBinding BackgroundActive}"/>
                        <ContentPresenter x:Name="PART_EditorSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{TemplateBinding ForegroundStyle}"/>
                    </igWindows:CardPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- *********************************  DataRecordPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:DataRecordPresenter}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HeaderAreaBackground" Value="Transparent"/>
        <Setter Property="NestedContentBackground" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundLight}"/>
        <Setter Property="Background" Value="{StaticResource HeaderCellFill}"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="{TemplateBinding Background}">
                        <Border x:Name="addRowFooter" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                        <Grid Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!-- Expansion Checkbox -->
                            <Border x:Name="OrientationHorizontalSep" Grid.ColumnSpan="6" Background="#FFFB0000" BorderBrush="#FF2BFF00" BorderThickness="0,0,1,0" Visibility="Collapsed"/>
                            <igWindows:ExpansionIndicator x:Name="ExpansionIndicator" Grid.Column="1" Grid.Row="3" Panel.ZIndex="1" Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}" CommandParameter="{TemplateBinding Record}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{TemplateBinding FixedNearElementTransform}" Style="{DynamicResource ExpansionIndicatorStyle1}" ToggleMode="Manual" Visibility="{Binding ExpansionIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <igWindows:CardPanel x:Name="SpacerFill" Grid.Column="1" Grid.ColumnSpan="6" Grid.Row="1" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="Visible"/>
                            <ContentPresenter x:Name="PART_HeaderContentSite" Grid.Column="3" Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding HeaderContent}" d:IsHidden="True" Visibility="Visible"/>
                            <Border x:Name="RecordSeparator" Height="6" Grid.Column="1" Grid.ColumnSpan="6" Grid.Row="2" Background="#FF252525" BorderBrush="#FF1B1B1B" BorderThickness="0,1" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="PART_RecordContentSite" Grid.Column="3" Grid.Row="3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"/>
                            <Border x:Name="PART_NestedContentSite" Grid.Column="3" Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{TemplateBinding NestedContentBackground}" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="Visible">
                                <ContentControl x:Name="contentControl" Content="{TemplateBinding NestedContent}" RenderTransform="{TemplateBinding ScrollableElementTransform}"/>
                            </Border>
                        </Grid>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=FieldLayout.AutoFitToWidth, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.ColumnSpan" Value="3"/>
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.ColumnSpan" Value="3"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </MultiDataTrigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="3"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="3"/>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="5"/>
                            <Setter TargetName="PART_RecordContentSite" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ExpansionIndicator" Property="Margin" Value="0,2"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="3"/>
                            <Setter TargetName="SpacerFill" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="SpacerFill" Property="Grid.RowSpan" Value="6"/>
                            <Setter TargetName="RecordSeparator" Property="Width" Value="10"/>
                            <Setter TargetName="RecordSeparator" Property="Height" Value="Auto"/>
                            <Setter TargetName="RecordSeparator" Property="BorderThickness" Value="1,0"/>
                            <Setter TargetName="RecordSeparator" Property="Background" Value="Red"/>
                            <Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ShouldDisplayRecordContent" Value="False">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                                <Condition Property="IsHeaderRecord" Value="False"/>
                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal"/>
                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"/>
                                <Condition Property="ShouldDisplayRecordContent" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="4"/>
                        </MultiTrigger>
                        <Trigger Property="IsHeaderRecord" Value="True">
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Column" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHeaderRecord" Value="True"/>
                                <Condition Property="ExpansionIndicatorVisibility" Value="Visible"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <Trigger Property="HasHeaderContent" Value="False">
                            <Setter TargetName="SpacerFill" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="baseGrid" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="False">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSpecialRecord}" Value="true"/>
                                <Condition Binding="{Binding IsFixedOnTop, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="addRowFooter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="addRowFooter" Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, FixedRecord}}"/>
                            <Setter TargetName="addRowFooter" Property="BorderThickness" Value="0,0,0,1"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSpecialRecord}" Value="true"/>
                                <Condition Binding="{Binding IsFixedOnBottom, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="addRowFooter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="addRowFooter" Property="BorderThickness" Value="0,1,0,0"/>
                            <Setter TargetName="addRowFooter" Property="Background" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, FixedRecord}}"/>
                            <Setter Property="Margin" Value="0,1,0,0"/>
                        </MultiDataTrigger>
                        <Trigger Property="HasSeparatorBefore" Value="true">
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                <Condition Property="Orientation" Value="Vertical"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorAfter" Value="true"/>
                                <Condition Property="Orientation" Value="Horizontal"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="4"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasSeparatorBefore" Value="true"/>
                                <Condition Property="Orientation" Value="Horizontal"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RecordSeparator" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.ColumnSpan" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="RecordSeparator" Property="Grid.RowSpan" Value="6"/>
                        </MultiTrigger>
                        <Trigger Property="IsFilteredOut" Value="True">
                            <Setter TargetName="PART_RecordContentSite" Property="Opacity" Value="0.35"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Column" Value="0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordPresenter}">
                    <igWindows:CardPanel x:Name="baseGrid" Background="Transparent">
                        <!-- Record Content -->
                        <!-- Record Content {DynamicResource {ComponentResourceKey ResourceId=SummaryCommandButtonsBorder, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" -->
                        <Rectangle Fill="{DynamicResource {ComponentResourceKey ResourceId=CardBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}"/>
                        <ContentPresenter x:Name="PART_RecordContentSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding RecordContentAreaTemplate}"/>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInCard" Value="True">
                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  DataRecordCellArea Style  ********************************* -->
    <Style TargetType="{x:Type igDp:DataRecordCellArea}">
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BackgroundHover" Value="Transparent"/>
        <Setter Property="BorderHoverBrush" Value="Transparent"/>
        <Setter Property="BackgroundActive" Value="{StaticResource SelectedFill}"/>
        <Setter Property="BorderActiveBrush" Value="{StaticResource SelectedFill}"/>
        <Setter Property="BackgroundAlternate" Value="#FFD7D7D7"/>
        <Setter Property="BorderAlternateBrush" Value="Transparent"/>
        <Setter Property="BackgroundSelected" Value="{StaticResource BaseBrush}"/>
        <Setter Property="BorderSelectedBrush" Value="{StaticResource BaseBrush}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:DataRecordCellArea}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="timelineIsActive">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Active1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsActive_off">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Active1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Selected1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected_off">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Selected1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover_off">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <igWindows:CardPanel>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Disabled"/>
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="Alternate" Background="{TemplateBinding BackgroundAlternate}" BorderBrush="{TemplateBinding BorderAlternateBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="1" Visibility="Collapsed"/>
                        <Border x:Name="Selected1" Background="{TemplateBinding BackgroundSelected}" BorderBrush="{TemplateBinding BorderSelectedBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="Hover" Background="{TemplateBinding BackgroundHover}" BorderBrush="{TemplateBinding BorderHoverBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0" Visibility="Visible"/>
                        <Border x:Name="Active1" Background="{TemplateBinding BackgroundActive}" BorderBrush="{TemplateBinding BorderActiveBrush}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="CellContent" Content="{TemplateBinding Content}" Style="{TemplateBinding ForegroundStyle}"/>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAlternate" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                                <Condition Property="IsAddRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Alternate" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Active1" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.HoverBegin">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.HoverEnd">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover_off}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.Selected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:DataRecordCellArea.Deselected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected_off}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsAddRecord" Value="True">
                            <Setter TargetName="Hover" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsFilterRecord" Value="True">
                            <Setter TargetName="Hover" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Selected1" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, WhiteForegroundStyle}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, WhiteForegroundStyle}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsActive" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Pen x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByAreaMultiConnectorLinePen}" 
         Brush="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.ConnectorLinePenBrush}}" 
         DashCap="Round" DashStyle="{x:Static DashStyles.Dot}" EndLineCap="Round" LineJoin="Round" StartLineCap="Round" Thickness="3" x:Shared="false"/>
    <!-- *********************************  ExpandableFieldRecordPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <!--TODO-MT: uncomment due to NRE in design time -->
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:0.75" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PART_NestedContentSite" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="18"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="ActiveStates">
                                <win:VisualState x:Name="Inactive"/>
                                <win:VisualState x:Name="Active"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FilterStates">
                                <win:VisualState x:Name="FilteredOut"/>
                                <win:VisualState x:Name="FilteredIn"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Disabled"/>
                                <win:VisualState x:Name="Normal"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <igWindows:ExpansionIndicator x:Name="ExpansionIndicator" Panel.ZIndex="1" Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}" CommandParameter="{TemplateBinding Record}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{TemplateBinding FixedNearElementTransform}" Style="{DynamicResource ExpansionIndicatorStyle1}" ToggleMode="Manual" Visibility="{TemplateBinding ExpansionIndicatorVisibility}"/>
                        <Grid x:Name="PART_RecordContentSite" Grid.Column="1" Grid.Row="0" Margin="0" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="{TemplateBinding HeaderVisibility}">
                            <Border x:Name="borderBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ForegroundLight}" CornerRadius="2,2,2,2" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True"/>
                            <ContentPresenter Margin="5" Content="{Binding (igDp:RecordPresenter.Record).Description, RelativeSource={RelativeSource TemplatedParent}}" TextBlock.Foreground="{StaticResource ForegroundLight}"/>
                        </Grid>
                        <Grid x:Name="PART_NestedContentSite" Grid.Column="1" Grid.Row="1" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="Collapsed">
                            <Border Background="{TemplateBinding NestedContentBackground}" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, NestedContentBackgroundBorder}}" BorderThickness="1" CornerRadius="0,0,3,3">
                                <ContentControl x:Name="ncpVisual" Margin="{TemplateBinding Padding}" Content="{Binding NestedContent, RelativeSource={RelativeSource TemplatedParent}}" Opacity="1" RenderTransform="{TemplateBinding ScrollableElementTransform}" TextBlock.Foreground="{StaticResource ForegroundLight}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasNestedContent" Value="True">
                            <Setter TargetName="PART_NestedContentSite" Property="Opacity" Value="0"/>
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent">
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached">
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="1"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="igDp:RecordPresenter.ShowNestedContent">
                            <BeginStoryboard x:Name="NestedOn" Storyboard="{StaticResource sbDisplayNested}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    
        <!--<Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandableFieldRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:0.75" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PART_NestedContentSite" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="PART_RecordContentSite" Grid.Column="0" Grid.Row="0" Margin="0" Visibility="{TemplateBinding HeaderVisibility}">
                            <Border x:Name="borderBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelBackground}}" CornerRadius="2,2,2,2" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                                <Grid Width="Auto" Height="Auto" Margin="0,0,0,0">
                                    <Rectangle Fill="Transparent" RadiusX="1.55" RadiusY="1.55" Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}" StrokeThickness="1"/>
                                    <Rectangle Margin="1" Fill="Transparent" RadiusX="0.55" RadiusY="0.55" Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}" StrokeThickness="1"/>
                                </Grid>
                            </Border>
                            <Border x:Name="borderBackgroundHighlight" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelHighlight}}" CornerRadius="2,2,2,2">
                                <Grid Width="Auto" Height="Auto" Margin="0,0,0,0">
                                    <Rectangle Fill="Transparent" RadiusX="1.55" RadiusY="1.55" Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelOuterBorder}}" StrokeThickness="1"/>
                                    <Rectangle Margin="1" Fill="Transparent" RadiusX="0.55" RadiusY="0.55" Stroke="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelInnerBorder}}" StrokeThickness="1"/>
                                </Grid>
                            </Border>
                            <ContentPresenter Margin="10,3,10,3" Content="{Binding (igDp:RecordPresenter.Record).Description, RelativeSource={RelativeSource TemplatedParent}}" TextBlock.Foreground="{StaticResource ForegroundLight}"/>
                        </Grid>
                        <Grid x:Name="PART_NestedContentSite" Grid.Column="0" Grid.Row="1" Visibility="Collapsed">
                            <Border Background="{TemplateBinding NestedContentBackground}" BorderBrush="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, NestedContentBackgroundBorder}}" BorderThickness="1" CornerRadius="0,0,3,3">
                                <ContentControl x:Name="ncpVisual" Margin="{TemplateBinding Padding}" Content="{Binding NestedContent, RelativeSource={RelativeSource TemplatedParent}}" Opacity="1" TextBlock.Foreground="{StaticResource ForegroundLight}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasNestedContent" Value="True">
                            <Setter TargetName="PART_NestedContentSite" Property="Opacity" Value="0"/>
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="igDp:RecordPresenter.ShowNestedContent">
                            <BeginStoryboard x:Name="NestedOn" Storyboard="{StaticResource sbDisplayNested}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <!-- *********************************  ExpandedCellPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:ExpandedCellPresenter}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:ExpandedCellPresenter}">
                    <Border x:Name="MainBorder" Height="{TemplateBinding Height}" Margin="0" Background="{TemplateBinding Background}">
                        <!-- Content -->
                        <ContentPresenter x:Name="ContentSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  GroupByAreaFieldListBox Style  ********************************* -->
    <Style TargetType="{x:Type igDp:GroupByAreaFieldListBox}">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByAreaFieldListBox}">
                    <ScrollViewer CanContentScroll="true" FocusVisualStyle="{x:Null}" Style="{StaticResource ScrollViewerStyle}">
                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Height" Value="20"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- *********************************  GroupByAreaMulti Style  ********************************* -->
    <Style TargetType="{x:Type igDp:GroupByAreaMulti}">
        <Style.Resources>
            <DataTemplate DataType="{x:Type igDp:Field}">
                <igDp:LabelPresenter Margin="{Binding (igDp:GroupByAreaMulti.Offset)}" VerticalAlignment="Top" Field="{Binding}" IsInGroupByArea="true"/>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Prompt1" Value="{Binding Value, Source={x:Static igDp:Resources.GroupByAreaPrompt1}}"/>
        <Setter Property="Prompt2" Value="{Binding Value, Source={x:Static igDp:Resources.GroupByAreaPrompt2}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.GroupByAreaMultiBackgroundBrush}}"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="BorderBrush" Value="#FFA7A9B0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.FieldLayoutForeground}}"/>
        <Setter Property="FieldLayoutDescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <TextBlock Margin="4,2,4,2" VerticalAlignment="Center" FontWeight="Bold" Foreground="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.FieldLayoutForeground}}" igDp:GroupByAreaMulti.IsConnectorLineTarget="False" Text="{Binding Description}"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ConnectorLinePen" Value="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, GroupByAreaMultiConnectorLinePen}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByAreaMulti}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowPrompts">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HidePrompts">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="prompt2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="ValidationStates">
                                <win:VisualState x:Name="Valid"/>
                                <win:VisualState x:Name="InvalidFocused"/>
                                <win:VisualState x:Name="InvalidUnfocused"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <!--TODO-MT: apply Style="{DynamicResource ExpanderBarStyle1}"-->
                        <igWindows:ExpanderBar x:Name="ExpanderBarButton" Height="12" Grid.Row="0" BorderBrush="{x:Null}" BorderHoverBrush="{x:Null}" BorderThickness="0" Command="{x:Static igDp:GroupByAreaBase.ToggleExpandedState}" >
                            <igWindows:ExpanderBar.BackgroundHover>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FF181818"/>
                                    <GradientStop Offset="1" Color="#FF010101"/>
                                </LinearGradientBrush>
                            </igWindows:ExpanderBar.BackgroundHover>
                        </igWindows:ExpanderBar>
                        <igWindows:ExpanderDecorator Grid.Row="1" HorizontalAlignment="Stretch" IsExpanded="{Binding IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Background="{DynamicResource CellItemSelectedBackgroundBrush}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MaxHeight="13"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle Grid.RowSpan="2" Fill="{DynamicResource CellItemSelectedBackgroundBrush}"/>
                                        <igWindows:CardPanel Grid.RowSpan="2">
                                            <StackPanel Margin="5,0,6,0" VerticalAlignment="Stretch" Orientation="Horizontal">
                                                <ContentControl x:Name="prompt1" VerticalAlignment="Center" Content="{TemplateBinding Prompt1}" ContentTemplate="{TemplateBinding Prompt1Template}" FontSize="11" Opacity=".5"/>
                                                <ContentControl x:Name="prompt2" Margin="5,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding Prompt2}" ContentTemplate="{TemplateBinding Prompt2Template}" FontSize="11" Opacity="1"/>
                                            </StackPanel>
                                            <ItemsControl VerticalAlignment="Center" ItemsSource="{Binding FieldLayoutGroupByInfos, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ItemsControl.Template>
                                                    <ControlTemplate>
                                                        <ScrollViewer CanContentScroll="False" Style="{DynamicResource ScrollViewerStyle}">
                                                            <igDp:GroupByAreaMultiPanel ConnectorLinePen="{Binding ConnectorLinePen, RelativeSource={RelativeSource AncestorType={x:Type igDp:GroupByAreaMulti}}}" IsItemsHost="True" Orientation="{Binding FieldLayoutOrientation, RelativeSource={RelativeSource AncestorType={x:Type igDp:GroupByAreaMulti}}}"/>
                                                        </ScrollViewer>
                                                    </ControlTemplate>
                                                </ItemsControl.Template>
                                            </ItemsControl>
                                        </igWindows:CardPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                        </igWindows:ExpanderDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaBase.ShowPrompts">
                            <BeginStoryboard x:Name="ShowPrompts_BeginStoryboard" Storyboard="{StaticResource ShowPrompts}"/>
                            <StopStoryboard BeginStoryboardName="HidePrompts_BeginStoryboard"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:GroupByAreaBase.HidePrompts">
                            <BeginStoryboard x:Name="HidePrompts_BeginStoryboard" Storyboard="{StaticResource HidePrompts}"/>
                            <StopStoryboard BeginStoryboardName="ShowPrompts_BeginStoryboard"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="FieldLayoutOrientation" Value="Horizontal">
                <Setter Property="ConnectorLinePen" Value="{x:Null}"/>
                <Setter Property="FieldLayoutOffsetY" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- *********************************  GroupByRecordPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:GroupByRecordPresenter}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLight}"/>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:0.75" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:0.75" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpMask" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:0.75" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHideNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="NestedContentPresenter" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:00.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="row0" Height="Auto"/>
                            <RowDefinition x:Name="row1" Height="Auto" MinHeight="18"/>
                            <RowDefinition x:Name="row2" Height="*"/>
                        </Grid.RowDefinitions>
                        <igWindows:ExpansionIndicator x:Name="ExpansionIndicator" Grid.Row="1" Margin="5,0" Panel.ZIndex="1" Command="{x:Static igDp:DataPresenterCommands.ToggleRecordIsExpanded}" CommandParameter="{TemplateBinding Record}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{TemplateBinding FixedNearElementTransform}" Style="{DynamicResource ExpansionIndicatorStyle1}" ToggleMode="Manual" Visibility="{TemplateBinding ExpansionIndicatorVisibility}"/>
                        <ContentPresenter x:Name="PART_HeaderContentSite" Grid.Column="1" Grid.Row="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding HeaderContent}" d:IsHidden="True" Visibility="{Binding HasHeaderContent, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid x:Name="PART_RecordContentSite" Grid.Column="1" Grid.Row="1" Margin="0" RenderTransform="{TemplateBinding FixedNearElementTransform}" Visibility="Collapsed">
                            <Border Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource BaseBrush}" CornerRadius="1" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True"/>
                            <StackPanel Margin="5" Orientation="Vertical">
                                <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Description, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <igDp:GroupBySummariesPresenter x:Name="GroupBySummariesPresenter" HorizontalAlignment="Left" GroupByRecord="{TemplateBinding Record}" RenderTransform="{TemplateBinding ScrollableElementTransform}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                        <!-- Nested Content -->
                        <Grid x:Name="PART_NestedContentSite" Grid.Column="1" Grid.Row="2" Visibility="Collapsed">
                            <Border Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="0,0,3,3" RenderTransform="{TemplateBinding FixedNearElementTransform}">
                                <ContentControl x:Name="NestedContentPresenter" Content="{Binding NestedContent, RelativeSource={RelativeSource TemplatedParent}}" RenderTransform="{TemplateBinding ScrollableElementTransform}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="true">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="false">
                            <Setter TargetName="ExpansionIndicator" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ShouldDisplaySummaryCells" Value="true">
                            <Setter TargetName="GroupBySummariesPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"/>
                                <Condition Property="ShouldDisplayGroupByRecordContent" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal"/>
                                <Condition Property="ShouldDisplayGroupByRecordContent" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParent"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="row0" Property="Height" Value="*"/>
                            <Setter TargetName="row2" Property="Height" Value="Auto"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FieldLayout.ChildRecordsDisplayOrderResolved}" Value="BeforeParentHeadersAttached"/>
                                <Condition Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_NestedContentSite" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_HeaderContentSite" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ExpansionIndicator" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="PART_RecordContentSite" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="row0" Property="Height" Value="*"/>
                            <Setter TargetName="row2" Property="Height" Value="Auto"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--TODO-MT: uncomment due to NRE in design time -->
        <!--<Setter Property="TemplateCardView">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:GroupByRecordPresenter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="sbDisplayNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00.25" Value="0"/>
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:0.75" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:0.75" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ncpMask" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="00:00:0.75" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="sbHideNested">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="NestedContentPresenter" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5" KeyTime="00:00:00.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="20" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
              
                        <Grid x:Name="PART_RecordContentSite" Grid.Column="0" Grid.Row="1" Margin="0" Visibility="Collapsed" d:LayoutOverrides="GridBox">
                 
                            <Border Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelBackground}}" CornerRadius="2,2,2,2" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True">
                                <Grid Width="Auto" Height="Auto" Margin="0,0,0,0">
                                    <Rectangle Fill="Transparent" RadiusX="1.55" RadiusY="1.55" Stroke="#44000000" StrokeThickness="1"/>
                                    <Rectangle Margin="1" Fill="Transparent" RadiusX="0.55" RadiusY="0.55" Stroke="#44FFFFFF" StrokeThickness="1"/>
                                </Grid>
                            </Border>
                  
                            <Border x:Name="highlight" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource {ComponentResourceKey {x:Type igDp:XamDataGrid}, LabelHighlight}}" CornerRadius="2,2,2,2">
                                <Grid Width="Auto" Height="Auto" Margin="0,0,0,0">
                                    <Rectangle Fill="Transparent" RadiusX="1.55" RadiusY="1.55" Stroke="#44000000" StrokeThickness="1"/>
                                    <Rectangle Margin="1" Fill="Transparent" RadiusX="0.55" RadiusY="0.55" Stroke="#44FFFFFF" StrokeThickness="1"/>
                                </Grid>
                            </Border>
                   
                            <StackPanel Orientation="Vertical">
                                <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Description, RelativeSource={RelativeSource TemplatedParent}}"/>
                         
                                <igDp:GroupBySummariesPresenter x:Name="GroupBySummariesPresenter" Grid.Row="1" HorizontalAlignment="Left" GroupByRecord="{TemplateBinding Record}" Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
               
                        <Grid x:Name="PART_NestedContentSite" Grid.Column="0" Grid.Row="1" Visibility="Collapsed">
                            <Border BorderBrush="#44102975" BorderThickness="1" CornerRadius="0,0,3,3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0.25" Color="#FFFFFFFF"/>
                                        <GradientStop Offset="1.2" Color="#FFEEEEEE"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentControl x:Name="NestedContentPresenter" Margin="0,0,0,5" Content="{Binding NestedContent, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShouldDisplayGroupByRecordContent" Value="true">
                            <Setter TargetName="PART_RecordContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
             
                        <Trigger Property="ShouldDisplaySummaryCells" Value="true">
                            <Setter TargetName="GroupBySummariesPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasNestedContent" Value="true">
                            <Setter TargetName="PART_NestedContentSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <!-- *********************************  HeaderPresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:HeaderPresenter}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderPresenter}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  HeaderLabelArea Style  ********************************* -->
    <Style TargetType="{x:Type igDp:HeaderLabelArea}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderLabelArea}">
                    <Grid>
                        <ContentPresenter Margin="6,0" Content="{TemplateBinding Content}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  HeaderPrefixArea Style  ********************************* -->
    <Style TargetType="{x:Type igDp:HeaderPrefixArea}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:HeaderPrefixArea}">
                    <StackPanel HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Orientation="Horizontal">
                        <!--Button that displays field chooser-->
                        <Button x:Name="fieldChooserButton" Command="{x:Static igDp:DataPresenterCommands.ShowFieldChooser}" CommandParameter="{TemplateBinding FieldLayout}" Style="{DynamicResource {x:Static igDp:DataPresenterBase.FieldChooserButtonStyleKey}}" Visibility="Collapsed"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding FieldLayout.HeaderPrefixAreaDisplayModeResolved, RelativeSource={x:Static RelativeSource.Self}}" Value="FieldChooserButton">
                            <Setter TargetName="fieldChooserButton" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  RecordSelector Style  ********************************* -->
    <Style TargetType="{x:Type igDp:RecordSelector}">
        <Setter Property="Background" Value="#FF000000"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:RecordSelector}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.05"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="RecordActiveTrue">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow_Active" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="RecordActiveFalse">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="selectorArrow_Active" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideSelector">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.00" Storyboard.TargetName="selectors" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeIn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FixedRecordBtn" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SigmaFadeOut">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="Stop" Storyboard.TargetName="FixedRecordBtn" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.20" Value="0.4"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="MainBorder" Height="{TemplateBinding Height}" Background="{DynamicResource ButtonFocusFill}" Cursor="{TemplateBinding Cursor}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="LocationStates">
                                <win:VisualState x:Name="Bottom"/>
                                <win:VisualState x:Name="Top"/>
                                <win:VisualState x:Name="Left"/>
                                <win:VisualState x:Name="Right"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ActiveStates">
                                <win:VisualState x:Name="Active"/>
                                <win:VisualState x:Name="Inactive"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FixedStates">
                                <win:VisualState x:Name="Fixed"/>
                                <win:VisualState x:Name="Unfixed"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <!-- iDataErrorInfo -->
                        <Border x:Name="errorBd" Width="2" Grid.ColumnSpan="3" HorizontalAlignment="Right" Visibility="Collapsed"/>
                        <!-- Selector Arrows -->
                        <Grid x:Name="selectors" Width="16" Height="16" Opacity="1">
                            <Path x:Name="selectorArrow" Width="7" Height="10" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="{TemplateBinding Cursor}" Data="M60,40L60,20 70,30z" Fill="{DynamicResource ForegroundLight}" Opacity="0.15" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#00CCCCCC" StrokeThickness="1" Visibility="Visible"/>
                            <Path x:Name="selectorDataChanged" Width="3.44" Height="5.40" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Data="M 1,8.65 C1,8.65 1,1.34 1,1.34 1,1.34 5.65,5 5.65,5 5.65,5 1,8.65 1,8.65 z" Fill="{DynamicResource ForegroundLight}" Opacity="1" Stretch="Fill" Visibility="Collapsed"/>
                            <Path x:Name="selectorAddRecord" Width="4.65" Height="7.49" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Top" Data="M 0,7.49 C0,7.49 0,0 0,0 0,0 4.65,3.74 4.65,3.74 4.65,3.74 0,7.49 0,7.49 z" Fill="{DynamicResource ForegroundLight}" Opacity="1" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed"/>
                            <Path x:Name="selectorArrow_Active" Width="7" Height="10" HorizontalAlignment="Stretch" Margin="4.5,3,4.5,3" VerticalAlignment="Stretch" Cursor="{TemplateBinding Cursor}" Data="M60,40L60,20 70,30z" Fill="{DynamicResource SelectedFill}" Opacity="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Stroke="#00CCCCCC" StrokeThickness="1" Visibility="Visible"/>
                            <Button x:Name="ClearButton" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{DynamicResource CellItemNormalBorderBrush}" BorderBrush="{DynamicResource CellItemNormalBackgroundBrush}" Visibility="{TemplateBinding FilterClearButtonVisibility}"/>
                        </Grid>
                        <Grid x:Name="icons" Width="16" Height="16" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" d:LayoutOverrides="Width, Height">
                            <Path x:Name="addRecordOuter" Width="10" Height="10" HorizontalAlignment="Left" Margin="3,3,0,0" VerticalAlignment="Top" Data="M 10,3 C10,3 6,3 6,3 6,3 6,6 6,6 6,6 3,6 3,6 3,6 3,10 3,10 3,10 6,10 6,10 6,10 6,13 6,13 6,13 10,13 10,13 10,13 10,10 10,10 10,10 13,10 13,10 13,10 13,6 13,6 13,6 10,6 10,6 10,6 10,3 10,3 z" Fill="#898989" Opacity="1" SnapsToDevicePixels="True" Stretch="Fill" Visibility="Collapsed"/>
                            <Path x:Name="addRecordInner" Width="8" Height="8" HorizontalAlignment="Left" Margin="4,4,0,0" VerticalAlignment="Top" Data="M 9,4 C9,4 7,4 7,4 7,4 7,7 7,7 7,7 4,7 4,7 4,7 4,9 4,9 4,9 7,9 7,9 7,9 7,12 7,12 7,12 9,12 9,12 9,12 9,9 9,9 9,9 12,9 12,9 12,9 12,7 12,7 12,7 9,7 9,7 9,7 9,4 9,4 z" Fill="#cccccc" Opacity="1" SnapsToDevicePixels="True" Stretch="Fill" Visibility="Collapsed"/>
                            <Path x:Name="dataChangedActive" Width="10.71" Height="10.55" HorizontalAlignment="Left" Margin="4.51,4.19,0,0" VerticalAlignment="Top" Data="M 11.76,4.19 C11.76,4.19 13.62,5.44 13.62,5.44 13.62,5.44 10.81,8.90 10.81,8.90 10.81,8.90 15.22,8.36 15.22,8.36 15.22,8.36 15.22,10.57 15.22,10.57 15.22,10.57 10.81,10.07 10.81,10.07 10.81,10.07 13.62,13.51 13.62,13.51 13.62,13.51 11.76,14.75 11.76,14.75 11.76,14.75 9.84,10.57 9.84,10.57 9.84,10.57 7.95,14.75 7.95,14.75 7.95,14.75 6.09,13.51 6.09,13.51 6.09,13.51 8.92,10.07 8.92,10.07 8.92,10.07 4.51,10.57 4.51,10.57 4.51,10.57 4.51,8.36 4.51,8.36 4.51,8.36 8.92,8.90 8.92,8.90 8.92,8.90 6.09,5.44 6.09,5.44 6.09,5.44 7.95,4.19 7.95,4.19 7.95,4.19 9.84,8.24 9.84,8.24 9.84,8.24 11.76,4.19 11.76,4.19 z" Opacity="1" Stretch="Fill" Visibility="Collapsed">
                                <Path.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#FFB1B1B1"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="dataChanged" Width="10.71" Height="10.55" HorizontalAlignment="Left" Margin="2.50,2.69,0,0" VerticalAlignment="Top" Data="M 9.76,2.69 C9.76,2.69 11.62,3.94 11.62,3.94 11.62,3.94 8.81,7.40 8.81,7.40 8.81,7.40 13.22,6.86 13.22,6.86 13.22,6.86 13.22,9.07 13.22,9.07 13.22,9.07 8.81,8.57 8.81,8.57 8.81,8.57 11.62,12.01 11.62,12.01 11.62,12.01 9.76,13.25 9.76,13.25 9.76,13.25 7.84,9.07 7.84,9.07 7.84,9.07 5.95,13.25 5.95,13.25 5.95,13.25 4.09,12.01 4.09,12.01 4.09,12.01 6.92,8.57 6.92,8.57 6.92,8.57 2.50,9.07 2.50,9.07 2.50,9.07 2.50,6.86 2.50,6.86 2.50,6.86 6.92,7.40 6.92,7.40 6.92,7.40 4.09,3.94 4.09,3.94 4.09,3.94 5.95,2.69 5.95,2.69 5.95,2.69 7.84,6.74 7.84,6.74 7.84,6.74 9.76,2.69 9.76,2.69 z" Opacity="1" Stretch="Fill" Visibility="Collapsed">
                                <Path.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#FFB1B1B1"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="addRecordActiveOuter" Width="10" Height="10.07" HorizontalAlignment="Left" Margin="4,3.92,0,0" VerticalAlignment="Top" Data="M 10.99,3.92 C10.99,3.92 7,3.92 7,3.92 7,3.92 7,7 7,7 7,7 4,7 4,7 4,7 4,11 4,11 4,11 7,11 7,11 7,11 7,14 7,14 7,14 10.99,14 10.99,14 10.99,14 10.98,11 10.98,11 10.98,11 14,11 14,11 14,11 14,7 14,7 14,7 10.98,7 10.98,7 10.98,7 10.99,3.92 10.99,3.92 z" Fill="#898989" Opacity="1" SnapsToDevicePixels="False" Stretch="Fill" Visibility="Collapsed"/>
                            <Path x:Name="addRecordActiveInner" Width="8" Height="8" HorizontalAlignment="Left" Margin="5,5,0,0" VerticalAlignment="Top" Data="M 10,5 C10,5 8,5 8,5 8,5 8,8 8,8 8,8 5,8 5,8 5,8 5,10 5,10 5,10 8,10 8,10 8,10 8,13 8,13 8,13 10,13 10,13 10,13 10,10 10,10 10,10 13,10 13,10 13,10 13,8 13,8 13,8 10,8 10,8 10,8 10,5 10,5 z" Fill="#cccccc" Opacity="1" SnapsToDevicePixels="False" Stretch="Fill" Visibility="Collapsed"/>
                        </Grid>
                        <igDp:FixedRecordButton x:Name="FixedRecordBtn" Grid.Column="1" VerticalAlignment="Center" Foreground="#FFC2C2C2" IsFixedOnBottomAllowed="{TemplateBinding IsFixedOnBottomAllowed}" IsFixedOnTopAllowed="{TemplateBinding IsFixedOnTopAllowed}" Opacity="0.4" Style="{DynamicResource FixedRecordButtonStyle1}" Visibility="{TemplateBinding FixedButtonVisibility}"/>
                        <Rectangle x:Name="OrientationHorizontalSep" Width="1" Grid.ColumnSpan="3" HorizontalAlignment="Right" Fill="#FFE7E7E7" Visibility="Collapsed"/>
                        <!--SSP 9/1/09 TFS19773 - Replaced Control with AutomationControl-->
                        <igWindows:AutomationControl x:Name="errorIcon" Grid.Column="2" Margin="2,0,4,0" Foreground="#FFC00000" Style="{DynamicResource {x:Static igDp:DataPresenterBase.DataErrorIconStyleKey}}" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource MouseEnter}"/>
                            <BeginStoryboard Storyboard="{StaticResource SigmaFadeIn}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource MouseLeave}"/>
                            <BeginStoryboard Storyboard="{StaticResource SigmaFadeOut}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:RecordSelector.Activated">
                            <BeginStoryboard Storyboard="{StaticResource RecordActiveTrue}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igDp:RecordSelector.Deactivated">
                            <BeginStoryboard Storyboard="{StaticResource RecordActiveFalse}"/>
                        </EventTrigger>
                        <Trigger Property="IsFilterRecord" Value="True">
                            <Setter TargetName="selectorArrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="selectorArrow_Active" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <!-- AS 7/9/10 TFS35642
			  Only set the command when we know we will use it so it doesn't unnecessarily cause routed events.
			-->
                        <Trigger Property="FilterClearButtonVisibility" Value="Visible">
                            <Setter TargetName="ClearButton" Property="Command" Value="{x:Static igDp:DataPresenterCommands.ClearActiveRecordCellFilters}"/>
                        </Trigger>
                        <!-- DataRecordPresenter .IsAddRecord == true -->
                        <Trigger Property="IsAddRecord" Value="True">
                            <Setter TargetName="addRecordOuter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="addRecordInner" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="selectorAddRecord" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="selectorArrow" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="selectorArrow_Active" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDataChanged" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="dataChanged" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="selectorDataChanged" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="selectorArrow" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAddRecord" Value="True"/>
                                <Condition Property="IsDataChanged" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="dataChanged" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="dataChangedActive" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <!--SSP 4/21/09 NAS9.2 IDataErrorInfo Support-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasDataError" Value="True"/>
                                <Condition Property="IsDataErrorDisplayModeIcon" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="errorIcon" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="errorIcon" Property="ToolTip" Value="{Binding DataError, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasDataError" Value="True"/>
                                <Condition Property="IsDataErrorDisplayModeHighlight" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="errorBd" Property="Background" Value="{DynamicResource {x:Static igDp:DataPresenterBrushKeys.DataErrorHighlightBorderBrushKey}}"/>
                            <Setter TargetName="errorBd" Property="CornerRadius" Value="1"/>
                            <Setter TargetName="errorBd" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="MainBorder" Property="ToolTip" Value="{Binding DataError, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                        </MultiTrigger>
                        <!-- Location Triggers -->
                        <Trigger Property="Location" Value="AboveCellArea">
                            <Setter TargetName="selectors" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="selectors" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="selectors" Property="Margin" Value="0,0,15,0"/>
                            <Setter TargetName="icons" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="errorIcon" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="errorIcon" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="FixedRecordBtn" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="FixedRecordBtn" Property="Margin" Value="15,0,0,0"/>
                            <Setter TargetName="MainBorder" Property="Background" Value="#FFF5F5F5"/>
                            <Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="errorBd" Property="Width" Value="Auto"/>
                            <Setter TargetName="errorBd" Property="Height" Value="2"/>
                            <Setter TargetName="errorBd" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="errorBd" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="addRecordActiveOuter" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordActiveInner" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordOuter" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordInner" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="icons" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="selectorArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorArrow_Active" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorAddRecord" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Location" Value="BelowCellArea">
                            <Setter TargetName="selectors" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="selectors" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="selectors" Property="Margin" Value="0,0,15,0"/>
                            <Setter TargetName="icons" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="errorIcon" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="errorIcon" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="FixedRecordBtn" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="FixedRecordBtn" Property="Margin" Value="15,0,0,0"/>
                            <Setter TargetName="MainBorder" Property="Background" Value="#FFF5F5F5"/>
                            <Setter TargetName="OrientationHorizontalSep" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="errorBd" Property="Width" Value="Auto"/>
                            <Setter TargetName="errorBd" Property="Height" Value="2"/>
                            <Setter TargetName="errorBd" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="errorBd" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="addRecordActiveOuter" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordActiveInner" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordOuter" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="addRecordInner" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="icons" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="icons" Property="HorizontalAlignment" Value="Center"/>
                            <Setter TargetName="selectorArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorArrow_Active" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorAddRecord" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Location" Value="RightOfCellArea">
                            <Setter TargetName="selectorArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorArrow_Active" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="selectorAddRecord" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="FixedButtonVisibility" Value="Collapsed"/>
                                <Condition Property="Location" Value="AboveCellArea"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="selectors" Property="Margin" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="FixedButtonVisibility" Value="Collapsed"/>
                                <Condition Property="Location" Value="BelowCellArea"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="selectors" Property="Margin" Value="0"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{ComponentResourceKey {x:Type igDp:XamDataGrid}, WhiteForegroundStyle}">
        <Setter Property="TextBlock.Foreground" Value="White"/>
    </Style>
    <!-- *********************************  FilterCellValuePresenter Style  ********************************* -->
    <Style TargetType="{x:Type igDp:FilterCellValuePresenter}">
        <Setter Property="Background" Value="{StaticResource FilterCellFill}"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BackgroundHover" Value="{StaticResource FilterCellFillHover}"/>
        <Setter Property="BorderHoverBrush" Value="#FF707070"/>
        <Setter Property="BackgroundActive" Value="{StaticResource SelectedFill}"/>
        <Setter Property="BorderActiveBrush" Value="#FF707070"/>
        <Setter Property="BackgroundSelected" Value="{StaticResource SelectedFill}"/>
        <Setter Property="BorderSelectedBrush" Value="#FF707070"/>
        <Setter Property="BackgroundFieldSelected" Value="{StaticResource SelectedFill}"/>
        <Setter Property="BorderFieldSelectedBrush" Value="#FF666666"/>
        <Setter Property="BackgroundPrimary" Value="{StaticResource FilterCellFill}"/>
        <Setter Property="BorderPrimaryBrush" Value="#FF707070"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="ForegroundStyle">
            <Setter.Value>
                <Style/>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="6,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- AS 5/23/07 BR23120 -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:FilterCellValuePresenter}">
                    <igWindows:CardPanel Height="{TemplateBinding Height}">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="Disabled"/>
                                <win:VisualState x:Name="MouseOver"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Rectangle x:Name="Active1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding BackgroundActive}" Opacity="1" SnapsToDevicePixels="True" Stroke="{TemplateBinding BorderActiveBrush}" StrokeThickness="0" Visibility="Collapsed"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <igWindows:ComparisonOperatorSelector Grid.Column="0" AllowableOperators="{Binding Field.FilterOperatorDropDownItemsResolved, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" IsDropDownOpen="{Binding IsOperatorDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" SelectedOperator="{Binding Operator, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Field.FilterOperatorVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Button Grid.Column="2" Margin="2,0,4,0" Command="{x:Static igDp:DataPresenterCommands.ClearActiveCellFilters}" Style="{DynamicResource {x:Static igDp:DataPresenterBase.FilterCellClearButtonStyleKey}}" Visibility="{Binding Field.FilterClearButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="PART_EditorSite" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{TemplateBinding ForegroundStyle}"/>
                        </Grid>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <!-- HighlightAsPrimary -->
                        <Trigger Property="HighlightAsPrimary" Value="true">
                            <Setter Property="Background" Value="{Binding Path=BackgroundPrimary, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderPrimaryBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <!-- IsFieldSelected -->
                        <Trigger Property="IsFieldSelected" Value="true">
                            <Setter Property="Background" Value="{Binding Path=BackgroundFieldSelected, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderFieldSelectedBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{Binding Path=BackgroundSelected, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderSelectedBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <!-- IsActive -->
                        <Trigger Property="IsActive" Value="true">
                            <Setter TargetName="Active1" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <!-- IsMouseOver -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsFieldSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=BackgroundHover, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderHoverBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  XamDataGrid Style  ********************************* -->
    <Style x:Key="XamDataGridStyle1" TargetType="{x:Type igDp:XamDataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:XamDataGrid}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="PART_ContentSiteGrid"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- *********************************  FixedRecordButton Style  ********************************* -->
    <Style x:Key="FixedRecordButtonStyle1" TargetType="{x:Type igDp:FixedRecordButton}">
        <Style.Resources>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="3,2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Hover">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HoverOff">
                                    <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid Background="Transparent">
                                <Border x:Name="Hover" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Opacity="0"/>
                                <Grid Margin="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Header}" ContentSource="Header" RecognizesAccessKey="True"/>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                        <Border x:Name="SubMenuBorder" Background="{DynamicResource {ComponentResourceKey ResourceId=SummaryButtonPopupBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" BorderBrush="{DynamicResource {ComponentResourceKey ResourceId=SummaryButtonPopupBorder, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" BorderThickness="1" CornerRadius="3">
                                            <Border Margin="2" Background="{DynamicResource {ComponentResourceKey ResourceId=SummaryButtonPopupInnerBackground, TypeInTargetAssembly={x:Type igDp:XamDataGrid}}}" CornerRadius="3">
                                                <ScrollViewer Margin="1" CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <ItemsPresenter Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                    <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Role" Value="SubmenuItem"/>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard x:Name="Hover_BeginStoryboard">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard x:Name="HoverOff_BeginStoryboard">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource DataPresenterBrushKeys.MenuHighlightTextBrushFillKey}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <igWindows:CardPanel Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </igWindows:CardPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <Grid Grid.IsSharedSizeScope="True">
                                <StackPanel ClipToBounds="True" IsItemsHost="True"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:FixedRecordButton}">
                    <Border Background="Transparent">
                        <igWindows:CardPanel>
                            <ToggleButton x:Name="toggleButton" Background="Transparent" CommandParameter="{Binding}" Focusable="False">
                                <Grid Width="17" Height="14" HorizontalAlignment="Left">
                                    <Path x:Name="btnFixedGlyph" Width="9" Height="13" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M1.5,0 L7.5,0 7.5,7 9,7 9,8.99 7.5,8.99 5.5,9.00 5.5,14 3.50,14 3.50,9.00 1.5,9.00 0,8.99 0,7 1.5,7 z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill" Visibility="Collapsed"/>
                                    <Path x:Name="btnUnfixedGlyph" Width="13" Height="9" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M5,0 L7,0 7,1.5 14,1.5 14,7.5 7,7.5 7,9 5,9 5,7.5 5,5.5 0,5.5 0,3.50 5,3.50 5,1.5 z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill"/>
                                </Grid>
                            </ToggleButton>
                            <Menu x:Name="menu" IsMainMenu="False" Visibility="Collapsed">
                                <MenuItem Padding="0">
                                    <MenuItem.Header>
                                        <igWindows:CardPanel>
                                            <Grid Width="12" Height="12">
                                                <Path x:Name="menuFixedGlyph" Width="7" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M6,4C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4z M5,3C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill" Visibility="Collapsed"/>
                                                <Path x:Name="MenuUnfixedGlyph" Width="10" Height="7" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M12,7C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7z M13,6C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6z" Fill="{TemplateBinding Foreground}" Opacity="1" Stretch="Fill"/>
                                            </Grid>
                                        </igWindows:CardPanel>
                                    </MenuItem.Header>
                                    <MenuItem x:Name="unfix" Command="igDp:DataPresenterCommands.UnfixRecord" CommandParameter="{Binding}" Header="{TemplateBinding UnfixPrompt}"/>
                                    <MenuItem x:Name="fixTop" Command="igDp:DataPresenterCommands.FixRecordTop" CommandParameter="{Binding}" Header="{TemplateBinding FixToTopPrompt}"/>
                                    <MenuItem x:Name="fixBottom" Command="igDp:DataPresenterCommands.FixRecordBottom" CommandParameter="{Binding}" Header="{TemplateBinding FixToBottomPrompt}"/>
                                </MenuItem>
                            </Menu>
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding FixedLocation}" Value="FixedToTop">
                            <Setter TargetName="menuFixedGlyph" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="MenuUnfixedGlyph" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="btnFixedGlyph" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="btnUnfixedGlyph" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FixedLocation}" Value="FixedToBottom">
                            <Setter TargetName="menuFixedGlyph" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="MenuUnfixedGlyph" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="btnFixedGlyph" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="btnUnfixedGlyph" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFixedOnTopAllowed" Value="True"/>
                                <Condition Property="IsFixedOnBottomAllowed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="menu" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="toggleButton" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFixedOnTopAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding IsFixedOnBottomAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                                <Condition Binding="{Binding FixedLocation}" Value="Scrollable"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleButton" Property="Command" Value="igDp:DataPresenterCommands.FixRecordTop"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding FixedLocation}" Value="FixedToTop">
                            <Setter TargetName="toggleButton" Property="Command" Value="igDp:DataPresenterCommands.UnfixRecord"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FixedLocation}" Value="FixedToBottom">
                            <Setter TargetName="toggleButton" Property="Command" Value="igDp:DataPresenterCommands.UnfixRecord"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFixedOnTopAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                                <Condition Binding="{Binding IsFixedOnBottomAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding FixedLocation}" Value="Scrollable"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="toggleButton" Property="Command" Value="igDp:DataPresenterCommands.FixRecordBottom"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFixedOnTopAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding IsFixedOnBottomAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding FixedLocation}" Value="Scrollable"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="unfix" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFixedOnTopAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding IsFixedOnBottomAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding FixedLocation}" Value="FixedToTop"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="fixTop" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFixedOnTopAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding IsFixedOnBottomAllowed, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                <Condition Binding="{Binding FixedLocation}" Value="FixedToBottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="fixBottom" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CustomFilterSelectionControl  ********************************* -->
    <Style TargetType="{x:Type igDp:CustomFilterSelectionControl}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="MinHeight" Value="240"/>
        <Setter Property="MaxWidth" Value="900"/>
        <Setter Property="Background" Value="{DynamicResource HeaderCellFill}"/>
        <Setter Property="AndLogicalOperatorBrush" Value="{DynamicResource SelectedFill}"/>
        <Setter Property="OrLogicalOperatorBrush" Value="{DynamicResource ButtonHoverFill}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDp:CustomFilterSelectionControl}">
                    <Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Background="{DynamicResource ButtonFocusFill}">
                                <TextBlock Margin="10,10,10,10" FontSize="20" Text="{TemplateBinding FieldDescription}"/>
                            </Border>
                            <Border Grid.Row="1" SnapsToDevicePixels="True">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FF141414"/>
                                        <GradientStop Offset="1" Color="#FF1F1F1F"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid x:Name="toolbar">
                                    <StackPanel Margin="10,10,10,10" VerticalAlignment="Top" Orientation="Horizontal" d:LayoutOverrides="Width">
                                        <Button Command="{x:Static igDp:CustomFilterSelectionControl.AddConditionCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding AddConditionLabel}">
                                            <Path Width="11" Height="11" Data="M4,0 L7,0 7,4 11,4 11,7 7,7 7,11 4,11 4,7 0,7 0,4 4,4 z" Fill="White" Stretch="Fill"/>
                                        </Button>
                                        <Button Margin="11,0,0,0" Command="{x:Static igDp:CustomFilterSelectionControl.RemoveSelectedConditionsCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding RemoveSelectedConditionsLabel}">
                                            <Rectangle Width="11" Height="3" HorizontalAlignment="Left" Margin="2,0,0,0" Fill="White"/>
                                        </Button>
                                        <TextBlock x:Name="GroupSelected" Margin="11,0,0,0" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding GroupSelectedLabel}" TextWrapping="Wrap"/>
                                        <Button Margin="11,0,0,0" Command="{x:Static igDp:CustomFilterSelectionControl.GroupSelectedConditionsAsAndGroupCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding GroupSelectedConditionsAsAndGroupLabel}">
                                            <Path Width="14" Height="14" Margin="1,0,0,0" Data="M10.00,6 L10.00,10 L6,10 L6,12 L12,12 L12,6 z M2,2 L2,8 L4,8 L4.00,4 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,0.99 z" Fill="White" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False"/>
                                        </Button>
                                        <Button Margin="11,0,0,0" Command="{x:Static igDp:CustomFilterSelectionControl.GroupSelectedConditionsAsOrGroupCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding GroupSelectedConditionsAsOrGroupLabel}">
                                            <Path Width="14" Height="14" Margin="1,0,0,0" Data="M2,2 L2,8 L4,8 L6,8 L6,10 L6,12 L12,12 L12,6 L10,6 L8,6 L8,4 L8,2 z M0,0 L10,0 L10,2 L10,4 L14,4 L14,5 L14,6 L14,12 L14,14 L12,14 L6,14 L4,14 L4,12 L4,10 L2,10 L0,10 L0,8 L0,2 L0,1 z" Fill="White" Stretch="Fill" StrokeThickness="2" UseLayoutRounding="False"/>
                                        </Button>
                                        <Button Margin="11,0,0,0" Command="{x:Static igDp:CustomFilterSelectionControl.ToggleSelectedGroupLogicalOperatorCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding ToggleOperatorOfSelectedConditionsLabel}">
                                            <Path Width="14" Height="14" HorizontalAlignment="Left" Margin="2,0,0,0" Data="M10.81,3.13 C10.81,3.13 6.35,3.15 6.35,3.15 6.35,3.15 7.12,3.92 7.83,4.63 L7.90,4.70 6.29,6.27 6.29,6.27 6.31,6.25 7.66,7.60 9.24,6.04 9.31,6.11 C10.02,6.82 10.79,7.59 10.79,7.59 10.79,7.59 10.81,3.13 10.81,3.13 z M2.00,1.99 L2.00,12 12,12 7.63,7.63 6.05,9.17 6.12,9.24 C6.83,9.95 7.59,10.72 7.59,10.72 7.59,10.72 3.13,10.74 3.13,10.74 3.13,10.74 3.16,6.29 3.16,6.29 3.16,6.29 3.93,7.05 4.64,7.76 L4.70,7.83 6.28,6.28 z M6.25E-07,0 L2.00,0 12,0 13.99,0 14,1.99 14,13.99 0,14 0,12 6.25E-07,1.99 z" Fill="White" Stretch="Fill" UseLayoutRounding="False"/>
                                        </Button>
                                        <Button Margin="11,0,0,0" Command="{x:Static igDp:CustomFilterSelectionControl.UngroupSelectedConditionsCommand}" Style="{StaticResource iconButtonStyle}" Tag="{TemplateBinding UngroupSelectedConditionsLabel}">
                                            <Path Width="14" Height="14" Margin="1,0,0,0" Data="M12,12 L14,12 L14,14 L12,14 z M9,12 L11,12 L11,14 L9,14 z M6,12 L8,12 L8,14 L6,14 z M3.00,12 L5,12 L5,14 L3.00,14 z M12,9 L14,9 L14,11 L12,11 z M0,9 L1.99,9 L1.99,11 L0,11 z M12,6 L14,6 L14,8 L12,8 z M0,6 L1.99,6 L1.99,8 L0,8 z M9,3.00 L11,3.00 L11,5 L10,5 L10,10 L5,10 L5,11 L3,11 L3,9 L4,9 L4,4 L9,4 z M0,3.00 L1.99,3.00 L1.99,5 L0,5 z M12,3 L14,3 L14,5 L12,5 z M9,0 L11,0 L11,1.99 L9,1.99 z M6,0 L8,0 L8,1.99 L6,1.99 z M3,0 L5,0 L5,1.99 L3,1.99 z M0,0 L1.99,0 L1.99,1.99 L0,1.99 z" Fill="White" Stretch="Fill" StrokeThickness="1.5" UseLayoutRounding="False"/>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Grid Grid.Row="2" Background="{x:Null}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height=".3*"/>
                                </Grid.RowDefinitions>
                                <Border>
                                    <igDp:XamDataGrid x:Name="PART_ConditionsGrid" Background="{x:Null}" GroupByAreaLocation="None" d:LayoutOverrides="Width, Height">
                                        <igDp:XamDataGrid.Resources>
                                            <Style TargetType="{x:Type igDp:DataRecordPresenter}">
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="HeaderAreaBackground" Value="{DynamicResource HeaderCellFill}"/>
                                            </Style>
                                        </igDp:XamDataGrid.Resources>
                                    </igDp:XamDataGrid>
                                </Border>
                                <Border Grid.Row="1">
                                    <ScrollViewer Margin="0" Background="{x:Null}" VerticalScrollBarVisibility="Auto">
                                        <TextBlock Text="{TemplateBinding FilterSummaryDescription}" TextWrapping="Wrap"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                            <Border x:Name="FooterBackground" Grid.Row="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="1" Color="#FF2B2B2B"/>
                                        <GradientStop Color="#FF1B1B1B"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <DockPanel Margin="5,5,5,5" VerticalAlignment="Top" KeyboardNavigation.TabNavigation="Local" LastChildFill="False" d:LayoutOverrides="Width">
                                    <Button MinWidth="100" Margin="11,3,3,3" Command="{x:Static igDp:CustomFilterSelectionControl.CancelChangesCommand}" Content="{TemplateBinding CancelButtonLabel}" DockPanel.Dock="Right" IsCancel="true" Style="{DynamicResource GenericButtonStyle}" TabIndex="1"/>
                                    <Button MinWidth="100" Margin="3" Command="{x:Static igDp:CustomFilterSelectionControl.CommitChangesCommand}" Content="{TemplateBinding OkButtonLabel}" DockPanel.Dock="Right" IsDefault="true" Style="{DynamicResource GenericButtonStyle}" TabIndex="0"/>
                                    <Border x:Name="groupContainer">
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Rectangle Width="10" Height="10" VerticalAlignment="Center" Fill="{TemplateBinding AndLogicalOperatorBrush}"/>
                                                <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding AndGroupLegendDescription}"/>
                                            </StackPanel>
                                            <StackPanel Margin="5" Orientation="Horizontal">
                                                <Rectangle Width="10" Height="10" VerticalAlignment="Center" Fill="{TemplateBinding OrLogicalOperatorBrush}"/>
                                                <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{TemplateBinding OrGroupLegendDescription}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </DockPanel>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type igWindows:ComparisonOperatorSelector}">
                <Setter Property="DropDownButtonStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Padding" Value="2"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igWindows:Utilities.SnapElementToDevicePixels="True">
                                            <StackPanel Orientation="Horizontal">
                                                <igWindows:AutoDisabledImage MinHeight="14" MinWidth="14" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type igWindows:ComparisonOperatorSelector}, AncestorLevel=1}, Path=SelectedOperatorInfo.Image}" Stretch="None"/>
                                                <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type igWindows:ComparisonOperatorSelector}, AncestorLevel=1}, Path=SelectedOperatorInfo.Description}"/>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>