<ResourceDictionary        
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:igEditors="http://infragistics.com/Editors" 
    xmlns:igWindows="http://infragistics.com/Windows" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:winThemes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonBrushes.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
        <!--<ResourceDictionary Source="/IGTrading;component/Assets/Styles/CommonStyles.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  Value Converters Start  ********************************* -->
    <igWindows:NullToFalseConverter x:Key="nullToFalseConverter"/>
    <igWindows:TypeCheckConverter x:Key="typeCheckConverter"/>
    <igWindows:NullToParameterConverter x:Key="nullToParameterConverter"/>

    <ControlTemplate x:Key="XamDateTimeEditorControlTemplate1"  TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Border x:Name="MainBorder"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
            <DockPanel>
                <ToggleButton x:Name="PART_DropDownButton"
                                  ClickMode="Press"
                                  DockPanel.Dock="Right"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{TemplateBinding DropDownButtonStyle}"
                                  Visibility="{TemplateBinding DropDownButtonVisibility}"
                                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Grid x:Name="PART_SpinButtons"
                          DockPanel.Dock="Right"
                          Margin="0,1"
                          Visibility="{TemplateBinding SpinButtonVisibilityResolved}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <RepeatButton ContentTemplate="{DynamicResource EditorsBrushKeys.IncreaseGlyphKey}"
                                      Focusable="False"
                                      Style="{TemplateBinding SpinButtonStyle}" />
                    <RepeatButton ContentTemplate="{DynamicResource EditorsBrushKeys.DecreaseGlyphKey}"
                                      Focusable="False"
                                      Grid.Row="2"
                                      Style="{TemplateBinding SpinButtonStyle}" />
                </Grid>
                <igWindows:SimpleTextBlock x:Name="TextBlock"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Margin="{TemplateBinding Padding}"
                                               Text="{TemplateBinding DisplayText}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEmbedded"  Value="False">
                <Setter Property="Padding" Value="4,2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type igEditors:XamDateTimeEditor}" x:Key="dateStyle">
        <Setter Property="Mask" Value="{}{date} {longtime}" />
        <Setter Property="Template"  Value="{StaticResource XamDateTimeEditorControlTemplate1}" />
    </Style>
    <Style TargetType="{x:Type igEditors:XamCurrencyEditor}" x:Key="currencyStyle">
        <Setter Property="Format" Value="C" />
        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint MinInclusive="-10000000"  MaxInclusive="10000000" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamComboEditor  ********************************* -->
    <Style x:Key="ComboEditor_DropDownButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Foreground" Value="#FF292929"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{x:Null}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20" SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </win:VisualState>
                                <win:VisualState x:Name="Pressed"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ComboEditorDropdown" Width="Auto" Grid.Column="1" HorizontalAlignment="Stretch" Background="Transparent">
                            <Rectangle x:Name="normal" Fill="{DynamicResource ButtonFocusFill}" RadiusX="3" RadiusY="3" Stroke="{StaticResource EditableComboBoxBg}"/>
                            <Rectangle x:Name="hover" Fill="{DynamicResource ButtonHoverFill}" Opacity="0" RadiusX="3" RadiusY="3" Stroke="#FF606060"/>
                        </Grid>
                        <Grid x:Name="glyphArrow" Width="9" Height="6" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="glyph" Width="6" Height="6" HorizontalAlignment="Stretch" Margin="0,-5,-6,0" Data="M4,0 L6,0 6,6 6,6 6,6 0,6 0,4 4,4 4,0 z" Fill="White" RenderTransformOrigin="0,0" SnapsToDevicePixels="True" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="45"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ComboEditor_DropDownButtonStyle}" TargetType="{x:Type ToggleButton}"/>
    <!-- *********************************  ComboEditor_TextBoxStyle  ********************************* -->
    <Style x:Key="ComboEditor_TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="#FF9F9F9F"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Margin" Value="3,1,0,1"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer Name="PART_ContentHost" Background="{x:Null}" Focusable="False" HorizontalScrollBarVisibility="Hidden" Style="{DynamicResource ScrollViewerStyle}" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  ComboBoxStyle2  ********************************* -->
    <Style x:Key="ComboBoxStyle2" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundLight}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" Height="20" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FocusStates">
                                <win:VisualState x:Name="Unfocused"/>
                                <win:VisualState x:Name="Focused"/>
                                <win:VisualState x:Name="FocusedDropDown"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="EditStates">
                                <win:VisualState x:Name="Editable"/>
                                <win:VisualState x:Name="Uneditable"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Rectangle Width="Auto" Grid.ColumnSpan="2" Fill="{StaticResource EditableComboBoxBg}" RadiusX="3" RadiusY="3" Stroke="{StaticResource EditableComboBoxBg}"/>
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="DropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" HorizontalAlignment="Stretch" Background="{StaticResource EditableComboBoxBg}" BorderBrush="{StaticResource GridBorderBrush}" BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.Column="1" Background="{x:Null}" BorderBrush="{x:Null}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboEditor_DropDownButtonStyle}"/>
                        <ContentPresenter HorizontalAlignment="Left" Margin="6,2,25,2" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundLight}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="Background" Value="{StaticResource EditableComboBoxBg}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="Placement" Height="20" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <winThemes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" Color="Transparent">
                                        <Border x:Name="DropDownBorder" Background="{StaticResource EditableComboBoxBg}" BorderBrush="{StaticResource HeaderNormalBackgroundBrush}" BorderThickness="1" CornerRadius="3">
                                            <ScrollViewer x:Name="DropDownScrollViewer" Style="{DynamicResource ScrollViewerStyle}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle x:Name="OpaqueRect" Width="{Binding ActualWidth, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Fill="{Binding Background, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </winThemes:SystemDropShadowChrome>
                                </Popup>
                                <winThemes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
                                <TextBox x:Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboEditor_TextBoxStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource ComboEditor_DropDownButtonStyle}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="true">
                                    <Setter TargetName="Border" Property="RenderFocused" Value="true"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="Tomato"/>
                                    <Setter Property="Background" Value="Violet"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                </Trigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- *********************************  xamComboEditorStyle  ********************************* -->
    <Style x:Key="xamComboEditorStyle" TargetType="{x:Type igEditors:XamComboEditor}">
        <Setter Property="Background" Value="{DynamicResource FiltersComboBgFill}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource FiltersComboBgStroke}"/>
        <Setter Property="Foreground" Value="#FF292929"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4,1,0,1"/>
        <Setter Property="Text" Value="{Binding Strings.Enter_Filter_Value, Source={StaticResource LocalizedResources}, Mode=OneWay}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="DropDownButtonStyle" Value="{StaticResource ComboEditor_DropDownButtonStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamComboEditor}">
                    <Border x:Name="MainBorder" Height="20" Margin="0" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <win:VisualStateManager.VisualStateGroups>
                            <win:VisualStateGroup x:Name="CommonStates">
                                <win:VisualState x:Name="Normal"/>
                                <win:VisualState x:Name="ReadOnly"/>
                                <win:VisualState x:Name="MouseOver"/>
                                <win:VisualState x:Name="Disabled"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="EditStates">
                                <win:VisualState x:Name="Editable"/>
                                <win:VisualState x:Name="Uneditable"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ValidationStatesEx">
                                <win:VisualState x:Name="InvalidUnfocusedEx"/>
                                <win:VisualState x:Name="ValidEx"/>
                                <win:VisualState x:Name="InvalidFocusedEx"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="EmbeddedStates">
                                <win:VisualState x:Name="NotEmbedded"/>
                                <win:VisualState x:Name="Embedded"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="ValidationStates">
                                <win:VisualState x:Name="Valid"/>
                                <win:VisualState x:Name="InvalidFocused"/>
                                <win:VisualState x:Name="InvalidUnfocused"/>
                            </win:VisualStateGroup>
                            <win:VisualStateGroup x:Name="FocusStates">
                                <win:VisualState x:Name="FocusedDropDown"/>
                                <win:VisualState x:Name="Unfocused"/>
                                <win:VisualState x:Name="Focused"/>
                            </win:VisualStateGroup>
                        </win:VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource FiltersComboBgFill}" RadiusX="3" RadiusY="3" Stroke="{DynamicResource FiltersComboBgStroke}"/>
                            <Border Grid.Column="0" Margin="0" d:IsHidden="True" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding DisplayValue, ConverterParameter={x:Static sys:String.Empty}, Converter={StaticResource nullToParameterConverter}, Mode=OneWay, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            </Border>
                            <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" Margin="0,0,-2,0" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayValueSource" Value="Value">
                            <Setter TargetName="PART_Content" Property="ContentTemplate" Value="{DynamicResource {x:Static igEditors:XamComboEditor.DisplayValueTemplateKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="DropDownButtonDisplayMode" Value="Always"/>
                            <Setter Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_DropDownButton" Property="Tag" Value="MouseOverControlTrue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamComboEditor}">
                    <Border x:Name="MainBorder" Background="{StaticResource EditableComboBoxBg}" BorderBrush="{StaticResource EditableComboBoxBg}" BorderThickness="0" CornerRadius="3">
                        <ComboBox Name="PART_FocusSite" Background="Transparent" BorderThickness="0" ContextMenu="{TemplateBinding ContextMenu}" DisplayMemberPath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemsProvider.DisplayMemberPath}" Foreground="White" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" igEditors:XamComboEditor.ComboEditor="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsDropDownOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEditable="{TemplateBinding IsEditable}" IsReadOnly="{TemplateBinding ReadOnly}" ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}" MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}" Padding="3,0,3,0" SelectedValuePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemsProvider.ValuePath}" Style="{DynamicResource ComboBoxStyle2}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEmbedded" Value="True"/>
                    <Condition Property="IsInEditMode" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsEmbedded" Value="False">
                <Setter Property="Padding" Value="2,2,2,2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEmbedded" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource xamComboEditorStyle}" TargetType="{x:Type igEditors:XamComboEditor}"/>
    <!-- *********************************  ComboBoxDataItem DataTemplate  ********************************* -->
    <DataTemplate DataType="{x:Type igEditors:ComboBoxDataItem}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="TextBlock" Grid.Column="1" Grid.Row="0" Text="{Binding Path=DisplayText}"/>
            <Image Height="{Binding ElementName=TextBlock, Path=ActualHeight}" Grid.Column="0" Grid.Row="0" Source="{Binding Path=Image}" Stretch="Uniform" StretchDirection="Both"/>
        </Grid>
    </DataTemplate>
    <!-- *********************************  XamComboEditor.DisplayValueTemplateKey DataTemplate  ********************************* -->
    <DataTemplate x:Key="{x:Static igEditors:XamComboEditor.DisplayValueTemplateKey}">
        <DataTemplate.Resources>
            <DataTemplate DataType="{x:Type igEditors:ComboBoxDataItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Grid.Row="0" Content="{Binding Path=Value}"/>
                    <Image Height="{Binding ElementName=ContentPresenter, Path=ActualHeight}" Grid.Column="0" Grid.Row="0" Source="{Binding Path=Image}" Stretch="Uniform" StretchDirection="Both"/>
                </Grid>
            </DataTemplate>
        </DataTemplate.Resources>
        <ContentPresenter Content="{Binding}"/>
    </DataTemplate>

</ResourceDictionary>