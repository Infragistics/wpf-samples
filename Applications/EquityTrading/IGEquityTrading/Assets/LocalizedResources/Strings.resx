<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>The Equity Trading application highlights the use of Infragistics controls applied to a scenario often seen in the Financial Services industry. This application is a basic equity trading platform that covers the typical interactions a trader might perform in the course of their work – from using a heat-map to review industry and sector performance, browsing real-time stock price data with rich data presentation, analyzing historical share price data using highly-interactive charts featuring financial indicators, and finally buying and selling equity while viewing charts with plotted stock prices at real-time. This functionality is delivered within a flexible layout control called the Tile Manager control, which allows the user to resize and arrange the different application modules to suit their workflow and preferences. The user can also maximize tiles they would like to focus on, with the rest of the tiles neatly minimized on one side. Transitions between tile changes are animated providing a rich and interactive user experience.</value>
  </data>
  <data name="ADD" xml:space="preserve">
    <value>ADD</value>
  </data>
  <data name="Ask" xml:space="preserve">
    <value>Ask</value>
  </data>
  <data name="Bid" xml:space="preserve">
    <value>Bid</value>
  </data>
  <data name="Choose_Chart_Type" xml:space="preserve">
    <value>Choose Chart Type:</value>
  </data>
  <data name="Daily_High" xml:space="preserve">
    <value>Daily High</value>
  </data>
  <data name="Daily_Low" xml:space="preserve">
    <value>Daily Low</value>
  </data>
  <data name="EBITA" xml:space="preserve">
    <value>EBITA</value>
  </data>
  <data name="EPS" xml:space="preserve">
    <value>EPS</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="MAX" xml:space="preserve">
    <value>MAX</value>
  </data>
  <data name="Mkt_Cap" xml:space="preserve">
    <value>Mkt Cap</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Please_Wait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Price_Over_Time" xml:space="preserve">
    <value>Price Over Time</value>
  </data>
  <data name="P_E" xml:space="preserve">
    <value>P/E</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="Sales_Volume" xml:space="preserve">
    <value>Sales Volume</value>
  </data>
  <data name="Stock_Price" xml:space="preserve">
    <value>Stock Price</value>
  </data>
  <data name="Type_Ticker_Here" xml:space="preserve">
    <value>Type ticker here</value>
  </data>
  <data name="Vol" xml:space="preserve">
    <value>Vol</value>
  </data>
  <data name="_10_YEARS" xml:space="preserve">
    <value>10 YEARS</value>
  </data>
  <data name="_1_MONTH" xml:space="preserve">
    <value>1 MONTH</value>
  </data>
  <data name="_1_YEAR" xml:space="preserve">
    <value>1 YEAR</value>
  </data>
  <data name="_3_MONTHS" xml:space="preserve">
    <value>3 MONTHS</value>
  </data>
  <data name="_52_Weeks" xml:space="preserve">
    <value>52 Weeks</value>
  </data>
  <data name="_5_YEARS" xml:space="preserve">
    <value>5 YEARS</value>
  </data>
  <data name="_6_MONTHS" xml:space="preserve">
    <value>6 MONTHS</value>
  </data>
  <data name="Chart_Area" xml:space="preserve">
    <value>Area Chart</value>
  </data>
  <data name="Chart_Area_Desc" xml:space="preserve">
    <value>Compare stock performance against a baseline (e.g., Dow average).</value>
  </data>
  <data name="Chart_CandleStick" xml:space="preserve">
    <value>Candle Stick Chart</value>
  </data>
  <data name="Chart_CandleStick_Desc" xml:space="preserve">
    <value>See how stock performs each day along with its volume of trading.</value>
  </data>
  <data name="Chart_Line" xml:space="preserve">
    <value>Line Chart</value>
  </data>
  <data name="Chart_Line_Desc" xml:space="preserve">
    <value>Track simple price changes over time.</value>
  </data>
  <data name="Chart_OHLC" xml:space="preserve">
    <value>O-H-L-C</value>
  </data>
  <data name="Chart_OHLC_Desc" xml:space="preserve">
    <value>See how the stock performs opening and closing each day.</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change %</value>
  </data>
  <data name="Company_Summary_Info" xml:space="preserve">
    <value>Click on an Industry node to view it's child companies</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Div_Yield" xml:space="preserve">
    <value>Div. Yield %</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Grid_Net_Profit_Margin" xml:space="preserve">
    <value>Net Profit
Margin</value>
  </data>
  <data name="Grid_Price_to_Book" xml:space="preserve">
    <value>Price to Book
Value (mrq)</value>
  </data>
  <data name="Grid_Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>Price to Free
Cash Flow (mrq)</value>
  </data>
  <data name="Heat_Map" xml:space="preserve">
    <value>Heat Map</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Left-click on a black Sector node to drill down and right-click to go back.</value>
  </data>
  <data name="Market_Cap" xml:space="preserve">
    <value>Market Cap</value>
  </data>
  <data name="Market_Description" xml:space="preserve">
    <value>The Market</value>
  </data>
  <data name="Net_Profit_Margin" xml:space="preserve">
    <value>Net Profit Margin</value>
  </data>
  <data name="PE" xml:space="preserve">
    <value>P/E</value>
  </data>
  <data name="Price_to_Book" xml:space="preserve">
    <value>Price to Book Value (mrq)</value>
  </data>
  <data name="Price_to_Free_Cash_Flow" xml:space="preserve">
    <value>Price to Free Cash Flow (mrq)</value>
  </data>
  <data name="ROE" xml:space="preserve">
    <value>ROE %</value>
  </data>
  <data name="Stocks_Chart" xml:space="preserve">
    <value>Stocks Chart</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Chart</value>
  </data>
  <data name="Last_Price" xml:space="preserve">
    <value>Last Price</value>
  </data>
  <data name="Last_Trade_Amount" xml:space="preserve">
    <value>Last Trade Amount</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="Message_1" xml:space="preserve">
    <value>Advisor: How may I help you?</value>
  </data>
  <data name="Message_2" xml:space="preserve">
    <value>Me: Could you point me to some resources on the basic materials sector?</value>
  </data>
  <data name="Message_3" xml:space="preserve">
    <value>Advisor: Certainly.</value>
  </data>
  <data name="Net_Liquidation_Value" xml:space="preserve">
    <value>Net Liquidation Value</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="Portfolio_Manager" xml:space="preserve">
    <value>Portfolio Manager</value>
  </data>
  <data name="Price_Paid" xml:space="preserve">
    <value>Price Paid</value>
  </data>
  <data name="Price_Per_Share" xml:space="preserve">
    <value>Price Per Share</value>
  </data>
  <data name="Profit_Loss" xml:space="preserve">
    <value>P/L</value>
  </data>
  <data name="Profit_Loss_prc" xml:space="preserve">
    <value>P/L %</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="RealTime_Stocks" xml:space="preserve">
    <value>Real-time Stocks</value>
  </data>
  <data name="Save_Layout" xml:space="preserve">
    <value>Save Layout</value>
  </data>
  <data name="Stock_Analysis" xml:space="preserve">
    <value>Stock Analysis</value>
  </data>
  <data name="Symbol" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="Timestamp" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="Trade_History" xml:space="preserve">
    <value>Trade History</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Current_Price" xml:space="preserve">
    <value>Current Price</value>
  </data>
  <data name="Execute_Transaction" xml:space="preserve">
    <value>Execute Transaction</value>
  </data>
  <data name="News_1" xml:space="preserve">
    <value>Stocks, dollar get boost after upbeat US jobs news</value>
  </data>
  <data name="News_2" xml:space="preserve">
    <value>Consumer Credit in US Increased $2.1 Billion in September</value>
  </data>
  <data name="News_3" xml:space="preserve">
    <value>Employers add 151K jobs; unemployment at 9.6 pct.</value>
  </data>
  <data name="News_4" xml:space="preserve">
    <value>Starbucks' earnings bring on bullishness</value>
  </data>
  <data name="News_5" xml:space="preserve">
    <value>Global markets jittery ahead of US jobs data</value>
  </data>
  <data name="Sell" xml:space="preserve">
    <value>Sell</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>Units</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="Enter_Filter_Value" xml:space="preserve">
    <value>Enter Filter Value</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="AppSubTitle" xml:space="preserve">
    <value>THE EQUITY TRADING PLATFORM FOR FINANCIAL SERVICES</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>EQUITY TRADING APP</value>
  </data>
</root>