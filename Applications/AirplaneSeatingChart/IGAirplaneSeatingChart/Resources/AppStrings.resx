<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AppInfo" xml:space="preserve">
    <value>The Airline Seating Chart application illustrates the use of the Geographic Map control beyond typical geographical solutions. The Geographic Map control allows easy implementation of an interactive airline seating chart, integrating customized shape files.  The seating chart provides detailed visuals on seat location, quality, availability, and flight amenities.  A customer satisfaction chart is also included.</value>
  </data>
  <data name="Audio" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="AudioText" xml:space="preserve">
    <value>All seats have 12 audio channels featuring 4 talk radio channels and the rest are music channels. There are old archived recordings from the 1940s and 1950s as well as a library of over 50 CDs.</value>
  </data>
  <data name="BadSeat" xml:space="preserve">
    <value>Bad seat</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="CustomerSatisfaction" xml:space="preserve">
    <value>Customer Satisfaction</value>
  </data>
  <data name="Exits" xml:space="preserve">
    <value>Exits</value>
  </data>
  <data name="FlightAmenities" xml:space="preserve">
    <value>Flight Amenities</value>
  </data>
  <data name="Food" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="FoodText" xml:space="preserve">
    <value>Complimentary meal service is offered in all classes.  Choose from our extensive menu which ranges from four course dining extravaganzas to light snacks and salads, complemented by a variety of available beverages.</value>
  </data>
  <data name="Galley" xml:space="preserve">
    <value>Galley</value>
  </data>
  <data name="GoodSeat" xml:space="preserve">
    <value>Good seat</value>
  </data>
  <data name="Infant" xml:space="preserve">
    <value>Infant</value>
  </data>
  <data name="InfantText" xml:space="preserve">
    <value>Infant seats are available for infants up to 2 years of age on a first come, first served basis for your flight.  Baby cots are also available although these can only be used in conjunction with certain seats. Please call for more info.</value>
  </data>
  <data name="Internet" xml:space="preserve">
    <value>Internet</value>
  </data>
  <data name="InternetText" xml:space="preserve">
    <value>Internet connections are available for all portable computers via our unique IGW wireless system. Access if free for the first half-hour and then a nominal fee is charged for each additional 15 minute interval.</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="Lavetory" xml:space="preserve">
    <value>Lavatory</value>
  </data>
  <data name="Occupied" xml:space="preserve">
    <value>Occupied</value>
  </data>
  <data name="Pitch" xml:space="preserve">
    <value>Pitch</value>
  </data>
  <data name="Power" xml:space="preserve">
    <value>Power</value>
  </data>
  <data name="PowerText" xml:space="preserve">
    <value>First, Global and Travel Plus classes feature in seat laptop power connections.  The standard travel class does not have a power outlet for every seat, but connections are available in every other row.</value>
  </data>
  <data name="Satisfied" xml:space="preserve">
    <value>% Satisfied</value>
  </data>
  <data name="SeatingDetails" xml:space="preserve">
    <value>Seating Details</value>
  </data>
  <data name="SeatMapKey" xml:space="preserve">
    <value>Seatmap Key</value>
  </data>
  <data name="SelectClass" xml:space="preserve">
    <value>Select class</value>
  </data>
  <data name="SelectedSeat" xml:space="preserve">
    <value>Selected seat</value>
  </data>
  <data name="SomeDrawbacks" xml:space="preserve">
    <value>Some drawbacks</value>
  </data>
  <data name="StandartSeat" xml:space="preserve">
    <value>Standard seat</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="VideoText" xml:space="preserve">
    <value>Each seat features individual video screens offering interactive games, 21 video channels and a choice of 18 films and television programs. You can choose blockbuster, classic and family movies as well as TV comedy and drama.</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Seats" xml:space="preserve">
    <value>Seats</value>
  </data>
  <data name="AppInfoDownloadLink" xml:space="preserve">
    <value>Download Source Code</value>
  </data>
  <data name="AppInfoWebsiteLink" xml:space="preserve">
    <value>Visit Company Website</value>
  </data>
  <data name="AppInfoDownloadLinkUrl" xml:space="preserve">
    <value>http://www.infragistics.com/dotnet/netadvantage/silverlight/line-of-business.aspx#Downloads</value>
  </data>
  <data name="AppInfoWebsiteLinkUrl" xml:space="preserve">
    <value>http://www.infragistics.com/dotnet/netadvantage/silverlight/line-of-business.aspx#Overview</value>
  </data>
  <data name="AppSubTitle" xml:space="preserve">
    <value>VISUALIZING DETAILS AND LOCATIONS OF SEATS IN AN AIRPLANE</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>AIRLINE SEATING CHART</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SeatCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="Restricted" xml:space="preserve">
    <value>Restricted</value>
  </data>
</root>