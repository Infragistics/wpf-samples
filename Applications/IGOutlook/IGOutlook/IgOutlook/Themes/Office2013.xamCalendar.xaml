<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:igEditors="http://schemas.infragistics.com/xaml"
                    xmlns:igEditorsPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="PresentationOptions d">

  <!-- *********************************  TEHEME COLORS  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  BRUSHES  ********************************* -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TransparentBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DisabledBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DisabledForegroundBrush" Color="{StaticResource Color_002}" />

  <!-- RepeatButton Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="ScrollPreviousRepeatButtonBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="ScrollNextRepeatButtonBackgroundBrush" Color="{StaticResource Color_001}" />

  <!-- Calendar Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarOtherMonthForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarDayForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarSeparatorBorderBrush" Color="{StaticResource Color_056}" />

  <!-- CalendarDayOfWeek Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarDayOfWeekBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarDayOfWeekForegroundBrush" Color="{StaticResource Color_001}" />

  <!-- CalendarItem Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemGroupTitleBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemMouseOverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemSelectedBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemSelectedForegroundBrush" Color="{StaticResource Color_001}" />

  <!-- Leading Or trailing Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="LeadingOrTrailingItemForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="LeadingOrTrailingTodayForegroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="LeadingOrTrailingSelectedItemForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="LeadingOrTrailingMouseOverItemForegroundBrush" Color="{StaticResource Color_002}" />

  <!-- CalendarWeekNumber Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarWeekNumberBaseBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarWeekNumberBaseForegroundBrush" Color="{StaticResource Color_001}" />

  <!-- Today Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayForegroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayBackgroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayButtonPresedBorderBrush" Color="{StaticResource Color_011}" />

  <!-- CalendarItemAreaWeekNumber Brushes -->
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemAreaWeekNumberBaseBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarItemAreaWeekNumberBaseBorderBrush" Color="{StaticResource Color_009}" />

  <igEditorsPrim:CalendarResourceString x:Key="todayText" ResourceName="Today" />

  <!-- ******************************************************** SL-WPF INLINE-CONTROLS SHARED RESOURCES ***********************************************************
    *********************************************************************************************************************************************************************    -->

  <!-- *********************************  ScrollPreviousRepeatButton Style  ********************************* -->
  <Style x:Key="ScrollPreviousRepeatButtonStyle" TargetType="RepeatButton">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Height="10" Width="10" Fill="{StaticResource TransparentBrush}" Margin="4 0" />
            <Path x:Name="Arrow" Fill="{StaticResource ScrollPreviousRepeatButtonBackgroundBrush}" Data="M3,0 L4,0 4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 z" Height="7" Width="4" Stretch="Fill" Margin="4" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScrollNextRepeatButton Style  ********************************* -->
  <Style x:Key="ScrollNextRepeatButtonStyle" TargetType="RepeatButton">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Arrow" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Height="10" Width="10" Fill="{StaticResource TransparentBrush}" Margin="4 0" />
            <Path x:Name="Arrow" Fill="{StaticResource ScrollNextRepeatButtonBackgroundBrush}" Data="M1.0000001,1 L2,1 2,2 3,2 3,3 4,3 4,4 3,4 3,5 2,5 2,6 1.0000001,6 z M0,0 L0.99999996,0 0.99999996,7 0,7 z" Height="7" Stretch="Fill" Width="4" Margin="4" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TodayButton Style  ********************************* -->
  <Style x:Key="TodayButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TodayButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TodayButtonBorderBrush}" />
    <Setter Property="Padding" Value="14 6" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="hover" Fill="{StaticResource TodayButtonHoverBackgroundBrush}" Stroke="{StaticResource TodayButtonHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Rectangle x:Name="pressed" Fill="{StaticResource TodayButtonPressedBackgroundBrush}" Stroke="{StaticResource TodayButtonPresedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Rectangle x:Name="disabled" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
            </ContentControl>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarItemGroupTitleButton Style  ********************************* -->
  <Style x:Key="CalendarItemGroupTitleButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="10,0,10,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Height="19" />
            <ContentPresenter x:Name="contentPresenter" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************************************************** SL-WPF SHARED RESOURCES ***********************************************************
    *****************************************************************************************************************************************************    -->

  <!-- *********************************  Value Converters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="boolToFontBold">
    <!-- if true sets FontWeight to Bold -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <FontWeight>Bold</FontWeight>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <!-- Visibility to '52' -->
  <igPrim:ValueConverterGroup x:Key="visibilityTo52Converter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Int32>52</sys:Int32>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{x:Null}">
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <!-- *********************************  CalendarItem Template  ********************************* -->
  <ControlTemplate x:Key="CalendarItemInnerTemplate" TargetType="igEditorsPrim:CalendarItem">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverItem">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <Storyboard>
                <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True" />
              </Storyboard>
              <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OtherMonthDay" d:IsOptimized="True" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="DayStates">
          <VisualState x:Name="Today">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayForegroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="RegularDay" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="LeadingOrTrailingStates">
          <VisualState x:Name="IsNotLeadingOrTrailing" />
          <VisualState x:Name="IsLeadingOrTrailing">
            <Storyboard>
              <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True" />
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OtherMonthDay">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ActiveStates">
          <VisualState x:Name="Inactive" />
          <VisualState x:Name="Active" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectionStates">
          <VisualState x:Name="Selected">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedItem">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unselected" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="HighlightStates">
          <VisualState x:Name="IsHighlighted" />
          <VisualState x:Name="IsNotHighlighted" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Fill="{StaticResource TransparentBrush}" />
      <Rectangle x:Name="MouseOverItem" Visibility="Collapsed" Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}" Opacity="0.5" />
      <Rectangle x:Name="SelectedItem" Visibility="Collapsed" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
      <Border x:Name="InnerBorder" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
        <Grid Margin="{TemplateBinding Padding}">
          <TextBlock x:Name="textBlock" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}" />
          <TextBlock x:Name="SelectedItem1" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{StaticResource CalendarItemSelectedForegroundBrush}" />
          <TextBlock x:Name="OtherMonthDay" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{TemplateBinding ComputedForeground}" />
        </Grid>
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  CalendarItem Style  ********************************* -->
  <Style x:Key="CalendarItemBaseStyle" TargetType="igEditorsPrim:CalendarItem">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,1,4,1" />
    <Setter Property="Template" Value="{StaticResource CalendarItemInnerTemplate}" />
    <Setter Property="Foreground" Value="{StaticResource CalendarItemForegroundBrush}" />
  </Style>

  <Style TargetType="igEditorsPrim:CalendarItem" BasedOn="{StaticResource CalendarItemBaseStyle}">
    <Setter Property="Margin" Value="0,0,.5,.5" />
  </Style>

  <!-- *********************************  CalendarDay Style  ********************************* -->
  <Style x:Key="CalendarDayBaseStyle" TargetType="igEditorsPrim:CalendarDay">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Height" Value="21" />
    <Setter Property="Width" Value="23" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="4,1,4,1" />
    <Setter Property="Foreground" Value="{StaticResource CalendarDayForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:CalendarDay">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="WorkDayStates">
                <VisualState x:Name="WorkDay" />
                <VisualState x:Name="NonWorkday" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverItem">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" d:IsOptimized="True" />
                    </Storyboard>
                    <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OtherMonthDay" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DayStates">
                <VisualState x:Name="Today">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TodayDay">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OtherMonthDay">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RegularDay" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeadingOrTrailingStates">
                <VisualState x:Name="IsNotLeadingOrTrailing" />
                <VisualState x:Name="IsLeadingOrTrailing">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OtherMonthDay">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive" />
                <VisualState x:Name="Active" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedItem">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedItem">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unselected" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="HighlightStates">
                <VisualState x:Name="IsHighlighted" />
                <VisualState x:Name="IsNotHighlighted" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Rectangle x:Name="MouseOverItem" Visibility="Collapsed" Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}" Opacity="0.5" />
            <Rectangle x:Name="SelectedItem" Visibility="Collapsed" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <Border x:Name="InnerBorder" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
              <Grid Margin="{TemplateBinding Padding}">
                <TextBlock x:Name="textBlock" FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}" />
                <TextBlock x:Name="OtherMonthDay" FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{StaticResource CalendarOtherMonthForegroundBrush}" />
                <TextBlock x:Name="TodayDay" FontWeight="{Binding IsHighlighted, Converter={StaticResource boolToFontBold}, RelativeSource={RelativeSource TemplatedParent}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{StaticResource TodayForegroundBrush}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>

    </Style.Triggers>
  </Style>
  <Style TargetType="igEditorsPrim:CalendarDay" BasedOn="{StaticResource CalendarDayBaseStyle}" />

  <!-- *********************************  CalendarDayOfWeek Style  ********************************* -->
  <Style x:Key="CalendarDayOfWeekBaseStyle" TargetType="igEditorsPrim:CalendarDayOfWeek">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{Binding Path=ComputedBackground, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Foreground" Value="{StaticResource CalendarDayOfWeekForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:CalendarDayOfWeek">
          <Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
            <TextBlock Text="{TemplateBinding DisplayText}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
            </TextBlock>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igEditorsPrim:CalendarDayOfWeek" BasedOn="{StaticResource CalendarDayOfWeekBaseStyle}" />

  <!-- *********************************  CalendarWeekNumber Style  ********************************* -->
  <Style x:Key="CalendarWeekNumberBaseStyle" TargetType="igEditorsPrim:CalendarWeekNumber">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Foreground" Value="{StaticResource CalendarWeekNumberBaseForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Height" Value="21" />
    <Setter Property="Width" Value="23" />
    <Setter Property="Padding" Value="1,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:CalendarWeekNumber">
          <Border x:Name="OuterBorder" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarWeekNumberBaseBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarWeekNumberBaseBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unselected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <TextBlock Margin="{TemplateBinding Padding}" MinWidth="6" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Text="{Binding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igEditorsPrim:CalendarWeekNumber" BasedOn="{StaticResource CalendarWeekNumberBaseStyle}" />

  <!-- *********************************  CalendarItemGroupTitle Style  ********************************* -->
  <Style x:Key="CalendarItemGroupTitleBaseStyle" TargetType="igPrim:CalendarItemGroupTitle">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Padding" Value="10,0,10,2" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CalendarItemGroupTitle">
          <Grid x:Name="ItemGroupContainer" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{StaticResource CalendarItemGroupTitleBackgroundBrush}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemGroupContainer" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Button x:Name="headerContent" Grid.Column="0" Grid.ColumnSpan="3" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" igPrim:XamlHelper.Focusable="False" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource CalendarItemGroupTitleButtonStyle}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}">
              <ig:Commanding.Command>
                <igPrim:CalendarCommandSource EventName="Click" CommandType="ZoomOutCalendarMode" ParameterBinding="{Binding Group, RelativeSource={RelativeSource TemplatedParent}}" />
              </ig:Commanding.Command>
            </Button>
            <RepeatButton Grid.Column="0" x:Name="previousMonth" IsTabStop="False" Foreground="{TemplateBinding ComputedForeground}" igPrim:XamlHelper.Focusable="False" Visibility="{Binding Group.ScrollPreviousButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ScrollPreviousRepeatButtonStyle}">
              <ig:Commanding.Command>
                <igPrim:CalendarCommandSource EventName="Click" CommandType="ScrollPreviousGroup" />
              </ig:Commanding.Command>
            </RepeatButton>
            <RepeatButton Grid.Column="2" x:Name="nextMonth" IsTabStop="False" Foreground="{TemplateBinding ComputedForeground}" igPrim:XamlHelper.Focusable="False" Visibility="{Binding Group.ScrollNextButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ScrollNextRepeatButtonStyle}">
              <ig:Commanding.Command>
                <igPrim:CalendarCommandSource EventName="Click" CommandType="ScrollNextGroup" />
              </ig:Commanding.Command>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:CalendarItemGroupTitle" BasedOn="{StaticResource CalendarItemGroupTitleBaseStyle}" />

  <!-- *********************************  CalendarItemGroup Style  ********************************* -->
  <Style TargetType="igEditorsPrim:CalendarItemGroup">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:CalendarItemGroup">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <!--Title-->
              <igEditorsPrim:CalendarItemGroupTitle x:Name="groupTitle" Content="{TemplateBinding Title}" />
              <igEditorsPrim:CalendarItemAreaPanel Grid.Row="1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarItemArea Style  ********************************* -->
  <Style x:Key="CalendarItemAreaBaseStyle" TargetType="igEditorsPrim:CalendarItemArea">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorsPrim:CalendarItemArea">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <!--week numbers-->
                <ColumnDefinition Width="*" />
                <!--Calendar-->
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <!--Days of Week-->
                <RowDefinition />
                <!--Calendar-->
              </Grid.RowDefinitions>
              <!--Day Of Week Header-->
              <igEditorsPrim:CalendarDayOfWeekPanel x:Name="DayOfWeekPanel" Grid.Column="1" Visibility="{TemplateBinding DayOfWeekHeaderVisibility}" igPrim:XamlHelper.Focusable="False" Background="{StaticResource CalendarDayOfWeekBackgroundBrush}" Margin="0,2" />
              <!--Week Numbers-->
              <Grid Grid.Column="0" Margin="1,0" Grid.Row="1" x:Name="weekNumbers" Visibility="{TemplateBinding WeekNumberVisibility}">
                <Border Grid.RowSpan="2" Background="{StaticResource CalendarItemAreaWeekNumberBaseBackgroundBrush}" BorderBrush="{StaticResource CalendarItemAreaWeekNumberBaseBorderBrush}" BorderThickness="0,0,1,0" />
                <!--This is there to ensure the column is wide enough-->
                <igEditorsPrim:CalendarWeekNumber DataContext="{Binding Path=(igEditors:CalendarBase.Calendar).WeekNumberVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityTo52Converter}}" Opacity="0" IsHitTestVisible="False" />
                <igEditorsPrim:CalendarWeekNumberPanel x:Name="WeekNumberPanel" FirstRow="{TemplateBinding Property=FirstItemRowOffset}" />
              </Grid>
              <!--Items of Group - e.g. Days Of Month-->
              <Border x:Name="itemsList" Grid.Column="1" Grid.Row="1">
                <igPrim:UniformGrid x:Name="ItemPanel" igPrim:XamlHelper.Focusable="False" FirstColumn="{TemplateBinding FirstItemColumnOffset}" FirstRow="{TemplateBinding FirstItemRowOffset}" Rows="{TemplateBinding ItemRows}" Columns="{TemplateBinding ItemColumns}" />
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igEditorsPrim:CalendarItemArea" BasedOn="{StaticResource CalendarItemAreaBaseStyle}">
    <Setter Property="Margin" Value="0,5,0,0" />
  </Style>

  <!-- *********************************  XamCalendar Style  ********************************* -->
  <Style TargetType="igEditors:XamCalendar">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="True" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Workdays" Value="None" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditors:XamCalendar">
          <Border Background="{StaticResource CalendarBackgroundBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="37" />
              </Grid.RowDefinitions>

              <Border Grid.Row="1" Margin="0 2" BorderBrush="{StaticResource CalendarSeparatorBorderBrush}" BorderThickness="0 1 0 0" />
              <!--Today button-->
              <Button Grid.Row="2" Margin="5" IsTabStop="False" Content="{Binding Source={StaticResource todayText}, Path=Value}" Style="{StaticResource TodayButtonStyle}" Visibility="{TemplateBinding TodayButtonVisibility}" HorizontalAlignment="Center">
                <ig:Commanding.Command>
                  <igEditorsPrim:CalendarCommandSource EventName="Click" CommandType="Today" />
                </ig:Commanding.Command>
              </Button>
              <!--Months-->
              <igEditorsPrim:CalendarItemGroupPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>