<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igMenu="http://schemas.infragistics.com/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!-- *********************************  COLORS  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="Styles.WPF.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!-- Menu Brushes -->
  <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="MenuBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="MenuForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="MenuPopupBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="MenuPopupBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ContextMenuBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="MenuSeparatorBackgroundBrush" Color="{StaticResource Color_005}" />

  <!-- MenuItem Brushes -->
  <SolidColorBrush x:Key="MenuItemHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="MenuItemHighlightedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="MenuItemTopLevelHoverForegroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="MenuItemTopLevelHighlightedForegroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="MenuIconColumnBorderBrush" Color="{StaticResource Color_046}" />

  <!-- ********************************* SL-WPF SHARED RESOURCES ********************************* -->
  <!-- ******************************************************************************************* -->

  <!-- *********************************  XamHeaderedItemsControl Style  ********************************* -->
  <Style x:Key="XamHeaderedItemsControlStyle" TargetType="igPrim:XamHeaderedItemsControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:XamHeaderedItemsControl">
          <Grid x:Name="Root">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ContentControl x:Name="HeaderContent" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
            <ItemsPresenter x:Name="Items" Grid.Row="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:XamHeaderedItemsControl" BasedOn="{StaticResource XamHeaderedItemsControlStyle}" />

  <!-- *********************************  XamMenuSeparator Style  ********************************* -->
  <Style x:Key="XamMenuSeparatorStyle" TargetType="igMenu:XamMenuSeparator">
    <Setter Property="Background" Value="{StaticResource MenuSeparatorBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenuSeparator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationState">
                <VisualState x:Name="Horizontal" />
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1" />
            <Border Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenuSeparator" BasedOn="{StaticResource XamMenuSeparatorStyle}" />

  <!-- *********************************  XamMenu Style  ********************************* -->
  <Style x:Key="XamMenuStyle" TargetType="igMenu:XamMenu">
    <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Foreground" Value="{StaticResource MenuForegroundBrush}" />
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenu">
          <Grid Width="{TemplateBinding Width}" MinHeight="{TemplateBinding MinHeight}" Height="{TemplateBinding Height}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
            <Border Grid.Column="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenu" BasedOn="{StaticResource XamMenuStyle}" />

  <!-- *********************************  XamContextMenu Style  ********************************* -->
  <Style x:Key="XamContextMenuStyle" TargetType="igMenu:XamContextMenu">
    <Setter Property="Padding" Value="1" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamContextMenu">
          <Border x:Name="PopupBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="26" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Border Background="{StaticResource MenuIconColumnBorderBrush}" />
              <ItemsPresenter Grid.ColumnSpan="2" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamContextMenu" BasedOn="{StaticResource XamContextMenuStyle}" />

  <!-- ********************************* WPF SPECIFIC RESOURCES ********************************* -->
  <!-- ******************************************************************************************* -->

  <!-- *********************************  XamMenuItem Style  ********************************* -->
  <Style x:Key="XamMenuItemStyle" TargetType="igMenu:XamMenuItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igMenu:XamMenuItem">
          <Grid Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard x:Name="MouseOverStoryboard">
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelHovered" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelHighlighted" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation From="1" To=".6" Duration="0" Storyboard.TargetName="MenuItemPresenter" Storyboard.TargetProperty="Opacity" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterTopLevelNormal" Storyboard.TargetProperty="FontWeight" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <FontWeight>Normal</FontWeight>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="SubmenuState">
                <VisualState x:Name="SubmenuOpen">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuOpenImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="1.0" BeginTime="0:0:0" Duration="0:0:0.15" />
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuClose">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />

                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuCloseImmediately">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Opacity" To="0.01" BeginTime="0:0:0" Duration="0:0:0.1" />

                  </Storyboard>
                </VisualState>
              </VisualStateGroup>

              <VisualStateGroup x:Name="MenuItemRole">
                <VisualState x:Name="TopLevelHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>10,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenter" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelNormal" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHovered" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelHeaderWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenter" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelNormal" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHovered" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>10,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenter" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelNormal" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHovered" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="TopLevelItemWithIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ChildIndicatorPlace" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>0</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="HeaderCheckboxPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>4,3,0,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>

                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenter" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPresenterTopLevelNormal" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelNormal" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHovered" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HeaderPresenterTopLevelHighlighted" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuHeader">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>5,3,25,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>

                <VisualState x:Name="SubmenuItem">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>5,3,25,3</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="SelectedIndicator" Background="{StaticResource MenuItemHoverBackgroundBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch"/>
              <Border x:Name="HighlightedIndicator" Background="{StaticResource MenuItemHighlightedBackgroundBrush}" Visibility="Collapsed" Grid.ColumnSpan="3" HorizontalAlignment="Stretch"/>

              <!-- MenuItemPresenter - presents the content of the menu item. -->
              <ContentPresenter x:Name="MenuItemPresenter" RecognizesAccessKey="True" Visibility="Visible" Opacity="1">
                <ContentPresenter.Content>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="IconPlace" Width="25" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22" />
                    </Grid.ColumnDefinitions>
                    <!-- Icon presenter-->
                    <igPrim:IconContentControl x:Name="HeaderIconPresenter" Height="16" Width="16" Visibility="{TemplateBinding IconVisibilityResolved}" Margin="4,3,4,3" />

                    <!-- Checkbox presenter-->
                    <ContentPresenter x:Name="HeaderCheckboxPresenter" Margin="4,3,4,3" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                      <ContentPresenter.Content>
                        <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
                      </ContentPresenter.Content>
                    </ContentPresenter>

                    <!-- Header presenter-->
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>

                      <igPrim:IconContentControl x:Name="HeaderPresenter" Margin="5,3,5,3" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                      <igPrim:IconContentControl x:Name="HeaderPresenterTopLevelNormal" igPrim:XamlHelper.SnapsToDevicePixels="True" Opacity="0" Visibility="Collapsed" Margin="5,3,5,3" FontWeight="SemiBold" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                      <igPrim:IconContentControl x:Name="HeaderPresenterTopLevelHovered" igPrim:XamlHelper.SnapsToDevicePixels="True" Opacity="0" Visibility="Collapsed" Foreground="{StaticResource MenuItemTopLevelHoverForegroundBrush}" Margin="5,3,5,3" FontWeight="SemiBold" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                      <igPrim:IconContentControl x:Name="HeaderPresenterTopLevelHighlighted" igPrim:XamlHelper.SnapsToDevicePixels="True" Opacity="0" Visibility="Collapsed" Foreground="{StaticResource MenuItemTopLevelHighlightedForegroundBrush}" Margin="5,3,5,3" FontWeight="SemiBold" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />

                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="8,3,2,3" />
                    </Grid>

                    <!-- Arrow indicator presenter-->
                    <Grid Grid.Column="2" x:Name="ArrowPanel" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed">
                      <Path x:Name="ArrowPanelPath" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Center" Margin="7,0,7,0" Data="M0,0 L0,8 L4,4 z" />
                    </Grid>
                  </Grid>
                </ContentPresenter.Content>
              </ContentPresenter>
            </Grid>
            <Popup x:Name="Popup">
              <Grid Background="{StaticResource MenuPopupBackgroundBrush}">
                <Border x:Name="PopupBorder" Opacity="0.01" Background="{StaticResource MenuPopupBackgroundBrush}" BorderBrush="{StaticResource MenuPopupBorderBrush}" BorderThickness="1" Padding="1">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="26" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" BorderBrush="{StaticResource MenuIconColumnBorderBrush}" BorderThickness="0,0,1,0" Width="26" HorizontalAlignment="Left" />
                    <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource ScrollViewerStyle}" MaxHeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxHeight}" MaxWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxWidth}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2">
                      <ItemsPresenter />
                    </ScrollViewer>
                  </Grid>
                </Border>
              </Grid>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igMenu:XamMenuItem" BasedOn="{StaticResource XamMenuItemStyle}" />
</ResourceDictionary>