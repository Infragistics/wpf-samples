<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igDT="http://schemas.infragistics.com/xaml"
                    xmlns:igPrimDT="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml"/>
    <ResourceDictionary Source="Styles.WPF.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <!--  Tree Brushes -->
  <SolidColorBrush x:Key="TreeBackgroundBrush" Color="{StaticResource Color_009}"/>
  <SolidColorBrush x:Key="TreeBorderBrush" Color="{StaticResource Color_046}"/>

  <!-- TreeNode Brushes -->
  <SolidColorBrush x:Key="TreeNodeBackgroundBrush" Color="{StaticResource Color_046}"/>
  <SolidColorBrush x:Key="TreeNodeBorderBrush" Color="{StaticResource Color_046}"/>

  <SolidColorBrush x:Key="TreeNodeHoverBackgroundBrush" Color="{StaticResource Color_010}"/>
  <SolidColorBrush x:Key="TreeNodeHoverBorderBrush" Color="{StaticResource Color_011}"/>

  <SolidColorBrush x:Key="TreeNodeSelectedBackgroundBrush" Color="{StaticResource Color_011}"/>
  <SolidColorBrush x:Key="TreeNodeSelectedBorderBrush" Color="{StaticResource Color_012}"/>

  <SolidColorBrush x:Key="TreeNodeActiveBackgroundBrush" Color="{StaticResource Color_046}"/>
  <SolidColorBrush x:Key="TreeNodeActiveBorderBrush" Color="{StaticResource Color_012}"/>

  <SolidColorBrush x:Key="NodeLineBackgroundBrush" Color="{StaticResource Color_005}"/>
  <SolidColorBrush x:Key="NodeLineTerminatorBackgroundBrush" Color="{StaticResource Color_005}"/>

  <SolidColorBrush x:Key="DropIndicatorBackgroundBrush" Color="{StaticResource Color_013}"/>
  <SolidColorBrush x:Key="DropIndicatorBorderBrush" Color="{StaticResource Color_013}"/>

  <!-- ExpansionIndicator Brushes -->
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBackgroundBrush" Color="{StaticResource Color_009}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBorderBrush" Color="{StaticResource Color_003}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphHoverBackgroundBrush" Color="{StaticResource Color_013}"/>
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphExpandedBackgroundBrush" Color="{StaticResource Color_003}"/>

  <!-- ****************************************************************** SL-WPF SHARED RESOURCES *******************************************************************
    ******************************************************************************************************************************************************************* -->

  <!-- *********************************  Converters  ********************************* -->
  <igPrimDT:BoolToVisibilityConverter x:Key="BoolToVis"/>

  <!-- *********************************  ExpansionIndicator Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrimDT:ExpansionIndicator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:ExpansionIndicator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpansionIndicatorGlyphHoverBackgroundBrush}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpansionIndicator" d:IsOptimized="True"/>
                    <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpansionIndicatorExpanded">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpansionIndicatorCollapsed">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="ExpansionIndicator" Background="{StaticResource TransparentBrush}" igPrimDT:XamlHelper.SnapsToDevicePixels="True">
              <Path x:Name="ExpansionIndicatorCollapsed"
                    Data="M60,40L60,20 70,30z"
                    Width="5" Height="8"  
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Fill="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}" Stroke="{StaticResource ExpansionIndicatorGlyphBorderBrush}" StrokeThickness="1" 
                    RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Stretch="Fill"/>
              <Path  x:Name="ExpansionIndicatorExpanded"
                     Data="M0.5,6.4997156 L3.3283137,3.6714226 3.6714667,3.6714429 3.6714465,3.3282926 6.4997594,0.50000001 6.500113,6.5000692 z"
                     Width="6" Height="6" 
                     HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Fill="{StaticResource ExpansionIndicatorGlyphExpandedBackgroundBrush}" Stroke="{StaticResource ExpansionIndicatorGlyphBorderBrush}" StrokeThickness="1" 
                     RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Stretch="Fill" Visibility="Collapsed"/>
            </Grid>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="2" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** XamDataTree Style **********************************-->
  <Style x:Key="XamDataTreeStyle" TargetType="igDT:XamDataTree">
    <Setter Property="Background" Value="{StaticResource TreeBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igDT:XamDataTree">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <igPrimDT:NodesPanel x:Name="NodesPanel" Background="{StaticResource TransparentBrush}"/>
              <ScrollBar x:Name="VerticalScrollBar" Width="15" Grid.Row="0" Grid.Column="1" Style="{StaticResource ScrollBarStyle}"/>
              <ScrollBar x:Name="HorizontalScrollBar" Height="15" Grid.Row="2" Style="{StaticResource ScrollBarStyle}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igDT:XamDataTree" BasedOn="{StaticResource XamDataTreeStyle}" />

  <!-- ********************************** ActiveNodeIndicator Style **********************************-->
  <Style x:Key="ActiveNodeIndicatorStyle" TargetType="igPrimDT:ActiveNodeIndicator">
    <Setter Property="Background" Value="{StaticResource TreeNodeActiveBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeActiveBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:ActiveNodeIndicator">
          <Rectangle StrokeDashCap="Round" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:ActiveNodeIndicator" BasedOn="{StaticResource ActiveNodeIndicatorStyle}" />

  <!-- ********************************** XamDataTreeNodeControl Style **********************************-->
  <Style x:Key="XamDataTreeNodeControlStyle" TargetType="igDT:XamDataTreeNodeControl">
    <Setter Property="Background" Value="{StaticResource TreeNodeBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeBorderBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="8,0"/>
    <Setter Property="MinHeight" Value="22"/>
    <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igDT:XamDataTreeNodeControl">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpandedIconStates">
                <VisualState x:Name="HideIcons"/>
                <VisualState x:Name="ShowCollapsedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowExpandedIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Inactive"/>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected"/>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EndLines">
                <VisualState x:Name="None">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>None</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="TShape">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>TShape</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="LShape">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <igDT:NodeLineTemination>LShape</igDT:NodeLineTemination>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropStates">
                <VisualState x:Name="NoDrop"/>
                <VisualState x:Name="DropOnto">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropBefore">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropAfter">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="main">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="28"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Rectangle Fill="{StaticResource TransparentBrush}" Grid.ColumnSpan="6"/>
              <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
              <Border x:Name="hoverBorder" Background="{StaticResource TreeNodeHoverBackgroundBrush}" BorderBrush="{StaticResource TreeNodeHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5"/>
              <Border x:Name="SelectedBorder" Background="{StaticResource TreeNodeSelectedBackgroundBrush}" BorderBrush="{StaticResource TreeNodeSelectedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5"/>
              <igPrimDT:NodeLineControl Node="{Binding Node}" x:Name="lineControl"/>
              <igPrimDT:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}"/>
              <igPrimDT:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.HasChildren, Converter={StaticResource BoolToVis}, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpansionIndicatorStyle}"/>
              <CheckBox x:Name="Checkbox" Grid.Column="2" IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}" IsTabStop="False" Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}" IsChecked="{Binding Node.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource CheckBoxStyle}"/>
              <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>
              <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>
              <igPrimDT:ActiveNodeIndicator x:Name="ActiveBorder" Visibility="Collapsed" Grid.Column="5" IsTabStop="false" Style="{StaticResource ActiveNodeIndicatorStyle}" Margin="0"/>
              <ContentControl x:Name="contentControl" Margin="{TemplateBinding Padding}"  Grid.Column="5" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <ContentPresenter x:Name="ContentPresenter" />
              </ContentControl>
            </Grid>
            <Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform Y="-3"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0"/>
              <Path x:Name="arrowLeft" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left"/>
              <Path x:Name="arrowRight" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}"/>
            </Grid>
            <Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform/>
                  <SkewTransform/>
                  <RotateTransform/>
                  <TranslateTransform Y="4"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorBackgroundBrush}" Height="1" StrokeThickness="0"/>
              <Path x:Name="arrowLeft1" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorBackgroundBrush}" HorizontalAlignment="Left"/>
              <Path x:Name="arrowRight1" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorBackgroundBrush}"/>
            </Grid>
            <Rectangle x:Name="DropOntoElem" Opacity="0" Stroke="{StaticResource DropIndicatorBorderBrush}" StrokeThickness="1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igDT:XamDataTreeNodeControl" BasedOn="{StaticResource XamDataTreeNodeControlStyle}" />

  <!-- ********************************** NodeLineControl Style **********************************-->
  <Style x:Key="NodeLineControlStyle" TargetType="igPrimDT:NodeLineControl">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:NodeLineControl">
          <igPrimDT:NodeLinePanel x:Name="StackPanel" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalLine">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Rectangle VerticalAlignment="Stretch" Fill="{StaticResource NodeLineBackgroundBrush}" Width="1" Margin="12,0,0,0"/>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalLine">
      <Setter.Value>
        <DataTemplate>
          <Grid VerticalAlignment="Center">
            <Rectangle Fill="{StaticResource NodeLineBackgroundBrush}" Height="1"/>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:NodeLineControl" BasedOn="{StaticResource NodeLineControlStyle}" />

  <!-- ********************************** NodeLineTerminator Style **********************************-->
  <Style x:Key="NodeLineTerminatorStyle" TargetType="igPrimDT:NodeLineTerminator">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="BorderBrush" Value="{StaticResource NodeLineTerminatorBackgroundBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrimDT:NodeLineTerminator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="Lines">
                <VisualState x:Name="None"/>
                <VisualState x:Name="T">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="L">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TShape" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LShape" Visibility="Collapsed">
              <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Width="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Grid.Column="1"/>
              <Rectangle VerticalAlignment="Top" Height="1" Fill="{TemplateBinding BorderBrush}" Grid.Row="1" Grid.Column="1"/>
            </Grid>
            <Grid x:Name="TShape" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Width="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Grid.Column="1"/>
              <Rectangle VerticalAlignment="Center" Height="1" Fill="{TemplateBinding BorderBrush}" Grid.Column="1"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrimDT:NodeLineTerminator" BasedOn="{StaticResource NodeLineTerminatorStyle}" />
</ResourceDictionary>