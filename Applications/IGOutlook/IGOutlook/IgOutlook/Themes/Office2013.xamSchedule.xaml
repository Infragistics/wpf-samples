<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:igSchedulePrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igLayout="http://schemas.infragistics.com/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="Styles.WPF.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <SolidColorBrush x:Key="AccentForegroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="SeparatorBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OverlayBrush" Color="{StaticResource Color_041}" />
  <SolidColorBrush x:Key="SelectedItemBackgroundBrush" Color="{StaticResource Color_005}" />

  <!-- ActivityTemplate Brushes -->
  <SolidColorBrush x:Key="ActivityTemplateOverlayBackgroundBrush" Color="{StaticResource Color_041}" />

  <!-- ActivityCategoryColorPicker Brushes -->
  <SolidColorBrush x:Key="ColorPickerNoneColorBorderBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="ColorPickerNoneColorBackgroundBrush" Color="{StaticResource Color_040}" />

  <!-- ActivityDialogRibbon Brushes -->
  <SolidColorBrush x:Key="ActivityDialogRibbonActionsBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ActivityDialogRibbonActionsBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ActivityDialogRibbonOptionsBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ActivityDialogRibbonOptionsBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ActivityDialogRibbonTagsBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="ActivityDialogRibbonTagsBorderBrush" Color="{StaticResource Color_008}" />

  <!-- Slider Brushes -->
  <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="SliderHTrackBackgroundBrush" Color="{StaticResource Color_005}" />

  <!-- DatePicker Brushes -->
  <SolidColorBrush x:Key="DatePickerButtonBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DatePickerButtonBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DatePickerButtonHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="DatePickerButtonHoverBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DatePickerButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CalendarBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="CalendarTodayForegroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CalendarTodayBackgroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="CalendarOtherMonthForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="CalendarItemMouseOverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="CalendarItemMouseOverBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarItemSelectedFocusedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarItemSelectedBorderBrush" Color="{StaticResource Color_011}" />

  <!-- CalendarHeader Brushes -->
  <SolidColorBrush x:Key="CalendarHeaderBackgroundBrush" Color="{StaticResource Color_007}" />

  <!-- Calendar Brushes -->
  <SolidColorBrush x:Key="CalendarArrowBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CalendarIconInnerGlyphBrush" Color="{StaticResource Color_016}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="CalendarIconGlyphBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="AlternateMonthDayBackgroundBrush" Color="{StaticResource Color_040}" />
  <SolidColorBrush x:Key="ClickToAddActivityBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DateNavigatorBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DateNavigatorBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="TodayButtonBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="TodayButtonBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="TodayButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="TodayButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="TodayButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="TodayButtonPresedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CalendarSeparatorBorderBrush" Color="{StaticResource Color_056}" />
  <SolidColorBrush x:Key="PendingOperationIndicatorBackgroundlBrush1" Color="{StaticResource Color_003}" />
  <LinearGradientBrush x:Key="PendingOperationIndicatorBackgroundBrush2" StartPoint="1,1" EndPoint="0,0">
    <GradientStop Color="{StaticResource Color_002}" />
    <GradientStop Color="{StaticResource Color_003}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PendingOperationIndicatorBackgroundBrush3" StartPoint="0,1" EndPoint="1,0">
    <GradientStop Color="{StaticResource Color_003}" />
    <GradientStop Color="{StaticResource Color_001}" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PendingOperationIndicatorBackgroundBrush4" Color="{StaticResource Color_003}" />
  <LinearGradientBrush x:Key="RibbonSeparatorBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{StaticResource Color_008}" Offset="0" />
    <GradientStop Color="{StaticResource Color_004}" Offset="1" />
  </LinearGradientBrush>

  <!-- Schedule Brushes -->
  <SolidColorBrush x:Key="OutlookCalendarViewBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ScheduleViewBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DayViewBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="MonthViewBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="MonthViewTodayHeaderBackgroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="MultiDayActivityAreaBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="MultiDayActivityAreaBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DayViewBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="CalendarGroupTimeslotAreaBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ScheduleDialogFooterBackgroundBrush" Color="{StaticResource Color_008}" />

  <igPrim:CalendarResourceString x:Key="todayText" ResourceName="Today" />

  <!-- ******************************************************** SL-WPF INLINE-CONTROLS SHARED RESOURCES ***********************************************************
    *********************************************************************************************************************************************************************    -->

  <!-- *********************************  TextBlock Style  ********************************* -->
  <Style x:Key="TextBlockStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
  </Style>

  <!-- *********************************  EmbeddedTextBox Style  ********************************* -->
  <Style x:Key="EmbeddedTextBoxStyle" TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="0" />
  </Style>

  <!-- ******************************************************** WPF SPECIFIC INLINE-CONTROLS RESOURCES ***********************************************************
    ***********************************************************************************************************************************************************************    -->

  <!-- *********************************  TextBox Style  ********************************* -->
  <Style x:Key="TextBoxStyle" TargetType="TextBox">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="4,2" />
  </Style>

  <!-- *********************************  EditableTextBox Style  ********************************* -->
  <Style x:Key="EditableTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="SelectionBrush" Value="{DynamicResource SelectedItemBackgroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly">
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxFocusedBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Visible" />
              <Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="False" Opacity="0" Margin="-1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ComboBoxEditableTextBox Style  ********************************* -->
  <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="AllowDrop" Value="true" />
    <Setter Property="MinWidth" Value="0" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer Style="{StaticResource ScrollViewerStyle}" x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_ContentHost">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ComboBoxEditable Template  ********************************* -->
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="normal">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="normal">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="FocusedDropDown">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="normal" Fill="{StaticResource ComboBoxBackgroundBrush}" Stroke="{StaticResource ComboBoxBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" />
      <Rectangle x:Name="hover" Fill="{StaticResource ComboBoxHoverBackgroundBrush}" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
          <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
            <Grid RenderOptions.ClearTypeHint="Enabled">
              <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
              </Canvas>
              <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
          </ScrollViewer>
        </Border>
      </Popup>
      <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}" />
      <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxEditableTextBoxStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,0,5,0" />
      <Rectangle x:Name="focused" Stroke="{StaticResource ComboBoxFocusedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
    </Grid>
  </ControlTemplate>

  <!-- *********************************  ComboBox Style  ********************************* -->
  <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="Padding" Value="4,2,16,2" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MinWidth="14" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="normal">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="normal">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="content">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="normal" Fill="{StaticResource ComboBoxBackgroundBrush}" Stroke="{StaticResource ComboBoxBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" />
            <Rectangle x:Name="hover" Fill="{StaticResource ComboBoxHoverBackgroundBrush}" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
              <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                  <Grid RenderOptions.ClearTypeHint="Enabled">
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <ToggleButton Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}" />
            <ContentPresenter Grid.ColumnSpan="2" x:Name="content" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Rectangle x:Name="focused" Stroke="{StaticResource ComboBoxFocusedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
              <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
              <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
              <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsEditable" Value="true">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************* CalendarItem Style ********************************* -->
  <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CalendarBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock FontSize="12" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" HorizontalAlignment="Center" Margin="0,4,0,4" Text="{Binding}" VerticalAlignment="Center" />
            </DataTemplate>
          </ControlTemplate.Resources>
          <Grid x:Name="PART_Root">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <Border CornerRadius="1">
                <Grid>
                  <Grid.Resources>
                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver" />
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" Duration="0" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent">
                          <Path x:Name="path" Height="7" Width="4" Stretch="Fill" Fill="{StaticResource CalendarArrowBackgroundBrush}" Data="M3,0 L4,0 4,7 3,7 3,6 2,6 2,5 1,5 1,4 0,4 0,3 1,3 1,2 2,2 2,1 3,1 z" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver" />
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To=".5" Duration="0" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="Transparent">
                          <Path x:Name="path" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{StaticResource CalendarArrowBackgroundBrush}" Data="M1.0000001,1 L2,1 2,2 3,2 3,3 4,3 4,4 3,4 3,5 2,5 2,6 1.0000001,6 z M0,0 L0.99999996,0 0.99999996,7 0,7 z" Height="7" Stretch="Fill" Width="4" UseLayoutRounding="False" />
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                      <Grid Cursor="Hand">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver" />
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="buttonContent" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="buttonContent" IsTabStop="False" Foreground="{StaticResource ForegroundBrush}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                      </Grid>
                    </ControlTemplate>
                  </Grid.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Rectangle Fill="{StaticResource CalendarHeaderBackgroundBrush}" Grid.ColumnSpan="3" />
                  <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False" HorizontalAlignment="Left" Height="20" Grid.Row="0" Template="{StaticResource PreviousButtonTemplate}" Width="20" />
                  <Button x:Name="PART_HeaderButton" Grid.Column="1" Focusable="False" HorizontalAlignment="Stretch" Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}" VerticalAlignment="Stretch" />
                  <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False" HorizontalAlignment="Right" Height="20" Grid.Row="0" Template="{StaticResource NextButtonTemplate}" Width="20" />
                  <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" Margin="6,-3,7,6" Grid.Row="1" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledBackgroundBrush}" Opacity="0" Stretch="Fill" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
              <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
              <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="OverridesDefaultStyle" Value="False" />
  </Style>

  <!-- ********************************* CalendarDayButton Style ********************************* -->
  <Style TargetType="CalendarDayButton" x:Key="CalendarDayButtonStyle">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Height" Value="21" />
    <Setter Property="Width" Value="23" />
    <Setter Property="Padding" Value="4,1,4,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarDayButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="RegularDay" />
                <VisualState Name="Today">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="NormalText">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarTodayForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="NormalDay" />
                <VisualState Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="TodayBackground" Opacity="0" Fill="{StaticResource CalendarTodayBackgroundBrush}" />
            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="HighlightBackground" Opacity="0" Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}" />
            <Rectangle x:Name="SelectedBackground" Opacity="0" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource ForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <ContentPresenter x:Name="SelectedText" Visibility="Collapsed" TextElement.Foreground="{StaticResource LightForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <Path x:Name="Blackout" Opacity="0" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />
            <Rectangle x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}" StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* CalendarButton Style ********************************* -->
  <Style TargetType="CalendarButton" x:Key="CalendarButtonStyle">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="MinHeight" Value="42" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CalendarButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Normal" />
                <VisualState Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="MouseOverItem" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Unselected" />
                <VisualState Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedText" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="Active" />
                <VisualState Name="Inactive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CalendarOtherMonthForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CalendarButtonFocusVisual">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CalendarButtonUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverItem" Opacity="0" Stroke="{StaticResource CalendarItemMouseOverBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemMouseOverBackgroundBrush}" />
            <Rectangle x:Name="SelectedBackground" Opacity="0" Stroke="{StaticResource CalendarItemSelectedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <Rectangle x:Name="Background" Opacity="0" Stroke="{StaticResource CalendarItemSelectedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CalendarItemSelectedBackgroundBrush}" />
            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource ForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <ContentPresenter x:Name="SelectedText" Visibility="Collapsed" TextElement.Foreground="{StaticResource LightForegroundBrush}" TextElement.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,1,5,1" />
            <Rectangle x:Name="CalendarButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false" Stroke="{StaticResource CalendarItemSelectedFocusedBorderBrush}" StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* Calendar Style ********************************* -->
  <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
    <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
    <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
    <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
    <Setter Property="Background" Value="{StaticResource CalendarBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{StaticResource CalendarBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Calendar}">
          <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
            <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  HeaderDropDownButton Style  ********************************* -->
  <Style x:Key="DropDownButtonStyle" TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid FlowDirection="LeftToRight">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                  <VisualTransition To="Pressed" GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DatePickerButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="{StaticResource DatePickerButtonBorderBrush}" Background="{StaticResource DatePickerButtonBackgroundBrush}" Opacity="1" />
            <Grid Height="15" Width="16">
              <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="13" Width="16" Stretch="Fill" Data="M 0,2 C0,2 16,2 16,2 16,2 16,15 16,15 16,15 0,15 0,15 0,15 0,2 0,2 z" Fill="{StaticResource LightForegroundBrush}" />
              <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="13" Width="16" Stretch="Fill" Data="M 10,8 C10,8 10,6 10,6 10,6 12,6 12,6 12,6 12,8 12,8 12,8 10,8 10,8 zM 10,11 C10,11 10,9 10,9 10,9 12,9 12,9 12,9 12,11 12,11 12,11 10,11 10,11 zM 7,8 C7,8 7,6 7,6 7,6 9,6 9,6 9,6 9,8 9,8 9,8 7,8 7,8 zM 7,11 C7,11 7,9 7,9 7,9 9,9 9,9 9,9 9,11 9,11 9,11 7,11 7,11 zM 4,8 C4,8 4,6 4,6 4,6 6,6 6,6 6,6 6,8 6,8 6,8 4,8 4,8 zM 4,11 C4,11 4,9 4,9 4,9 6,9 6,9 6,9 6,11 6,11 6,11 4,11 4,11 zM 3,2 C3,2 3,5 3,5 3,5 0,5 0,5 0,5 0,6 0,6 0,6 3,6 3,6 3,6 3,8 3,8 3,8 0,8 0,8 0,8 0,9 0,9 0,9 3,9 3,9 3,9 3,11 3,11 3,11 0,11 0,11 0,11 0,12 0,12 0,12 3,12 3,12 3,12 3,15 3,15 3,15 4,15 4,15 4,15 4,12 4,12 4,12 6,12 6,12 6,12 6,15 6,15 6,15 7,15 7,15 7,15 7,12 7,12 7,12 9,12 9,12 9,12 9,15 9,15 9,15 10,15 10,15 10,15 10,12 10,12 10,12 12,12 12,12 12,12 12,15 12,15 12,15 13,15 13,15 13,15 13,12 13,12 13,12 16,12 16,12 16,12 16,11 16,11 16,11 13,11 13,11 13,11 13,9 13,9 13,9 16,9 16,9 16,9 16,8 16,8 16,8 13,8 13,8 13,8 13,6 13,6 13,6 16,6 16,6 16,6 16,5 16,5 16,5 13,5 13,5 13,5 13,2 13,2 13,2 12,2 12,2 12,2 12,5 12,5 12,5 10,5 10,5 10,5 10,2 10,2 10,2 9,2 9,2 9,2 9,5 9,5 9,5 7,5 7,5 7,5 7,2 7,2 7,2 6,2 6,2 6,2 6,5 6,5 6,5 4,5 4,5 4,5 4,2 4,2 4,2 3,2 3,2 z" Fill="{StaticResource DatePickerButtonBorderBrush}" />
              <Path Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="15" Width="16" Stretch="Fill" Data="M 1,3 C1,3 15,3 15,3 15,3 15,14 15,14 15,14 1,14 1,14 1,14 1,3 1,3 zM 0,0 C0,0 0,15 0,15 0,15 16,15 16,15 16,15 16,0 16,0 16,0 0,0 0,0 z" Fill="{StaticResource CalendarIconGlyphBrush}" />
              <Path Margin="8,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="6" Width="6" Stretch="Fill" Data="M 8,4 C8,4 14,4 14,4 14,4 14,10 14,10 14,10 8,10 8,10 8,10 8,4 8,4 z" Fill="{StaticResource LightForegroundBrush}" />
              <Path Margin="9,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="4" Width="4" Stretch="Fill" Data="M 9,5 C9,5 13,5 13,5 13,5 13,9 13,9 13,9 9,9 9,9 9,9 9,5 9,5 z" Stroke="{StaticResource CalendarIconInnerGlyphBrush}" StrokeThickness="1" />
            </Grid>
            <Border x:Name="DisabledVisual" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="{StaticResource DisabledBackgroundBrush}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* DatePickerTextBox Style ********************************* -->
  <Style x:Key="DatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Padding" Value="4,2,23,2" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ReadOnly" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WatermarkStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unwatermarked" />
                <VisualState x:Name="Watermarked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource DisabledBackgroundBrush}" IsHitTestVisible="False" Opacity="0" />
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1">
              <Grid x:Name="WatermarkContent">
                <Border x:Name="ContentElement" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Border x:Name="watermark_decorator" Margin="{TemplateBinding Padding}">
                  <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" />
                </Border>
                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Grid>
            </Border>
            <Border x:Name="FocusVisual" BorderBrush="{StaticResource TextBoxFocusedBrush}" BorderThickness="1" IsHitTestVisible="False" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* DatePicker Style ********************************* -->
  <Style x:Key="DatePickerStyle" TargetType="{x:Type DatePicker}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="CalendarStyle" Value="{DynamicResource CalendarStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Border>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <DatePickerTextBox x:Name="PART_TextBox" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource DatePickerTextBoxStyle}" />
              <Button x:Name="PART_Button" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,0,4,0" Style="{StaticResource DropDownButtonStyle}" />
              <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0">
                <Rectangle Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" Opacity="0.75" />
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SliderRepeatButton Style **********************************-->
  <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** HSliderThumb Style **********************************-->
  <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Focusable" Value="false" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Height" Value="11" />
    <Setter Property="Width" Value="4" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <Grid x:Name="HorizontalThumb" HorizontalAlignment="Left">
              <Rectangle Width="4" Height="11" x:Name="Thumb" Fill="{StaticResource SliderThumbBackgroundBrush}" />
            </Grid>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
              <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** Slider Style **********************************-->
  <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="5" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
              <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="5" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
              <Border x:Name="TrackBackground" Background="{StaticResource SliderHTrackBackgroundBrush}" Height="1" Margin="3,0" Grid.Row="1" VerticalAlignment="center">
                <Canvas Margin="-3,0">
                  <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource SliderThumbPressedBackgroundBrush}" Height="1" Visibility="Hidden" />
                </Canvas>
              </Border>
              <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
              <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
              <Setter Property="Margin" TargetName="TrackBackground" Value="3,2,3,0" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
              <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
              <Setter Property="Margin" TargetName="TrackBackground" Value="3,0,3,2" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
              <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
              <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
              <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Vertical" />
    </Style.Triggers>
  </Style>

  <!-- ******************************************************** SL-WPF SHARED RESOURCES ***********************************************************
    *********************************************************************************************************************************************************************    -->

  <!-- *********************************  Resource Strings  ********************************* -->
  <igPrim:ScheduleResourceString x:Key="BlockingErrorLiteral" ResourceName="BlockingErrorLiteral" />
  <igPrim:ScheduleResourceString x:Key="ToolTipErrorLabel" ResourceName="ToolTipErrorLabel" />
  <igPrim:ScheduleResourceString x:Key="CalendarCloseButtonToolTip" ResourceName="CalendarCloseButtonToolTip" />
  <igPrim:ScheduleResourceString x:Key="CalendarNavigateBackToolTip" ResourceName="CalendarNavigateBackToolTip" />
  <igPrim:ScheduleResourceString x:Key="CalendarNavigateForwardToolTip" ResourceName="CalendarNavigateForwardToolTip" />

  <!-- *********************************  Value Converters  ********************************* -->
  <igPrim:ValueConverterGroup x:Key="tsOrientationToThicknessConverter">
    <!-- When arranged vertically have a 1 pixel border on bottom -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness Bottom="1" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- When arranged horizontally have a 1 pixel border on right -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness Right="1" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="tsTickmarkKindToColumnWidthConverter">
    <!-- Minor ticks are narrower -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:TimeslotTickmarkKind>Minor</igPrim:TimeslotTickmarkKind>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <GridLength>0*</GridLength>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- Major ticks take up the full width -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:TimeslotTickmarkKind>Major</igPrim:TimeslotTickmarkKind>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <GridLength>100*</GridLength>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="tsTickmarkKindToRowHeightConverter">
    <!-- Minor ticks are shorter -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:TimeslotTickmarkKind>Minor</igPrim:TimeslotTickmarkKind>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <GridLength>5e-1*</GridLength>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- Major ticks are taller -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:TimeslotTickmarkKind>Major</igPrim:TimeslotTickmarkKind>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <GridLength>17e-1*</GridLength>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- Day ticks take up the full height -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:TimeslotTickmarkKind>Day</igPrim:TimeslotTickmarkKind>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <GridLength>100*</GridLength>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <!-- Minor ticks text is hidden -->
  <igPrim:FixedValueConverter x:Key="tsTickmarkKindToVisibilityConverter">
    <igPrim:FixedValueConverter.SourceValue>
      <igPrim:TimeslotTickmarkKind>Minor</igPrim:TimeslotTickmarkKind>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <Visibility>Collapsed</Visibility>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>
  <igPrim:ValueConverterGroup x:Key="currentTimeOrientationToThickness">
    <!-- Vertical current time has line on left and right only -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness Left="1" Right="1" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- Otherwise for horz use line on top and bottom -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness Top="1" Bottom="1" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="currentTimeOrientationToMargin">
    <!-- Don't overlap the bottom line of the ts header -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness Bottom="1" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <!-- Hides the day label text when its clipped -->
  <igPrim:FixedValueConverter x:Key="clippedToOpacity">
    <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>True</sys:Boolean>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <sys:Double>0</sys:Double>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>
  <!-- Hides the day label ticks when its clipped -->
  <igPrim:FixedValueConverter x:Key="inViewToOpacity">
    <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>False</sys:Boolean>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <sys:Double>0</sys:Double>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>

  <igPrim:FixedValueConverter x:Key="isActiveToFontWeight">
    <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>True</sys:Boolean>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <FontWeight>Bold</FontWeight>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>

  <!-- Rotates the element 180 degrees when the value is false -->
  <igPrim:FixedValueConverter x:Key="falseToRotate180Converter">
    <igPrim:FixedValueConverter.SourceValue>
      <sys:Boolean>False</sys:Boolean>
    </igPrim:FixedValueConverter.SourceValue>
    <igPrim:FixedValueConverter.DestinationValue>
      <sys:Double>180</sys:Double>
    </igPrim:FixedValueConverter.DestinationValue>
  </igPrim:FixedValueConverter>
  <igPrim:ValueConverterGroup x:Key="boolRotate90To270Converter">
    <!-- if true sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>90</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>270</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="notBoolToTextWrapping">
    <!-- if true sets TextWrapping to NoWrap -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextWrapping>NoWrap</TextWrapping>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets TextWrapping to Wrap -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextWrapping>Wrap</TextWrapping>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="boolToOccurrenceStyle">
    <!-- if true sets style to a variance indicator -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Style TargetType="ContentControl">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ContentControl">
                <Grid Width="20" Height="16">
                  <Path HorizontalAlignment="Left" VerticalAlignment="Top" Data="M6.6247807,8.9836235 C6.6332312,9.0657501 6.6432023,9.1466818 6.6546454,9.2264357 L6.6722221,9.3335199 L7.124362,8.9876785 z M13.266459,6.6807094 L12.833583,7.0107212 L13.312842,7.0136285 C13.303651,6.9296746 13.292952,6.8469391 13.280794,6.7654037 z M18.874531,0 L20.062,1.5000018 L16.885853,3.9213967 L16.903109,3.9513755 C17.390621,4.8247519 17.716667,5.8414497 17.813976,6.9999743 L20,7.0010095 L15.725497,13.00101 L11.819088,7.7841401 L7.3399992,11.198857 L7.3898292,11.282947 C9.2933598,14.352913 13.937403,14.599909 13.937403,14.599909 L13.888843,14.638164 C12.770285,15.498661 11.422429,16.001007 9.9717045,16.001007 C8.0571661,16.001007 5.9380732,15.132101 4.3812294,13.616561 L4.2901855,13.52394 L1.1249717,15.937 L0,14.437088 L3.1285179,12.044091 L3.0402017,11.893709 C2.5527301,11.039516 2.2268088,10.072229 2.1297569,9.0113611 L0,9.001009 L4.3558278,3.0010078 L8.1691723,8.1885052 L12.606065,4.7947359 L12.528111,4.6619072 C10.600104,1.5198915 5.9632792,1.2564549 5.9632792,1.2564549 C7.1063781,0.33442941 8.4654675,0.0010071417 9.9720287,0.0010071527 C11.939798,0.0010071417 14.123241,0.79141366 15.690513,2.3537469 L15.736258,2.4004586 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets style to the occurrence indicator -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Style TargetType="ContentControl">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ContentControl">
                <Grid Width="20" Height="16" x:Name="reccurence">
                  <Path HorizontalAlignment="Left" VerticalAlignment="Top" Data="M4.9682531,3 L9.9989996,9 L7.5562186,8.9826145 C8.1730747,14.238736 15.896988,14.598898 15.896988,14.598898 L15.8416,14.637153 C14.565774,15.49765 13.028412,15.999996 11.373716,15.999996 C7.4915457,15.999996 2.8719885,13.253825 2.4291985,9.0103521 L0,9 z M11.374086,0 C15.256354,0 19.874638,2.3648682 20.318604,6.9989657 L22.811981,7.0000005 L17.936487,13 L12.811981,7.0000005 L15.184615,7.0126195 C14.51362,1.6395826 6.8017106,1.2554474 6.8017106,1.2554474 C8.1055279,0.33342218 9.6557045,0 11.374086,0 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="nullToVisibility">
    <!-- if null sets visibility to Collapsed -->
    <igPrim:FixedValueConverter SourceValue="{x:Null}">
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if not null sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="boolToVisibility">
    <!-- if true sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
    <!-- if true sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="dateRangeFormatToVisibility">
    <!-- if 'None' sets visibility to Collapsed -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <igPrim:DateRangeFormatType>None</igPrim:DateRangeFormatType>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="boolToHorizontal">
    <!-- if true sets orientation to Horizontal -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <!-- if false sets orientation to Vertical -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="singleLineToTextWrapping">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextWrapping>Wrap</TextWrapping>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <TextWrapping>NoWrap</TextWrapping>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="overlayModeToTooltipResource">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <igPrim:ScheduleResourceString ResourceName="OverlayButtonIsInOverlayModeToolTip" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <igPrim:ScheduleResourceString ResourceName="OverlayButtonIsNotInOverlayModeToolTip" />
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="allDayVisToRow">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Int32>1</sys:Int32>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Int32>2</sys:Int32>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="allDayVisToRowSpan">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Int32>2</sys:Int32>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Int32>1</sys:Int32>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="notConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="singleLineIndicatorsToVertAlignment">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <VerticalAlignment>Center</VerticalAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <VerticalAlignment>Stretch</VerticalAlignment>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="singleLineActivityBackground">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource ActivityTemplateOverlayBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>true</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>
  <igPrim:ValueConverterGroup x:Key="nonSingleLineActivityBackground">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource ActivityTemplateOverlayBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>false</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igLayout:ColorBlendConverter BlendMode="Overlay" x:Key="LightenColorConverter" />

  <!-- ********************************** TimeZoneChooserDialog Style **********************************-->
  <Style TargetType="igPrim:TimeZoneChooserDialog">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TimeZoneChooserDialog">
          <ContentControl igPrim:XamlHelper.Focusable="False" IsTabStop="False" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="12" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid MinWidth="565">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="txtMsg" Text="{Binding LocalizedStrings[DLG_TimeZoneChooser_Literal_Message], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="1" TextWrapping="Wrap" Margin="0,0,0,12" TextAlignment="Left" VerticalAlignment="Top" />
                <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                  <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_TimeZoneChooser_Literal_Selector], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,0,8,0" />
                  <ComboBox Style="{StaticResource ComboBoxStyle}" x:Name="Selector" Width="365" DisplayMemberPath="DisplayName" Foreground="{StaticResource ForegroundBrush}" ItemsSource="{Binding TimeZoneTokens, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding SelectedTimeZoneToken, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="10" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,12,0,0">
                  <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                      <Setter Property="MinWidth" Value="75" />
                      <Setter Property="Margin" Value="5,0,5,0" />
                      <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                  </StackPanel.Resources>
                  <Button x:Name="OkButton" TabIndex="30" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamScheduleDataManager Style  ********************************* -->
  <Style TargetType="igLayout:XamScheduleDataManager">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="ColorScheme">
      <Setter.Value>
        <igLayout:CustomScheduleColorScheme>
          <igLayout:CustomScheduleColorScheme.ResourceOverrides>
            <ResourceDictionary>
              <SolidColorBrush x:Key="ActivityCategoryCheckedMenuItemBackground" Color="{StaticResource Color_010}" />
              <SolidColorBrush x:Key="ActivityCategoryCheckedMenuItemBorder" Color="{StaticResource Color_011}" />
              <SolidColorBrush x:Key="ActivityCategoryColorPickerDropDownBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="ActivityCategoryColorPickerDropDownBorder" Color="{StaticResource Color_005}" />
              <SolidColorBrush x:Key="AppointmentDateTimeForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="AppointmentForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="BlockingErrorBackground" Color="{StaticResource Color_040}" />
              <SolidColorBrush x:Key="BlockingErrorForeground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="BlockingErrorHeaderForeground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="CurrentDayBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="CurrentDayBorderMonthCalendar" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="CurrentDayHeaderBackground" Color="{StaticResource Color_046}" />
              <SolidColorBrush x:Key="CurrentDayHeaderForeground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="DayBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="DayBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="DayHeaderBackground" Color="{StaticResource Color_046}" />
              <SolidColorBrush x:Key="DayHeaderForground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="DialogBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="DialogForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="JournalDateTimeForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="JournalForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="MonthViewDayOfWeekHeaderForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="NavigationButtonForeground" Color="{StaticResource Color_003}" />
              <SolidColorBrush x:Key="NavigationButtonBackground" Color="{StaticResource Color_046}" />
              <SolidColorBrush x:Key="NonWorkingHourTimeslotMinorBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="SelectedActivityBorder" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TaskDateTimeForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TaskForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TaskForegroundOverlayed" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TimeslotMajorBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="TimeslotHeaderAreaBackgroundDayView" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="TimeslotHeaderAreaBackgroundScheduleView" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="TimeslotHeaderAreaSeparator" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="TimeslotHeaderForegroundDayView" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TimeslotHeaderForegroundScheduleView" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="TimeslotHeaderTickmarkDayView" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="TimeslotHeaderTickmarkScheduleView" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="ToolTipBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="ToolTipBorder" Color="{StaticResource Color_005}" />
              <SolidColorBrush x:Key="ToolTipErrorForeground" Color="{StaticResource Color_014}" />
              <SolidColorBrush x:Key="ToolTipForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="WeekHeaderBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="WeekHeaderForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="WorkingHourTimeslotBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="WorkingHourTimeslotMinorBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="CurrentTimeIndicatorBackground" Color="{StaticResource Color_013}" />
              <SolidColorBrush x:Key="CurrentTimeIndicatorBorder" Color="{StaticResource Color_013}" />
            </ResourceDictionary>
          </igLayout:CustomScheduleColorScheme.ResourceOverrides>
          <Color>#FF5B9BD5</Color>
          <Color>#FFED7D31</Color>
          <Color>#FFA5A5A5</Color>
          <Color>#FFFFC000</Color>
          <Color>#FF4472C4</Color>
          <Color>#FF70AD47</Color>
          <Color>#FF255E91</Color>
          <Color>#FF9E480E</Color>
          <Color>#FFE0CD8E</Color>
          <Color>#FF997300</Color>
        </igLayout:CustomScheduleColorScheme>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  RotateDecorator Style  ********************************* -->
  <Style TargetType="igPrim:RotateDecorator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RotateDecorator">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* ScheduleDatePresenterBase Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleDatePresenterBase">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleDatePresenterBase">
          <TextBlock Text="{TemplateBinding FormattedText}" Style="{StaticResource TextBlockStyle}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  BestFitDateRangePresenter Style  ********************************* -->
  <Style TargetType="igPrim:BestFitDateRangePresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:BestFitDateRangePresenter">
          <igPrim:BestFitPanel>
            <TextBlock Text="{TemplateBinding FormattedText}" Style="{StaticResource TextBlockStyle}" />
            <TextBlock Text="{TemplateBinding ShortFormattedText}" Style="{StaticResource TextBlockStyle}" />
          </igPrim:BestFitPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  PendingOperationIndicator Style  ********************************* -->
  <Style TargetType="igPrim:PendingOperationIndicator">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:PendingOperationIndicator">
          <Canvas x:Name="Root" Height="18" Width="18">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="Active">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:1.1" To="360" RepeatBehavior="Forever" Storyboard.TargetProperty="Angle" Storyboard.TargetName="rotate" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Canvas.RenderTransform>
              <RotateTransform x:Name="rotate" CenterX="9" CenterY="9" />
            </Canvas.RenderTransform>
            <Path Canvas.Left="1" Canvas.Top="1" Height="8.144" Width="8.13" Stretch="Fill" Data="M0,6 C0,6 0.001328,6.1333308 0.001328,6.1333308 C0.001328,6.1333308 2.4979157,6.1443028 2.4979157,6.1443028 C2.4979157,6.1443028 2.4952459,6.010972 2.4952459,6.010972 C2.5312922,3.9457424 3.8915637,2.4586742 5.989028,2.4952879 C5.989028,2.4952879 6.1223588,2.4979577 6.1223588,2.4979577 C6.1223588,2.4979577 6.1333308,0.001328 6.1333308,0.001328 C6.1333308,0.001328 6,0 6,0 C2.686249,0 0,2.686249 0,6 z" Fill="{StaticResource PendingOperationIndicatorBackgroundlBrush1}" UseLayoutRounding="False" />
            <Path Canvas.Left="1" Canvas.Top="9" Height="8.13" Width="8.144" Stretch="Fill" Data="M0,6 C0,6 0.001328,5.8666692 0.001328,5.8666692 C0.001328,5.8666692 2.4979577,5.8776412 2.4979577,5.8776412 C2.4979577,5.8776412 2.4952879,6.010972 2.4952879,6.010972 C2.4613211,7.9567924 3.8714154,9.467411 6.010972,9.504755 C6.010972,9.504755 6.1443028,9.5021 6.1443028,9.5021 C6.1443028,9.5021 6.1333308,11.998672 6.1333308,11.998672 C6.1333308,11.998672 6,12 6,12 C2.686249,12 0,9.3137512 0,6 z" Fill="{StaticResource PendingOperationIndicatorBackgroundBrush4}" UseLayoutRounding="False" />
            <Path Canvas.Left="9" Canvas.Top="9" Height="8.144" Width="8.13" Stretch="Fill" Data="M12,6 C12,6 11.998672,5.8666692 11.998672,5.8666692 C11.998672,5.8666692 9.5020847,5.8556972 9.5020847,5.8556972 C9.5020847,5.8556972 9.504755,5.989028 9.504755,5.989028 C9.4683657,8.0739241 7.9690843,9.5388947 6.010972,9.5047131 C6.010972,9.5047131 5.8776412,9.502058 5.8776412,9.502058 C5.8776412,9.502058 5.8666692,11.998672 5.8666692,11.998672 C5.8666692,11.998672 6,12 6,12 C9.3137512,12 12,9.3137512 12,6 z" Fill="{StaticResource PendingOperationIndicatorBackgroundBrush3}" UseLayoutRounding="False" />
            <Path Canvas.Left="9" Canvas.Top="1" Height="8.13" Width="8.144" Stretch="Fill" Data="M12,6 C12,6 11.998672,6.1333308 11.998672,6.1333308 C11.998672,6.1333308 9.5020428,6.1223588 9.5020428,6.1223588 C9.5020428,6.1223588 9.5047131,5.989028 9.5047131,5.989028 C9.5410824,3.905545 8.1659536,2.4668145 5.989028,2.4952459 C5.989028,2.4952459 5.8556972,2.4979157 5.8556972,2.4979157 C5.8556972,2.4979157 5.8666692,0.001328 5.8666692,0.001328 C5.8666692,0.001328 6,0 6,0 C9.3137512,0 12,2.686249 12,6 z" Fill="{StaticResource PendingOperationIndicatorBackgroundBrush2}" UseLayoutRounding="False" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  BlockingError Style  ********************************* -->
  <Style x:Key="BlockingErrorStyle" TargetType="ContentControl">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle Grid.RowSpan="3" Opacity=".9" Fill="{Binding (igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorBackground], RelativeSource={RelativeSource TemplatedParent}}" />
            <!--Header-->
            <ContentControl Grid.Row="0" Content="{Binding Value, Source={StaticResource BlockingErrorLiteral}}" Margin="5" Foreground="{StaticResource ForegroundBrush}">
              <ContentControl.FontSize>
                <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                  <Binding.Converter>
                    <igPrim:MinMaxConverter MinValue="14" />
                  </Binding.Converter>
                </Binding>
              </ContentControl.FontSize>
            </ContentControl>
            <!--Description-->
            <TextBlock Grid.Row="1" Margin="5,0,5,0" TextWrapping="Wrap" Foreground="{Binding (igSchedulePrim:CalendarBrushProvider.BrushProvider)[BlockingErrorForeground], RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Content.UserErrorText, Converter={StaticResource nullToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}">
              <TextBlock.FontSize>
                <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                  <Binding.Converter>
                    <igPrim:MinMaxConverter MinValue="12.5" />
                  </Binding.Converter>
                </Binding>
              </TextBlock.FontSize>
            </TextBlock>
            <!--Details-->
            <ScrollViewer Grid.Row="2" Margin="5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
              <TextBox Text="{Binding Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="True" TextWrapping="Wrap" Background="{x:Null}" Style="{StaticResource TextBoxStyle}" Foreground="{StaticResource ForegroundBrush}" />
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamDayView Style  ********************************* -->
  <Style TargetType="igLayout:XamDayView">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource DayViewBackgroundBrush}" />
    <Setter Property="TimeslotGutterAreaWidth" Value="30" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLayout:XamDayView">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ErrorStates">
                <VisualState x:Name="NoError" />
                <VisualState x:Name="Error">
                  <Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RootPanel">
              <igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <!-- Additional Timezone Headers -->
                <TextBlock Text="{TemplateBinding SecondaryTimeZoneLabel}" VerticalAlignment="Bottom" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="0" Margin="0,0,0,1" Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" />
                <Rectangle igPrim:XamlHelper.SnapsToDevicePixels="True" Height="1" VerticalAlignment="Bottom" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.PreferredHeight="1" Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" Fill="{Binding DefaultBrushProvider[TimeslotHeaderTickmarkDayView], RelativeSource={RelativeSource TemplatedParent}}" />
                <igPrim:DayViewTimeslotHeaderArea x:Name="SecondaryTimeZone" FontSize="12" BorderThickness="0,0,1,0" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.Column="0" Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" igLayout:GridBagPanel.RowWeight="1" Background="{Binding DefaultBrushProvider[TimeslotHeaderAreaBackgroundDayView], RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding DefaultBrushProvider[TimeslotHeaderAreaSeparator], RelativeSource={RelativeSource TemplatedParent}}" />
                <!-- Primary Timezone Headers -->
                <TextBlock Text="{TemplateBinding PrimaryTimeZoneLabel}" VerticalAlignment="Bottom" Margin="0,0,0,1" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="1" />
                <Rectangle igPrim:XamlHelper.SnapsToDevicePixels="True" Height="1" VerticalAlignment="Bottom" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="1" igLayout:GridBagPanel.PreferredHeight="1" Fill="{Binding DefaultBrushProvider[TimeslotHeaderTickmarkDayView], RelativeSource={RelativeSource TemplatedParent}}" />
                <igPrim:DayViewTimeslotHeaderArea x:Name="PrimaryTimeZone" FontSize="12" Background="{Binding DefaultBrushProvider[TimeslotHeaderAreaBackgroundScheduleView], RelativeSource={RelativeSource TemplatedParent}}" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.Column="1" igLayout:GridBagPanel.RowWeight="1" />
                <igPrim:ScheduleStackPanel x:Name="GroupHeadersPanel" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.ColumnWeight="1" Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}" />
                <igPrim:ScheduleStackPanel x:Name="DayHeadersPanel" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.ColumnWeight="1" />
                <!-- Overlap the dayheaderspanel above. -->
                <igPrim:ScheduleResizerBar x:Name="MultiDayActivityAreaResizer" IsEnabled="{TemplateBinding AllowMultiDayActivityAreaResizing}" Visibility="{TemplateBinding MultiDayActivityAreaVisibility}" Canvas.ZIndex="2" Height="12" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.ColumnSpan="3" igLayout:GridBagPanel.Row="1" VerticalAlignment="Bottom" />
                <igPrim:ScheduleStackPanel x:Name="GroupsPanel" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.ColumnWeight="1" igLayout:GridBagPanel.RowWeight="1" />
                <ScrollBar igLayout:GridBagPanel.Column="3" igLayout:GridBagPanel.Row="1" Orientation="Vertical" Style="{StaticResource ScrollBarStyle}" x:Name="DayHeadersScrollBar" />
                <ScrollBar igLayout:GridBagPanel.Column="3" igLayout:GridBagPanel.Row="{Binding MultiDayActivityAreaVisibility, Converter={StaticResource allDayVisToRow}, RelativeSource={RelativeSource TemplatedParent}}" igLayout:GridBagPanel.RowSpan="{Binding MultiDayActivityAreaVisibility, Converter={StaticResource allDayVisToRowSpan}, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical" Style="{StaticResource ScrollBarStyle}" x:Name="TimeslotScrollBar" igLayout:GridBagPanel.RowWeight="1" />
                <ScrollBar igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.Row="3" igLayout:GridBagPanel.ColumnWeight="1" Orientation="Horizontal" Style="{StaticResource ScrollBarStyle}" x:Name="TimeslotGroupScrollBar" />
              </igLayout:GridBagPanel>
              <ContentControl x:Name="ErrorDisplay" Visibility="Collapsed" Content="{Binding BlockingError, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlockingErrorStyle}" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamScheduleView Style  ********************************* -->
  <Style TargetType="igLayout:XamScheduleView">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource ScheduleViewBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLayout:XamScheduleView">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ErrorStates">
                <VisualState x:Name="NoError" />
                <VisualState x:Name="Error">
                  <Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RootPanel">
              <igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <TextBlock Text="{TemplateBinding SecondaryTimeZoneLabel}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,6,8,0" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.Column="0" Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" />
                <TextBlock Text="{TemplateBinding PrimaryTimeZoneLabel}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,6,8,0" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="0" />
                <igPrim:ScheduleViewTimeslotHeaderArea x:Name="SecondaryTimeZone" Background="{Binding DefaultBrushProvider[TimeslotHeaderAreaBackgroundScheduleView], RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding DefaultBrushProvider[TimeslotHeaderAreaSeparator], RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,0,0,1" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.Column="2" Visibility="{TemplateBinding SecondaryTimeZoneVisibility}" igLayout:GridBagPanel.ColumnWeight="1" />
                <igPrim:ScheduleViewTimeslotHeaderArea x:Name="PrimaryTimeZone" Background="{Binding DefaultBrushProvider[TimeslotHeaderAreaBackgroundScheduleView], RelativeSource={RelativeSource TemplatedParent}}" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.ColumnWeight="1" />
                <igPrim:ScheduleStackPanel x:Name="GroupHeadersPanel" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.RowWeight="1" Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}" />
                <igPrim:ScheduleStackPanel x:Name="GroupsPanel" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.ColumnWeight="1" igLayout:GridBagPanel.RowWeight="1" />
                <ScrollBar igLayout:GridBagPanel.Column="3" igLayout:GridBagPanel.Row="2" Orientation="Vertical" Style="{StaticResource ScrollBarStyle}" x:Name="TimeslotGroupScrollBar" igLayout:GridBagPanel.RowWeight="1" />
                <ScrollBar igLayout:GridBagPanel.Column="2" igLayout:GridBagPanel.Row="3" igLayout:GridBagPanel.ColumnWeight="1" Orientation="Horizontal" Style="{StaticResource ScrollBarStyle}" x:Name="TimeslotScrollBar" />
                <Rectangle igPrim:XamlHelper.SnapsToDevicePixels="True" Fill="{Binding DefaultBrushProvider[TimeslotHeaderTickmarkScheduleView], RelativeSource={RelativeSource TemplatedParent}}" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.Column="1" igLayout:GridBagPanel.RowSpan="4" igLayout:GridBagPanel.ColumnWeight="0" igLayout:GridBagPanel.PreferredWidth="1" Width="2" />
                <!-- Overlap the rectangle above. -->
                <igPrim:ScheduleResizerBar x:Name="GroupHeadersResizer" IsEnabled="{TemplateBinding AllowCalendarHeaderAreaResizing}" Canvas.ZIndex="2" Width="8" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.ColumnSpan="2" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.RowSpan="4" HorizontalAlignment="Right" />
              </igLayout:GridBagPanel>
              <ContentControl x:Name="ErrorDisplay" Visibility="Collapsed" Content="{Binding BlockingError, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlockingErrorStyle}" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamMonthView Style  ********************************* -->
  <Style TargetType="igLayout:XamMonthView">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource MonthViewBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLayout:XamMonthView">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ErrorStates">
                <VisualState x:Name="NoError" />
                <VisualState x:Name="Error">
                  <Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RootPanel">
              <igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <igPrim:ScheduleStackPanel x:Name="GroupHeadersPanel" igLayout:GridBagPanel.Row="0" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.ColumnWeight="1" Visibility="{TemplateBinding CalendarHeaderAreaVisibilityResolved}" />
                <igPrim:ScheduleStackPanel x:Name="GroupsPanel" igLayout:GridBagPanel.Row="1" igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.ColumnWeight="1" igLayout:GridBagPanel.RowWeight="1" />
                <ScrollBar igLayout:GridBagPanel.Column="1" igLayout:GridBagPanel.Row="1" Orientation="Vertical" Style="{StaticResource ScrollBarStyle}" x:Name="WeekScrollBar" />
                <ScrollBar igLayout:GridBagPanel.Column="0" igLayout:GridBagPanel.Row="2" igLayout:GridBagPanel.ColumnWeight="1" Orientation="Horizontal" Style="{StaticResource ScrollBarStyle}" x:Name="TimeslotGroupScrollBar" />
              </igLayout:GridBagPanel>
              <ContentControl x:Name="ErrorDisplay" Visibility="Collapsed" Content="{Binding BlockingError, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlockingErrorStyle}" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  DateNavDayActivityToolTip Template  ********************************* -->
  <DataTemplate x:Key="DateNavDayActivityToolTipTemplate">
    <StackPanel Orientation="Vertical" Margin="6">
      <StackPanel Orientation="Horizontal">
        <!-- Primary category indicator -->
        <Rectangle Width="20" Margin="0,0,8,0" Fill="{Binding CategoryBackground}" />
        <!-- start -->
        <igPrim:RelativeDateRangePresenter ConvertDateTimeToLocal="{Binding Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}" Start="{Binding Activity.Start}" End="{Binding Activity.End}" RelativeDate="{Binding Date}" IncludeEnd="False" HorizontalAlignment="Right" SizeToWidestTime="True" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" FontSize="14" />
        <!-- start/end separator -->
        <TextBlock Text="-" Margin="4,0,4,0" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" FontSize="14" />
        <!-- end -->
        <igPrim:RelativeDateRangePresenter ConvertDateTimeToLocal="{Binding Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}" Start="{Binding Activity.Start}" End="{Binding Activity.End}" RelativeDate="{Binding Date}" IncludeStart="False" HorizontalAlignment="Right" SizeToWidestTime="{Binding AlignEndTime}" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" FontSize="14" />
        <!-- subject -->
        <TextBlock Text="{Binding Activity.Subject}" Margin="7,0,4,0" />
        <!-- indicator panel -->
        <StackPanel igPrim:ActivityContentPanel.Area="Indicators" Orientation="Horizontal">
          <!-- Occurrence indicator -->
          <ContentControl Style="{Binding Activity.IsVariance, Converter={StaticResource boolToOccurrenceStyle}}" igPrim:XamlHelper.Focusable="False" Margin="2,3,2,2" Foreground="{StaticResource ForegroundBrush}" Visibility="{Binding Activity.IsOccurrence, Converter={StaticResource boolToVisibility}}" />
          <!-- Reminder indicator -->
          <Path Width="18" Height="18" Stretch="Fill" Data="F1M59.8746,46.168C58.6237,44.849 57.1312,44.142 55.3145,43.4492 55.2132,43.4115 55.1055,43.3777 55.0026,43.3412 47.7142,37.0339 51.1328,31.9818 51.1328,25.5339 51.1328,19.1433 44.7653,9.40503 36.179,6.63025 36.2103,6.40369 36.2308,6.17322 36.2308,5.94019 36.2308,3.09509 33.9258,0.790405 31.0823,0.790405 28.2386,0.790405 25.9319,3.09509 25.9319,5.94019 25.9319,6.25659 25.9648,6.56775 26.0208,6.86719 17.8066,9.89063 11.7965,19.1263 11.7965,25.5339 11.7965,31.9271 14.8346,36.9727 8.23468,42.9857 6.90881,43.392 5.72394,43.8542 4.68555,44.3972 3.80042,44.8711 2.99835,45.4011 2.28711,46.168 1.5918,46.9128 0.941406,48.0625 0.94397,49.4297 0.941406,50.8008 1.5918,51.9506 2.28711,52.6941 3.53839,54.0144 5.03186,54.7214 6.84894,55.4167 9.56934,56.4102 13.0719,57.1576 17.1992,57.6927 19.9818,58.0508 23.0553,58.2917 26.2972,58.418 27.5768,60.6484 29.4964,62.0691 31.6445,62.0691 33.8066,62.0691 35.7402,60.6302 37.0201,58.375 42.3177,58.1185 47.082,57.5248 50.9134,56.6719 53.5313,56.0808 55.709,55.3945 57.4778,54.4648 58.3633,53.9922 59.1637,53.4623 59.8746,52.6941 60.5719,51.9506 61.222,50.8008 61.2194,49.4297 61.222,48.0625 60.5719,46.9128 59.8746,46.168z M12.5699,50.7695C10.7207,50.3594 9.19434,49.8777 8.16272,49.4297 8.38184,49.3347 8.62335,49.2371 8.88538,49.1433 10.9075,48.3881 14.0898,47.6654 17.9212,47.1771 20.2897,46.8699 22.9241,46.6498 25.7184,46.5209 25.0566,48.0781 24.6673,49.9102 24.6673,51.8802 24.6673,52.0183 24.6774,52.1537 24.6826,52.2917 19.9688,52.0287 15.7718,51.4883 12.5699,50.7695z M53.278,49.7201C51.2559,50.4779 48.0748,51.1953 44.2435,51.6863 42.498,51.9128 40.5996,52.0898 38.6113,52.2214 38.6126,52.1068 38.6214,51.9949 38.6214,51.8802 38.6214,49.9336 38.2428,48.1224 37.5938,46.5756 42.2633,46.8412 46.4141,47.3816 49.5934,48.0951 51.4414,48.5039 52.9691,48.9883 54.0006,49.4363 53.7816,49.5287 53.5403,49.6277 53.278,49.7201z" Fill="{StaticResource GlyphBackgroundBrush}" Visibility="{Binding ReminderVisibility}" />
          <!-- Activity Category Bars -->
        </StackPanel>
      </StackPanel>
    </StackPanel>
  </DataTemplate>

  <!-- *********************************  dateNavDayToolTip Template  ********************************* -->
  <DataTemplate x:Key="DateNavDayToolTipTemplate">
    <Grid Margin="6">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <!-- Date Header -->
      <Border Margin="25,0,0,0" BorderThickness="0,0,0,1" BorderBrush="{Binding (igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipBorder]}">
        <igPrim:ScheduleDateTimePresenter HorizontalAlignment="Left" DateTime="{Binding Date}" FormatType="LongDate" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" FontSize="14" />
      </Border>
      <!-- Activities -->
      <ItemsControl Grid.Row="1" Margin="0,8,0,0" ItemsSource="{Binding ActivityToolTipInfos}" ItemTemplate="{StaticResource DateNavDayActivityToolTipTemplate}" />
    </Grid>
  </DataTemplate>

  <!-- *********************************  ScheduleToolTip Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleToolTip">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleToolTip">
          <Border BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ContentControl igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}" Margin="6">
              <ContentPresenter />
            </ContentControl>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ActivityToolTipInfoPresenter Style  ********************************* -->
  <Style TargetType="igPrim:ActivityToolTipInfoPresenter">
    <Setter Property="Padding" Value="6" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityToolTipInfoPresenter">
          <StackPanel Orientation="Vertical" Margin="{TemplateBinding Padding}" DataContext="{TemplateBinding ActivityToolTipInfo}">
            <StackPanel Orientation="Horizontal">
              <igPrim:ScheduleDateRangePresenter ConvertDateTimeToLocal="{Binding Activity.IsTimeZoneNeutral, Converter={StaticResource notConverter}}" Start="{Binding Activity.Start}" End="{Binding Activity.End}" />
              <TextBlock Text="{Binding Activity.Subject}" Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" />
            </StackPanel>
            <TextBlock Text="{Binding ActivityPresenter.AdditionalText}" Visibility="{Binding ActivityPresenter.AdditionalText, Converter={StaticResource nullToVisibility}}" Margin="0,1,0,1" Style="{StaticResource TextBlockStyle}" />
            <!--Error info-->
            <Grid Visibility="{Binding Error, Converter={StaticResource nullToVisibility}}" Margin="0,8,0,0">
              <Grid.RowDefinitions>
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Center" Height="1" Fill="{Binding ActivityPresenter.(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipForeground]}" />
              <Path Grid.Row="1" Grid.Column="0" Margin="2" Height="18" Width="18" Stretch="Fill" Data="M12.061931,4.0000005 L9.0226059,7.0525241 L5.9800363,4.0000052 L4.0000052,5.9376607 L7.083817,9.0016146 L4.0000105,12.098856 L5.9381933,13.999997 L9.0186062,10.921207 L12.117375,14.000001 L14,12.047609 L10.951711,8.9893465 L14.000005,5.9426541 z M0,0 L18,0 L18,18 L0,18 z" Fill="{Binding ActivityPresenter.(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ToolTipErrorForeground]}" />
              <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding Value, Source={StaticResource ToolTipErrorLabel}}" Foreground="{StaticResource ForegroundBrush}" Margin="8,0,0,0">
              </ContentControl>
              <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Error.UserErrorText}" TextWrapping="Wrap" MaxWidth="600" Margin="0,0,1,0" Style="{StaticResource TextBlockStyle}" />
            </Grid>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ActivityToolTipTemplate Style  ********************************* -->
  <DataTemplate x:Key="ActivityToolTipTemplate">
    <igPrim:ActivityToolTipInfoPresenter ActivityToolTipInfo="{Binding}" />
  </DataTemplate>

  <!-- *********************************  TimeslotHeaderTickmark Style  ********************************* -->
  <Style TargetType="igPrim:TimeslotHeaderTickmark">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TimeslotHeaderTickmark">
          <Rectangle Fill="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarGroupTimeslotArea Style  ********************************* -->
  <Style TargetType="igPrim:CalendarGroupTimeslotArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CalendarGroupTimeslotArea">
          <Border Margin="{TemplateBinding ComputedMargin}" BorderBrush="{StaticResource CalendarGroupTimeslotAreaBorderBrush}" BorderThickness="1,0,1,1" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igPrim:ScheduleStackPanel x:Name="ItemsPanel" InterItemSpacing="-1" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MonthViewCalendarGroupTimeslotArea Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewCalendarGroupTimeslotArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewCalendarGroupTimeslotArea">
          <Border Margin="{TemplateBinding ComputedMargin}" Background="{StaticResource ScheduleViewBackgroundBrush}" BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <!-- This is a placeholder to ensure that the day of week headers are offset similar
								    to the weeks. I would have bound the Width of the column definition but that
								    doesn't work in silverlight -->
              <Rectangle Width="{Binding WeekHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}" />
              <Rectangle Fill="{TemplateBinding ComputedBackground}" Grid.Column="0" Grid.RowSpan="2" />
              <Rectangle Fill="{TemplateBinding ComputedBackground}" Grid.Column="1" Grid.Row="0" />
              <Rectangle Fill="{StaticResource OverlayBrush}" Grid.Column="0" Grid.RowSpan="2" />
              <Rectangle Fill="{StaticResource OverlayBrush}" Grid.Column="1" Grid.Row="0" />
              <igPrim:ScheduleStackPanel x:Name="DayOfWeekHeadersPanel" Grid.Column="1" InterItemSpacing="-1" />
              <igPrim:ScheduleStackPanel x:Name="ItemsPanel" Grid.Row="1" Grid.ColumnSpan="2" InterItemSpacing="-1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimeslotArea Template  ********************************* -->
  <ControlTemplate x:Key="TimeslotAreaTemplate" TargetType="igPrim:TimeslotArea">
    <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="1,0" Background="{TemplateBinding ComputedBackground}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
      <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
        <igPrim:TimeslotPanel x:Name="TimeslotPanel" />
        <igPrim:ScheduleActivityPanel x:Name="ActivityPanel" />
      </Grid>
    </Border>
  </ControlTemplate>

  <!-- *********************************  TimeslotArea Style  ********************************* -->
  <Style TargetType="igPrim:TimeslotArea">
    <Setter Property="Template" Value="{StaticResource TimeslotAreaTemplate}" />
  </Style>

  <!-- ********************************* DayViewTimeslotArea Style  ********************************* -->
  <Style TargetType="igPrim:DayViewTimeslotArea">
    <Setter Property="Template" Value="{StaticResource TimeslotAreaTemplate}" />
  </Style>

  <!-- *********************************  MonthViewTimeslotArea Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewTimeslotArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewTimeslotArea">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{TemplateBinding ComputedBorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
              </Grid.RowDefinitions>
              <igPrim:MonthViewWeekHeader Width="{TemplateBinding WeekHeaderWidth}" Grid.Row="1" Start="{TemplateBinding Start}" End="{TemplateBinding End}" WeekNumber="{TemplateBinding WeekNumber}" />
              <igPrim:ScheduleStackPanel Grid.Column="1" x:Name="DayHeaderPanel" InterItemSpacing="-1" />
              <igPrim:TimeslotPanel Grid.Row="1" Grid.Column="1" x:Name="TimeslotPanel" InterItemSpacing="-1" />
              <igPrim:ScheduleActivityPanel Grid.Row="1" Grid.Column="1" x:Name="ActivityPanel" InterItemSpacing="-1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* ScheduleViewTimeslotHeaderArea Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleViewTimeslotHeaderArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleViewTimeslotHeaderArea">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igLayout:GridBagPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <igPrim:TimeslotPanel x:Name="TimeslotPanel" igLayout:GridBagPanel.RowWeight="1" />
              <igPrim:TimeslotGroupPanel x:Name="TimeslotGroupPanel" igLayout:GridBagPanel.Row="1" />
            </igLayout:GridBagPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* DayViewTimeslotHeaderArea Style  ********************************* -->
  <Style TargetType="igPrim:DayViewTimeslotHeaderArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DayViewTimeslotHeaderArea">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{TemplateBinding ComputedMargin}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igPrim:TimeslotPanel x:Name="TimeslotPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimeslotPresenter Style  ********************************* -->
  <Style TargetType="igPrim:TimeslotPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:TimeslotPresenter">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{Binding Orientation, Converter={StaticResource tsOrientationToThicknessConverter}, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding ComputedBackground}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Rectangle Fill="{StaticResource AlternateMonthDayBackgroundBrush}" />
            </Border>
            <Border x:Name="DayBorder" BorderBrush="{TemplateBinding DayBorderBrush}" BorderThickness="{TemplateBinding DayBorderThickness}" Visibility="{TemplateBinding DayBorderVisibility}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Rectangle Fill="{StaticResource AlternateMonthDayBackgroundBrush}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  DayViewTimeslotHeader Style  ********************************* -->
  <Style TargetType="igPrim:DayViewTimeslotHeader">
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="Padding" Value="3,3,3,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DayViewTimeslotHeader">
          <Grid Background="{TemplateBinding ComputedBackground}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igPrim:TimeslotHeaderTimePresenter Foreground="{TemplateBinding ComputedForeground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding LeadingTickmarkKind, Converter={StaticResource tsTickmarkKindToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
            <Grid VerticalAlignment="Top" Visibility="{TemplateBinding LeadingTickmarkVisibility}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="{Binding LeadingTickmarkKind, Converter={StaticResource tsTickmarkKindToColumnWidthConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid.ColumnDefinitions>
              <igPrim:TimeslotHeaderTickmark Grid.Column="1" Background="{TemplateBinding TickmarkBrush}" Kind="{TemplateBinding LeadingTickmarkKind}" Height="1" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            </Grid>
            <Grid VerticalAlignment="Bottom" Visibility="{TemplateBinding TrailingTickmarkVisibility}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="{Binding TrailingTickmarkKind, Converter={StaticResource tsTickmarkKindToColumnWidthConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid.ColumnDefinitions>
              <igPrim:TimeslotHeaderTickmark Grid.Column="1" Background="{TemplateBinding TickmarkBrush}" Kind="{TemplateBinding TrailingTickmarkKind}" Height="1" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScheduleViewTimeslotHeader Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleViewTimeslotHeader">
    <Setter Property="Padding" Value="1,5,10,5" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleViewTimeslotHeader">
          <Border Background="{TemplateBinding ComputedBackground}" BorderBrush="{TemplateBinding TickmarkBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
              <igPrim:TimeslotHeaderTimePresenter Foreground="{TemplateBinding ComputedForeground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding LeadingTickmarkKind, Converter={StaticResource tsTickmarkKindToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
              <Grid HorizontalAlignment="Left" Visibility="{TemplateBinding LeadingTickmarkVisibility}">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="{Binding LeadingTickmarkKind, Converter={StaticResource tsTickmarkKindToRowHeightConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid.RowDefinitions>
                <igPrim:TimeslotHeaderTickmark Grid.Row="1" Orientation="Vertical" Background="{TemplateBinding TickmarkBrush}" Kind="{TemplateBinding LeadingTickmarkKind}" Width="1" igPrim:XamlHelper.SnapsToDevicePixels="True" />
              </Grid>
              <Grid HorizontalAlignment="Right" Visibility="{TemplateBinding TrailingTickmarkVisibility}">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="{Binding TrailingTickmarkKind, Converter={StaticResource tsTickmarkKindToRowHeightConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid.RowDefinitions>
                <igPrim:TimeslotHeaderTickmark Grid.Row="1" Orientation="Vertical" Background="{TemplateBinding TickmarkBrush}" Kind="{TemplateBinding TrailingTickmarkKind}" Width="1" igPrim:XamlHelper.SnapsToDevicePixels="True" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="CalendarHeaderOverlayBrush" Color="{StaticResource Color_041}" />

  <!-- ********************************* DayViewDayHeaderArea Style  ********************************* -->
  <Style TargetType="igPrim:DayViewDayHeaderArea">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DayViewDayHeaderArea">
          <Border Margin="{TemplateBinding ComputedMargin}" BorderBrush="{StaticResource DayViewBorderBrush}" BorderThickness="0" Background="{TemplateBinding ComputedBorderBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <igPrim:ScheduleStackPanel x:Name="ItemsPanel" />
              <igPrim:TimeslotPanel x:Name="TimeslotPanel" Grid.Row="1" InterItemSpacing="-1" Visibility="{TemplateBinding MultiDayActivityAreaVisibility}" />
              <igPrim:ScheduleActivityPanel x:Name="ActivityPanel" Grid.Row="1" InterItemSpacing="-1" Visibility="{TemplateBinding MultiDayActivityAreaVisibility}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  DayViewDayHeader Style  ********************************* -->
  <Style TargetType="igPrim:DayViewDayHeader">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
    <Setter Property="Padding" Value="6,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DayViewDayHeader">
          <Grid>
            <Rectangle Fill="{StaticResource CalendarHeaderOverlayBrush}" Grid.ColumnSpan="2" Visibility="{TemplateBinding IsToday, Converter={StaticResource notBoolToVisibility}}" />
            <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="0" Background="{TemplateBinding ComputedBackground}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <igPrim:ScheduleDateTimePresenter HorizontalAlignment="Left" FormatType="DayOfMonthNumber" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" FontSize="{TemplateBinding FontSize}" />
                <igPrim:BestFitPanel x:Name="FullDayName" Grid.Column="1" HorizontalAlignment="Left" Margin="12,0,6,0">
                  <igPrim:ScheduleDateTimePresenter FormatType="DayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" FontSize="{TemplateBinding FontSize}" />
                  <igPrim:ScheduleDateTimePresenter FormatType="ShortDayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" FontSize="{TemplateBinding FontSize}" />
                  <igPrim:ScheduleDateTimePresenter FormatType="ShortestDayOfWeek" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" FontSize="{TemplateBinding FontSize}" />
                </igPrim:BestFitPanel>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* MultiDayActivityArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:MultiDayActivityArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:MultiDayActivityArea">
          <Border BorderBrush="{StaticResource MultiDayActivityAreaBorderBrush}" BorderThickness="1,0,1,2" Background="{StaticResource MultiDayActivityAreaBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MonthViewDay Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewDay">
    <Setter Property="BorderThickness" Value="1,0,1,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewDay">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding ComputedBackground}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Rectangle Fill="{StaticResource AlternateMonthDayBackgroundBrush}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarHeaderArea Style  ********************************* -->
  <Style TargetType="igPrim:CalendarHeaderArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CalendarHeaderArea">
          <Border Margin="{TemplateBinding ComputedMargin}" BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igPrim:ScheduleTabPanel x:Name="ItemsPanel" InterTabSpacing="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarHeaderCloseButton Style  ********************************* -->
  <Style x:Key="CalendarHeaderCloseButtonStyle" TargetType="Button">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="MinWidth" Value="8" />
    <Setter Property="MinHeight" Value="8" />
    <Setter Property="Background" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path Opacity="0.7" x:Name="path" Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{TemplateBinding Background}" StrokeThickness="2">
              <Path.Data>
                <GeometryGroup>
                  <LineGeometry StartPoint="0,0" EndPoint="8,8" />
                  <LineGeometry StartPoint="8,0" EndPoint="0,8" />
                </GeometryGroup>
              </Path.Data>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  OutOfViewIndicator Style  ********************************* -->
  <Style x:Key="OutOfViewIndicatorStyle" TargetType="ContentControl">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Width" Value="12" />
    <Setter Property="Height" Value="12" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Path Width="12" Height="12" HorizontalAlignment="Left" VerticalAlignment="Top" Data="M7.0000005,0 C7.0000005,0 7.0000005,1.2919922 7.0000005,3.0281067 L7.0000005,3.2730007 L7.0619898,3.2730007 C9.0433369,3.2730007 11.799994,3.2730007 11.799994,3.2730007 C11.799994,3.2730007 11.799994,8.7270012 11.799994,8.7270012 C11.799994,8.7270012 9.0433369,8.7270012 7.0619898,8.7270012 L7.0000005,8.7270012 L7.0000005,8.9718933 C7.0000005,10.708008 7.0000005,12 7.0000005,12 C7.0000005,12 3.3304161E-08,6 0,6 C3.3304161E-08,6 7.0000005,0 7.0000005,0 z" Stroke="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************* CalendarHeaderOverlayButton Style  ********************************* -->
  <Style x:Key="CalendarHeaderOverlayButtonStyle" TargetType="Button">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Background" Value="{StaticResource GlyphBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path" Opacity="0.8" Width="10" Height="11" Data="M 0,3 C0,3 0,8 0,8 0,8 4,8 4,8 4,8 4,11 4,11 4,11 5,11 5,11 5,11 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 7,9 7,9 7,9 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 9,7 9,7 9,7 9,6 9,6 9,6 10,6 10,6 10,6 10,5 10,5 10,5 9,5 9,5 9,5 9,4 9,4 9,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 4,0 4,0 4,0 4,3 4,3 4,3 0,3 0,3 z" Fill="{TemplateBinding Background}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarHeaderHorizontal Style  ********************************* -->
  <Style TargetType="igSchedulePrim:CalendarHeaderHorizontal">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:CalendarHeaderHorizontal">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Path Stretch="Fill" Width="11" Data="M 10,0 C10,0 0,22 0,22 0,22 11,22 11,22 11,22 11,0 11,0 11,0 10,0 10,0 z" Fill="{TemplateBinding ComputedBorderBrush}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding igPrim:ScheduleTabPanel.IsFirstItem, Converter={StaticResource notBoolToVisibility}}" />
            <Path Stretch="Fill" Width="11" Data="M 10,0 C10,0 0,22 0,22 0,22 11,22 11,22 11,22 11,0 11,0 11,0 10,0 10,0 z" Fill="{StaticResource OverlayBrush}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding igPrim:ScheduleTabPanel.IsFirstItem, Converter={StaticResource notBoolToVisibility}}" />
            <Rectangle Stretch="Fill" Width="11" Height="22" Fill="{TemplateBinding ComputedBorderBrush}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding igPrim:ScheduleTabPanel.IsFirstItem, Converter={StaticResource boolToVisibility}}" />
            <Rectangle Stretch="Fill" Width="11" Height="22" Fill="{StaticResource OverlayBrush}" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding igPrim:ScheduleTabPanel.IsFirstItem, Converter={StaticResource boolToVisibility}}" />
            <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="0" Background="{TemplateBinding ComputedBorderBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True" Grid.Column="1">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource OverlayBrush}" Grid.ColumnSpan="3" />
                <TextBlock Grid.Column="1" Foreground="{TemplateBinding ComputedForeground}" FontSize="12" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Text="{Binding Path=Header, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isActiveToFontWeight}}" TextAlignment="Center" TextTrimming="WordEllipsis" VerticalAlignment="Center" Margin="3,0" />
                <Button x:Name="overlayBtn" Style="{StaticResource CalendarHeaderOverlayButtonStyle}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,12,0" Visibility="{TemplateBinding OverlayButtonVisibility}">
                  <Button.RenderTransform>
                    <RotateTransform CenterX="5" CenterY="6" Angle="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource falseToRotate180Converter}}"></RotateTransform>
                  </Button.RenderTransform>
                  <igLayout:Commanding.Command>
                    <igPrim:CalendarHeaderCommandSource EventName="Click" CommandType="ToggleOverlayMode" />
                  </igLayout:Commanding.Command>
                  <ToolTipService.ToolTip>
                    <igSchedulePrim:ScheduleToolTip igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource overlayModeToTooltipResource}}" />
                  </ToolTipService.ToolTip>
                </Button>
                <Button x:Name="CloseBtn" Grid.Column="2" Margin="12,0,10,0" HorizontalAlignment="Right" IsEnabled="{Binding Path=CanClose, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding CloseButtonVisibility}" Style="{StaticResource CalendarHeaderCloseButtonStyle}">
                  <igLayout:Commanding.Command>
                    <igPrim:CalendarHeaderCommandSource EventName="Click" CommandType="Close" />
                  </igLayout:Commanding.Command>
                  <ToolTipService.ToolTip>
                    <igSchedulePrim:ScheduleToolTip Content="{Binding Source={StaticResource CalendarCloseButtonToolTip}, Path=Value}" igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}">
                    </igSchedulePrim:ScheduleToolTip>
                  </ToolTipService.ToolTip>
                </Button>
              </Grid>
            </Border>
            <Path Stretch="Fill" Width="11" Data="M 1,0 C1,0 11,22 11,22 11,22 0,22 0,22 0,22 0,0 0,0 0,0 1,0 1,0 z" Fill="{TemplateBinding ComputedBorderBrush}" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" />
            <Path Stretch="Fill" Width="11" Data="M 1,0 C1,0 11,22 11,22 11,22 0,22 0,22 0,22 0,0 0,0 0,0 1,0 1,0 z" Fill="{StaticResource OverlayBrush}" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  CalendarHeaderVertical Style  ********************************* -->
  <Style TargetType="igSchedulePrim:CalendarHeaderVertical">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:CalendarHeaderVertical">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="0" Background="{TemplateBinding ComputedBorderBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True" Grid.Column="1">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border Background="{StaticResource OverlayBrush}" Grid.ColumnSpan="3" />
              <TextBlock Grid.Column="1" Foreground="{TemplateBinding ComputedForeground}" FontSize="12" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Text="{Binding Path=Header, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isActiveToFontWeight}}" TextAlignment="Center" TextTrimming="WordEllipsis" VerticalAlignment="Center" Margin="3,0" />
              <Button x:Name="overlayBtn" Style="{StaticResource CalendarHeaderOverlayButtonStyle}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,12,0" Visibility="{TemplateBinding OverlayButtonVisibility}">
                <Button.RenderTransform>
                  <RotateTransform CenterX="5" CenterY="6" Angle="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolRotate90To270Converter}}"></RotateTransform>
                </Button.RenderTransform>
                <igLayout:Commanding.Command>
                  <igPrim:CalendarHeaderCommandSource EventName="Click" CommandType="ToggleOverlayMode" />
                </igLayout:Commanding.Command>
                <ToolTipService.ToolTip>
                  <igSchedulePrim:ScheduleToolTip igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=IsInOverlayMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource overlayModeToTooltipResource}}" />
                </ToolTipService.ToolTip>
              </Button>
              <Button x:Name="CloseBtn" Grid.Column="2" Margin="12,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="{TemplateBinding CloseButtonVisibility}" Style="{StaticResource CalendarHeaderCloseButtonStyle}">
                <igLayout:Commanding.Command>
                  <igPrim:CalendarHeaderCommandSource EventName="Click" CommandType="Close" />
                </igLayout:Commanding.Command>
                <ToolTipService.ToolTip>
                  <igSchedulePrim:ScheduleToolTip Content="{Binding Source={StaticResource CalendarCloseButtonToolTip}, Path=Value}" igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}">
                  </igSchedulePrim:ScheduleToolTip>
                </ToolTipService.ToolTip>
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ActivityResizerBar Style  ********************************* -->
  <Style TargetType="igPrim:ActivityResizerBar">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityResizerBar">
          <Border Background="{TemplateBinding Background}">
            <Grid>
              <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-4" />
              <Rectangle x:Name="grip" igPrim:XamlHelper.SnapsToDevicePixels="True" Width="5" Height="5" Margin="-1" Visibility="{TemplateBinding ResizeGripVisibility}" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource LightForegroundBrush}" Stroke="{StaticResource GlyphHoverBackgroundBrush}" StrokeThickness="1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Activity Template  ********************************* -->
  <ControlTemplate x:Key="ActivityTemplate" TargetType="igSchedulePrim:ActivityPresenter">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="InteractionStates">
          <VisualState Name="Display" />
          <VisualState Name="Editing">
            <Storyboard Storyboard.TargetName="EditPanel" Storyboard.TargetProperty="Orientation">
              <ObjectAnimationUsingKeyFrames>
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Orientation>Vertical</Orientation>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
        <ToolTipService.ToolTip>
          <igSchedulePrim:ScheduleToolTip igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{StaticResource ActivityToolTipTemplate}" />
        </ToolTipService.ToolTip>

        <Path x:Name="BorderPath" Stroke="{TemplateBinding ComputedBorderBrush}" StrokeThickness="{TemplateBinding ComputedBorderStrokeThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True">
          <Path.Fill>
            <SolidColorBrush Color="{Binding ComputedBackground.GradientStops[0].Color,ConverterParameter=#BFFFFFFF, Converter={StaticResource LightenColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
          </Path.Fill>
        </Path>

        <Border HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="7" BorderThickness="{TemplateBinding NotchMargin}" BorderBrush="Transparent" Background="{TemplateBinding ComputedBackground}" />

        <Border igPrim:XamlHelper.SnapsToDevicePixels="True">
          <Grid>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <!-- Start out of view indicator -->
              <igPrim:ContentControlWithAutomation AutomationProperties.Name="Start out of view" AutomationControlType="Image" igPrim:XamlHelper.Focusable="False" Style="{StaticResource OutOfViewIndicatorStyle}" Background="{TemplateBinding OutOfRangeIndicatorBackground}" Foreground="{TemplateBinding OutOfRangeIndicatorForeground}" VerticalAlignment="Center" Visibility="{TemplateBinding StartOutOfRangeIndicatorVisibility}" Margin="6,0" />
              <!-- Content -->
              <igPrim:ActivityContentPanel x:Name="EditArea" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentAreaAlignment="{TemplateBinding ComputedContentHorizontalAlignment}" InterAreaSpacing="4" Grid.Column="1" Margin="12,8,8,8">
                <!-- indicator panel -->
                <!-- prefix area -->
                <igPrim:BestFitDateRangePresenter igPrim:ActivityContentPanel.Area="Prefix" HorizontalAlignment="Left" Start="{TemplateBinding StartLocal}" End="{TemplateBinding EndLocal}" Foreground="{TemplateBinding ComputedDateTimeForeground}" Visibility="{Binding PrefixFormatType, Converter={StaticResource dateRangeFormatToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FormatType="{TemplateBinding PrefixFormatType}" />
                <!-- main area -->
                <StackPanel x:Name="EditPanel" Orientation="{Binding IsSingleLineDisplay, Converter={StaticResource boolToHorizontal}, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left">
                  <TextBlock Text="{Binding Subject}" Foreground="{StaticResource ForegroundBrush}" TextWrapping="{Binding IsSingleLineDisplay, Converter={StaticResource notBoolToTextWrapping}, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding IsInEditMode, Converter={StaticResource notBoolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" FontFamily="Segoe UI Semibold" />
                  <igPrim:EmbeddedTextBox x:Name="Editor" AutomationProperties.Name="Editor" Text="{Binding Subject, Mode=TwoWay}" TextWrapping="{Binding IsSingleLineDisplay, Converter={StaticResource notBoolToTextWrapping}, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Visibility="{Binding IsInEditMode, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource EmbeddedTextBoxStyle}" />
                  <TextBlock Style="{StaticResource TextBlockStyle}" Text=";" Foreground="{TemplateBinding ComputedForeground}" Margin="0,0,3,0" Visibility="{TemplateBinding SeparatorVisibility}" FontFamily="Segoe UI Semibold" />
                  <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding AdditionalText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" Visibility="{TemplateBinding AdditionalTextVisibility}" />
                </StackPanel>
                <StackPanel VerticalAlignment="{Binding IsSingleLineDisplay, Converter={StaticResource singleLineIndicatorsToVertAlignment}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:ActivityContentPanel.Area="Indicators" Orientation="Horizontal">
                  <!-- Pending operation -->
                  <!-- Error Icon -->
                  <igPrim:ContentControlWithAutomation AutomationProperties.Name="Pending operation" AutomationControlType="Image" Foreground="{TemplateBinding ComputedIndicatorForeground}" Margin="2" igPrim:XamlHelper.Focusable="False" Visibility="{Binding HasPendingOperation, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                    <!-- Pending operation -->
                    <igPrim:PendingOperationIndicator IsActive="{TemplateBinding HasPendingOperation}" />
                  </igPrim:ContentControlWithAutomation>
                  <igPrim:ContentControlWithAutomation AutomationProperties.Name="Error" AutomationControlType="Image" Margin="6,0" igPrim:XamlHelper.Focusable="False" Visibility="{Binding ToolTipInfo.Error, Converter={StaticResource nullToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                    <Path Height="18" Width="18" Stretch="Fill" Data="M12.061931,4.0000005 L9.0226059,7.0525241 L5.9800363,4.0000052 L4.0000052,5.9376607 L7.083817,9.0016146 L4.0000105,12.098856 L5.9381933,13.999997 L9.0186062,10.921207 L12.117375,14.000001 L14,12.047609 L10.951711,8.9893465 L14.000005,5.9426541 z M0,0 L18,0 L18,18 L0,18 z" Fill="{StaticResource ValidationErrorElement}" />
                  </igPrim:ContentControlWithAutomation>
                  <StackPanel Visibility="{TemplateBinding IndicatorAreaVisibility}" Orientation="Horizontal">
                    <!-- Occurrence indicator -->
                    <!-- Reminder indicator -->
                    <igPrim:ContentControlWithAutomation Foreground="{TemplateBinding ComputedIndicatorForeground}" AutomationProperties.Name="Occurrence" AutomationControlType="Image" Style="{Binding IsVariance, Converter={StaticResource boolToOccurrenceStyle}}" igPrim:XamlHelper.Focusable="False" Margin="2" Visibility="{Binding IsOccurrence, Converter={StaticResource boolToVisibility}}" />
                    <igPrim:ContentControlWithAutomation AutomationProperties.Name="Reminder" AutomationControlType="Image" Margin="6,1,6,0" igPrim:XamlHelper.Focusable="False" Visibility="{Binding ReminderVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                      <Path Width="16" Height="16" Stretch="Fill" Data="F1M59.8746,46.168C58.6237,44.849 57.1312,44.142 55.3145,43.4492 55.2132,43.4115 55.1055,43.3777 55.0026,43.3412 47.7142,37.0339 51.1328,31.9818 51.1328,25.5339 51.1328,19.1433 44.7653,9.40503 36.179,6.63025 36.2103,6.40369 36.2308,6.17322 36.2308,5.94019 36.2308,3.09509 33.9258,0.790405 31.0823,0.790405 28.2386,0.790405 25.9319,3.09509 25.9319,5.94019 25.9319,6.25659 25.9648,6.56775 26.0208,6.86719 17.8066,9.89063 11.7965,19.1263 11.7965,25.5339 11.7965,31.9271 14.8346,36.9727 8.23468,42.9857 6.90881,43.392 5.72394,43.8542 4.68555,44.3972 3.80042,44.8711 2.99835,45.4011 2.28711,46.168 1.5918,46.9128 0.941406,48.0625 0.94397,49.4297 0.941406,50.8008 1.5918,51.9506 2.28711,52.6941 3.53839,54.0144 5.03186,54.7214 6.84894,55.4167 9.56934,56.4102 13.0719,57.1576 17.1992,57.6927 19.9818,58.0508 23.0553,58.2917 26.2972,58.418 27.5768,60.6484 29.4964,62.0691 31.6445,62.0691 33.8066,62.0691 35.7402,60.6302 37.0201,58.375 42.3177,58.1185 47.082,57.5248 50.9134,56.6719 53.5313,56.0808 55.709,55.3945 57.4778,54.4648 58.3633,53.9922 59.1637,53.4623 59.8746,52.6941 60.5719,51.9506 61.222,50.8008 61.2194,49.4297 61.222,48.0625 60.5719,46.9128 59.8746,46.168z M12.5699,50.7695C10.7207,50.3594 9.19434,49.8777 8.16272,49.4297 8.38184,49.3347 8.62335,49.2371 8.88538,49.1433 10.9075,48.3881 14.0898,47.6654 17.9212,47.1771 20.2897,46.8699 22.9241,46.6498 25.7184,46.5209 25.0566,48.0781 24.6673,49.9102 24.6673,51.8802 24.6673,52.0183 24.6774,52.1537 24.6826,52.2917 19.9688,52.0287 15.7718,51.4883 12.5699,50.7695z M53.278,49.7201C51.2559,50.4779 48.0748,51.1953 44.2435,51.6863 42.498,51.9128 40.5996,52.0898 38.6113,52.2214 38.6126,52.1068 38.6214,51.9949 38.6214,51.8802 38.6214,49.9336 38.2428,48.1224 37.5938,46.5756 42.2633,46.8412 46.4141,47.3816 49.5934,48.0951 51.4414,48.5039 52.9691,48.9883 54.0006,49.4363 53.7816,49.5287 53.5403,49.6277 53.278,49.7201z" Fill="{StaticResource GlyphBackgroundBrush}" />
                    </igPrim:ContentControlWithAutomation>
                    <!-- Activity Category Bars -->
                    <igPrim:ActivityCategoryBarPanel Categories="{TemplateBinding Categories}" />
                  </StackPanel>
                </StackPanel>
                <!-- suffix area -->
                <igPrim:BestFitDateRangePresenter igPrim:ActivityContentPanel.Area="Suffix" HorizontalAlignment="Right" Foreground="{TemplateBinding ComputedDateTimeForeground}" Start="{TemplateBinding StartLocal}" End="{TemplateBinding EndLocal}" Visibility="{Binding SuffixFormatType, Converter={StaticResource dateRangeFormatToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FormatType="{TemplateBinding SuffixFormatType}" />
              </igPrim:ActivityContentPanel>
              <!-- End out of view indicator -->
              <igPrim:ContentControlWithAutomation AutomationProperties.Name="End out of view" AutomationControlType="Image" igPrim:XamlHelper.Focusable="False" Style="{StaticResource OutOfViewIndicatorStyle}" Grid.Column="2" Background="{TemplateBinding OutOfRangeIndicatorBackground}" Foreground="{TemplateBinding OutOfRangeIndicatorForeground}" VerticalAlignment="Center" Visibility="{TemplateBinding EndOutOfRangeIndicatorVisibility}" Margin="6,0">
                <igPrim:ContentControlWithAutomation.RenderTransform>
                  <RotateTransform CenterX="6" CenterY="6" Angle="180" />
                </igPrim:ContentControlWithAutomation.RenderTransform>
              </igPrim:ContentControlWithAutomation>
            </Grid>
          </Grid>
        </Border>

        <!--<Border BorderBrush="{StaticResource ForegroundBrush}" BorderThickness="2" Visibility="{TemplateBinding IsSelected, Converter={StaticResource boolToVisibility}}" />-->
      </Grid>
      <!--</Canvas>-->
      <igSchedulePrim:ActivityResizerBar x:Name="LeadingResizer" IsLeading="True" />
      <igSchedulePrim:ActivityResizerBar x:Name="TrailingResizer" />
    </Grid>
  </ControlTemplate>

  <!-- *********************************  JournalPresenter Style  ********************************* -->
  <Style TargetType="igPrim:JournalPresenter">
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template" Value="{StaticResource ActivityTemplate}" />
  </Style>

  <!-- *********************************  TaskPresenter Style  ********************************* -->
  <Style TargetType="igPrim:TaskPresenter">
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template" Value="{StaticResource ActivityTemplate}" />
  </Style>

  <!-- *********************************  AppointmentPresenter Style  ********************************* -->
  <Style TargetType="igPrim:AppointmentPresenter">
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Template" Value="{StaticResource ActivityTemplate}" />
  </Style>

  <!-- *********************************  CurrentTimeIndicator Style  ********************************* -->
  <Style TargetType="igPrim:CurrentTimeIndicator">
    <Setter Property="MinWidth" Value="1" />
    <Setter Property="MinHeight" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:CurrentTimeIndicator">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" Background="{TemplateBinding ComputedBackground}" BorderThickness="{Binding Orientation, Converter={StaticResource currentTimeOrientationToThickness}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Orientation, Converter={StaticResource currentTimeOrientationToMargin}, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScheduleViewDayHeader Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleViewDayHeader">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleViewDayHeader">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" Background="{TemplateBinding ComputedBackground}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:TimeslotHeaderTickmark Grid.Column="0" Orientation="Vertical" Background="{TemplateBinding ComputedBorderBrush}" Kind="Day" Width="1" igPrim:XamlHelper.SnapsToDevicePixels="True" Opacity="{Binding (igSchedulePrim:TimeslotGroupPanel.IsStartInView), Converter={StaticResource inViewToOpacity}, RelativeSource={RelativeSource TemplatedParent}}" />
              <igPrim:ScheduleDateTimePresenter FormatType="LongDate" DateTime="{Binding Date, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Margin="6,4" Foreground="{TemplateBinding ComputedForeground}" Opacity="{Binding (igSchedulePrim:TimeslotGroupPanel.IsClipped), Converter={StaticResource clippedToOpacity}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" />
              <igPrim:TimeslotHeaderTickmark Grid.Column="2" Orientation="Vertical" Background="{TemplateBinding ComputedBorderBrush}" Kind="Day" Width="1" igPrim:XamlHelper.SnapsToDevicePixels="True" Opacity="{Binding (igSchedulePrim:TimeslotGroupPanel.IsEndInView), Converter={StaticResource inViewToOpacity}, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MoreActivityIndicator Style  ********************************* -->
  <Style TargetType="igSchedulePrim:MoreActivityIndicator">
    <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Right" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MoreActivityIndicator">
          <Grid x:Name="root" RenderTransformOrigin="0,.5" Background="{TemplateBinding Background}">
            <Grid.RenderTransform>
              <ScaleTransform x:Name="rootTransform" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DirectionStates">
                <VisualState x:Name="Down" />
                <VisualState x:Name="Up">
                  <Storyboard Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="rootTransform">
                    <DoubleAnimation Duration="0" To="-1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AccentForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Arrow" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Data="M0,0 L13,0 L6.4375,9 z" Fill="{StaticResource GlyphBackgroundBrush}" Margin="0,0,5,7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="10" Height="6" Stretch="Fill" UseLayoutRounding="False" Opacity="0.7" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ClickToAddActivityElement Style  ********************************* -->
  <Style TargetType="igPrim:ClickToAddActivityElement">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ClickToAddActivityElement">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="1" Background="{TemplateBinding ComputedBackground}">
            <Grid>
              <Rectangle Grid.Column="1" Fill="{StaticResource ClickToAddActivityBackgroundBrush}" />
              <TextBlock Text="{TemplateBinding Prompt}" TextWrapping="{Binding IsSingleLineDisplay, Converter={StaticResource singleLineToTextWrapping}, RelativeSource={RelativeSource TemplatedParent}}" TextAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" Foreground="{StaticResource ForegroundBrush}" Style="{StaticResource TextBlockStyle}" Margin="6,4" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MonthViewDayHeader Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewDayHeader">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewDayHeader">
          <Grid>
            <Rectangle Fill="{StaticResource MonthViewTodayHeaderBackgroundBrush}" Visibility="{TemplateBinding IsToday, Converter={StaticResource boolToVisibility}}" />
            <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{TemplateBinding ComputedBorderThickness}" Background="{TemplateBinding ComputedBackground}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <igPrim:BestFitPanel ShowPartial="True" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" HorizontalAlignment="Left" Margin="6,4">
                <igPrim:ScheduleDateTimePresenter FormatType="DayOfMonthNumber" DateTime="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding ComputedForeground}" />
                <igPrim:ScheduleDateRangePresenter FormatType="{TemplateBinding MonthNameFormatType}" Start="{Binding DateTime, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding MonthNameVisibility}" Foreground="{TemplateBinding ComputedForeground}" />
              </igPrim:BestFitPanel>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MonthViewWeekHeader Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewWeekHeader">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewWeekHeader">
          <Border BorderBrush="{TemplateBinding ComputedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <igPrim:RotateDecorator Margin="1,0,0,0" Visibility="{Binding ShowWeekNumbers, Converter={StaticResource notBoolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Angle="-90" Grid.Row="1" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <igPrim:BestFitPanel ShowPartial="True">
                  <igPrim:ScheduleDateRangePresenter FormatType="WeekHeader" Start="{TemplateBinding Start}" End="{TemplateBinding End}" Margin="8,4" />
                  <igPrim:ScheduleDateRangePresenter FormatType="ShortWeekHeader" Start="{TemplateBinding Start}" End="{TemplateBinding End}" Margin="8,4" />
                </igPrim:BestFitPanel>
              </igPrim:RotateDecorator>
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="2,0" Text="{Binding WeekNumber, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ShowWeekNumbers, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,4" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  MonthViewDayOfWeekHeader Style  ********************************* -->
  <Style TargetType="igPrim:MonthViewDayOfWeekHeader">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Padding" Value="1,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:MonthViewDayOfWeekHeader">
          <Border Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igPrim:BestFitPanel igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" ShowPartial="True">
              <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding DayName}" Padding="8,4" Style="{StaticResource TextBlockStyle}" />
              <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding AbbreviatedDayName}" Padding="8,4" Style="{StaticResource TextBlockStyle}" />
              <TextBlock Foreground="{StaticResource ForegroundBrush}" Text="{TemplateBinding ShortestDayName}" Padding="8,4" />
            </igPrim:BestFitPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ScheduleResizerBar Style  ********************************* -->
  <Style TargetType="igPrim:ScheduleResizerBar">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ScheduleResizerBar">
          <Grid>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10" />
            <Border Background="{TemplateBinding ComputedBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  outlookNavigationButton Style  ********************************* -->
  <Style TargetType="Button" x:Key="OutlookNavigationButtonStyle">
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="root" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.7" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamOutlookCalendarView Style  ********************************* -->
  <Style TargetType="igLayout:XamOutlookCalendarView">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource OutlookCalendarViewBackgroundBrush}" />
    <Setter Property="TimeslotGutterAreaWidth" Value="30" />
    <Setter Property="OfficeEmulationMode" Value="Office2013" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLayout:XamOutlookCalendarView">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid Grid.Row="0" Visibility="{TemplateBinding HeaderVisibility}" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" AutomationProperties.AutomationId="Back" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource OutlookNavigationButtonStyle}">
                  <igLayout:Commanding.Command>
                    <igPrim:XamOutlookCalendarViewCommandSource EventName="Click" CommandType="NavigateBack" />
                  </igLayout:Commanding.Command>
                  <ToolTipService.ToolTip>
                    <igPrim:ScheduleToolTip Content="{Binding Value, Source={StaticResource CalendarNavigateBackToolTip}}" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}">
                    </igPrim:ScheduleToolTip>
                  </ToolTipService.ToolTip>
                  <Path igPrim:XamlHelper.SnapsToDevicePixels="True" Fill="{Binding DefaultBrushProvider[NavigationButtonForeground], RelativeSource={RelativeSource TemplatedParent}}" Data="M8,0 L8,11 L0,5.515625 z" Height="10" UseLayoutRounding="False" Width="6" Stretch="Fill" />
                </Button>
                <Button Grid.Column="1" AutomationProperties.AutomationId="Forward" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource OutlookNavigationButtonStyle}">
                  <igLayout:Commanding.Command>
                    <igPrim:XamOutlookCalendarViewCommandSource EventName="Click" CommandType="NavigateForward" />
                  </igLayout:Commanding.Command>
                  <ToolTipService.ToolTip>
                    <igPrim:ScheduleToolTip Content="{Binding Value, Source={StaticResource CalendarNavigateForwardToolTip}}" igPrim:CalendarBrushProvider.BrushProvider="{Binding DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}">
                    </igPrim:ScheduleToolTip>
                  </ToolTipService.ToolTip>
                  <Path igPrim:XamlHelper.SnapsToDevicePixels="True" Fill="{Binding DefaultBrushProvider[NavigationButtonForeground], RelativeSource={RelativeSource TemplatedParent}}" Data="M8,0 L8,11 L18.333324,5.515625 z" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="10" />
                </Button>
                <TextBlock Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" FontSize="16" Grid.Column="2" AutomationProperties.AutomationId="DateRange" Text="{TemplateBinding CurrentViewDateRangeText}" FontWeight="Normal" VerticalAlignment="Center" />
              </Grid>
              <igLayout:XamDayView x:Name="DayView" Grid.Row="1" />
              <igLayout:XamScheduleView x:Name="ScheduleView" Grid.Row="1" />
              <igLayout:XamMonthView x:Name="MonthView" Grid.Row="1" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** DateNavigatorTodayButton Style **********************************-->
  <Style x:Key="DateNavigatorTodayButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TodayButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TodayButtonBorderBrush}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Padding" Value="14 6" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <Rectangle x:Name="hover" Fill="{StaticResource TodayButtonHoverBackgroundBrush}" Stroke="{StaticResource TodayButtonHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Rectangle x:Name="pressed" Fill="{StaticResource TodayButtonPressedBackgroundBrush}" Stroke="{StaticResource TodayButtonPresedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <Rectangle x:Name="disabled" Fill="{StaticResource DisabledBackgroundBrush}" Stroke="{StaticResource DisabledBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** XamDateNavigator Style **********************************-->
  <Style TargetType="igLayout:XamDateNavigator">
    <Setter Property="ActivityToolTipTemplate" Value="{StaticResource DateNavDayToolTipTemplate}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLayout:XamDateNavigator">
          <Border BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="{StaticResource DateNavigatorBackgroundBrush}" BorderBrush="{StaticResource DateNavigatorBorderBrush}">
            <Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Border Grid.Row="1" Margin="0 2" BorderBrush="{StaticResource CalendarSeparatorBorderBrush}" BorderThickness="0 1 0 0" Visibility="{TemplateBinding TodayButtonVisibility}" />
              <!--Today button-->
              <Button Grid.Row="2" Margin="0,4,0,0" Content="{Binding Source={StaticResource todayText}, Path=Value}" Style="{TemplateBinding TodayButtonStyleResolved}" Visibility="{TemplateBinding TodayButtonVisibility}">
                <igLayout:Commanding.Command>
                  <igPrim:CalendarCommandSource EventName="Click" CommandType="Today" />
                </igLayout:Commanding.Command>
              </Button>
              <!--Months-->
              <igPrim:CalendarItemGroupPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TodayButtonStyle" Value="{StaticResource DateNavigatorTodayButtonStyle}" />
  </Style>

  <!-- ********************************** ActivityCategoryPresenter Style **********************************-->
  <Style TargetType="igPrim:ActivityCategoryPresenter">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="MinWidth" Value="16" />
    <Setter Property="MinHeight" Value="16" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityCategoryPresenter">
          <Border Background="{TemplateBinding ComputedBackground}" BorderBrush="{TemplateBinding ComputedBorderBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True" BorderThickness="3">
            <!-- Note I'm binding the margin to the padding since I don't want the padding when the text is not displayed -->
            <Grid>
              <Rectangle Fill="{StaticResource OverlayBrush}" />
              <!-- Note I'm binding the margin to the padding since I don't want the padding when the text is not displayed -->
              <TextBlock Text="{Binding Category.CategoryName, RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="WordEllipsis" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{TemplateBinding NameVisibility}" Style="{StaticResource TextBlockStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityCategoryDialog Style **********************************-->
  <Style TargetType="igPrim:ActivityCategoryDialog">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityCategoryDialog">
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Width="500" Height="410" Margin="12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!-- Dialog Help text-->
                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,12" TextWrapping="Wrap" Text="{Binding LocalizedStrings[DLG_ActivityCategory_HelpText], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
                <!-- Category List -->
                <Grid Grid.Row="1" Grid.Column="0" Margin="0,0,12,0">
                  <Border>
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <!-- Border for the list's column header area -->
                      <Border VerticalAlignment="Center" HorizontalAlignment="Stretch">
                        <!-- Column header -->
                        <TextBlock TextAlignment="Left" Text="{Binding LocalizedStrings[DLG_ActivityCategory_NameColumnHeader], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,8" Style="{StaticResource TextBlockStyle}" Foreground="{StaticResource AccentForegroundBrush}" />
                      </Border>
                      <!-- ListBox containing the categories -->
                      <ListBox x:Name="CategoriesList" Grid.Row="1" TabIndex="10" ItemsSource="{Binding ActivityCategoryListItems, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ListBoxStyle}">
                        <ListBox.ItemContainerStyle>
                          <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemStyle}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                          </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid Margin="0,2,0,2">
                              <igPrim:ActivityCategoryListItemPresenter />
                            </Grid>
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                      </ListBox>
                    </Grid>
                  </Border>
                </Grid>
                <!-- Editing area on right -->
                <StackPanel Grid.Row="1" Grid.Column="1" Margin="0,28,0,0">
                  <Button Content="{Binding LocalizedStrings[DLG_ActivityCategory_Btn_New], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" Margin="0,0,0,8" TabIndex="20" Style="{StaticResource ButtonStyle}">
                    <igLayout:Commanding.Command>
                      <igPrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="CreateNewCategory" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Content="{Binding LocalizedStrings[DLG_ActivityCategory_Btn_Rename], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" Margin="0,0,0,8" TabIndex="30" Style="{StaticResource ButtonStyle}">
                    <igLayout:Commanding.Command>
                      <igPrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="EditSelectedCategory" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Content="{Binding LocalizedStrings[DLG_ActivityCategory_Btn_Delete], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" Margin="0,0,0,8" TabIndex="40" Style="{StaticResource ButtonStyle}">
                    <igLayout:Commanding.Command>
                      <igPrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="DeleteSelectedCategory" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <StackPanel>
                    <TextBlock Text="{Binding LocalizedStrings[DLG_ActivityCategory_Literal_Color], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
                    <igPrim:ActivityCategoryColorPicker SelectedColor="{Binding SelectedActivityCategoryListItem.ActivityCategory.Color, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" TabIndex="50" AreCustomColorsAllowed="{Binding AreCustomColorsAllowed, RelativeSource={RelativeSource TemplatedParent}}" FixedColors="{Binding DefaultCategoryColors, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsSelectedActivityCategoryListItemCustomizable, RelativeSource={RelativeSource TemplatedParent}}" />
                  </StackPanel>
                </StackPanel>
                <!-- OK/Cancel Button area -->
                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,12,0,0">
                  <Button Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" TabIndex="60" Style="{StaticResource ButtonStyle}" Margin="0,0,12,0">
                    <igLayout:Commanding.Command>
                      <igPrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" TabIndex="70" Style="{StaticResource ButtonStyle}">
                    <igLayout:Commanding.Command>
                      <igPrim:ActivityCategoryDialogCommandSource EventName="Click" CommandType="Close" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityCategoryListItemPresenter Style **********************************-->
  <Style TargetType="igPrim:ActivityCategoryListItemPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityCategoryListItemPresenter">
          <Grid Background="{StaticResource TransparentBrush}">
            <Grid.RowDefinitions>
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox x:Name="SelectedCheckBox" IsChecked="{Binding IsSelected, Mode=OneTime}" VerticalAlignment="Center" Margin="0,0,8,0" IsHitTestVisible="false" Style="{StaticResource CheckBoxStyle}">
              <igLayout:Commanding.Commands>
                <igLayout:CommandSourceCollection>
                  <igPrim:ActivityCategoryCommandSource EventName="Checked" CommandType="SetActivityCategorySelectedState" ParameterBinding="{Binding CommandParameter}" />
                  <igPrim:ActivityCategoryCommandSource EventName="Unchecked" CommandType="ClearActivityCategorySelectedState" ParameterBinding="{Binding CommandParameter}" />
                </igLayout:CommandSourceCollection>
              </igLayout:Commanding.Commands>
            </CheckBox>
            <Rectangle x:Name="SelectedCheckBoxOverlay" Fill="{StaticResource TransparentBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,8,0" />
            <Rectangle Grid.Column="1" Width="18" Height="18" Stroke="{Binding BorderBrush}" Fill="{Binding BackgroundBrush}" VerticalAlignment="Center" Margin="0,0,8,0" />
            <igPrim:DualModeTextBox Grid.Column="2" Text="{Binding Name, Mode=TwoWay}" Background="{StaticResource TransparentBrush}" VerticalAlignment="Center" IsInEditMode="{Binding IsInEditMode, Mode=TwoWay}" IsEditingAllowed="{Binding IsCustomizable}" Foreground="{StaticResource ForegroundBrush}" FontFamily="Segoe UI" FontSize="14" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ColorPickerDropDownButton Style **********************************-->
  <Style x:Key="ColorPickerDropDownButtonStyle" TargetType="igPrim:DropDownToggleButton">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="MinWidth" Value="15" />
    <Setter Property="MinHeight" Value="15" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="Arrow" Stretch="Fill" Height="4" Width="7" Data="M0,0 L7,0 L4,4 z" UseLayoutRounding="False" Fill="{StaticResource GlyphBackgroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityCategoryColorPicker Style **********************************-->
  <Style TargetType="igPrim:ActivityCategoryColorPicker">
    <Setter Property="ColorSwatchExtent" Value="22" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityCategoryColorPicker">
          <Grid>
            <StackPanel Orientation="Horizontal" Height="30">
              <ContentControl Content="{Binding SelectedColorSwatch, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
              <igPrim:DropDownToggleButton x:Name="ColorPickerDropDownButton" IsChecked="False" IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ColorPickerDropDownButtonStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="30" Width="30" />
            </StackPanel>
            <Popup x:Name="ColorPickerPopup">
              <Border Background="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ActivityCategoryColorPickerDropDownBackground], RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" BorderBrush="{Binding Path=(igSchedulePrim:CalendarBrushProvider.BrushProvider)[ActivityCategoryColorPickerDropDownBorder], RelativeSource={RelativeSource TemplatedParent}}">
                <Grid Margin="12">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Grid Grid.Row="0" HorizontalAlignment="Right">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="NoneColorButton" Margin="0,0,0,12">
                      <Border BorderThickness="1" Background="{StaticResource ColorPickerNoneColorBackgroundBrush}" BorderBrush="{StaticResource ColorPickerNoneColorBorderBrush}" Height="22">
                        <TextBlock Text="{Binding LocalizedStrings[CTL_ActivityCategoryColorPicker_None], RelativeSource={RelativeSource TemplatedParent}}" TextAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}" Style="{StaticResource TextBlockStyle}" />
                      </Border>
                    </Grid>
                    <Grid x:Name="FixedColorsGrid" Grid.Row="1">
                      <Grid.RowDefinitions>
                        <RowDefinition MinHeight="30" Height="Auto" />
                        <RowDefinition MinHeight="30" Height="Auto" />
                        <RowDefinition MinHeight="30" Height="Auto" />
                        <RowDefinition MinHeight="30" Height="Auto" />
                        <RowDefinition MinHeight="30" Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="30" Width="Auto" />
                        <ColumnDefinition MinWidth="30" Width="Auto" />
                        <ColumnDefinition MinWidth="30" Width="Auto" />
                        <ColumnDefinition MinWidth="30" Width="Auto" />
                        <ColumnDefinition MinWidth="30" Width="Auto" />
                      </Grid.ColumnDefinitions>
                    </Grid>
                  </Grid>
                  <StackPanel Grid.Row="1" Margin="0,8,0,0" Visibility="{Binding AreCustomColorsAllowed, Converter={StaticResource boolToVisibility}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding LocalizedStrings[CTL_ActivityCategoryColorPicker_RGBValues], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Foreground="{StaticResource AccentForegroundBrush}" Margin="0,0,0,8" />
                    <Border BorderThickness="1">
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition MinHeight="30" Height="Auto" />
                          <RowDefinition MinHeight="30" Height="Auto" />
                          <RowDefinition MinHeight="30" Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Red Value -->
                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[CTL_ActivityCategoryColorPicker_R], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,3" Style="{StaticResource TextBlockStyle}" />
                        <Slider x:Name="RedSlider" Grid.Row="0" Grid.Column="1" Width="70" Margin="4,0" VerticalAlignment="Center" SmallChange="1" LargeChange="16" Minimum="0" Maximum="255" Value="{Binding SelectedColorRedValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SliderStyle}" />
                        <igPrim:SimpleNumericTextBox Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" Margin="0,0,0,3" MinValue="0" MaxValue="255" Value="{Binding Value, ElementName=RedSlider, Mode=TwoWay}" Width="50" Style="{StaticResource TextBoxStyle}" />
                        <!-- Green Value -->
                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[CTL_ActivityCategoryColorPicker_G], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,3" Style="{StaticResource TextBlockStyle}" />
                        <Slider x:Name="GreenSlider" Grid.Row="1" Grid.Column="1" Width="70" Margin="4,0" VerticalAlignment="Center" SmallChange="1" LargeChange="16" Minimum="0" Maximum="255" Value="{Binding SelectedColorGreenValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SliderStyle}" />
                        <igPrim:SimpleNumericTextBox Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="0,0,0,3" MinValue="0" MaxValue="255" Value="{Binding Value, ElementName=GreenSlider, Mode=TwoWay}" Width="50" Style="{StaticResource TextBoxStyle}" />
                        <!-- Blue Value -->
                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[CTL_ActivityCategoryColorPicker_B], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,0" Style="{StaticResource TextBlockStyle}" />
                        <Slider x:Name="BlueSlider" Grid.Row="2" Grid.Column="1" Width="70" Margin="4,0" VerticalAlignment="Center" SmallChange="1" LargeChange="16" Minimum="0" Maximum="255" Value="{Binding SelectedColorBlueValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SliderStyle}" />
                        <igPrim:SimpleNumericTextBox Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" MinValue="0" MaxValue="255" Value="{Binding Value, ElementName=BlueSlider, Mode=TwoWay}" Width="50" Style="{StaticResource TextBoxStyle}" />
                      </Grid>
                    </Border>
                  </StackPanel>
                </Grid>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityCategoryCreationDialog Style **********************************-->
  <Style TargetType="igPrim:ActivityCategoryCreationDialog">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityCategoryCreationDialog">
          <ContentControl igPrim:XamlHelper.Focusable="False" IsTabStop="False" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Width="282" Margin="12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!-- Category Name -->
                <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" Margin="0,4,8,0" Text="{Binding LocalizedStrings[DLG_ActivityCategoryCreation_Name], RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBox Style="{StaticResource TextBoxStyle}" x:Name="CategoryName" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="true" Text="{Binding CategoryName, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" />
                <!-- Color -->
                <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1" Grid.Column="0" Margin="0,16,8,0" Text="{Binding LocalizedStrings[DLG_ActivityCategory_Literal_Color], RelativeSource={RelativeSource TemplatedParent}}" />
                <igPrim:ActivityCategoryColorPicker igSchedulePrim:CalendarBrushProvider.BrushProvider="{Binding Path=DataManager.ColorSchemeResolved.DefaultBrushProvider, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Grid.Column="1" Margin="0,12,0,0" AreCustomColorsAllowed="{Binding AreCustomColorsAllowed, RelativeSource={RelativeSource TemplatedParent}}" FixedColors="{Binding DefaultCategoryColors, RelativeSource={RelativeSource TemplatedParent}}" SelectedColor="{Binding Color, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" TabIndex="40" />
                <!-- OK/Cancel Button area -->
                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,12,0,0">
                  <Button Style="{StaticResource ButtonStyle}" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" Margin="0,0,8,0" TabIndex="50">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}" MinWidth="75" Margin="0" TabIndex="60">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="Close" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** DualModeTextBox Style **********************************-->
  <Style TargetType="igPrim:DualModeTextBox">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:DualModeTextBox">
          <Grid>
            <TextBlock x:Name="TextBlock" HorizontalAlignment="Left" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
            <TextBox x:Name="TextBox" HorizontalAlignment="Left" Visibility="Collapsed" Style="{StaticResource TextBoxStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityTypeChooserDialog Style **********************************-->
  <Style TargetType="igPrim:ActivityTypeChooserDialog">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActivityTypeChooserDialog">
          <ContentControl igPrim:XamlHelper.Focusable="False" IsTabStop="False" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Margin="12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock x:Name="txtMsg" Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_ActivityTypeChooser_Message], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" TextWrapping="Wrap" TextAlignment="Left" VerticalAlignment="Top" />
                <StackPanel Grid.Row="1" HorizontalAlignment="Center" Margin="0,12,0,0">
                  <RadioButton Style="{StaticResource RadioButtonStyle}" x:Name="AppointmentChoice" TabIndex="1" Margin="10,0,0,6" GroupName="rbChoice" Content="{Binding LocalizedStrings[DLG_ActivityType_Appointment], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding ChoiceIsAppointment, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ChoiceIsAppointmentVisibility}" VerticalAlignment="Center" />
                  <RadioButton Style="{StaticResource RadioButtonStyle}" x:Name="JournalChoice" TabIndex="2" Margin="10,0,0,6" GroupName="rbChoice" Content="{Binding LocalizedStrings[DLG_ActivityType_Journal], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding ChoiceIsJournal, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ChoiceIsJournalVisibility}" VerticalAlignment="Center" />
                  <RadioButton Style="{StaticResource RadioButtonStyle}" x:Name="TaskChoice" TabIndex="3" Margin="10,0,0,6" GroupName="rbChoice" Content="{Binding LocalizedStrings[DLG_ActivityType_Task], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding ChoiceIsTask, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ChoiceIsTaskVisibility}" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,12,0,0">
                  <Button Margin="0,0,12,0" Style="{StaticResource ButtonStyle}" Width="50" x:Name="OkButton" TabIndex="30" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" x:Name="CancelButton" Width="50" TabIndex="40" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="Close" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************************************************** WPF SPECIFIC RESOURCES ***********************************************************
  *********************************************************************************************************************************************************************    -->

  <!-- ********************************** AppointmentDialogCore Style **********************************-->
  <Style TargetType="{x:Type igPrim:AppointmentDialogCore}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:AppointmentDialogCore}">
          <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
            <Style BasedOn="{StaticResource EditableTextBoxStyle}" TargetType="{x:Type TextBox}" />
          </ControlTemplate.Resources>
          <ContentControl>
            <Border Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True" Background="{StaticResource PopupBackgroundBrush}">
              <Grid x:Name="RootPanel">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ContentControl x:Name="NavigationControlSite" Content="{TemplateBinding NavigationControlSiteContent}" />
                <Grid Grid.Row="1" Margin="12">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="75" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!-- Message area -->
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="5" Orientation="Vertical" Margin="0,0,0,12">
                      <!-- Occurrence Description -->
                      <StackPanel Orientation="Horizontal" Visibility="{Binding OccurrenceDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,12">
                        <Grid Width="16" Height="16">
                          <Ellipse Width="16" Height="16" Fill="{StaticResource AccentForegroundBrush}" />
                          <Rectangle Width="2" Height="7" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,3,0,0" RadiusX="1" RadiusY="1" />
                          <Ellipse Width="3" Height="3" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,11,0,0" />
                        </Grid>
                        <TextBlock Text="{Binding OccurrenceDescription, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <!-- Conflict Message -->
                      <StackPanel Orientation="Horizontal" Visibility="{Binding HasConflicts, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid Width="16" Height="16">
                          <Ellipse Width="16" Height="16" Fill="{StaticResource AccentForegroundBrush}" />
                          <Ellipse Width="3" Height="3" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,3,0,0" />
                          <Rectangle Width="3" Height="7" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,7,0,0" RadiusX="1" RadiusY="1" />
                        </Grid>
                        <TextBlock Text="{Binding ConflictMessage, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <!-- Activity Category List -->
                      <Grid HorizontalAlignment="Stretch" Visibility="{Binding ActivityCategoryListItemsVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12">
                        <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ActivityCategoryListItems, RelativeSource={RelativeSource TemplatedParent}}">
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <igPrim:CompactWrapPanel />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                          <ItemsControl.ItemTemplate>
                            <DataTemplate>
                              <igPrim:ActivityCategoryPresenter Category="{Binding ActivityCategory}" HorizontalContentAlignment="Stretch" igPrim:ActivityCategoryHelper.ActivityCategoryHelper="{Binding ActivityCategoryHelper}" />
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                        </ItemsControl>
                      </Grid>
                    </StackPanel>
                    <!-- Subject -->
                    <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_Subject], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Margin="0,0,8,12" />
                    <TextBox x:Name="Subject" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Margin="0,0,0,12" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" Text="{Binding Subject}" VerticalAlignment="Center" TabIndex="0" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" />
                    <!-- Location -->
                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="0,0,8,12" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_Location], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
                    <TextBox x:Name="Location" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="4" Text="{Binding Location}" Margin="0,0,0,12" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TabIndex="10" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" />

                    <Grid x:Name="startAndEndTimesGrid" Visibility="{Binding IsRecurrenceRoot, Converter={StaticResource notBoolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="4" Grid.ColumnSpan="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Start Time and All Day Event checkbox -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" Margin="0,0,8,12" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_StartTime], RelativeSource={RelativeSource TemplatedParent}}" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="StartDatePicker" Grid.Row="0" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,12,12" />
                      <ComboBox x:Name="StartTimePicker" Grid.Row="0" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" IsEditable="True" TabIndex="30" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{StaticResource TextBoxBorderBrush}" Margin="0,0,12,12" />
                      <ComboBox x:Name="StartTimeZonePicker" Grid.Row="0" Grid.Column="3" Foreground="{StaticResource ForegroundBrush}" Width="200" TabIndex="35" SelectedValuePath="Id" ItemsSource="{Binding DataManager.DataConnector.TimeZoneInfoProviderResolved.TimeZoneTokens, Mode=OneTime, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectedValue="{Binding Appointment.StartTimeZoneId, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" DisplayMemberPath="DisplayName" Visibility="{Binding TimeZonePickerVisibility, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding TimeZonePickerEnabled, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,0,12,12" />
                      <CheckBox Grid.Row="0" Grid.Column="4" IsChecked="{Binding IsTimeZoneNeutral}" Foreground="{StaticResource ForegroundBrush}" Margin="0,2,0,0" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" Visibility="{Binding AllowAllDayActivities, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="40" Content="{Binding LocalizedStrings[DLG_Appointment_Core_AllDayEvent], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource CheckBoxStyle}" />
                      <!-- End Time -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1" Grid.Column="0" Margin="0,0,8,12" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_EndTime], RelativeSource={RelativeSource TemplatedParent}}" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="EndDatePicker" Grid.Row="1" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="50" VerticalAlignment="Center" Margin="0,0,12,12" />
                      <ComboBox x:Name="EndTimePicker" Grid.Row="1" Grid.Column="2" IsEditable="True" TabIndex="60" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" BorderBrush="{StaticResource TextBoxBorderBrush}" Margin="0,0,12,12" />
                      <ComboBox x:Name="EndTimeZonePicker" Grid.Row="1" Grid.Column="3" Foreground="{StaticResource ForegroundBrush}" Width="200" TabIndex="35" SelectedValuePath="Id" ItemsSource="{Binding DataManager.DataConnector.TimeZoneInfoProviderResolved.TimeZoneTokens, Mode=OneTime, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectedValue="{Binding Appointment.EndTimeZoneId, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" DisplayMemberPath="DisplayName" Visibility="{Binding TimeZonePickerVisibility, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding TimeZonePickerEnabled, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,0,12,12" />
                    </Grid>
                    <Grid x:Name="recurrenceRootMessageGrid" Visibility="{Binding RecurrenceRootDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="5" Grid.ColumnSpan="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Root Recurrence description -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" Margin="0,0,8,12" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RecurrenceRootLabel], RelativeSource={RelativeSource TemplatedParent}}" />
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="1" Margin="0,0,0,12" VerticalAlignment="Center" Text="{Binding RecurrenceRootDescription, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                  </Grid>
                  <!-- Description -->
                  <TextBox Grid.Row="1" Text="{Binding Description}" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" TabIndex="70" AcceptsReturn="True" AcceptsTab="True" />
                  <!-- Description format warning message -->
                  <Border Grid.Row="2" Background="{StaticResource ValidationErrorElement}" Visibility="{Binding DescriptionFormatWarningMessageVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                    <TextBlock Margin="3" Text="{Binding DescriptionFormatWarningMessage, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Foreground="{StaticResource LightForegroundBrush}" />
                  </Border>
                </Grid>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** GroupBox Style **********************************-->
  <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Foreground" Value="{StaticResource AccentForegroundBrush}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Border BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{TemplateBinding BorderBrush}">
              <Border.Clip>
                <GeometryGroup FillRule="EvenOdd">
                  <RectangleGeometry x:Name="FullRect" Rect="0,0,300,200" />
                  <RectangleGeometry x:Name="HeaderRect" Rect="6,0,100,100" />
                </GeometryGroup>
              </Border.Clip>
            </Border>
            <!-- Header -->
            <ContentControl x:Name="HeaderContainer" Margin="0,0,0,12" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Left" Foreground="{TemplateBinding Foreground}">
              <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" />
            </ContentControl>
            <!-- Content -->
            <ContentPresenter Grid.Row="2" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource GroupBoxStyle}" />

  <!-- ********************************** ActivityRecurrenceDialogCore Style **********************************-->
  <Style TargetType="{x:Type igPrim:ActivityRecurrenceDialogCore}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:ActivityRecurrenceDialogCore}">
          <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
            <Style BasedOn="{StaticResource EditableTextBoxStyle}" TargetType="{x:Type TextBox}" />
            <Style BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}" />
            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}" />
          </ControlTemplate.Resources>
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Margin="12">
                <Grid.Resources>
                  <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource GroupBoxStyle}">
                    <Setter Property="MinWidth" Value="400" />
                    <Setter Property="Margin" Value="5,5,5,10" />
                  </Style>
                  <Style TargetType="{x:Type igPrim:SimpleNumericTextBox}">
                    <Setter Property="Width" Value="30" />
                  </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- Appointment Time GroupBox -->
                <GroupBox Grid.Row="0" Header="{Binding LocalizedStrings[DLG_Recurrence_Core_ActivityTime], RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource GroupBoxStyle}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" MinWidth="75" />
                      <ColumnDefinition Width="Auto" MinWidth="130" />
                      <ColumnDefinition Width="Auto" MinWidth="15" />
                      <ColumnDefinition Width="Auto" MinWidth="50" />
                      <ColumnDefinition Width="Auto" MinWidth="130" />
                    </Grid.ColumnDefinitions>
                    <!-- Start time -->
                    <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Recurrence_Core_Start], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,12,12" />
                    <ComboBox x:Name="StartTimePicker" Grid.Row="0" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" Width="130" IsEditable="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="10" VerticalAlignment="Center" Margin="0,0,12,12" />
                    <!-- End time -->
                    <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Column="3" Visibility="{Binding EndTimePickerVisibility, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Recurrence_Core_End], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,12,12" />
                    <ComboBox x:Name="EndTimePicker" Grid.Column="4" Foreground="{StaticResource ForegroundBrush}" Width="130" Visibility="{Binding EndTimePickerVisibility, RelativeSource={RelativeSource TemplatedParent}}" IsEditable="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,12,12" />
                    <!-- Duration -->
                    <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Recurrence_Core_Duration], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,12,12" />
                    <ComboBox x:Name="DurationPicker" Grid.Row="2" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" Width="130" IsEditable="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="30" VerticalAlignment="Center" Margin="0,0,12,12" />
                  </Grid>
                </GroupBox>
                <!-- Recurrence Pattern GroupBox -->
                <GroupBox Grid.Row="1" Header="{Binding LocalizedStrings[DLG_Recurrence_Core_RecurrencePattern], RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource GroupBoxStyle}" Margin="0,12,0,0">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical">
                      <RadioButton GroupName="rbPattern" Content="{Binding LocalizedStrings[DLG_Recurrence_Pattern_Literal_Daily], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,2" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="40" IsChecked="{Binding IsDailyPattern, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      <RadioButton GroupName="rbPattern" Content="{Binding LocalizedStrings[DLG_Recurrence_Pattern_Literal_Weekly], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,2" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="50" IsChecked="{Binding IsWeeklyPattern, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      <RadioButton GroupName="rbPattern" Content="{Binding LocalizedStrings[DLG_Recurrence_Pattern_Literal_Monthly], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,2" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="60" IsChecked="{Binding IsMonthlyPattern, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      <RadioButton GroupName="rbPattern" Content="{Binding LocalizedStrings[DLG_Recurrence_Pattern_Literal_Yearly], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,2" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="70" IsChecked="{Binding IsYearlyPattern, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </StackPanel>
                    <Rectangle Grid.Column="1" VerticalAlignment="Stretch" Margin="12,0" Width="1" Fill="{StaticResource SeparatorBorderBrush}" />
                    <!-- Daily Pattern Area -->
                    <StackPanel x:Name="dailyPatternArea" Grid.Column="2" Orientation="Vertical" Visibility="{Binding IsDailyPattern, Converter={StaticResource boolToVisibility}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                      <StackPanel Orientation="Horizontal">
                        <RadioButton Margin="0,2" GroupName="rbDailyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_DailyPattern_Literal_Every], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsDailyPatternTypeEvery, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="80" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <igPrim:SimpleNumericTextBox x:Name="DailyFrequency" Value="{Binding IntervalDaily, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center" MinValue="1" MaxValue="999" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="90" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Text="{Binding LocalizedStrings[DLG_Recurrence_DailyPattern_Literal_Days], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <RadioButton GroupName="rbDailyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_DailyPattern_Literal_EveryWeekday], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsDailyPatternTypeWeekday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="100" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,2" />
                    </StackPanel>
                    <!-- Weekly Pattern Area -->
                    <StackPanel x:Name="weeklyPatternArea" Grid.Column="2" Orientation="Vertical" Visibility="{Binding IsWeeklyPattern, Converter={StaticResource boolToVisibility}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_RecurEvery], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <igPrim:SimpleNumericTextBox Value="{Binding IntervalWeekly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="10,0" VerticalAlignment="Center" MinValue="1" MaxValue="999" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="110" MinWidth="30" Style="{DynamicResource EditableTextBoxStyle}" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_WeeksOn], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      </StackPanel>
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Sunday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="0" IsChecked="{Binding IsWeeklyOnSunday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="120" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Monday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="1" IsChecked="{Binding IsWeeklyOnMonday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="130" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Tuesday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="2" IsChecked="{Binding IsWeeklyOnTuesday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="140" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Wednesday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="3" IsChecked="{Binding IsWeeklyOnWednesday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="150" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Thursday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Grid.Column="0" IsChecked="{Binding IsWeeklyOnThursday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="160" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Friday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Grid.Column="1" IsChecked="{Binding IsWeeklyOnFriday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="170" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                        <CheckBox Content="{Binding LocalizedStrings[DLG_Recurrence_WeeklyPattern_Literal_Saturday], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="2" Grid.Column="2" IsChecked="{Binding IsWeeklyOnSaturday, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="180" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,0" />
                      </Grid>
                    </StackPanel>
                    <!-- Monthly Pattern Area -->
                    <StackPanel x:Name="monthlyPatternArea" Grid.Column="2" Orientation="Vertical" Visibility="{Binding IsMonthlyPattern, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                      <StackPanel Orientation="Horizontal">
                        <RadioButton Margin="0,2" GroupName="rbMonthlyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_DayCapitalized], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsMonthlyPatternTypeSimple, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="190" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <igPrim:SimpleNumericTextBox x:Name="MonthlyDayNumber" Value="{Binding DayNumberMonthly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center" MinValue="1" MaxValue="31" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="200" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Text="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_ComplexTextField4], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Style="{StaticResource TextBlockStyle}" />
                        <igPrim:SimpleNumericTextBox x:Name="MonthlyFrequency" Value="{Binding IntervalMonthly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="12,0,8,0" VerticalAlignment="Center" MinValue="1" MaxValue="99" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="210" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Text="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_ComplexTextField6], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <Grid Margin="0,12,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RadioButton Grid.Column="0" Margin="0,2,8,2" GroupName="rbMonthlyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_The], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsMonthlyPatternTypeComplex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="220" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <ComboBox x:Name="MonthlyMoveableElement1" Grid.Column="1" ItemsSource="{Binding OrdinalDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding DayOfWeekOrdinalMonthly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="230" Width="100" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="MonthlyMoveableElement2" Grid.Column="2" Text="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_ComplexTextField2], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                        <ComboBox x:Name="MonthlyMoveableElement3" Grid.Column="3" ItemsSource="{Binding DayDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding DayOfWeekMonthly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="240" Width="140" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="MonthlyMoveableElement4" Grid.Column="4" Text="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_ComplexTextField4], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                        <igPrim:SimpleNumericTextBox x:Name="MonthlyFrequencyComplex" Grid.Column="5" Value="{Binding IntervalMonthlyComplex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" MinValue="1" MaxValue="99" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="250" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="MonthlyMoveableElement6" Grid.Column="6" Text="{Binding LocalizedStrings[DLG_Recurrence_MonthlyPattern_Literal_ComplexTextField6], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                      </Grid>
                    </StackPanel>
                    <!-- Yearly Pattern Area -->
                    <StackPanel x:Name="yearlyPatternArea" Grid.Column="2" Orientation="Vertical" Visibility="{Binding IsYearlyPattern, Converter={StaticResource boolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_RecurEvery], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <igPrim:SimpleNumericTextBox x:Name="YearlyFrequency" Value="{Binding IntervalYearly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center" MinValue="1" MaxValue="99" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="260" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_Years], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      </StackPanel>
                      <Grid Margin="0,12,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RadioButton Margin="0,2,8,2" Grid.Column="0" GroupName="rbYearlyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_On], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsYearlyPatternTypeSimple, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="270" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <ComboBox x:Name="YearlyMoveableElement7" Grid.Column="1" ItemsSource="{Binding MonthDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding MonthOfYearSimple, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="280" Width="95" />
                        <igPrim:SimpleNumericTextBox x:Name="YearlyDayNumber" Grid.Column="2" Value="{Binding DayOfMonthYearly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center" MinValue="1" MaxValue="31" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="290" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="YearlyMoveableElement8" Grid.Column="3" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_SimpleTextField], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                      </Grid>
                      <Grid Margin="0,12,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RadioButton Margin="0,2,8,2" Grid.Column="0" GroupName="rbYearlyFrequency" Content="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_OnThe], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsYearlyPatternTypeComplex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="300" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                        <ComboBox x:Name="YearlyMoveableElement1" Grid.Column="1" ItemsSource="{Binding OrdinalDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding DayOfWeekOrdinalYearly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="310" Width="100" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="YearlyMoveableElement2" Grid.Column="2" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_ComplexTextField2], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                        <ComboBox x:Name="YearlyMoveableElement3" Grid.Column="3" ItemsSource="{Binding DayDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding DayOfWeekYearly, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="320" Width="140" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="YearlyMoveableElement4" Grid.Column="4" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_ComplexTextField4], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                        <ComboBox x:Name="YearlyMoveableElement5" Grid.Column="5" ItemsSource="{Binding MonthDescriptions, RelativeSource={RelativeSource TemplatedParent}}" SelectedIndex="{Binding MonthOfYearComplex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Margin="0,0,8,0" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="330" Width="140" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" x:Name="YearlyMoveableElement6" Grid.Column="6" Text="{Binding LocalizedStrings[DLG_Recurrence_YearlyPattern_Literal_ComplexTextField6], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0" VerticalAlignment="Center" />
                      </Grid>
                    </StackPanel>
                  </Grid>
                </GroupBox>
                <!-- Recurrence Range GroupBox -->
                <GroupBox Grid.Row="2" Header="{Binding LocalizedStrings[DLG_Recurrence_Core_RecurrenceRange], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource GroupBoxStyle}" Margin="0,12,0,0">
                  <Grid Margin="3,6,0,0">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!-- Range Start Date -->
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                      <TextBlock Text="{Binding LocalizedStrings[DLG_Recurrence_Range_Literal_Start], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Style="{StaticResource TextBlockStyle}" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="RangeStartDatePicker" SelectedDate="{Binding RangeStartDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Width="130" Margin="10,0,0,0" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="340" VerticalAlignment="Center" />
                    </StackPanel>
                    <Grid Grid.Column="1">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <!-- Range 'No end date' -->
                      <RadioButton Grid.Row="0" Grid.Column="0" Margin="10,0,0,8" GroupName="rbRange" Content="{Binding LocalizedStrings[DLG_Recurrence_Range_Literal_NoEndDate], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsRangeForever, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="350" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      <!-- Range 'End after 'n' occurrences' -->
                      <RadioButton Grid.Row="1" Grid.Column="0" Margin="10,0,0,8" GroupName="rbRange" Content="{Binding LocalizedStrings[DLG_Recurrence_Range_Literal_EndAfter], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsRangeEndAfter, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="360" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0,0,0,8" VerticalAlignment="Center">
                        <igPrim:SimpleNumericTextBox x:Name="RangeEndAfterOccurrenceNumber" Value="{Binding RangeEndAfterOccurrenceNumber, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="7,0,5,0" VerticalAlignment="Center" MinValue="1" MaxValue="999" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="370" MinWidth="30" Style="{StaticResource EditableTextBoxStyle}" />
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding LocalizedStrings[DLG_Recurrence_Range_Literal_Occurrences], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      </StackPanel>
                      <!-- Range 'End by date' -->
                      <RadioButton Grid.Row="2" Grid.Column="0" Margin="10,-2,0,8" GroupName="rbRange" Content="{Binding LocalizedStrings[DLG_Recurrence_Range_Literal_EndBy], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding IsRangeEndBy, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="380" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" Grid.Row="2" Grid.Column="1" x:Name="RangeEndDatePicker" SelectedDate="{Binding RangeEndDate, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" Width="130" Margin="7,0,0,11" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="390" VerticalAlignment="Center" />
                    </Grid>
                  </Grid>
                </GroupBox>
                <!-- Recurrence Description -->
                <Border Grid.Row="3" Margin="0,12" BorderThickness="1" CornerRadius="5" BorderBrush="White" Visibility="{Binding RecurrenceDescriptionVisibility, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                  <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding RecurrenceDescription, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" />
                </Border>
                <!-- OK, Cancel, RemoveRecurrence buttons -->
                <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
                  <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                      <Setter Property="MinWidth" Value="75" />
                      <Setter Property="Margin" Value="5,0,5,0" />
                      <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                  </StackPanel.Resources>
                  <Button Style="{StaticResource ButtonStyle}" Width="75" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}" TabIndex="400" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0">
                    <igLayout:Commanding.Command>
                      <igPrim:RecurrenceDialogCoreCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" Width="75" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}" TabIndex="410" Margin="0,0,8,0">
                    <igLayout:Commanding.Command>
                      <igPrim:RecurrenceDialogCoreCommandSource EventName="Click" CommandType="Close" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" Content="{Binding LocalizedStrings[DLG_Recurrence_Core_RemoveRecurrence], RelativeSource={RelativeSource TemplatedParent}}" TabIndex="420" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:RecurrenceDialogCoreCommandSource EventName="Click" CommandType="RemoveRecurrence" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityRecurrenceChooserDialog Style **********************************-->
  <Style TargetType="{x:Type igPrim:ActivityRecurrenceChooserDialog}">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:ActivityRecurrenceChooserDialog}">
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid Width="280" Margin="12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Data="M9,12.000001 C8.1715727,12.000001 7.5,12.671574 7.5,13.500001 C7.5,14.328428 8.1715727,15.000001 9,15.000001 C9.8284273,15.000001 10.5,14.328428 10.5,13.500001 C10.5,12.671574 9.8284273,12.000001 9,12.000001 z M9,3.000001 C8.2233496,3.000001 7.584559,3.5902505 7.5077438,4.3466349 L7.5024691,4.4160013 L7.5,4.4160013 L7.5017757,4.4297619 L7.4999995,4.656251 C7.4999995,4.8115811 8.333333,10.249002 8.333333,10.249002 L9.666667,10.249002 C9.666667,10.249002 10.499999,4.8115811 10.499999,4.656251 L10.498223,4.4297657 L10.5,4.4160013 L10.49753,4.4160013 L10.492255,4.3466349 C10.41544,3.5902505 9.7766495,3.000001 9,3.000001 z M0,0 L18,0 L18,18 L0,18 z" Fill="{StaticResource AccentForegroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="18" Height="19" VerticalAlignment="Top" />
                <TextBlock x:Name="txtMsg" Text="{Binding LocalizedStrings[DLG_RecurrenceChooser_Message], RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="1" TextWrapping="Wrap" Margin="8,0,0,12" TextAlignment="Left" VerticalAlignment="Top" Style="{StaticResource TextBlockStyle}" />
                <StackPanel Grid.Row="1" Grid.Column="1" Margin="8,0,0,0">
                  <RadioButton Style="{StaticResource RadioButtonStyle}" x:Name="OccurrenceChoice" Margin="0,0,0,6" GroupName="rbChoice" Content="{Binding LocalizedStrings[DLG_RecurrenceChooser_OccurrenceChoice], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding ChoiceIsOccurrence, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="10" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                  <RadioButton Style="{StaticResource RadioButtonStyle}" x:Name="SeriesChoice" GroupName="rbChoice" Content="{Binding LocalizedStrings[DLG_RecurrenceChooser_SeriesChoice], RelativeSource={RelativeSource TemplatedParent}}" IsChecked="{Binding ChoiceIsSeries, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,12,0,0">
                  <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
                      <Setter Property="MinWidth" Value="75" />
                    </Style>
                  </StackPanel.Resources>
                  <Button x:Name="OkButton" TabIndex="30" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Ok], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,0">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="SaveAndClose" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button x:Name="CancelButton" TabIndex="40" Content="{Binding LocalizedStrings[DLG_ScheduleDialog_Btn_Cancel], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ScheduleDialogCommandSource EventName="Click" CommandType="Close" />
                    </igLayout:Commanding.Command>
                  </Button>
                </StackPanel>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ReminderDialog Style **********************************-->
  <Style TargetType="{x:Type igPrim:ReminderDialog}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:ReminderDialog}">
          <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
            <Style BasedOn="{StaticResource EditableTextBoxStyle}" TargetType="{x:Type TextBox}" />
          </ControlTemplate.Resources>
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition Height="58" />
                </Grid.RowDefinitions>
                <Grid Width="445" Margin="12,12,12,6">
                  <Grid.Resources>
                    <Style TargetType="{x:Type Button}">
                      <Setter Property="MinWidth" Value="75" />
                      <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                  </Grid.Resources>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="24" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="34" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid Height="25" Width="26" HorizontalAlignment="Left">
                    <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="26" Stretch="Fill" Data="M 0,2 C0,2 16,2 16,2 16,2 16,15 16,15 16,15 0,15 0,15 0,15 0,2 0,2 z" Fill="{StaticResource LightForegroundBrush}" />
                    <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="26" Stretch="Fill" Data="M 10,8 C10,8 10,6 10,6 10,6 12,6 12,6 12,6 12,8 12,8 12,8 10,8 10,8 zM 10,11 C10,11 10,9 10,9 10,9 12,9 12,9 12,9 12,11 12,11 12,11 10,11 10,11 zM 7,8 C7,8 7,6 7,6 7,6 9,6 9,6 9,6 9,8 9,8 9,8 7,8 7,8 zM 7,11 C7,11 7,9 7,9 7,9 9,9 9,9 9,9 9,11 9,11 9,11 7,11 7,11 zM 4,8 C4,8 4,6 4,6 4,6 6,6 6,6 6,6 6,8 6,8 6,8 4,8 4,8 zM 4,11 C4,11 4,9 4,9 4,9 6,9 6,9 6,9 6,11 6,11 6,11 4,11 4,11 zM 3,2 C3,2 3,5 3,5 3,5 0,5 0,5 0,5 0,6 0,6 0,6 3,6 3,6 3,6 3,8 3,8 3,8 0,8 0,8 0,8 0,9 0,9 0,9 3,9 3,9 3,9 3,11 3,11 3,11 0,11 0,11 0,11 0,12 0,12 0,12 3,12 3,12 3,12 3,15 3,15 3,15 4,15 4,15 4,15 4,12 4,12 4,12 6,12 6,12 6,12 6,15 6,15 6,15 7,15 7,15 7,15 7,12 7,12 7,12 9,12 9,12 9,12 9,15 9,15 9,15 10,15 10,15 10,15 10,12 10,12 10,12 12,12 12,12 12,12 12,15 12,15 12,15 13,15 13,15 13,15 13,12 13,12 13,12 16,12 16,12 16,12 16,11 16,11 16,11 13,11 13,11 13,11 13,9 13,9 13,9 16,9 16,9 16,9 16,8 16,8 16,8 13,8 13,8 13,8 13,6 13,6 13,6 16,6 16,6 16,6 16,5 16,5 16,5 13,5 13,5 13,5 13,2 13,2 13,2 12,2 12,2 12,2 12,5 12,5 12,5 10,5 10,5 10,5 10,2 10,2 10,2 9,2 9,2 9,2 9,5 9,5 9,5 7,5 7,5 7,5 7,2 7,2 7,2 6,2 6,2 6,2 6,5 6,5 6,5 4,5 4,5 4,5 4,2 4,2 4,2 3,2 3,2 z" Fill="{StaticResource DatePickerButtonBorderBrush}" />
                    <Path Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="25" Width="26" Stretch="Fill" Data="M 1,3 C1,3 15,3 15,3 15,3 15,14 15,14 15,14 1,14 1,14 1,14 1,3 1,3 zM 0,0 C0,0 0,15 0,15 0,15 16,15 16,15 16,15 16,0 16,0 16,0 0,0 0,0 z" Fill="{StaticResource CalendarIconGlyphBrush}" />
                    <Path Margin="14,7,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="8" Width="8" Stretch="Fill" Data="M 8,4 C8,4 14,4 14,4 14,4 14,10 14,10 14,10 8,10 8,10 8,10 8,4 8,4 z" Fill="{StaticResource LightForegroundBrush}" />
                    <Path Margin="15,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="6" Width="6" Stretch="Fill" Data="M 9,5 C9,5 13,5 13,5 13,5 13,9 13,9 13,9 9,9 9,9 9,9 9,5 9,5 z" Stroke="{StaticResource CalendarIconInnerGlyphBrush}" StrokeThickness="1" />
                  </Grid>
                  <!-- Selected Activity Subject -->
                  <TextBlock Style="{StaticResource TextBlockStyle}" FontSize="18" Text="{Binding SelectedActivitySubject, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="36,0,8,0" TextAlignment="Left" Visibility="{Binding SelectedActivitySubjectVisibility, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top" HorizontalAlignment="Left" />
                  <!-- Selected Activity Start Time Description -->
                  <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding SelectedActivityStartTimeDescription, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" TextWrapping="Wrap" Margin="36,0,0,12" TextAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" />
                  <!-- Reminder List -->
                  <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" Margin="0,0,0,12">
                    <StackPanel>
                      <!-- List Area -->
                      <ListBox x:Name="ReminderListBox" ItemsSource="{Binding ReminderItems, RelativeSource={RelativeSource TemplatedParent}}" Height="140" SelectionMode="Extended" Style="{StaticResource ListBoxStyle}">
                        <ListBox.ItemContainerStyle>
                          <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                          </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.Template>
                          <ControlTemplate>
                            <Border Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}">
                              <ScrollViewer Style="{StaticResource ScrollViewerStyle}" HorizontalScrollBarVisibility="Hidden">
                                <ItemsPresenter />
                              </ScrollViewer>
                            </Border>
                          </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="290" />
                                <ColumnDefinition Width="140" />
                              </Grid.ColumnDefinitions>
                              <Grid Height="15" Width="16">
                                <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="13" Width="16" Stretch="Fill" Data="M 0,2 C0,2 16,2 16,2 16,2 16,15 16,15 16,15 0,15 0,15 0,15 0,2 0,2 z" Fill="{StaticResource LightForegroundBrush}" />
                                <Path Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="13" Width="16" Stretch="Fill" Data="M 10,8 C10,8 10,6 10,6 10,6 12,6 12,6 12,6 12,8 12,8 12,8 10,8 10,8 zM 10,11 C10,11 10,9 10,9 10,9 12,9 12,9 12,9 12,11 12,11 12,11 10,11 10,11 zM 7,8 C7,8 7,6 7,6 7,6 9,6 9,6 9,6 9,8 9,8 9,8 7,8 7,8 zM 7,11 C7,11 7,9 7,9 7,9 9,9 9,9 9,9 9,11 9,11 9,11 7,11 7,11 zM 4,8 C4,8 4,6 4,6 4,6 6,6 6,6 6,6 6,8 6,8 6,8 4,8 4,8 zM 4,11 C4,11 4,9 4,9 4,9 6,9 6,9 6,9 6,11 6,11 6,11 4,11 4,11 zM 3,2 C3,2 3,5 3,5 3,5 0,5 0,5 0,5 0,6 0,6 0,6 3,6 3,6 3,6 3,8 3,8 3,8 0,8 0,8 0,8 0,9 0,9 0,9 3,9 3,9 3,9 3,11 3,11 3,11 0,11 0,11 0,11 0,12 0,12 0,12 3,12 3,12 3,12 3,15 3,15 3,15 4,15 4,15 4,15 4,12 4,12 4,12 6,12 6,12 6,12 6,15 6,15 6,15 7,15 7,15 7,15 7,12 7,12 7,12 9,12 9,12 9,12 9,15 9,15 9,15 10,15 10,15 10,15 10,12 10,12 10,12 12,12 12,12 12,12 12,15 12,15 12,15 13,15 13,15 13,15 13,12 13,12 13,12 16,12 16,12 16,12 16,11 16,11 16,11 13,11 13,11 13,11 13,9 13,9 13,9 16,9 16,9 16,9 16,8 16,8 16,8 13,8 13,8 13,8 13,6 13,6 13,6 16,6 16,6 16,6 16,5 16,5 16,5 13,5 13,5 13,5 13,2 13,2 13,2 12,2 12,2 12,2 12,5 12,5 12,5 10,5 10,5 10,5 10,2 10,2 10,2 9,2 9,2 9,2 9,5 9,5 9,5 7,5 7,5 7,5 7,2 7,2 7,2 6,2 6,2 6,2 6,5 6,5 6,5 4,5 4,5 4,5 4,2 4,2 4,2 3,2 3,2 z" Fill="{StaticResource DatePickerButtonBorderBrush}" />
                                <Path Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="15" Width="16" Stretch="Fill" Data="M 1,3 C1,3 15,3 15,3 15,3 15,14 15,14 15,14 1,14 1,14 1,14 1,3 1,3 zM 0,0 C0,0 0,15 0,15 0,15 16,15 16,15 16,15 16,0 16,0 16,0 0,0 0,0 z" Fill="{StaticResource CalendarIconGlyphBrush}" />
                                <Path Margin="8,4,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="6" Width="6" Stretch="Fill" Data="M 8,4 C8,4 14,4 14,4 14,4 14,10 14,10 14,10 8,10 8,10 8,10 8,4 8,4 z" Fill="{StaticResource LightForegroundBrush}" />
                                <Path Margin="9,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="4" Width="4" Stretch="Fill" Data="M 9,5 C9,5 13,5 13,5 13,5 13,9 13,9 13,9 9,9 9,9 9,9 9,5 9,5 z" Stroke="{StaticResource CalendarIconInnerGlyphBrush}" StrokeThickness="1" />
                              </Grid>
                              <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Column="1" Text="{Binding Description}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Description}" TextAlignment="Left" />
                              <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Column="2" Text="{Binding DueIn}" TextTrimming="CharacterEllipsis" ToolTip="{Binding DueIn}" TextAlignment="Left" />
                            </Grid>
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                      </ListBox>
                    </StackPanel>
                  </Border>
                  <Button Style="{StaticResource ButtonStyle}" Width="75" Grid.Row="3" Grid.Column="3" Margin="0,0,12,0" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{Binding LocalizedStrings[DLG_Reminder_Literal_OpenItem], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ReminderDialogCommandSource EventName="Click" CommandType="OpenSelected" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" Width="75" Grid.Row="3" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{Binding LocalizedStrings[DLG_Reminder_Literal_Dismiss], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ReminderDialogCommandSource EventName="Click" CommandType="DismissSelected" />
                    </igLayout:Commanding.Command>
                  </Button>
                </Grid>
                <Grid Background="{StaticResource ScheduleDialogFooterBackgroundBrush}" Grid.Row="1">
                  <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{Binding LocalizedStrings[DLG_Reminder_Literal_SnoozePrompt], RelativeSource={RelativeSource TemplatedParent}}" Margin="12,4,12,4" TextAlignment="Left" VerticalAlignment="Center" Style="{StaticResource TextBlockStyle}" />
                  <ComboBox x:Name="SnoozePicker" Grid.Row="1" IsEditable="true" Width="200" Foreground="{StaticResource ForegroundBrush}" VerticalAlignment="Top" Margin="12,0,12,0" IsEnabled="{Binding IsSnoozePickerEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
                  <Button Style="{StaticResource ButtonStyle}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Width="75" VerticalAlignment="Top" Content="{Binding LocalizedStrings[DLG_Reminder_Literal_Snooze], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ReminderDialogCommandSource EventName="Click" CommandType="SnoozeSelected" />
                    </igLayout:Commanding.Command>
                  </Button>
                  <Button Style="{StaticResource ButtonStyle}" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Width="75" Margin="0,0,12,0" VerticalAlignment="Top" Content="{Binding LocalizedStrings[DLG_Reminder_Literal_DismissAll], RelativeSource={RelativeSource TemplatedParent}}">
                    <igLayout:Commanding.Command>
                      <igPrim:ReminderDialogCommandSource EventName="Click" CommandType="DismissAll" />
                    </igLayout:Commanding.Command>
                  </Button>
                </Grid>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** TransparentButton Style **********************************-->
  <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Padding" Value="3" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-6,0" />
            <ContentPresenter Opacity="0.7" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityDialogToggleButton Style **********************************-->
  <Style x:Key="ActivityDialogToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Padding" Value="3" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-6,0" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.7" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** ActivityDialogRibbonLite Style **********************************-->
  <Style TargetType="{x:Type igPrim:ActivityDialogRibbonLite}">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="13.333" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:ActivityDialogRibbonLite}">
          <ContentControl Foreground="{Binding ColorScheme.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
              <Grid x:Name="Ribbon" Height="100">
                <Grid.Resources>
                  <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="FontSize" Value="11" />
                    <Setter Property="VerticalAlignment" Value="Top" />
                  </Style>
                  <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="FontSize" Value="11" />
                    <Setter Property="VerticalAlignment" Value="Top" />
                  </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!-- Actions Group -->
                <Grid x:Name="actionsGroup" Grid.Column="0">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" MinHeight="23" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Background="{StaticResource ActivityDialogRibbonActionsBackgroundBrush}" Grid.Row="1" BorderBrush="{StaticResource ActivityDialogRibbonActionsBorderBrush}" Grid.ColumnSpan="2" BorderThickness="1,1,0,1" />
                    <StackPanel Orientation="Horizontal">
                      <Button Style="{StaticResource TransparentButtonStyle}" x:Name="saveAndClose" Margin="12,0">
                        <igLayout:Commanding.Command>
                          <igPrim:ActivityDialogCoreCommandSource EventName="Click" CommandType="SaveAndClose" />
                        </igLayout:Commanding.Command>
                        <StackPanel>
                          <Path Data="M10.280033,48.087753L10.280033,54.397381 50.810078,54.397381 50.810078,48.087753z M15.900046,6.4432963E-05L23.693047,6.4432963E-05 23.693047,15.900064 15.900046,15.900064z M3.4200456,0L10.280033,0 10.280033,19.019096 50.810078,19.019096 50.810078,0 58.300069,0C60.190087,0,61.730004,1.5399642,61.730004,3.4298871L61.730004,59.237114C61.730004,61.137043,60.190087,62.667,58.300069,62.667L3.4200456,62.667C1.53003,62.667,1.896733E-07,61.137043,0,59.237114L0,3.4298871C1.896733E-07,1.5399642,1.53003,0,3.4200456,0z" Fill="{StaticResource GlyphBackgroundBrush}" Width="22" Height="22" Stretch="Fill" UseLayoutRounding="False" />
                          <TextBlock Text="{Binding LocalizedStrings[DLG_Appointment_Core_ButtonTool_SaveClose], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0" VerticalAlignment="Top" />
                        </StackPanel>
                      </Button>
                      <Button Style="{StaticResource TransparentButtonStyle}" x:Name="delete" Margin="0,0,12,0">
                        <igLayout:Commanding.Command>
                          <igPrim:ActivityDialogCoreCommandSource EventName="Click" CommandType="Delete" />
                        </igLayout:Commanding.Command>
                        <StackPanel>
                          <Path x:Name="Cross2" Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="22" Height="22" Margin="5,0" />
                          <TextBlock Text="{Binding LocalizedStrings[DLG_Appointment_Core_ButtonTool_Delete], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0" VerticalAlignment="Top" />
                        </StackPanel>
                      </Button>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RibbonGroup_Actions], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" TextAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Grid.RowSpan="2" Grid.Column="1">
                      <Rectangle Width="1" Fill="{StaticResource RibbonSeparatorBackgroundBrush}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!-- Options Group -->
                <Grid x:Name="OptionsGroup" Grid.Column="1">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" MinHeight="23" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Background="{StaticResource ActivityDialogRibbonOptionsBackgroundBrush}" Grid.Row="1" BorderBrush="{StaticResource ActivityDialogRibbonOptionsBorderBrush}" Grid.ColumnSpan="2" BorderThickness="0,1" />
                    <StackPanel Orientation="Horizontal" Margin="12,0">
                      <StackPanel Orientation="Horizontal" Margin="0,10,8,0" VerticalAlignment="Top">
                        <Path x:Name="ReminderPickerImage" Visibility="{Binding ElementName=ReminderPickerLabel, Path=Visibility}" Data="M45.799513,25.590023C46.189226,25.590023,46.508989,25.909065,46.508989,26.297899L46.508989,27.883139C46.508989,28.271971 46.189226,28.591013 45.799513,28.591013 45.4098,28.591013 45.090033,28.271971 45.090033,27.883139L45.090033,26.297899C45.090033,25.909065,45.4098,25.590023,45.799513,25.590023z M6.8392835,24.171339C5.8994356,24.171339,5.1294928,24.851435,5.1294933,25.681444L5.1294933,44.082647C5.1294928,44.912779,5.8994356,45.592752,6.8392835,45.592752L41.315947,45.592752C42.265802,45.592752,43.025736,44.912779,43.025736,44.082647L43.025736,33.372C41.465834,33.111975,39.996008,32.591921,38.63616,31.901936L36.796377,35.482122C36.386385,36.292109 35.386484,36.6122 34.576628,36.192125 33.766649,35.772177 33.446737,34.782125 33.866617,33.972013L35.856409,30.091761C33.956694,28.511703,32.436827,26.491554,31.486849,24.171339z M53.720228,18.129985L55.300753,18.129985C55.690882,18.129985 56.010988,18.449777 56.010988,18.839523 56.010988,19.22927 55.690882,19.549063 55.300753,19.549063L53.720228,19.549063C53.330095,19.549063 53.009989,19.22927 53.009989,18.839523 53.009989,18.449777 53.330095,18.129985 53.720228,18.129985z M35.628065,18.129985L37.213835,18.129985C37.602797,18.129985 37.921946,18.449777 37.921946,18.839523 37.921946,19.22927 37.602797,19.549063 37.213835,19.549063L35.628065,19.549063C35.239103,19.549063 34.919954,19.22927 34.919954,18.839523 34.919954,18.449777 35.239103,18.129985 35.628065,18.129985z M23.167732,17.340945C21.797875,17.340945 20.688,18.440991 20.688,19.821085 20.688,21.191168 21.797875,22.301224 23.167732,22.301224 24.53759,22.301224 25.647465,21.191168 25.647465,19.821085 25.647465,18.440991 24.53759,17.340945 23.167732,17.340945z M15.068564,17.340945C13.698707,17.340945 12.58871,18.440991 12.58871,19.821085 12.58871,21.191168 13.698707,22.301224 15.068564,22.301224 16.438423,22.301224 17.558306,21.191168 17.558306,19.821085 17.558306,18.440991 16.438423,17.340945 15.068564,17.340945z M6.9792839,17.340945C5.5994168,17.340945 4.4895421,18.440991 4.4895425,19.821085 4.4895421,21.191168 5.5994168,22.301224 6.9792839,22.301224 8.3491421,22.301224 9.4591389,21.191168 9.4591389,19.821085 9.4591389,18.440991 8.3491421,17.340945 6.9792839,17.340945z M45.794172,9.249989C46.444094,9.2499895,46.964029,9.7698965,46.964029,10.419781L46.964029,18.788287C46.964029,19.158221,46.864042,19.478165,46.624071,19.718122L40.694792,25.637066C40.244848,26.096983 39.504938,26.096983 39.054991,25.637066 38.595049,25.187145 38.595049,24.447277 39.054991,23.98736L44.634314,18.408356 44.634314,10.419781C44.634314,9.7698965,45.154249,9.2499895,45.794172,9.249989z M45.515478,6.4302123C38.896143,6.4302123 33.516676,11.810561 33.516676,18.430981 33.516676,25.051399 38.896143,30.431749 45.515478,30.431749 52.124804,30.431749 57.51428,25.051399 57.51428,18.430981 57.51428,11.810561 52.124804,6.4302123 45.515478,6.4302123z M45.515478,3.2700977C53.884638,3.2700979 60.673998,10.06045 60.673998,18.430981 60.673998,23.291277 58.374178,27.601612 54.824606,30.361797L56.674398,33.972013C57.094278,34.782125 56.774363,35.772177 55.964388,36.192125 55.154532,36.6122 54.154631,36.292109 53.744638,35.482122L52.00482,32.1019C50.644972,32.741955,49.195166,33.201946,47.655279,33.42193L47.655279,48.672907C47.655279,49.623041,46.885336,50.383101,45.94549,50.383101L1.7099121,50.383101C0.76994269,50.383101,0,49.623041,0,48.672907L0,15.760888C0,14.820765,0.76994269,14.050695,1.7099121,14.050695L31.006916,14.050695C32.876722,7.8103056,38.666185,3.2700979,45.515478,3.2700977z M58.936861,0.00046086311C60.167727,0.016901493 61.396807,0.47329521 62.36672,1.3778802 64.435865,3.3176607 64.555815,6.5572939 62.616617,8.6270599 62.406706,8.8570337 62.176798,9.0670099 61.926901,9.2469888L54.549952,2.3577699C54.719881,2.1077976 54.909803,1.857826 55.119715,1.6278523 56.144606,0.52828908 57.54188,-0.018172503 58.936861,0.00046086311z M32.039774,0.00046086311C33.432886,-0.018172503 34.829435,0.52828908 35.859343,1.6278523 36.069197,1.857826 36.259066,2.1077976 36.428946,2.3577699L29.054071,9.2469888C28.804245,9.0670099 28.574404,8.8570337 28.36455,8.6270599 26.425898,6.5572939 26.535822,3.3176607 28.614376,1.3778802 29.584015,0.47329521 30.810556,0.016901493 32.039774,0.00046086311z" Fill="{StaticResource GlyphBackgroundBrush}" Width="30" Stretch="Fill" UseLayoutRounding="False" Height="24" Margin="0,0,8,0" />
                        <TextBlock x:Name="ReminderPickerLabel" Text="{Binding LocalizedStrings[DLG_Appointment_Core_ComboTool_Reminder], RelativeSource={RelativeSource TemplatedParent}}" Margin="2,4,8,0" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" />
                        <ComboBox x:Name="ReminderPicker" Width="130" Height="Auto" IsEditable="true" Foreground="{StaticResource ForegroundBrush}" VerticalAlignment="Center" Margin="0,2,8,0" Style="{StaticResource ComboBoxStyle}" />
                      </StackPanel>
                      <Button Style="{StaticResource TransparentButtonStyle}" x:Name="RecurrenceButton" Margin="0,0,12,0">
                        <igLayout:Commanding.Command>
                          <igPrim:ActivityDialogCoreCommandSource EventName="Click" CommandType="DisplayRecurrenceDialog" />
                        </igLayout:Commanding.Command>
                        <StackPanel>
                          <Path Data="M7.5,0 C7.6294417,9.2718267E-08 7.7581177,0.0032792571 7.8859491,0.0097588897 L8.0000019,0.016986609 L8.0000019,3.0277944 L7.9601007,3.0232332 C7.8088241,3.00787 7.6553321,3 7.5000019,3 C5.0147204,3 3.0000019,5.0147185 3.0000019,7.5 C3.0000019,9.985281 5.0147204,12 7.5000019,12 C9.9852829,12 12.000002,9.985281 12.000002,7.5 C12.000002,7.3446698 11.992132,7.1911778 11.976768,7.0399013 L11.975751,7.0310001 L10,7.0310001 L13.515625,3.0310001 L17,7.0310001 L14.984978,7.0310001 L14.990241,7.1140509 C14.996721,7.2418823 15,7.3705583 15,7.5 C15,11.642136 11.642136,15 7.5,15 C3.3578644,15 0,11.642136 0,7.5 C0,3.3578644 3.3578644,9.2718267E-08 7.5,0 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Height="22" Width="24" />
                          <TextBlock Text="{Binding LocalizedStrings[DLG_Appointment_Core_ButtonTool_Recurrence], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0" />
                        </StackPanel>
                      </Button>
                      <ToggleButton x:Name="TimeZonesButton" Style="{StaticResource ActivityDialogToggleButtonStyle}">
                        <igLayout:Commanding.Commands>
                          <igLayout:CommandSourceCollection>
                            <igPrim:ActivityDialogCoreCommandSource EventName="Checked" CommandType="ShowTimeZonePickers" />
                            <igPrim:ActivityDialogCoreCommandSource EventName="Unchecked" CommandType="HideTimeZonePickers" />
                          </igLayout:CommandSourceCollection>
                        </igLayout:Commanding.Commands>
                        <StackPanel>
                          <Path Data="F1M-1802.07,-3405.59C-1819.37,-3405.59 -1833.4,-3391.56 -1833.4,-3374.26 -1833.4,-3356.95 -1819.37,-3342.92 -1802.07,-3342.92 -1784.76,-3342.92 -1770.73,-3356.95 -1770.73,-3374.26 -1770.73,-3391.56 -1784.76,-3405.59 -1802.07,-3405.59 M-1796.01,-3364.05L-1802.72,-3354.17C-1805.51,-3348.19,-1803.78,-3347.17,-1803.78,-3347.17L-1806.83,-3347.17C-1805.71,-3348.03 -1809.66,-3353.65 -1809.66,-3353.65 -1809.14,-3355.36 -1810.78,-3363.03 -1810.78,-3363.03 -1816.34,-3366.78 -1813.71,-3370.87 -1813.71,-3370.87 -1811.79,-3372.58 -1818.35,-3376.16 -1818.35,-3376.16 -1822.58,-3375.43 -1823.98,-3379.83 -1823.98,-3379.83 -1825.85,-3379.57 -1826.02,-3381.1 -1826.02,-3381.1 -1828.75,-3385.71 -1821.76,-3393.38 -1821.76,-3393.38 -1811.53,-3404.12 -1800.61,-3400.88 -1800.61,-3400.88 -1801.3,-3400.37 -1801.32,-3399.52 -1801.32,-3399.52 -1797.41,-3396.45 -1802.72,-3395.6 -1802.72,-3395.6 -1802.27,-3394.24 -1800.1,-3392.36 -1800.1,-3392.36 -1799.6,-3386.39 -1802.72,-3390.14 -1802.72,-3390.14L-1802.72,-3388.44C-1806.88,-3386.73 -1808.68,-3384.69 -1808.68,-3384.69 -1814.2,-3377.7 -1813.71,-3382.13 -1813.71,-3382.13 -1821.34,-3380.59 -1818.01,-3378.72 -1818.01,-3378.72 -1815.62,-3380.42 -1815.11,-3378.03 -1815.11,-3378.03L-1812.62,-3375.14 -1808.68,-3376.16C-1806.35,-3376.16 -1797.04,-3369.55 -1797.04,-3369.55 -1792.95,-3368.06 -1796.01,-3364.05 -1796.01,-3364.05 M-1795.16,-3396.79L-1797.04,-3400.88 -1788,-3396.79C-1790.47,-3396.96,-1795.16,-3396.79,-1795.16,-3396.79 M-1777.31,-3370.37C-1785.54,-3370.02 -1788,-3374.12 -1788,-3374.12 -1792.09,-3379.57 -1783.86,-3384.86 -1783.86,-3384.86 -1787.38,-3387.58 -1782.88,-3388.95 -1782.88,-3388.95L-1782.88,-3390.66C-1786.8,-3391.17 -1783.56,-3394.4 -1783.56,-3394.4 -1770.26,-3380.94 -1776.46,-3365.25 -1776.46,-3365.25 -1777.54,-3366.44 -1777.31,-3370.37 -1777.31,-3370.37" Fill="{StaticResource GlyphBackgroundBrush}" Width="22" Height="22" Stretch="Fill" UseLayoutRounding="False" />
                          <TextBlock Text="{Binding LocalizedStrings[DLG_Appointment_Core_ButtonTool_TimeZones], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0" />
                        </StackPanel>
                      </ToggleButton>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RibbonGroup_Options], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" TextAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Grid.RowSpan="2" Grid.Column="1">
                      <Rectangle Width="1" Fill="{StaticResource RibbonSeparatorBackgroundBrush}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!-- Tags Group -->
                <Grid x:Name="TagsGroup" Grid.Column="2">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" MinHeight="23" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Background="{StaticResource ActivityDialogRibbonTagsBackgroundBrush}" Grid.Row="1" BorderBrush="{StaticResource ActivityDialogRibbonTagsBorderBrush}" Grid.ColumnSpan="2" BorderThickness="0,1,1,1" />
                    <StackPanel Orientation="Horizontal">
                      <ToggleButton x:Name="CategorizeButton" Style="{StaticResource ActivityDialogToggleButtonStyle}" Margin="12,0">
                        <StackPanel Margin="3">
                          <Path Data="M39.560302,40.410383L39.560302,56.691446 59.561691,56.691446 59.561691,40.410383z M14.781027,38.220106L11.460794,44.89031 4.0802822,45.940344 9.4006519,51.150503 8.1205635,58.490725 14.721022,55.050619 21.301478,58.530726 20.071393,51.190504 25.421764,46.010344 18.051252,44.910311z M35.129995,34.349989L64.001999,34.349989 64.001999,63.221869 35.129995,63.221869z M0,34.349989L28.872004,34.349989 28.872004,63.220869 0,63.220869z M14.435997,5.7786094L9.4373837,14.4364 4.4387684,23.094189 14.435997,23.094189 24.433226,23.094189 19.434611,14.4364z M49.570838,5.1090471C44.410567,5.1090476 40.230223,9.2779047 40.230223,14.436257 40.230223,19.585333 44.410567,23.763952 49.570838,23.763952 54.72122,23.763952 58.901564,19.585333 58.901564,14.436257 58.901564,9.2779047 54.72122,5.1090476 49.570838,5.1090471z M0,8.4879663E-05L28.871994,8.4879663E-05 28.871994,28.872715 0,28.872715z M35.129893,0L64.001894,0 64.001894,28.872999 35.129893,28.872999z" Fill="{StaticResource GlyphBackgroundBrush}" Width="22" Height="22" Stretch="Fill" UseLayoutRounding="False" />
                          <TextBlock Text="{Binding LocalizedStrings[DLG_Appointment_Core_ButtonTool_Categorize], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Margin="0,6,0,0" />
                        </StackPanel>
                      </ToggleButton>
                    </StackPanel>
                    <TextBlock Grid.Row="1" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RibbonGroup_Tags], RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" TextAlignment="Center" />
                    <StackPanel Orientation="Horizontal" Grid.RowSpan="2" Grid.Column="1">
                      <Rectangle Width="1" Fill="{Binding ColorScheme.DefaultBrushProvider[RibbonLiteGroupInnerBorderBrush], RelativeSource={RelativeSource TemplatedParent}}" />
                      <Rectangle Width="1" Fill="{StaticResource RibbonSeparatorBackgroundBrush}" />
                    </StackPanel>
                  </Grid>
                </Grid>
                <!-- Dummy group -->
                <Grid Grid.Column="3" HorizontalAlignment="Stretch" />
              </Grid>
            </Grid>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SpinButton Style **********************************-->
  <Style x:Key="SpinButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Padding" Value="3" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.7" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** TaskDialogCore Style **********************************-->
  <Style TargetType="{x:Type igPrim:TaskDialogCore}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:TaskDialogCore}">
          <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
            <Style BasedOn="{StaticResource EditableTextBoxStyle}" TargetType="{x:Type TextBox}" />
          </ControlTemplate.Resources>
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid x:Name="RootPanel">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ContentControl x:Name="NavigationControlSite" Content="{TemplateBinding NavigationControlSiteContent}" />
                <Grid Grid.Row="1" Margin="12">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="85" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!-- Message area -->
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="5" Orientation="Vertical" Margin="0,4,0,0">
                      <!-- DueIn Description -->
                      <StackPanel Orientation="Horizontal" Visibility="{Binding DueInDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,12">
                        <Grid Width="16" Height="16">
                          <Ellipse Width="16" Height="16" Fill="{StaticResource AccentForegroundBrush}" />
                          <Rectangle Width="2" Height="7" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,3,0,0" RadiusX="1" RadiusY="1" />
                          <Ellipse Width="3" Height="3" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,11,0,0" />
                        </Grid>
                        <TextBlock Text="{Binding DueInDescription, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <!-- Occurrence Description -->
                      <StackPanel Orientation="Horizontal" Visibility="{Binding OccurrenceDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid Width="16" Height="16">
                          <Ellipse Width="16" Height="16" Fill="{StaticResource AccentForegroundBrush}" />
                          <Rectangle Width="2" Height="7" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,3,0,0" RadiusX="1" RadiusY="1" />
                          <Ellipse Width="3" Height="3" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,11,0,0" />
                        </Grid>
                        <TextBlock Text="{Binding OccurrenceDescription, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="8,0,0,0" Style="{StaticResource TextBlockStyle}" />
                      </StackPanel>
                      <!-- Activity Category List -->
                      <Grid HorizontalAlignment="Stretch" Visibility="{Binding ActivityCategoryListItemsVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="3,4,3,0">
                        <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ActivityCategoryListItems, RelativeSource={RelativeSource TemplatedParent}}">
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <igPrim:CompactWrapPanel />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                          <ItemsControl.ItemTemplate>
                            <DataTemplate>
                              <igPrim:ActivityCategoryPresenter Category="{Binding ActivityCategory}" HorizontalContentAlignment="Stretch" igPrim:ActivityCategoryHelper.ActivityCategoryHelper="{Binding ActivityCategoryHelper}" />
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                        </ItemsControl>
                      </Grid>
                    </StackPanel>
                    <!-- Subject -->
                    <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1" Grid.Column="0" Margin="0,6,0,0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_Subject], RelativeSource={RelativeSource TemplatedParent}}" />
                    <TextBox x:Name="Subject" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Text="{Binding Subject, Mode=TwoWay}" Margin="0,6,0,0" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TabIndex="0" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" BorderBrush="{StaticResource TextBoxBorderBrush}" />

                    <Grid x:Name="startAndDueDatesGrid" Visibility="{Binding DatesSectionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="3" Grid.ColumnSpan="5" Margin="0,12,0,0">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Start Date -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Task_Core_StartDate], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,8" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="StartDatePicker" Grid.Row="0" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,8,8" />
                      <ComboBox x:Name="StartTimePicker" Grid.Row="0" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" IsEditable="True" TabIndex="30" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{StaticResource TextBoxBorderBrush}" Margin="0,0,12,8" />
                      <!-- Due Date -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Task_Core_DueDate], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,8,8" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="EndDatePicker" Grid.Row="1" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,8,8" />
                      <ComboBox x:Name="EndTimePicker" Grid.Row="1" Grid.Column="2" IsEditable="True" TabIndex="60" VerticalAlignment="Center" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" BorderBrush="{StaticResource TextBoxBorderBrush}" Margin="0,0,12,8" />
                      <!-- Percent Complete -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" TextAlignment="Right" Margin="0,0,8,8" Text="{Binding LocalizedStrings[DLG_Task_Core_PercentComplete], RelativeSource={RelativeSource TemplatedParent}}" />
                      <Grid Grid.Row="1" Grid.Column="4" Margin="0,0,0,8">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="60" />
                        </Grid.ColumnDefinitions>
                        <igPrim:SimpleNumericTextBox x:Name="PercentComplete" Value="{Binding PercentComplete, Mode=TwoWay}" VerticalAlignment="Center" MinValue="0" MaxValue="100" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="30" MinWidth="45" Style="{DynamicResource EditableTextBoxStyle}" />
                        <ScrollBar Grid.Column="1" Margin="4,0,0,0" Orientation="Vertical" Value="{Binding PercentComplete, Mode=TwoWay}" Minimum="0" Maximum="100" BorderBrush="{TemplateBinding BorderBrush}" SmallChange="25" LargeChange="25" VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="Auto" IsEnabled="{Binding Path=IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}">
                          <ScrollBar.Template>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                              <Grid>
                                <Grid.ColumnDefinitions>
                                  <ColumnDefinition Width="Auto" />
                                  <ColumnDefinition Width="*" />
                                  <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Grid.Row="0" Command="ScrollBar.LineDownCommand" Cursor="Hand" Opacity=".7" Style="{DynamicResource SpinButtonStyle}" Width="15" Height="15">
                                  <Path Width="7" Height="4" Data="M0,4 L7,4 L4,0 z" Fill="{StaticResource GlyphHoverBackgroundBrush}" Stretch="Fill" />
                                </RepeatButton>
                                <RepeatButton Grid.Column="2" Command="ScrollBar.LineUpCommand" Cursor="Hand" Opacity=".7" Width="30" Height="30" Style="{DynamicResource SpinButtonStyle}">
                                  <Path Width="7" Height="4" Data="M0,0 L7,0 L4,4 z" Fill="{StaticResource GlyphHoverBackgroundBrush}" Stretch="Fill" />
                                </RepeatButton>
                              </Grid>
                            </ControlTemplate>
                          </ScrollBar.Template>
                        </ScrollBar>
                      </Grid>
                    </Grid>
                    <!-- Reminder and Owner Info -->
                    <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="5" Margin="0,12,0,0">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- ReminderEnabled Checkbox -->
                      <CheckBox Grid.Column="0" IsChecked="{Binding ReminderEnabled, Mode=TwoWay}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TabIndex="40" Content="{Binding LocalizedStrings[DLG_Activity_Core_Reminder], RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource CheckBoxStyle}" Margin="0,0,8,0" />
                      <!-- Reminder Date -->
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="ReminderDatePicker" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,8,0" />
                      <!-- Reminder Time -->
                      <ComboBox x:Name="ReminderTimePicker" IsEditable="True" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" TabIndex="30" Margin="0,0,12,0" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      <!-- Owner -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Column="3" VerticalAlignment="Center" Margin="0" Text="{Binding LocalizedStrings[DLG_Activity_Core_Owner], RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <Grid x:Name="recurrenceRootMessageGrid" Visibility="{Binding RecurrenceRootDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="6" Grid.ColumnSpan="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Root Recurrence description -->
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RecurrenceRootLabel], RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,12" />
                      <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Text="{Binding RecurrenceRootDescription, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,12,8,12" />
                    </Grid>
                  </Grid>
                  <!-- Text -->
                  <TextBox Grid.Row="1" Text="{Binding Description, Mode=TwoWay}" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" TabIndex="70" AcceptsReturn="True" BorderBrush="{StaticResource TextBoxBorderBrush}" Style="{DynamicResource EditableTextBoxStyle}" Margin="0,12,0,0" />
                </Grid>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** JournalDialogCore Style **********************************-->
  <Style TargetType="{x:Type igPrim:JournalDialogCore}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igPrim:JournalDialogCore}">
          <ControlTemplate.Resources>
            <Style BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}" />
            <Style BasedOn="{StaticResource EditableTextBoxStyle}" TargetType="{x:Type TextBox}" />
          </ControlTemplate.Resources>
          <ContentControl Foreground="{Binding DataManager.ColorSchemeResolved.DefaultBrushProvider[DialogForeground], RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource PopupBackgroundBrush}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
              <Grid x:Name="RootPanel">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ContentControl x:Name="NavigationControlSite" Content="{TemplateBinding NavigationControlSiteContent}" />
                <Grid Grid.Row="1" Margin="12">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="85" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!-- Message area -->
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="5" Orientation="Vertical">
                      <!-- Occurrence Description -->
                      <StackPanel Orientation="Horizontal" Visibility="{Binding OccurrenceDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,12">
                        <Grid Width="16" Height="16">
                          <Ellipse Width="16" Height="16" Fill="{StaticResource AccentForegroundBrush}" />
                          <Rectangle Width="2" Height="7" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,3,0,0" RadiusX="1" RadiusY="1" />
                          <Ellipse Width="3" Height="3" Fill="{StaticResource LightForegroundBrush}" VerticalAlignment="Top" Margin="0,11,0,0" />
                        </Grid>
                        <TextBlock Text="{Binding OccurrenceDescription, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="8,0,0,0" Style="{DynamicResource TextBlockStyle}" />
                      </StackPanel>
                      <!-- Activity Category List -->
                      <Grid HorizontalAlignment="Stretch" Visibility="{Binding ActivityCategoryListItemsVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,12">
                        <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding ActivityCategoryListItems, RelativeSource={RelativeSource TemplatedParent}}">
                          <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                              <igPrim:CompactWrapPanel />
                            </ItemsPanelTemplate>
                          </ItemsControl.ItemsPanel>
                          <ItemsControl.ItemTemplate>
                            <DataTemplate>
                              <igPrim:ActivityCategoryPresenter Category="{Binding ActivityCategory}" HorizontalContentAlignment="Stretch" igPrim:ActivityCategoryHelper.ActivityCategoryHelper="{Binding ActivityCategoryHelper}" />
                            </DataTemplate>
                          </ItemsControl.ItemTemplate>
                        </ItemsControl>
                      </Grid>
                    </StackPanel>
                    <!-- Subject -->
                    <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_Subject], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Margin="0,0,8,0" />
                    <TextBox x:Name="Subject" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Text="{Binding Subject, Mode=TwoWay}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TabIndex="0" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" BorderBrush="{StaticResource TextBoxBorderBrush}" />

                    <Grid x:Name="startTimeAndDurationGrid" Visibility="{Binding IsRecurrenceRoot, Converter={StaticResource notBoolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="3" Grid.ColumnSpan="5" Margin="0,12,0,0">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Start Time -->
                      <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_StartTime], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Margin="0,0,8,0" />
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="StartDatePicker" Grid.Row="0" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,8,0" />
                      <ComboBox x:Name="StartTimePicker" IsEditable="True" Grid.Row="0" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" TabIndex="30" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,0,8,0" />
                      <!-- Duration Time Picker -->
                      <Grid Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Journal_Core_Duration], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" Margin="0,0,8,0" />
                        <ComboBox x:Name="DurationTimePicker" IsEditable="True" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" TabIndex="35" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                      </Grid>
                    </Grid>
                    <!-- Reminder and Owner Info -->
                    <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="5" Margin="0,12,0,0">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="130" />
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- ReminderEnabled Checkbox -->
                      <CheckBox Grid.Column="0" IsChecked="{Binding ReminderEnabled, Mode=TwoWay}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TabIndex="40" Content="{Binding LocalizedStrings[DLG_Activity_Core_Reminder], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource CheckBoxStyle}" Margin="0,0,8,0" />
                      <!-- Reminder Date -->
                      <DatePicker Style="{StaticResource DatePickerStyle}" x:Name="ReminderDatePicker" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="20" VerticalAlignment="Center" Margin="0,0,8,0" />
                      <!-- Reminder Time -->
                      <ComboBox x:Name="ReminderTimePicker" IsEditable="True" Grid.Column="2" Foreground="{StaticResource ForegroundBrush}" TabIndex="30" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="0,0,8,0" />
                      <!-- Owner -->
                      <TextBlock Grid.Column="3" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Activity_Core_Owner], RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
                    </Grid>
                    <Grid x:Name="recurrenceRootMessageGrid" Visibility="{Binding RecurrenceRootDescriptionVisibility, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="6" Grid.ColumnSpan="5">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <!-- Root Recurrence description -->
                      <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,12,8,0" VerticalAlignment="Center" Text="{Binding LocalizedStrings[DLG_Appointment_Core_RecurrenceRootLabel], RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" />
                      <TextBlock Grid.Row="0" Grid.Column="1" Margin="0,12,8,0" VerticalAlignment="Center" Text="{Binding RecurrenceRootDescription, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource TextBlockStyle}" HorizontalAlignment="Left" />
                    </Grid>
                  </Grid>
                  <!-- Text -->
                  <TextBox Grid.Row="1" Text="{Binding Description, Mode=TwoWay}" igPrim:XamlHelper.UpdateBindingOnTextPropertyChanged="True" IsEnabled="{Binding IsActivityModifiable, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" TabIndex="70" AcceptsReturn="True" BorderBrush="{StaticResource TextBoxBorderBrush}" Margin="0,12,0,0" />
                </Grid>
              </Grid>
            </Border>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>