<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppInfo" xml:space="preserve">
    <value>マップ ブラウザーは、Infragistics 地理マップ コントロールの機能を紹介するアプリケーションです。Bing Maps、OpenStreetMap、CloudMade、ESRI、および MapQuest ソースの画像タイルに地理的データをプロットして結合マップを作成できます。このアプリケーションは、世界のすべての国のデータ ソースを提供します。世界の大都市、地震、エアライン トラフィック、米国の降水量、およびオーストラリアの位置のデータを提供します。各データ セットは、地理マップ レイヤーを使用して視覚化されます。外観を編集し、地理マップ コントロールでプロットされたその他のマップ レイヤーにオーバーレイすることもできます。たとえば、地震位置は大都市の位置を表示するマップ レイヤーの上にプロットできます。地震が影響する世界の大きい市を視覚化するマップになります。</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>ja</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>マップ ブラウザー</value>
  </data>
  <data name="AppSubTitle" xml:space="preserve">
    <value>世界の地理的データを視覚化</value>
  </data>
  <data name="DataFilter_Area" xml:space="preserve">
    <value>エリア フィルター:</value>
  </data>
  <data name="DataFilter_Magnitude" xml:space="preserve">
    <value>震度フィルター:</value>
  </data>
  <data name="DataFilter_Population" xml:space="preserve">
    <value>人口フィルター:</value>
  </data>
  <data name="Data_AddAustralianSites" xml:space="preserve">
    <value>オーストラリア サイトの追加</value>
  </data>
  <data name="Data_AddCities" xml:space="preserve">
    <value>都市の追加</value>
  </data>
  <data name="Data_AddCountries" xml:space="preserve">
    <value>国の追加</value>
  </data>
  <data name="Data_AddEarthquakes" xml:space="preserve">
    <value>地震の追加</value>
  </data>
  <data name="Data_AddNewImagery" xml:space="preserve">
    <value>新しい画像の追加</value>
  </data>
  <data name="Data_AddUSAirlineTraffic" xml:space="preserve">
    <value>米国のフライト運行状況の追加</value>
  </data>
  <data name="Data_AddUSPrecipitation" xml:space="preserve">
    <value>米国の降水量の追加</value>
  </data>
  <data name="Data_AddWeatherStations" xml:space="preserve">
    <value>気象観測所の追加</value>
  </data>
  <data name="Data_IncomingFlights" xml:space="preserve">
    <value>着信飛行</value>
  </data>
  <data name="Data_OutgoingFlights" xml:space="preserve">
    <value>発信飛行</value>
  </data>
  <data name="Data_ToggleDataAnimation" xml:space="preserve">
    <value>データ アニメーションを切り替える</value>
  </data>
  <data name="MapBaseLayer" xml:space="preserve">
    <value>マップ ベース レイヤー</value>
  </data>
  <data name="MapDataSources" xml:space="preserve">
    <value>マップ データ ソース</value>
  </data>
  <data name="MapLayerEditor" xml:space="preserve">
    <value>マップ レイヤー エディター</value>
  </data>
  <data name="MapLayer_AustralianSites" xml:space="preserve">
    <value>オーストラリア サイト レイヤー</value>
  </data>
  <data name="MapLayer_MapImageryOverlay" xml:space="preserve">
    <value>マップ画像オーバーレイ</value>
  </data>
  <data name="MapLayer_US_AirlineTraffic" xml:space="preserve">
    <value>米国のフライト運行状況レイヤー</value>
  </data>
  <data name="MapLayer_US_Precipitation" xml:space="preserve">
    <value>米国の降水量レイヤー</value>
  </data>
  <data name="MapLayer_WorldCities" xml:space="preserve">
    <value>都市の人口レイヤー</value>
  </data>
  <data name="MapLayer_WorldCountries" xml:space="preserve">
    <value>国の図形レイヤー</value>
  </data>
  <data name="MapLayer_WorldEarthquakes" xml:space="preserve">
    <value>地震レイヤー</value>
  </data>
  <data name="MapView_Map" xml:space="preserve">
    <value>マップ</value>
  </data>
</root>