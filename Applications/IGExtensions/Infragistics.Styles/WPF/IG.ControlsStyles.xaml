<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IGExtensions.AirplaneSeatingChart;component/Assets/Styles/AppBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/IGExtensions.Common;component/IG.Brushes.xaml" />
        <ResourceDictionary Source="/IGExtensions.Common;component/IG.ChartBrushes.xaml" />
        <ResourceDictionary Source="/IGExtensions.Common;component/IG.ControlsStyles.shared.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- TODO: move brushes that are not specific to WPF controls to IG.Brushes.xaml -->

    <!-- *********************************  Slider Brushes ********************************* -->
    <SolidColorBrush x:Key="SliderTrackBorderFill" Color="#FF888888" />
    <LinearGradientBrush x:Key="SliderTrackFill" EndPoint="0.82,0.25" StartPoint="0.82,1">
        <GradientStop Color="#FF8D8D8D" Offset="0" />
        <GradientStop Color="#FFD5D5D5" Offset="0.93" />
        <GradientStop Color="#FFD9D9D9" Offset="0.98" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="btnBorderBrush" Color="#FF535353" />
    <LinearGradientBrush x:Key="btnBackgroundBrush" EndPoint="0.55,0.97" StartPoint="0.55,0.04">
        <GradientStop Color="#FF7D7D7D" Offset="0" />
        <GradientStop Color="#FF515151" Offset="0.94" />
        <GradientStop Color="#FF4F4F4F" Offset="0.99" />
    </LinearGradientBrush>

    <!-- *********************************  Field Item Brushes  ********************************* -->
    <LinearGradientBrush x:Key="TextBoxGradient" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
        <GradientStop Color="#FFffffff" Offset="0.377" />
        <GradientStop Color="#FFe9e9e9" Offset="1" />
    </LinearGradientBrush>
    <DropShadowEffect x:Key="DropShadowStyle" BlurRadius="15" Direction="270" ShadowDepth="1" Opacity="0.26" Color="#FF000000" />
    <SolidColorBrush x:Key="DarkGrayStroke" Color="#FF4B4B4B" />

    <!-- *********************************  ScrollBars Brushes ********************************* -->
    <SolidColorBrush x:Key="BaseScrollbarBg" Color="#B2E9E9E9" />
    <SolidColorBrush x:Key="ArrowDarkStroke" Color="#FF666666" />
    <SolidColorBrush x:Key="ArrowBgColor" Color="#FF7C7C7C" />
    <SolidColorBrush x:Key="ScrollbarStroke" Color="#4CACACAC" />
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />
    <RadialGradientBrush x:Key="ScrollbarVBgBrush" Center="0,0.5" GradientOrigin="0,0.5" RadiusX="0.5" RadiusY="1.1" Opacity="0.3">
        <GradientStop Color="#cc666666" />
        <GradientStop Color="#4c666666" Offset="1" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="ScrollbarHBgBrush" Center="0.495,0.128" GradientOrigin="0.5,0.1" RadiusX="1.134" RadiusY="0.65" Opacity="0.3">
        <GradientStop Color="#cc666666" />
        <GradientStop Color="#4c666666" Offset="1" />
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ScrollbarHThumbBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="DimGray" Offset="1" />
        <GradientStop Color="#FF7A7A7A" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollbarVThumbBgBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="DimGray" Offset="1" />
        <GradientStop Color="#FF7A7A7A" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizThumb_Hover" StartPoint="0.684,-0.023" EndPoint="0.684,0.971">
        <GradientStop Color="#FF3bb7eb" />
        <GradientStop Color="#FF2686ae" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizThumb_Pressed" StartPoint="0.684,1.2" EndPoint="0.684,0.03">
        <GradientStop Color="#FF3bb7eb" />
        <GradientStop Color="#FF2686ae" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VertThumb_Hover" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="#FF3bb7eb" />
        <GradientStop Color="#FF2686ae" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VertThumb_Pressed" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <GradientStop Color="#FF3bb7eb" Offset="1" />
        <GradientStop Color="#FF2686ae" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="TextBoxInnerShadow" RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
        <GradientStop Color="#00565656" Offset="0.679" />
        <GradientStop Color="#33565656" Offset="0.997" />
    </RadialGradientBrush>

    <!-- ************************************************ DataGrid Styles *************************************************-->
    <LinearGradientBrush x:Key="HeaderNormalBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="0" Color="#FF757575" />
        <GradientStop Offset="0.93" Color="#FF505050" />
        <GradientStop Offset="0.98" Color="#FF4f4f4f" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF4f4f4f" />
        <GradientStop Offset="0.93" Color="#FF727272" />
        <GradientStop Offset="0.99" Color="#FF757575" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="#FF535353" />
    <LinearGradientBrush x:Key="CellRowHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3bb7eb" />
        <GradientStop Color="#FF2686ae" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CellItemActiveBorderBrush" Color="#FF3AB5E9" />
    <LinearGradientBrush x:Key="CellItemSelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#B2D6D6D6" Offset="1" />
        <GradientStop Color="#B2E7E7E7" Offset="0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CellItemActiveBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE2E2E2" Offset="1" />
        <GradientStop Color="White" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataSelectorBgBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFD0D0D0" />
        <GradientStop Offset="0.992" Color="#FFB6B6B6" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataSelectorStroke" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF727272" />
        <GradientStop Color="#FF535353" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="CellRowHoverStroke" Color="#FF2788B1" />
    <!--<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />-->
    <LinearGradientBrush x:Key="ButtonBorderBrush" StartPoint="0.0, 0.0" EndPoint="0.0, 1.0">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFD6D6D6" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SyntaxEditorBackground" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="SyntaxEditorBorderBrush" Color="#FFD0D0D0" />
    <SolidColorBrush x:Key="LineNumberMarginForegroundBrush" Color="#FF16A9E7"/>

    <Style x:Key="TitleBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource DropDownStroke_Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="{StaticResource Button_NormalState}" />
    </Style>

    <LinearGradientBrush x:Key="OptionsPanelBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF3F3F3"/>
        <GradientStop Color="#FFB1B1B1" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="OptionsPanelBorderBrush" Color="#FFB1B1B1" />

    <!--<Style BasedOn="{StaticResource IGGenericButton}" TargetType="Button" />-->

    <!-- *********************************  IG Thumb Style  ********************************* -->
    <Style x:Key="IGThumbStyle" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource btnBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource btnBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Height="12" Width="8">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Rectangle x:Name="hover" Fill="{StaticResource Button_Hover}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource Button_Pressed}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="disabled" Fill="{StaticResource DropDown_Disabled}" RadiusY="2" RadiusX="2" Stroke="{StaticResource DropDownStroke_Disabled}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="2" RadiusX="2" Stroke="{StaticResource LightBrush1}" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  SliderRepeatButton Style  ********************************* -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  IG ThumbStyle_Horizontal  ********************************* -->
    <Style x:Key="IGThumbStyle_Horizontal" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource btnBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource btnBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Height="12" Width="8">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Rectangle x:Name="hover" Fill="{StaticResource Button_Hover}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource Button_Pressed}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="disabled" Fill="{StaticResource DropDown_Disabled}" RadiusY="2" RadiusX="2" Stroke="{StaticResource DropDownStroke_Disabled}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="2" RadiusX="2" Stroke="{StaticResource LightBrush1}" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  IG ThumbStyle_Vertical  ********************************* -->
    <Style x:Key="IGThumbStyle_Vertical" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource btnBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource btnBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Height="8" Width="12">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Rectangle x:Name="hover" Fill="{StaticResource Button_Hover}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource Button_Pressed}" RadiusY="2" RadiusX="2" Stroke="{StaticResource Cyan2}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="disabled" Fill="{StaticResource DropDown_Disabled}" RadiusY="2" RadiusX="2" Stroke="{StaticResource DropDownStroke_Disabled}" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="2" RadiusX="2" Stroke="{StaticResource LightBrush1}" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  IG Slider Style ********************************* -->
    <Style x:Key="IGSliderStyle" TargetType="Slider">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FFC4C4C4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid Height="12">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                            <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderTrackBorderFill}" BorderThickness="1" Background="{StaticResource SliderTrackFill}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource DropDown_Hover}" Height="4.0" Stroke="{DynamicResource DropDownStroke_Pressed}" StrokeThickness="1.0" Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource IGThumbStyle_Horizontal}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource IGThumbStyle_Horizontal}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource IGThumbStyle_Horizontal}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4" />
                                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4" />
                                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderTrackBorderFill}" BorderThickness="1" Background="{StaticResource SliderTrackFill}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource DropDown_Hover}" Stroke="{DynamicResource DropDownStroke_Pressed}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0" />
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource IGThumbStyle_Vertical}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource IGThumbStyle_Vertical}" />
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource IGThumbStyle_Vertical}" />
                                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--<Style BasedOn="{StaticResource IGSliderStyle}" TargetType="Slider" />-->

    <!-- *********************************  Horizontal Scrollbar Button Style  ********************************* -->
    <!--<Style x:Key="ScrollBarButton" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent" />
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ArrowBgColor}" />
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource LightBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource DarkBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!-- *********************************  Vertical Scrollbar Page Button Style  ********************************* -->
    <!--<Style x:Key="VScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!-- *********************************  Horizontal Scrollbar Gray THumb Style  ********************************* -->
    <!--<Style x:Key="HScrollBarThumb" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource ScrollbarHThumbBgBrush}" Stroke="{StaticResource ArrowDarkStroke}" />
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HorizThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource HorizThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!-- *********************************  Vertical Scrollbar THumb Style  ********************************* -->
    <Style x:Key="VScrollBarThumb" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid x:Name="grid" Height="Auto" Width="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkStroke}">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="DimGray" Offset="1" />
                                            <GradientStop Color="#FF7A7A7A" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VertThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource VertThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- *********************************  Horizontal Scrollbar Page Button Style  ********************************* -->
    <!--<Style x:Key="HScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent" />
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ArrowBgColor}" />
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource LightBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource DarkBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  Vertical Scrollbar Thumb Style  ********************************* -->
    <!--<Style x:Key="ScrollbarVThumb" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource ScrollbarVThumbBgBrush}" Stroke="{StaticResource ArrowDarkStroke}" />
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource VertThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource VertThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Rectangle x:Name="disabled" Fill="#FF7C7C7C" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  Horizontal Scrollbar Thumb Style  ********************************* -->
    <!--<Style x:Key="ScrollbarHThumb" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ScrollbarHThumbBgBrush}" />
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" Fill="{StaticResource HorizThumb_Hover}" />
                        <Rectangle x:Name="pressed" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" Fill="{StaticResource HorizThumb_Pressed}" />
                        <Rectangle x:Name="disabled" Fill="#FF7C7C7C" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  IG Scrollbar Style  ********************************* -->
    <!--<Style x:Key="IGScrollBarStyleStyle" TargetType="ScrollBar">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource ScrollbarHBgBrush}" Stroke="{StaticResource ScrollbarStroke}" />
                            <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="1" Style="{StaticResource ScrollBarPageButton}" RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0" />
                            <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" MinWidth="18" Style="{StaticResource ScrollbarHThumb}" Margin="0,5" />
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" />
                            <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="1" Style="{StaticResource ScrollBarPageButton}" RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                        <Grid x:Name="VerticalRoot" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle Grid.RowSpan="5" StrokeThickness="1" Fill="{StaticResource ScrollbarVBgBrush}" Stroke="{StaticResource ScrollbarStroke}" />
                            <RepeatButton x:Name="VerticalSmallDecrease" IsTabStop="False" Interval="50" Margin="1" Grid.Row="0" Style="{StaticResource ScrollBarPageButton}" />
                            <RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}" />
                            <Thumb x:Name="VerticalThumb" MinHeight="18" Grid.Row="2" Style="{StaticResource ScrollbarVThumb}" Margin="5,0" />
                            <RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" />
                            <RepeatButton x:Name="VerticalSmallIncrease" IsTabStop="False" Interval="50" Margin="1" Grid.Row="4" Style="{StaticResource ScrollBarPageButton}" RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="180" />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- *********************************  IG ScrollViewer Style ********************************* -->
    <!--<Style x:Key="IGScrollViewerStyle2" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{StaticResource LightForegroundColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource GridBorderBrush}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                            <Rectangle Grid.Column="1" Fill="{StaticResource Gray1}" Grid.Row="1" StrokeThickness="0" Opacity="0.7" />
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="17" Style="{StaticResource IGScrollBarStyleStyle}" />
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="17" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="0" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource IGScrollBarStyleStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--<Style TargetType="ScrollViewer" BasedOn="{StaticResource IGScrollViewerStyle}" />-->

    <!-- *********************************  Horizontal Scrollbar Gray THumb Style  ********************************* -->
    <Style x:Key="HScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource ScrollbarHThumbBgBrush}" Stroke="{StaticResource ArrowDarkStroke}" />
                        <Rectangle x:Name="hover" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Fill="{StaticResource HorizThumb_Hover}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Rectangle x:Name="pressed" Fill="{StaticResource HorizThumb_Pressed}" RadiusY="2" RadiusX="2" StrokeThickness="1" Margin="1" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- *********************************  Horizontal Scrollbar Button Style  ********************************* -->
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent" />
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Stroke="{StaticResource ArrowDarkStroke}" Fill="{StaticResource ArrowBgColor}" />
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource LightBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="5" Stretch="Uniform" Width="8" Fill="{StaticResource DarkBrush1}" Opacity="0" Stroke="{StaticResource ArrowHoverStroke}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Vertical Scrollbar Page Button Style  ********************************* -->
    <Style x:Key="VScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Horizontal Scrollbar Page Button Style  ********************************* -->
    <Style x:Key="HScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IGScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource ScrollbarVBgBrush}" Stroke="{StaticResource ScrollbarStroke}" Margin="0" />
                        <RepeatButton x:Name="repeatButton" Margin="1" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButton}" />
                        <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{DynamicResource VScrollBarThumb}" Margin="5,0" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Margin="1" RenderTransformOrigin="0.5,0.5">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                            <Path x:Name="smallIncreaseGlyph" Width="9" Height="5" Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF637195" Offset="0" />
                                        <GradientStop Color="#FF424B63" Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="20" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource ScrollbarHBgBrush}" Stroke="{StaticResource ScrollbarStroke}" />
                                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{DynamicResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallDecreaseGlyph" Width="5" Height="9" Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FF6e7ea6" />
                                                        <GradientStop Offset="1" Color="#FF424b63" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource HScrollBarThumb}" Margin="0,5" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{DynamicResource ScrollBarButton}" Opacity="1" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                    <Path x:Name="horizontalSmallIncreaseGlyph" Width="5" Height="9" Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z" IsHitTestVisible="False" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FF6e7ea6" />
                                                        <GradientStop Offset="1" Color="#FF424b63" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IGScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource GridBorderBrush}">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource Gray1}" Grid.Row="1" Opacity="0.5" />
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="1" Grid.Row="0" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource IGScrollBarStyle}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource IGScrollBarStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  IG Listbox Style  ********************************* -->
    <Style x:Key="IGListBoxStyle" TargetType="ListBox">
        <Setter Property="Padding" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource IGListBoxItemStyle}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Style="{StaticResource IGScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ********************************* Styles for TextBlock controls ********************************* -->
    <Style x:Key="BaseFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
    </Style>

    <Style x:Key="BodyStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="SamplesTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="SamplesBigTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="IgNowTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgNowSidebarHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgNowBody" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgBuzzTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgBuzzSidebarHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgBuzzBody" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgTimesTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgTimesSidebarHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgTimesBody" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgVoiceTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgVoiceSidebarHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="IgVoiceBody" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="FooterTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    <Style x:Key="FooterBody" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <!-- ************************************** BASIC SCROLLVIEWER ******************************************* -->

    <!-- *********************************  BaseScrollBarButton Style  ********************************* -->
    <Style x:Key="BaseScrollBarButton" TargetType="RepeatButton">
        <!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
        <!--<Setter Property="Focusable" Value="false" />-->
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="grid1" Width="20" Height="20">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent" />
                        <Path x:Name="normal" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="7" Stretch="Uniform" Width="10" Fill="{StaticResource ArrowBgColor}" />
                        <Path x:Name="hover" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="7" Stretch="Uniform" Width="10" Fill="{StaticResource Gray4}" Opacity="0" />
                        <Path x:Name="pressed" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="7" Stretch="Uniform" Width="10" Fill="{StaticResource ChartSeriesBrush8}" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PurpleButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Padding" Value="4,3,4,3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF333333" />
                    <GradientStop Color="#FF000000" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FF635e6e" Offset="0" />
                            <GradientStop Color="#FF302230" Offset="0.5" />
                            <GradientStop Color="#FF040404" Offset="0.5009999871253967" />
                            <GradientStop Color="#FF32034c" Offset="1" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <Rectangle x:Name="BackgroundGradient" RadiusX="2" RadiusY="2" Fill="{TemplateBinding Background}" Stroke="#FF888888" />
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" />
                        <Rectangle Margin="1" x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" Stroke="#FF550676" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="splitButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundHoverGradient" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundPressedGradient" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundHoverGradient" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BaseHoverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible
                                                    </Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Background" Background="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Grid.ColumnSpan="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFA3AEB9" />
                                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                                    <GradientStop Color="#FF718597" Offset="0.375" />
                                    <GradientStop Color="#FF617584" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Margin="1">
                                <Rectangle Fill="#FF1F3B53" x:Name="BaseNormalBackground" />
                                <Rectangle x:Name="BaseHoverBackground" Fill="#FF6DBDD1" Visibility="Collapsed" />
                                <Border x:Name="BackgroundAnimation" Background="#FF448DCA" Visibility="Collapsed" Margin="0,0.242,0,-0.242" />
                                <Rectangle x:Name="BackgroundGradient">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="BackgroundHoverGradient" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#F2FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#CCFFFFFF" Offset="0.625" />
                                            <GradientStop Color="#7FFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="BackgroundPressedGradient" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#D8FFFFFF" Offset="0" />
                                            <GradientStop Color="#C6FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#8CFFFFFF" Offset="0.625" />
                                            <GradientStop Color="#3FFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <Rectangle HorizontalAlignment="Left" Margin="0,1,0,2" Width="1" Grid.Column="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFA3AEB9" />
                                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                                    <GradientStop Color="#FF718597" Offset="0.375" />
                                    <GradientStop Color="#FF617584" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle HorizontalAlignment="Right" Margin="0,1,0,2" Width="1" Fill="#FFFFFFFF" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Grid.ColumnSpan="2" />
                        <Rectangle Margin="1" x:Name="FocusVisualElement" IsHitTestVisible="false" RadiusX="2" RadiusY="2" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Tag}" TextWrapping="NoWrap" Grid.Column="1" Margin="5,5,5,5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- *********************************  IGComboBox Style  ********************************* -->
    <Style x:Key="IGComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxGradient}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Gray2}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource IGComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="MainGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownhover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownDisabled" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="DropDownBackground" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" Height="{TemplateBinding Height}" Grid.ColumnSpan="2" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                <Rectangle x:Name="DropDownhover" Height="{TemplateBinding Height}"  Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Cyan0}" StrokeThickness="1" Margin="0" Opacity="0" Grid.ColumnSpan="2"/>
                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#FF3AB5E9" StrokeThickness="1" Grid.ColumnSpan="2"/>
                                <ToggleButton x:Name="DropDownToggle" Background="Green" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Style="{StaticResource IGcomboToggleStyle}"
                                              Height="{TemplateBinding Height}"
                                              Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Rectangle x:Name="DropDownDisabled" Fill="{StaticResource Gray0}" RadiusX="3" RadiusY="3" IsHitTestVisible="false" d:LayoutOverrides="GridBox" Grid.Column="1" Width="{TemplateBinding Height}" Opacity="0"/>
                                <ContentPresenter x:Name="ContentPresenter" IsHitTestVisible="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Content="{TemplateBinding SelectionBoxItem}">
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Red" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"  Grid.ColumnSpan="2" Margin="0 1">
                            <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch" 
                                    BorderBrush="{StaticResource GridBorderBrush}" 
                                    Background="{StaticResource LightForegroundColor}" 
                                    BorderThickness="1" Effect="{StaticResource DropShadowStyle}" CornerRadius="0"
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="0"  Margin="0" Style="{StaticResource IGScrollViewerStyle}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SamplesTextBox Style  ********************************* -->
    <Style x:Key="SamplesTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource TextBoxGradient}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Gray2}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

</ResourceDictionary>
