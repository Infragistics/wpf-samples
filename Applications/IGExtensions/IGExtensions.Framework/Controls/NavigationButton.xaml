<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:local="clr-namespace:IGExtensions.Framework.Controls"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
 
    <SolidColorBrush x:Key="NavigationButtonBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="NavigationButtonBackground" Color="Transparent"/>
    <SolidColorBrush x:Key="NavigationButtonSelectedBrush" Color="#FF8B8B8B"/>
    <SolidColorBrush x:Key="NavigationButtonHoverBackground" Color="#6FF3F0F3"/>
    <SolidColorBrush x:Key="NavigationButtonHoverForeground"  Color="#FFD8D8D8"/>
    <SolidColorBrush x:Key="NavigationButtonForegroundBrush" Color="#FFFFFFFF"/>     
    <SolidColorBrush x:Key="NavigationButtonDisabledBrush" Color="#FFAAAAAA"/>
    
    <Style x:Key="NavigationButtonStyle" TargetType="local:NavigationButton">
    	<Setter Property="Height" Value="30"/>
    	<Setter Property="Foreground" Value="{StaticResource NavigationButtonForegroundBrush}"/>
    	<Setter Property="FontSize" Value="13.333"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>		
    	<Setter Property="Cursor" Value="Hand"/>
    	<Setter Property="HorizontalAlignment" Value="Center"/>
    	<Setter Property="VerticalAlignment" Value="Center"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="HorizontalContentAlignment" Value="Center"/>
    	<Setter Property="Padding" Value="4,2,4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationButton">
                    <Grid  HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                           Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentBorder">
    										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
    										<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentBorder">
    										<EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked"/>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ValidationStates">
    							<VisualState x:Name="Valid"/>
    							<VisualState x:Name="InvalidFocused"/>
    							<VisualState x:Name="InvalidUnfocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Rectangle Fill="Transparent" />
                        
    					<Border x:Name="ContentBorder"  
    						Opacity="0.8" >
    						<!--Content="{TemplateBinding Content}"-->
    						<ContentPresenter x:Name="ContentPresenter" 
    							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
    							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" 
    							ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1"
    							Content="{TemplateBinding Content}">
    							<!--<ContentPresenter.Effect>
                                    <DropShadowEffect ShadowDepth="0" Color="#FF484848" Opacity="0" BlurRadius="0"/>
                                </ContentPresenter.Effect>-->
    							<!--<ContentPresenter.Content>
                                    <TextBlock x:Name="ContentTextBlock" Foreground="{TemplateBinding Foreground}" 
                                       FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  
                                       Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
                                </ContentPresenter.Content>-->
    						</ContentPresenter>
    					</Border>
                       
    					<!--<Border x:Name="InteractiveElementBorder" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Visibility="Collapsed" CornerRadius="3">
                            <TextBlock x:Name="InteractiveElement" Foreground="{TemplateBinding NavigationHoverForeground}" 
                                       FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" 
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextDecorations="Underline" 
                                       Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
                        </Border>
                        <TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                   Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed"/>-->

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

    <Style TargetType="local:NavigationButton" BasedOn="{StaticResource NavigationButtonStyle}"/>



</ResourceDictionary>
