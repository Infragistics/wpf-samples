<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="http://schemas.infragistics.com/xaml" xmlns:localPrim="http://schemas.infragistics.com/xaml/primitives" xmlns:ig="http://schemas.infragistics.com/xaml" xmlns:igBase="http://schemas.infragistics.com/xaml" xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igPrimLocal="http://schemas.infragistics.com/xaml/primitives" xmlns:igSchedule="http://schemas.infragistics.com/xaml" xmlns:igSchedulePrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igEditorPrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igLayout="http://schemas.infragistics.com/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d">

  <!-- *********************************  COLORS  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="Styles.WPF.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- *********************************  BRUSHES  ********************************* -->
  <!-- ToolTip Brushes -->
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="TooltipForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="TooltipHeaderBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="TooltipShadowBrush" Color="{StaticResource Color_009}" />

  <!-- GridSplitter Brushes -->
  <SolidColorBrush x:Key="GridSplitterBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="GridSplitterBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="GridSplitterInnerBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="GridSplitterPressedBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="GridSplitterForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="GridSplitterGlyphBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="GridSplitterGlyphPressedBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="GridSplitterGlyphHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="GridSplitterGlyphHoverBorderBrush" Color="{StaticResource Color_004}" />

  <!--  ExpansionIndicator Brushes -->
  <SolidColorBrush x:Key="ExpansionIndicatorBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ExpansionIndicatorBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="ExpansionIndicatorForegroundBrush" Color="{StaticResource Color_024}" />

  <!-- SpinEditorBase Brushes -->
  <SolidColorBrush x:Key="SpinEditorBaseBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="SpinEditorBaseBorderBrush" Color="{StaticResource Color_024}" />

  <!-- Cell Brushes -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="CellItemHoverBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="CellItemForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="CellItemInactiveForegroundBrush" Color="{StaticResource Color_002}" />

  <!--  RowSelector Brushes -->
  <SolidColorBrush x:Key="RowSelectorActiveBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="RowSelectorActiveBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="RowSelectorActiveIndicatorBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="RowSelectorActiveIndicatorBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="RowSelectorEditingIndicatorBackgroundBrush" Color="{StaticResource Color_003}" />

  <!-- HeaderCell Brushes -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="HeaderCellForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="HeaderCellHoverBackgroundBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="HeaderCellMovingBackgroundBrush" Color="{StaticResource Color_067}" />
  <SolidColorBrush x:Key="HeaderCellRedFilterGlyphBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="HeaderCellColumnChooserBackgroundBrush" Color="{StaticResource Color_016}" />
  <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundlBrush" EndPoint="-2,17" StartPoint="-7,12" SpreadMethod="Repeat" MappingMode="Absolute" Opacity="0.35">
    <GradientStop Color="{StaticResource Color_009}" Offset="0.499" />
    <GradientStop Color="{StaticResource Color_000}" Offset="0.500" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ItemSeparatorBrush" Color="{StaticResource Color_006}" />

  <!-- BlockingError Brushes -->
  <SolidColorBrush x:Key="BlockingErrorBackgroundBrush" Color="{StaticResource Color_066}" />
  <SolidColorBrush x:Key="BlockingErrorBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="BlockingErrorForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="BlockingErrorHeaderForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="BlockingErrorHeaderBackgroundBrush" Color="{StaticResource Color_028}" />

  <!-- Gantt Task Brushes -->
  <SolidColorBrush x:Key="GanttTaskDependencyIconBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="GanttTaskDependencyDraggingBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="ManualTaskBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="ManualTaskBorderBrush" Color="{StaticResource Color_035}" />
  <SolidColorBrush x:Key="ActiveSummaryTaskBackgroundBrush" Color="{StaticResource Color_066}" />
  <SolidColorBrush x:Key="ActiveSummaryTaskBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ActiveProjectSummaryTaskBackgroundBrush" Color="{StaticResource Color_052}" />
  <SolidColorBrush x:Key="ActiveProjectSummaryTaskBorderBrush" Color="{StaticResource Color_053}" />
  <SolidColorBrush x:Key="AutomaticTaskBackgroundBrush" Color="{StaticResource Color_037}" />
  <SolidColorBrush x:Key="AutomaticTaskBorderBrush" Color="{StaticResource Color_038}" />
  <SolidColorBrush x:Key="InactiveTaskBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="InactiveTaskBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="TaskShapeBackgroundBrush" Color="{StaticResource Color_066}" />
  <SolidColorBrush x:Key="TaskShapeBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ManualMilestoneTaskBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="ManualMilestoneTaskBorderBrush" Color="{StaticResource Color_035}" />
  <SolidColorBrush x:Key="PlaceholderMilestoneTaskBackgroundBrush" Color="{StaticResource Color_026}" />
  <SolidColorBrush x:Key="PlaceholderMilestoneTaskBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="DeadlineTaskBackgroundBrush" Color="{StaticResource Color_040}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="DeadlineTaskBorderBrush" Color="{StaticResource Color_041}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ProgressTaskBackgroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="ProgressTaskBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="CriticalTaskBackgroundBrush" Color="{StaticResource Color_029}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="CriticalTaskBorderBrush" Color="{StaticResource Color_028}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="SlackTaskBackgroundBrush" Color="{StaticResource Color_061}" />
  <SolidColorBrush x:Key="TaskIndicatorInactiveBorderBrush" Color="{StaticResource Color_004}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorInactiveBackgroundBrush" Color="{StaticResource Color_005}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorActiveBorderBrush" Color="{StaticResource Color_041}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorActiveBackgroundBrush" Color="{StaticResource Color_040}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="TaskIndicatorCheckIconBackgroundBrush" Color="{StaticResource Color_003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ProjectTaskDependencyPresenterLine" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="ProjectTaskDependencyPresenterEndCap" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="DurationOnlyTaskBackgroundBrush" Color="{StaticResource Color_046}" />
  <SolidColorBrush x:Key="DurationOnlyTaskBorderBrush" Color="{StaticResource Color_047}" />
  <LinearGradientBrush x:Key="DurationOnlyOverlayLeftBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientStop Color="{StaticResource Color_010}" Offset=".2" />
    <GradientStop Color="{StaticResource Color_014}" Offset=".7" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DurationOnlyOverlayRightBrush" StartPoint="1,0" EndPoint="0,0">
    <GradientStop Color="{StaticResource Color_010}" Offset=".2" />
    <GradientStop Color="{StaticResource Color_014}" Offset=".7" />
    <GradientStop Color="{StaticResource Color_016}" Offset="1" />
  </LinearGradientBrush>

  <!-- Gantt Brushes -->
  <SolidColorBrush x:Key="GanttBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="GanttBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="GridIconBackgroundBrush" Color="{StaticResource Color_003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconBackgroundBrush" Color="{StaticResource Color_046}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconBorderBrush" Color="{StaticResource Color_047}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="AlertIconInnerBackgroundBrush" Color="{StaticResource Color_000}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconBackgroundBrush" Color="{StaticResource Color_046}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconBorderBrush" Color="{StaticResource Color_047}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconTextBackgroundBrush" Color="{StaticResource Color_055}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="NoteIconShadowBackgroundBrush" Color="{StaticResource Color_007}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconBackgroundBrush" Color="{StaticResource Color_028}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconBorderBrush" Color="{StaticResource Color_028}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ExclamationIconPathBackgroundBrush" Color="{StaticResource Color_009}" igPrim:XamlHelper.IsExcludedFromWash="True" />
  <SolidColorBrush x:Key="ManualDateTimeEditorBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ManualDateTimeEditorBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="TimescaleBandBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="TimescaleIntervalBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="NonWorkingTimelineBackgroundBrush" Color="{StaticResource Color_020}" />

  <!-- *********************************  Converters  ********************************* -->
  <DataTemplate x:Key="TaskIndicatorTemplate_FlexibleConstraint">
    <Grid Height="18" Width="18">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="16" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,2,0,0" />
      <Rectangle Fill="{StaticResource TaskIndicatorInactiveBorderBrush}" HorizontalAlignment="Left" Margin="5,8.895,0,0" Width="4" VerticalAlignment="Top" Height="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorInactiveBackgroundBrush}" HorizontalAlignment="Left" Margin="6,10,0,0" Width="2" Height="2" VerticalAlignment="Top" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" Margin="12.5,8.9,0,0" VerticalAlignment="Top" Height="4" HorizontalAlignment="Left" Width="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Width="2" Height="2" VerticalAlignment="Top" Margin="13.5,9.9,0,0" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_InflexibleConstraint">
    <Grid Height="18" Width="18">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="16" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,2,0,0" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" HorizontalAlignment="Left" Margin="5,8.6,0,0" Width="4" VerticalAlignment="Top" Height="4" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Margin="5.9,9.6,0,0" Width="2" Height="2" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_ConstraintViolation">
    <Grid Height="18" Width="18">
      <Path Data="M10,9 L10,11 L12,11 L12,9 z M7,9 L7,11 L9,11 L9,9 z M4.0000005,9 L4.0000005,11 L6,11 L6,9 z M0.99999994,9 L0.99999994,11 L3.0000005,11 L3.0000005,9 z M10,5.9999995 L10,7.9999995 L12,7.9999995 L12,5.9999995 z M7,5.9999995 L7,7.9999995 L9,7.9999995 L9,5.9999995 z M4.0000005,5.9999995 L4.0000005,7.9999995 L6,7.9999995 L6,5.9999995 z M0.99999994,5.9999995 L0.99999994,7.9999995 L3.0000005,7.9999995 L3.0000005,5.9999995 z M10,3 L10,5 L12,5 L12,3 z M7,3 L7,5 L9,5 L9,3 z M4.0000005,3 L4.0000005,5 L6,5 L6,3 z M0.99999994,3 L0.99999994,5 L3.0000005,5 L3.0000005,3 z M0,0 L13,0 L13,2.0000005 L13,3 L13,5 L13,5.9999995 L13,7.9999995 L13,9 L13,11 L13,11.999999 L5.8114529E-07,12 L5.8114523E-08,3 L0,2 z" Fill="{StaticResource GridIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="16" Height="15" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBorderBrush}" HorizontalAlignment="Left" Margin="3.992,6.75,0,7.25" Width="4" VerticalAlignment="Stretch" Height="Auto" />
      <Rectangle Fill="{StaticResource TaskIndicatorActiveBackgroundBrush}" HorizontalAlignment="Left" Margin="4.992,7.75,0,8.25" Width="2" Height="Auto" VerticalAlignment="Stretch" />
      <Path Data="M6.484375,0.5 L12.5,10.5 L0.5,10.5 z" Fill="{StaticResource AlertIconBackgroundBrush}" Stretch="Fill" Stroke="{StaticResource AlertIconBorderBrush}" UseLayoutRounding="False" Width="14" Height="11" Margin="2.373,5.413,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Path Data="M0,4 L2,4 L2,5 L0,5 z M1.3411045E-06,0 L2.0000014,0 L2.0000014,3 L1.3411045E-06,3 z" Fill="{StaticResource AlertIconInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Margin="8.373,9.413,0,0" HorizontalAlignment="Left" Width="2" Height="5" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Completed">
    <Grid Height="18" Width="18">
      <Path Data="M2.3914926,6.4981399 L6.4163337,10.087243 L14.793087,1.8651594 L15.544387,2.3674157 L6.7676015,14.584246 L6.0176682,14.584246 L-0.04171209,8.66747 z" Fill="{StaticResource TaskIndicatorCheckIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="16" Height="15" VerticalAlignment="Top" Margin="0,2,0,0" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Notes">
    <Grid Height="18" Width="18">
      <Rectangle Fill="{StaticResource NoteIconShadowBackgroundBrush}" Grid.RowSpan="2" Width="15" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,3,0,0" />
      <Rectangle Fill="{StaticResource NoteIconBackgroundBrush}" Margin="1,2,0,0" Grid.RowSpan="2" Stroke="{StaticResource NoteIconBorderBrush}" Width="15" Height="14" HorizontalAlignment="Left" VerticalAlignment="Top" />
      <Path Data="M4,6 L8,6 L8,7 L4,7 z M0,4 L8,4 L8,5 L0,5 z M0,2 L8,2 L8,3 L0,3 z M0,0 L8,0 L8,1 L0,1 z" Fill="{StaticResource NoteIconTextBackgroundBrush}" Height="9" Grid.Row="1" Stretch="Fill" UseLayoutRounding="False" Width="11" Margin="3,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="TaskIndicatorTemplate_Deadline">
    <Grid Height="18" Width="18">
      <Rectangle Fill="{StaticResource ExclamationIconBackgroundBrush}" Width="16" Height="16" Stroke="{StaticResource ExclamationIconBorderBrush}" />
      <Rectangle Fill="{StaticResource ExclamationIconBorderBrush}" Width="4" Height="10" />
      <Path Data="M0,6 L2,6 L2,8 L0,8 z M0,0 L2,0 L2,5 L0,5 z" Fill="{StaticResource ExclamationIconPathBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="2" Height="8" />
    </Grid>
  </DataTemplate>

  <!-- *********************************  Resource Strings  ********************************* -->
  <igSchedulePrim:GanttResourceString x:Key="progressToolTipTitle" ResourceName="TaskBarToolTip_ProgressTitle" />
  <igSchedulePrim:GanttResourceString x:Key="deadlineToolTipTitle" ResourceName="TaskBarToolTip_DeadlineTitle" />
  <igSchedulePrim:GanttResourceString x:Key="slackToolTipTitle" ResourceName="TaskBarToolTip_SlackTitle" />
  <igSchedulePrim:GanttResourceString x:Key="milestoneToolTipTitle" ResourceName="TaskBarToolTip_MilestoneTitle" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTitle" ResourceName="TaskBarToolTip_TaskTitle" />
  <igSchedulePrim:GanttResourceString x:Key="summaryToolTipTitle" ResourceName="TaskBarToolTip_SummaryTitle" />
  <igSchedulePrim:GanttResourceString x:Key="projectSummaryToolTipTitle" ResourceName="TaskBarToolTip_ProjectSummaryTitle" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipNameLabel" ResourceName="TaskBarToolTip_TaskNameLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipActualStartLabel" ResourceName="TaskBarToolTip_ActualStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipCompleteThroughLabel" ResourceName="TaskBarToolTip_CompleteThroughLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipDurationLabel" ResourceName="TaskBarToolTip_DurationLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipPercentCompleteLabel" ResourceName="TaskBarToolTip_PercentCompleteLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipDeadlineLabel" ResourceName="TaskBarToolTip_DeadlineLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTaskFinishLabel" ResourceName="TaskBarToolTip_TaskFinishLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipFreeSlackLabel" ResourceName="TaskBarToolTip_FreeSlackLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipTaskStartLabel" ResourceName="TaskBarToolTip_TaskStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskStartLabel" ResourceName="TaskBarToolTip_SubtasksStartLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskFinishLabel" ResourceName="TaskBarToolTip_SubtasksFinishLabel" />
  <igSchedulePrim:GanttResourceString x:Key="taskToolTipSubtaskDurationLabel" ResourceName="TaskBarToolTip_SubtasksDurationLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipLinkLabel" ResourceName="TaskDependencyToolTip_TaskLinkLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipLagLabel" ResourceName="TaskDependencyToolTip_LagLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipFromLabel" ResourceName="TaskDependencyToolTip_FromLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipToLabel" ResourceName="TaskDependencyToolTip_ToLabel" />
  <igSchedulePrim:GanttResourceString x:Key="dependencyToolTipTitle" ResourceName="TaskDependencyToolTip_Title" />
  <igSchedulePrim:GanttResourceString x:Key="BlockingErrorLiteral" ResourceName="BlockingErrorLiteral" />

  <!-- *********************************  Converters  ********************************* -->
  <igPrim:BoolToVisibilityConverter x:Key="boolToVisibility" />
  <igPrim:EmptyToCollapsedConverter x:Key="emptyToCollapsed" />
  <igPrim:ScaledDoubleConverter x:Key="doubleForPercentConverter">
    <igPrim:ScaledDoubleConverter.ScaleFactor>.01</igPrim:ScaledDoubleConverter.ScaleFactor>
  </igPrim:ScaledDoubleConverter>

  <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
    <!-- when true then collapse the item, otherwise leave it visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="complementConverter">
    <!-- True to False -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- False to True -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="expansionVisibilityToOpacityConverter">
    <!-- when visibility is visible then fully opaque -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>1</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- otherwise hide it but we still want it to occupy space -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="indicatorTypeToDataTemplateConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_FlexibleConstraint}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>FlexibleConstraint</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_InflexibleConstraint}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>InflexibleConstraint</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_ConstraintViolation}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>ConstraintViolation</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Completed}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Completed</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Notes}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Notes</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter DestinationValue="{StaticResource TaskIndicatorTemplate_Deadline}">
      <igPrim:FixedValueConverter.SourceValue>
        <igSchedulePrim:TaskIndicatorType>Deadline</igSchedulePrim:TaskIndicatorType>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToBorderThicknessConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness>0 1 0 1</Thickness>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Thickness>1 0 1 0</Thickness>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinWidthConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>8</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="OrientationToMinHeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>8</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:Double>0</sys:Double>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="HorizontalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Horizontal</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="VerticalToVisibilityConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Orientation>Vertical</Orientation>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="alternateToBrushConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemBackgroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemAltBackgroundBrush}" />
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isSummaryToFontWeightConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>True</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Bold</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Normal</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isActiveToFontStyleConverter">
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Italic</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <sys:String>Normal</sys:String>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="isActiveToCellForegroundConverter">
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemInactiveForegroundBrush}">
      <igPrim:FixedValueConverter.SourceValue>
        <sys:Boolean>False</sys:Boolean>
      </igPrim:FixedValueConverter.SourceValue>
    </igPrim:FixedValueConverter>
    <igPrim:FixedValueConverter DestinationValue="{StaticResource CellItemForegroundBrush}" />
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="visibilityToNotVisibility">
    <!-- flip the visibility -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.SourceValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.SourceValue>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>
  </igPrim:ValueConverterGroup>

  <igPrim:ValueConverterGroup x:Key="nullToVisibility">
    <!-- if null sets visibility to Collapsed -->
    <igPrim:FixedValueConverter SourceValue="{x:Null}">
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Collapsed</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

    <!-- if not null sets visibility to Visible -->
    <igPrim:FixedValueConverter>
      <igPrim:FixedValueConverter.DestinationValue>
        <Visibility>Visible</Visibility>
      </igPrim:FixedValueConverter.DestinationValue>
    </igPrim:FixedValueConverter>

  </igPrim:ValueConverterGroup>

  <igSchedulePrim:ProjectTaskStatesValueConverter x:Key="leftShapeToAreaType" RequiredStates="PlaceholderStart">
    <igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
      <igSchedulePrim:GanttTaskDragAreaType>MoveTaskBar</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
    <igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
      <igSchedulePrim:GanttTaskDragAreaType>ChangePercentComplete</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
  </igSchedulePrim:ProjectTaskStatesValueConverter>

  <igSchedulePrim:ProjectTaskStatesValueConverter x:Key="rightShapeToAreaType" RequiredStates="PlaceholderFinish">
    <igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
      <igSchedulePrim:GanttTaskDragAreaType>MoveTaskBar</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.DestinationValue>
    <igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
      <igSchedulePrim:GanttTaskDragAreaType>ResizeTaskBarEnd</igSchedulePrim:GanttTaskDragAreaType>
    </igSchedulePrim:ProjectTaskStatesValueConverter.FallbackValue>
  </igSchedulePrim:ProjectTaskStatesValueConverter>

  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeSummaryNotPlaceholderToVisibility" RequiredStates="Active,Summary" DisallowedStates="Placeholder,ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeProjectSummaryNotPlaceholderToVisibility" RequiredStates="Active,ProjectSummary" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="inactiveToVisibility" DisallowedStates="Active" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeToVisibility" RequiredStates="Active" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="nonSummaryToVisibility" DisallowedStates="Summary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeDurationOnlyToVisibility" RequiredStates="Active,PlaceholderDuration" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="durationOnlyToVisibility" RequiredStates="PlaceholderDuration" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeAutoTaskToVisibility" RequiredStates="Active" DisallowedStates="ManuallyScheduled,Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeAutoTaskNonCriticalToVisibility" RequiredStates="Active" DisallowedStates="ManuallyScheduled,Placeholder,DisplayAsCritical" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeCriticalToVisibility" RequiredStates="Active, DisplayAsCritical" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeManualTaskToVisibility" RequiredStates="ManuallyScheduled,Active" DisallowedStates="Placeholder" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeManualNonCriticalToVisibility" RequiredStates="ManuallyScheduled,Active" DisallowedStates="Placeholder,DisplayAsCritical" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="nonStartOnlyActivePlaceholderToVisibility" RequiredStates="Active,Placeholder" DisallowedStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="activeStartOnlyPlaceholderToVisibility" RequiredStates="Active,PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notStartOnlyToVisibility" DisallowedStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notFinishOnlyToVisibility" DisallowedStates="PlaceholderFinish" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="projectSummaryToVisibility" RequiredStates="ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notProjectSummaryToVisibility" DisallowedStates="ProjectSummary" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="notStartOrFinishOnlyToVisibility" DisallowedStates="PlaceholderFinish,PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="startOnlyToVisibility" RequiredStates="PlaceholderStart" />
  <igSchedulePrim:ProjectTaskStatesVisibilityConverter x:Key="finishOnlyToVisibility" RequiredStates="PlaceholderFinish" />

  <!-- ******************************************************* WPF SPECIFIC RESOURCES  ***************************************************************************
*********************************************************************************************************************************************************************    -->

  <!-- *********************************  ValidationDecorator Style  ********************************* -->
  <Style TargetType="igEditorPrim:ValidationDecorator">
    <Setter Property="Background" Value="{StaticResource ValidationErrorElement}" />
    <Setter Property="BorderBrush" Value="{StaticResource ValidationErrorElement}" />
    <Setter Property="ErrorForeground" Value="{StaticResource LightForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>

  <!-- ********************************** Gantt TextBox Style **********************************-->
  <Style x:Key="GanttTextBoxStyle" TargetType="TextBox">
    <Setter Property="FontSize" Value="13.333" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <igPrim:ValidationDecorator>
            <Border Name="Border" CornerRadius="0" Padding="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
            </Border>
          </igPrim:ValidationDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledVisualElement}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledVisualElement}" />
              <Setter Property="Foreground" Value="{StaticResource CellItemInactiveForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttComboBox Style  ********************************* -->
  <Style x:Key="GanttComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Padding" Value="6,1,35,3" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <igPrim:ValidationDecorator>
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="31" Width="0" />
              </Grid.ColumnDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused" />
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="FocusedDropDown">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="normal" Fill="{StaticResource ComboBoxBackgroundBrush}" Stroke="{StaticResource ComboBoxBorderBrush}" StrokeThickness="1" Grid.ColumnSpan="2" />
              <Rectangle x:Name="hover" Fill="{StaticResource ComboBoxHoverBackgroundBrush}" Stroke="{StaticResource ComboBoxHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" CornerRadius="2">
                  <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Popup>
              <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" />
              <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <Rectangle x:Name="focused" Stroke="{StaticResource ComboBoxFocusedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2" />
              <Rectangle x:Name="disabled" Fill="{StaticResource ComboBoxDisabledBackgroundBrush}" Visibility="Collapsed" Grid.ColumnSpan="2" />
            </Grid>
          </igPrim:ValidationDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
              <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
              <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
              <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GridSplitter Style  ********************************* -->
  <Style TargetType="{x:Type igSchedulePrim:ProjectGridSplitter}">
    <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource GridSplitterForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
    <Setter Property="BorderThickness" Value="1 0" />
    <Setter Property="Padding" Value="2 0" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="PreviewStyle">
      <Setter.Value>
        <Style>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Border Background="{StaticResource GridSplitterPressedBackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphPressedBackgroundBrush}" />
                    <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphPressedBackgroundBrush}" />
                    <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphPressedBackgroundBrush}" />
                    <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphPressedBackgroundBrush}" />
                  </StackPanel>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type igSchedulePrim:ProjectGridSplitter}">
          <Border x:Name="SplitterBg" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphBackgroundBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphBackgroundBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphBackgroundBrush}" />
              <Rectangle Width="2" Height="2" Margin="1" Fill="{StaticResource GridSplitterGlyphBackgroundBrush}" />
            </StackPanel>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="SplitterBg">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GridSplitterGlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ******************************************************* SL-WPF SHARED RESOURCES  ***************************************************************************
*********************************************************************************************************************************************************************    -->

  <!-- *********************************  ToolTipHeader Style  ********************************* -->
  <Style x:Key="ToolTipHeaderStyle" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{StaticResource TooltipForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="Background" Value="{StaticResource TooltipHeaderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Padding" Value="3,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border Background="{TemplateBinding Background}" Padding="2" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ToolTip Template  ********************************* -->
  <ControlTemplate x:Key="ToolTipTemplate" TargetType="ToolTip">
    <Grid>
      <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02" />
      <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08" />
      <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.15" />
      <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.21" />
      <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}">
        <ContentPresenter />
      </Border>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  SimpleToolTip Style  ********************************* -->
  <Style x:Key="SimpleToolTipStyle" TargetType="ToolTip">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Padding" Value="3,0" />
    <Setter Property="FontSize" Value="13.333" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Grid>
            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02" />
            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08" />
            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.15" />
            <Border Background="{StaticResource TooltipShadowBrush}" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.21" />
            <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}" Padding="4 2">
              <ContentPresenter />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  SimpleItemsControl Style  ********************************* -->
  <Style TargetType="ItemsControl" x:Key="SimpleItemsControlStyle">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  IndicatorsTooltipContentTemplate  ********************************* -->
  <DataTemplate x:Key="IndicatorsTooltipContentTemplate">
    <ItemsControl ItemsSource="{Binding}" MaxWidth="210" Style="{StaticResource SimpleItemsControlStyle}">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Note, the Content binding is here to work around an issue in SL where this CP is not 
                              getting the DataContext from the containing CP created by the ItemsControl or is setting 
                              its own local value -->
            <ContentPresenter Margin="0,0,3,0" igPrim:XamlHelper.SnapsToDevicePixels="True" VerticalAlignment="Top" Content="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" ContentTemplate="{Binding IndicatorType, Converter={StaticResource indicatorTypeToDataTemplateConverter}}" />
            <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Grid.Column="1" />
          </Grid>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </DataTemplate>

  <!-- *********************************  manualTextBlock Style  ********************************* -->
  <Style TargetType="TextBlock" x:Key="manualTextBlockStyle">
    <Setter Property="FontStyle" Value="Italic" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <!-- *********************************  RepeatButton Template  ********************************* -->
  <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Unfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-5" />
      <Path x:Name="Arrow" Data="M4.9585595,6.4799328 L9.9993324,1.9604321 L15.061378,6.4794879 L13.686531,7.979373 L9.9993334,4.5627856 L6.3744011,7.9793801 z" Height="6" Stretch="Uniform" Width="10" Fill="{StaticResource GlyphBackgroundBrush}" Margin="{TemplateBinding Padding}" />
    </Grid>
  </ControlTemplate>

  <!-- *********************************  ToggleButton Template  ********************************* -->
  <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked" />
          <VisualState x:Name="Unchecked" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Unfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-5" />
      <Path x:Name="Arrow" Stretch="Fill" Height="6" Width="10" Data="M 0,0 C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z" UseLayoutRounding="False" Fill="{StaticResource GlyphBackgroundBrush}" />
      <Rectangle Width="1" Fill="{StaticResource ComboBoxToggleButtonDropDownSeparatorBackgroundBrush}" HorizontalAlignment="Left" Margin="-1,5,0,5" />
    </Grid>
  </ControlTemplate>

  <!-- *********************************  SpinButton Style  ********************************* -->
  <Style x:Key="SpinButtonStyle" TargetType="RepeatButton">
    <Setter Property="Padding" Value="3" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Height" Value="30" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
  </Style>

  <!-- *********************************  DropDownButton Style  ********************************* -->
  <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="BorderBrush" Value="{StaticResource ComboBoxToggleButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template" Value="{StaticResource ToggleButtonTemplate}" />
  </Style>

  <DataTemplate x:Key="IncreaseGlyphKey">
    <Path Width="6" Height="9" Data="M9,0 L9,9 L0,4.5 z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Control}}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
      <Path.RenderTransform>
        <TransformGroup>
          <ScaleTransform />
          <SkewTransform />
          <RotateTransform Angle="90" />
          <TranslateTransform />
        </TransformGroup>
      </Path.RenderTransform>
    </Path>
  </DataTemplate>

  <DataTemplate x:Key="DecreaseGlyphKey">
    <Path Width="6" Height="9" Data="M9,0 L9,9 L0,4.5 z" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Control}}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
      <Path.RenderTransform>
        <TransformGroup>
          <ScaleTransform />
          <SkewTransform />
          <RotateTransform Angle="270" />
          <TranslateTransform />
        </TransformGroup>
      </Path.RenderTransform>
    </Path>
  </DataTemplate>

  <!-- *********************************  ExpansionIndicator Style  ********************************* -->
  <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrim:ExpansionIndicator">
    <Setter Property="Background" Value="{StaticResource ExpansionIndicatorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpansionIndicatorBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ExpansionIndicatorForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0,0,6,0" />
    <Setter Property="Padding" Value="1" />
    <Setter Property="MinHeight" Value="20" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicator">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>

              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded" />
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-6,0" />
            <Border x:Name="ExpansionIndicator" Opacity="{Binding Path=IndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource expansionVisibilityToOpacityConverter}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Width="18" Height="18">
              <Grid>
                <Line x:Name="verticalLine" Stretch="Fill" X1="2.5" X2="2.5" Y1="0" Y2="5" Stroke="{TemplateBinding Foreground}" Visibility="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notBoolToVisibility}}" StrokeThickness="2" Height="14" />
                <Line x:Name="horizontalLine" Stretch="Fill" X1="0" X2="5" Y1="2.5" Y2="2.5" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" Width="14" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  Grid Elements Styles  ********************************* -->

  <!-- *********************************  CellControl Style  ********************************* -->
  <Style x:Key="CellControlStyle" TargetType="ig:CellControl">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="BorderThickness" Value="0 0 1 1" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="ResizingThreshold" Value="20" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="FontWeight" Value="{Binding Path=Cell.Row.Data.IsSummary, RelativeSource={RelativeSource Self}, Converter={StaticResource isSummaryToFontWeightConverter}}" />
    <Setter Property="FontStyle" Value="{Binding Path=Cell.Row.Data.IsActive, RelativeSource={RelativeSource Self}, Converter={StaticResource isActiveToFontStyleConverter}}" />
    <Setter Property="Foreground" Value="{Binding Path=Cell.Row.Data.IsActive, RelativeSource={RelativeSource Self}, Converter={StaticResource isActiveToCellForegroundConverter}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:CellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      	<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      	<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                    	</DiscreteObjectKeyFrame>
					</ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
					<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      	<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EditingStates">
                <VisualState x:Name="NotEditing" />
                <VisualState x:Name="Editing" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedStates">
                <VisualState x:Name="UnFixed" />
                <VisualState x:Name="Fixed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root" />
            <Border x:Name="altElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Visibility="Collapsed" />
            <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" />
            <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="0" Visibility="Collapsed" />
            <Border x:Name="hoverElem" Background="{StaticResource CellItemHoverBackgroundBrush}" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Visibility="Collapsed" />
           	<ContentControl x:Name="contentControl" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"  Foreground="{TemplateBinding Foreground}" >
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
        	</ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  RowSelectorCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorCellControlStyle" TargetType="igPrim:RowSelectorCellControl">
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="Foreground" Value="{StaticResource CellItemForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0 0 1 1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive" />
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Editing">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="selectedBd" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Fill">
                      	<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                       <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Stroke">
                      	<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Border x:Name="altElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltBackgroundBrush}" Visibility="Collapsed" />
            <Border x:Name="selectedBd" BorderBrush="{StaticResource RowSelectorActiveBorderBrush}" BorderThickness="0 0 1 1" Background="{StaticResource RowSelectorActiveBackgroundBrush}" Visibility="Collapsed" />
            <Border x:Name="hoverElem" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed" />
            <Path x:Name="ActiveIndicator" Visibility="Collapsed" Stroke="{StaticResource RowSelectorActiveIndicatorBorderBrush}" Fill="{StaticResource RowSelectorActiveIndicatorBackgroundBrush}" Data="M0,0 L0,10 L5,5 z" VerticalAlignment="Center" HorizontalAlignment="Left" Width="6" Height="10" Margin="12,4,0,4" />
            <Path x:Name="EditingIndicator" Visibility="Collapsed" Width="12" Height="16" Data="M3.2071116,37.353363 L22.415323,47.916687 L4.4160414,56.016254 z M19.177256,9.1783848 L38.704788,20.097933 L24.873026,44.769043 L5.3555074,33.560249 z M26.812517,0.0009765625 C27.350616,-0.012230873 27.875986,0.10826397 28.348372,0.3782568 L42.17503,8.3180408 C43.854622,9.2780151 44.234528,11.777948 43.024818,13.89789 L41.375217,16.767813 L21.460039,5.3381228 L23.10964,2.4582005 C23.979116,0.941679 25.437378,0.034730911 26.812517,0.0009765625 z" Stretch="Fill" HorizontalAlignment="Left" Fill="{StaticResource RowSelectorEditingIndicatorBackgroundBrush}" Margin="9,4,3,4" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="30,4,6,4" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorCellControl" BasedOn="{StaticResource RowSelectorCellControlStyle}" />

  <!-- *********************************  HeaderCellControl Style  ********************************* -->
  <Style x:Key="HeaderCellControlStyle" TargetType="igPrim:HeaderCellControl">
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="ResizingThreshold" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:HeaderCellControl">
          <igPrim:SimpleClickableContainer x:Name="NormalFill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <igBase:Commanding.Commands>
              <igBase:CommandSourceCollection>
                <ig:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick" />
                <ig:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick" />
              </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
            <Grid x:Name="Bd">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*">
                </ColumnDefinition>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igPrim:HeaderDropDownControl Padding="0" x:Name="HiddenLeftAdjacentColumnsElement" Width="Auto" Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid HorizontalAlignment="Left">
                    <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-15,0" HorizontalAlignment="Stretch" Width="30" />
                    <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundlBrush}" Width="10" HorizontalAlignment="Left" />
                  </Grid>
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="25" MaxWidth="25" />
                        <ColumnDefinition />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" Background="{StaticResource HeaderCellColumnChooserBackgroundBrush}" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <Rectangle Stretch="Fill" Height="2" Fill="{StaticResource ItemSeparatorBrush}" HorizontalAlignment="Stretch" Margin="33,0,0,0" />
                        <Button Margin="0,1,0,0">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
			  <ContentControl  x:Name="headerContentControl" Foreground="{TemplateBinding Foreground}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
              <ContentPresenter x:Name="headerContent"/>
              </ContentControl>
              <Grid Grid.Column="2" x:Name="SortAndPinIndicators" HorizontalAlignment="Right" Margin="0,0,20,0" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Height="30">
                  <Path x:Name="SortedDescending" Data="M 9,1 C9,1 5,6 5,6 5,6 1,1 1,1 1,1 9,1 9,1 z" Fill="{StaticResource GlyphBackgroundBrush}" Width="10" Height="6" Stretch="Fill" UseLayoutRounding="False" Visibility="Collapsed" />
                </Grid>
                <Grid Height="30">
                  <Path x:Name="SortedAscending" Width="10" Height="6" Data="M 9,6 C9,6 5,1 5,1 5,1 1,6 1,6 1,6 9,6 9,6 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment, GridBox, VerticalMargin" Visibility="Collapsed" />
                </Grid>
                <Button x:Name="PinnedIndicator" Grid.Column="3" Visibility="Collapsed" Width="30">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <ig:Commanding.Command>
                      <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown" />
                    </ig:Commanding.Command>
                    <Path Height="14" Width="10" Data="M1.9999808,0 L7.9999809,0 L7.9999809,8.0000019 L10,8.0000019 L10,10.000002 L6.0000005,10.000002 L6.0000005,14.000002 L4.0000005,14.000002 L4.0000005,10.000002 L0,10.000002 L0,8.0000019 L1.9999808,8.0000019 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                  </Grid>
                </Button>
                <Button x:Name="UnpinnedIndicator" Grid.Column="3" Width="30" Visibility="Collapsed">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <ig:Commanding.Command>
                      <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown" />
                    </ig:Commanding.Command>
                    <Path Height="10" Width="14" Data="M4,0 L6,0 L6,1.9999999 L14,1.9999999 L14,8 L6,8 L6,10 L4,10 L4,8 L4,6 L0,6 L0,4 L4,4 L4,1.9999999 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                  </Grid>
                </Button>
                <igPrim:HeaderDropDownControl Visibility="Collapsed" x:Name="SummaryHeaderDropDownControl" Background="{StaticResource TransparentBrush}" Grid.Column="1">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid Background="{StaticResource TransparentBrush}">
                      <Path Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z" Fill="{StaticResource GlyphBackgroundBrush}" x:Name="summarySigmaIcon" StrokeThickness="0" Margin="0" Stretch="Fill" UseLayoutRounding="False" Width="10" Height="12" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:SummarySelectionControl Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
                </igPrim:HeaderDropDownControl>
                <igPrim:HeaderDropDownControl Width="30" AllowResizing="true" x:Name="FilterHeaderDropDownControl" Background="{StaticResource TransparentBrush}" Grid.Column="2" Visibility="Collapsed">
                  <igPrim:HeaderDropDownControl.OpenButtonContent>
                    <Grid>
                      <Path x:Name="clearFilterGlyphStroke" Width="14" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                      <Path x:Name="clearFilterGlyphFill" Width="14" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Stretch="Fill" />
                      <Path x:Name="redFilterGlyphFill" Width="14" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z" Fill="{StaticResource HeaderCellRedFilterGlyphBackgroundBrush}" Stretch="Fill" Visibility="Collapsed" />
                    </Grid>
                  </igPrim:HeaderDropDownControl.OpenButtonContent>
                  <igPrim:FilterSelectorControl Height="370" Width="250" MinWidth="300" MinHeight="370" MaxWidth="800" MaxHeight="800" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}" />
                </igPrim:HeaderDropDownControl>
                <Button x:Name="VisibilityToggleButton" Grid.Column="4" Width="30" Visibility="Collapsed">
                  <Grid Background="{StaticResource TransparentBrush}">
                    <ig:Commanding.Command>
                      <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown" />
                    </ig:Commanding.Command>
                    <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource GlyphBackgroundBrush}" Width="12" Height="8" Stretch="Fill" UseLayoutRounding="False" />
                  </Grid>
                </Button>
              </Grid>
              <igPrim:HeaderDropDownControl Padding="0" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4" Width="Auto" VerticalAlignment="Stretch" Visibility="Collapsed">
                <ToolTipService.ToolTip>
                  <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}" />
                </ToolTipService.ToolTip>
                <igPrim:HeaderDropDownControl.OpenButtonContent>
                  <Grid>
                    <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-15,0" HorizontalAlignment="Stretch" Width="30" />
                    <Rectangle Fill="{StaticResource HiddenColumnIndicatorBackgroundlBrush}" Width="10" HorizontalAlignment="Right" />
                  </Grid>
                </igPrim:HeaderDropDownControl.OpenButtonContent>
                <Grid>
                  <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" Padding="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" MaxWidth="24" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border Grid.RowSpan="2" Background="{StaticResource HeaderCellColumnChooserBackgroundBrush}" />
                      <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2">
                        <ListBox.ItemTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding DisplayNameResolved}" />
                          </DataTemplate>
                        </ListBox.ItemTemplate>
                        <igBase:Commanding.Commands>
                          <igBase:CommandSourceCollection>
                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show" />
                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged" />
                          </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                      </ListBox>
                      <StackPanel Background="{StaticResource TransparentBrush}" Grid.Row="1" Grid.ColumnSpan="2">
                        <Rectangle Stretch="Fill" Height="2" Fill="{StaticResource ItemSeparatorBrush}" HorizontalAlignment="Stretch" Margin="33,0,0,0" />
                        <Button Margin="0,1,0,0">
                          <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                              <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click" />
                              <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click" />
                            </igBase:CommandSourceCollection>
                          </igBase:Commanding.Commands>
                          <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource ForegroundBrush}" />
                        </Button>
                      </StackPanel>
                    </Grid>
                  </Border>
                </Grid>
              </igPrim:HeaderDropDownControl>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                  	 <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="headerContentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellHoverBackgroundBrush}">
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Moving">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderCellMovingBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>
                            1
                          </Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FixedIndicatorStates">
                <VisualState x:Name="NotFixable" />
                <VisualState x:Name="Pinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unpinned">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="Summable">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unsummable">
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted">
                </VisualState>
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterStates">
                <VisualState x:Name="NoIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="FilterIcon">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                <VisualState x:Name="NotFiltered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Filtered">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Collapsed
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="VisibilityIconStates">
                <VisualState x:Name="VisibilityIconHidden" />
                <VisualState x:Name="VisibilityIconVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenLeftAdjacentColumns" />
                <VisualState x:Name="HiddenLeftAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                <VisualState x:Name="NoHiddenRightAdjacentColumns" />
                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </igPrim:SimpleClickableContainer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:HeaderCellControl" BasedOn="{StaticResource HeaderCellControlStyle}" />

  <!-- *********************************  RowSelectorHeaderCellControl Style  ********************************* -->
  <Style x:Key="RowSelectorHeaderCellControlStyle" TargetType="igPrim:RowSelectorHeaderCellControl">
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
          <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill" />
            <Rectangle Width="1" HorizontalAlignment="Left" Fill="{StaticResource TransparentBrush}" Grid.ColumnSpan="4" />
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="igPrim:RowSelectorHeaderCellControl" BasedOn="{StaticResource RowSelectorHeaderCellControlStyle}" />

  <!-- *********************************  Control Styles  ********************************* -->

  <!-- *********************************  SpinEditor Style  ********************************* -->
  <Style x:Key="SpinEditorBaseStyle" TargetType="igEditorPrim:SpinEditorBase">
    <Setter Property="Background" Value="{StaticResource SpinEditorBaseBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SpinEditorBaseBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igEditorPrim:SpinEditorBase">
          <igPrim:ValidationDecorator>
            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="true">
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:EmbeddedTextBox x:Name="TextBox" Padding="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid Visibility="{TemplateBinding SpinButtonVisibility}" Grid.Column="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" Command="{TemplateBinding SpinUpCommand}" />
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" Command="{TemplateBinding SpinDownCommand}" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                    <RepeatButton.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="180" />
                        <TranslateTransform />
                      </TransformGroup>
                    </RepeatButton.RenderTransform>
                  </RepeatButton>
                </Grid>
              </Grid>
            </Border>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ManualDateTimeEditor Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ManualDateTimeEditor">
    <Setter Property="Background" Value="{StaticResource ManualDateTimeEditorBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ManualDateTimeEditorBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ManualDateTimeEditor">
          <igPrim:ValidationDecorator>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="true">
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPrim:EmbeddedTextBox x:Name="TextBox" Padding="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid Visibility="{TemplateBinding SpinButtonVisibility}" Grid.Column="1">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" Command="{TemplateBinding SpinUpCommand}" />
                  <RepeatButton Style="{StaticResource SpinButtonStyle}" Command="{TemplateBinding SpinDownCommand}" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                    <RepeatButton.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="180" />
                        <TranslateTransform />
                      </TransformGroup>
                    </RepeatButton.RenderTransform>
                  </RepeatButton>
                </Grid>
                <ToggleButton x:Name="DropDownButton" Style="{StaticResource DropDownButtonStyle}" ContentTemplate="{StaticResource DecreaseGlyphKey}" Grid.Column="2" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource complementConverter}, RelativeSource={RelativeSource TemplatedParent}}" igPrim:XamlHelper.Focusable="False" IsTabStop="False" Margin="0,1,1,1" />
                <Popup x:Name="Popup">
                  <Border Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" Padding="1">
                    <ig:XamCalendar x:Name="Calendar" MinDate="{TemplateBinding Minimum}" MaxDate="{TemplateBinding Maximum}" SelectionMode="SingleDate" />
                  </Border>
                </Popup>
              </Grid>
            </Border>
          </igPrim:ValidationDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectDatePresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectDatePresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectDatePresenter">
          <TextBlock Text="{TemplateBinding FormattedText}" Foreground="{TemplateBinding Foreground}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectDurationPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectDurationPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectDurationPresenter">
          <TextBlock Text="{TemplateBinding FormattedText}" Foreground="{TemplateBinding Foreground}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TaskIndicatorControl Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TaskIndicatorControl">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TaskIndicatorControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsHitTestVisible="{TemplateBinding HasIndicators}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource SimpleToolTipStyle}" Content="{Binding Indicators, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{StaticResource IndicatorsTooltipContentTemplate}" />
            </ToolTipService.ToolTip>
            <ItemsControl igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" ItemsSource="{Binding Indicators, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource SimpleItemsControlStyle}">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <!-- Note, the Content binding is here to work around an issue in SL where this CP is not 
                            getting the DataContext from the containing CP created by the ItemsControl or is setting 
                            its own local value -->
                  <ContentPresenter igPrim:XamlHelper.SnapsToDevicePixels="True" Margin="0,0,1,0" Content="{Binding Content, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" ContentTemplate="{Binding IndicatorType, Converter={StaticResource indicatorTypeToDataTemplateConverter}}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTimescaleArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTimescaleArea">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTimescaleArea">
          <Grid x:Name="RootPanel" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleHeaderPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleHeaderPresenter">
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="VerticalContentAlignment" Value="Bottom" />
    <Setter Property="FontSize" Value="13.333" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="Foreground" Value="{StaticResource HeaderCellForegroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleHeaderPresenter">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <igSchedulePrim:TimescaleBandPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Name="BandPanel" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleBandPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleBandPresenter">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0,1,0,0" />
    <Setter Property="BorderBrush" Value="{StaticResource TimescaleBandBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleBandPresenter">
          <Grid Background="{TemplateBinding Background}">
            <!-- making this sibling to the text since the text shouldn't shift if the border is hidden -->
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
            <igSchedulePrim:TimescaleIntervalPanel Margin="{TemplateBinding BorderThickness}" Name="IntervalPanel" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttRowPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttRowPresenter">
    <Setter Property="Background" Value="{Binding Path=Row.IsAlternate, RelativeSource={RelativeSource Self}, Converter={StaticResource alternateToBrushConverter}}" />
     <Setter Property="BorderThickness" Value="0,0,0,1" />
	 <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttRowPresenter">
          <Border x:Name="RootVisual" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource CellItemSelectedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  NonWorkingTimeArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:NonWorkingTimeArea">
    <Setter Property="Background" Value="{StaticResource NonWorkingTimelineBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:NonWorkingTimeArea">
          <Border Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDragArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDragArea">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDragArea">
          <Border Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyToolTipPresenter">
          <StackPanel>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="16" Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource dependencyToolTipLinkLabel}, Path=Value}" />
              <TextBlock Grid.Column="1" Text="{Binding LinkText, RelativeSource={RelativeSource TemplatedParent}}" />

              <TextBlock Grid.Column="3" Text="{Binding Source={StaticResource dependencyToolTipLagLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Grid.Column="4" Duration="{Binding Dependency.Lag, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Dependency.From.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Source={StaticResource dependencyToolTipFromLabel}, Path=Value}" />
              <TextBlock Text="{Binding Dependency.From.Id, RelativeSource={RelativeSource TemplatedParent}, StringFormat='(ID {0}) '}" />
              <TextBlock Text="{Binding Dependency.From.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding Source={StaticResource dependencyToolTipToLabel}, Path=Value}" />
              <TextBlock Text="{Binding Dependency.To.Id, RelativeSource={RelativeSource TemplatedParent}, StringFormat='(ID {0}) '}" />
              <TextBlock Text="{Binding Dependency.To.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyPresenter">
          <!-- Note: there shouldn't be any chrome/padding/margins around the canvas -->
          <Canvas x:Name="RootPanel">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <StackPanel>
                  <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource dependencyToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />
                  <igSchedulePrim:GanttTaskDependencyToolTipPresenter Dependency="{TemplateBinding Dependency}" Margin="5,0" />
                </StackPanel>
              </ToolTip>
            </ToolTipService.ToolTip>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="Dragging">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="Line1" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GanttTaskDependencyDraggingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="EndCap" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GanttTaskDependencyDraggingBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NotDragging" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Path x:Name="Line2" Stroke="Transparent" StrokeThickness="5" />
            <Path x:Name="Line1" Stroke="{StaticResource ProjectTaskDependencyPresenterLine}" />
            <!-- Note: Caps must face right -->
            <Path x:Name="EndCap" Data="M 0,0 4.5,4.5 0,9 Z" Fill="{StaticResource ProjectTaskDependencyPresenterEndCap}" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDependencyDragToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyDragToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyDragToolTipPresenter">
          <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}">
            <StackPanel>
              <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{TemplateBinding Title}" Foreground="{StaticResource TooltipForegroundBrush}" />
              <Grid Margin="5,0">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Task Start: -->
                <TextBlock Text="{TemplateBinding SourceLabel}" Grid.Row="0" FontSize="13.333" FontFamily="Segoe UI" />
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{TemplateBinding SourceTaskIdText}" FontSize="13.333" FontFamily="Segoe UI" />

                <!-- Task Finish: -->
                <TextBlock Text="{TemplateBinding TargetLabel}" Grid.Row="1" FontSize="13.333" FontFamily="Segoe UI" />
                <TextBlock Grid.Row="1" Grid.Column="2" Text="{TemplateBinding TargetTaskIdText}" FontSize="13.333" FontFamily="Segoe UI" />
              </Grid>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectTaskDependencyDragArea Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDependencyDragArea">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDependencyDragArea">
          <Border Background="Transparent">
            <Path Data="F1 M 96.3831,33.3099C 98.149,35.0757 98.1167,37.9709 96.3073,39.7804L 96.3065,39.7796L 94.3569,41.7292C 94.5815,40.7079 94.4767,39.6287 94.0425,38.6614L 94.6192,38.0847L 94.6181,38.0836C 95.4677,37.2341 95.5508,35.8718 94.7199,35.041C 93.8988,34.2198 92.4924,34.225 91.6358,35.049L 88.8807,37.8041C 88.0679,38.6487 88.0567,39.9737 88.8579,40.796L 88.8593,40.7947L 89.6458,41.5813L 87.9548,43.2723L 87.1682,42.4858L 87.1718,42.4822C 85.4415,40.7136 85.425,37.8734 87.2221,36.0762L 87.2242,36.0784L 89.9186,33.3841L 89.9164,33.3819C 91.7221,31.5763 94.6173,31.544 96.3831,33.3099 Z M 82.9917,46.7013C 81.2258,44.9355 81.2581,42.0402 83.0675,40.2308L 83.0683,40.2316L 85.0179,38.282C 84.7933,39.3033 84.8981,40.3825 85.3323,41.3497L 84.7556,41.9265L 84.7567,41.9275C 83.9071,42.7771 83.824,44.1394 84.6549,44.9702C 85.476,45.7913 86.8824,45.7861 87.739,44.9622L 90.4941,42.2071C 91.3069,41.3624 91.3181,40.0375 90.5169,39.2151L 90.5155,39.2165L 89.729,38.4299L 91.42,36.7388L 92.2066,37.5254L 92.203,37.529C 93.9333,39.2976 93.9498,42.1378 92.1527,43.9349L 92.1506,43.9328L 89.4562,46.6271L 89.4584,46.6293C 87.6527,48.4349 84.7575,48.4671 82.9917,46.7013 Z " Fill="{StaticResource GanttTaskDependencyIconBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Height="12" Width="12" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TimescaleIntervalPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:TimescaleIntervalPresenter">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,0" />
    <Setter Property="Padding" Value="4,0,3,0" />
    <Setter Property="BorderBrush" Value="{StaticResource TimescaleIntervalBorderBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=IntervalInfo.Band.HorizontalAlignment, RelativeSource={RelativeSource Self}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:TimescaleIntervalPresenter">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Style="{StaticResource SimpleToolTipStyle}">
                <Binding Path="IntervalInfo.ToolTipText" RelativeSource="{RelativeSource TemplatedParent}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <TextBlock Margin="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{Binding Path=IntervalInfo.DisplayText, RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  ProjectTableGrid Style  ********************************* -->
  <Style TargetType="igSchedulePrim:ProjectTableGrid">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="MinimumRowHeight" Value="21" />
    <Setter Property="CellStyle" Value="{StaticResource CellControlStyle}" />
    <Setter Property="ToolTipStyle" Value="{StaticResource SimpleToolTipStyle}" />
    <Setter Property="TextBoxStyle" Value="{StaticResource GanttTextBoxStyle}" />
    <Setter Property="ComboBoxStyle" Value="{StaticResource GanttComboBoxStyle}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:ProjectTableGrid">
          <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Border.Resources>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" />
              <Style TargetType="igPrim:PercentEditor" BasedOn="{StaticResource SpinEditorBaseStyle}" />
              <Style TargetType="igPrim:ManualProjectDurationEditor" BasedOn="{StaticResource SpinEditorBaseStyle}" />
            </Border.Resources>
            <Grid Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <igSchedulePrim:ProjectTableGridRowsPanel x:Name="RowsPanel" Background="Transparent" />
              <ScrollBar x:Name="VerticalScrollBar" Width="0" MinWidth="0" Grid.Column="1" Template="{Binding Tag, RelativeSource={RelativeSource Self}}" Style="{StaticResource ScrollBarStyle}" />
              <ScrollBar x:Name="HorizontalScrollBar" Height="0" MinHeight="0" Grid.Row="1" Template="{Binding Tag, RelativeSource={RelativeSource Self}}" Style="{StaticResource ScrollBarStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDragToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDragToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDragToolTipPresenter">
          <Border Background="{StaticResource TooltipBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource TooltipBorderBrush}">
            <StackPanel>

              <Border Background="{StaticResource TooltipHeaderBackgroundBrush}" Padding="2" VerticalAlignment="Top" BorderThickness="0,0,0,1" BorderBrush="{StaticResource TooltipBorderBrush}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{TemplateBinding Title}" Margin="3 0 10 0" VerticalAlignment="Center" Foreground="{StaticResource TooltipForegroundBrush}" FontSize="14.667" FontFamily="Segoe UI" />
                  <ContentPresenter Content="{Binding Path=TaskPreviewElement, RelativeSource={RelativeSource TemplatedParent}}" Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" />
                </Grid>
              </Border>

              <Grid Margin="5,0">
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="5" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Task Start: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskStartVisibility}" Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" Grid.Row="0" FontSize="13.333" FontFamily="Segoe UI" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskStartVisibility}" Grid.Row="0" Grid.Column="2" DateTime="{Binding TaskStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13.333" FontFamily="Segoe UI" />

                <!-- Task Finish: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskFinishVisibility}" Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" Grid.Row="1" FontSize="13.333" FontFamily="Segoe UI" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskFinishVisibility}" Grid.Row="1" Grid.Column="2" DateTime="{Binding TaskFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13.333" FontFamily="Segoe UI" />

                <!-- Duration: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskDurationVisibility}" Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" Grid.Row="2" FontSize="13.333" FontFamily="Segoe UI" />
                <igSchedulePrim:ProjectDurationPresenter Visibility="{TemplateBinding ComputedTaskDurationVisibility}" Grid.Row="2" Grid.Column="2" Duration="{Binding TaskDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13.333" FontFamily="Segoe UI" />

                <!-- Deadline: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskDeadlineVisibility}" Text="{Binding Source={StaticResource taskToolTipDeadlineLabel}, Path=Value}" Grid.Row="3" FontSize="13.333" FontFamily="Segoe UI" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskDeadlineVisibility}" Grid.Row="3" Grid.Column="2" DateTime="{Binding TaskDeadline, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13.333" FontFamily="Segoe UI" />

                <!-- Complete Through: -->
                <TextBlock Visibility="{TemplateBinding ComputedTaskCompleteThroughVisibility}" Text="{Binding Source={StaticResource taskToolTipCompleteThroughLabel}, Path=Value}" Grid.Row="4" FontSize="13.333" FontFamily="Segoe UI" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedTaskCompleteThroughVisibility}" Grid.Row="4" Grid.Column="2" DateTime="{Binding TaskCompleteThrough, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13.333" FontFamily="Segoe UI" />
              </Grid>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskPresenterBase Style  ********************************* -->
  <Style x:Key="TaskBarPresenterBaseStyle" TargetType="igSchedulePrim:GanttTaskPresenterBase">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0,5" />
  </Style>

  <!-- *********************************  GanttTaskProgressToolTipPresenter  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskProgressToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskProgressToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource progressToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipActualStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ActualStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipCompleteThroughLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CompleteThrough, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipPercentCompleteLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.PercentComplete, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource doubleForPercentConverter}, StringFormat=P0}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskProgressPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskProgressPresenter">
    <!-- Hide the progress on summary tasks -->
    <Setter Property="Visibility" Value="{Binding TaskStates, RelativeSource={RelativeSource Self},Converter={StaticResource nonSummaryToVisibility}}" />
    <Setter Property="Canvas.ZIndex" Value="10" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskProgressPresenter">
          <Grid Height="{TemplateBinding BarHeight}">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttTaskProgressToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <Grid HorizontalAlignment="Left" Width="{TemplateBinding ProgressExtent}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="30*" />
                  <RowDefinition Height="40*" />
                  <RowDefinition Height="30*" />
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="1" Fill="{StaticResource ProgressTaskBackgroundBrush}" Stroke="{StaticResource ProgressTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              </Grid>
              <igSchedulePrim:GanttTaskDragArea AreaType="ChangePercentComplete" Width="{TemplateBinding BarHeight}" HorizontalAlignment="Right" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskSlackToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskSlackToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskSlackToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource slackToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipFreeSlackLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" DateTimeAdjustment="{Binding Task.FreeSlack, RelativeSource={RelativeSource TemplatedParent}}" Task="{TemplateBinding Task}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskSlackPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskSlackPresenter" BasedOn="{StaticResource TaskBarPresenterBaseStyle}">
    <!-- Hide the slack on inactive tasks -->
    <Setter Property="Visibility" Value="{Binding TaskStates, RelativeSource={RelativeSource Self},Converter={StaticResource activeToVisibility}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskSlackPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttTaskSlackToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="22*" />
                <RowDefinition Height="2*" MinHeight="2" />
              </Grid.RowDefinitions>
              <Rectangle Fill="{StaticResource SlackTaskBackgroundBrush}" Grid.Row="1" />
            </Grid>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDeadlineToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDeadlineToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDeadlineToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource deadlineToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDeadlineLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.Deadline, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttTaskDeadlinePresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttTaskDeadlinePresenter" BasedOn="{StaticResource TaskBarPresenterBaseStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttTaskDeadlinePresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttTaskDeadlineToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource DeadlineTaskBorderBrush}" Fill="{StaticResource DeadlineTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 1.5,0 3.5,0 3.5,2.5 5,2.5 5,3 2.5,5 0,3 0,2.5 1.5,2.5 Z" />
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttMilestoneTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttMilestoneTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttMilestoneTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource milestoneToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttMilestoneTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttMilestoneTaskPresenter" BasedOn="{StaticResource TaskBarPresenterBaseStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttMilestoneTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttMilestoneTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <Grid Visibility="{TemplateBinding ComputedLeftShapeVisibility}">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource PlaceholderMilestoneTaskBorderBrush}" Fill="{StaticResource PlaceholderMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
              <Grid Visibility="{TemplateBinding ComputedRightShapeVisibility}">
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeManualTaskToVisibility}}" Stroke="{StaticResource ManualMilestoneTaskBorderBrush}" Fill="{StaticResource ManualMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeAutoTaskToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Path StrokeThickness="1" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nonStartOnlyActivePlaceholderToVisibility}}" Stroke="{StaticResource PlaceholderMilestoneTaskBorderBrush}" Fill="{StaticResource PlaceholderMilestoneTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,1 1,0 2,1 1,2 Z" />
                <Grid x:Name="InactiveMilestone" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}">
                  <Path Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="Uniform" Data="M 0,1 1,0 2,1 1,2 Z" />
                  <Path StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Stretch="UniformToFill" Data="M 0.75,0.25, 1,0 1.25,0.25 M 1.75,0.75 2,1 1.75,1.25 M 1.25,1.75 1,2 0.75,1.75 M 0.25,1.25 0,1 0.25,0.75" />
                </Grid>
                <igSchedulePrim:GanttTaskDragArea RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
              <Grid IsHitTestVisible="False">
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedRightShapeVisibility}" StringFormat="d" LocalToken="{Binding Path=Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" DateTime="{Binding Path=Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" />
                <igSchedulePrim:ProjectDatePresenter Visibility="{TemplateBinding ComputedLeftShapeVisibility}" StringFormat="d" LocalToken="{Binding Path=Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" DateTime="{Binding Path=Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttNormalTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttNormalTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttNormalTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource taskToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notFinishOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOrFinishOnlyToVisibility}}">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
              <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttNormalTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttNormalTaskPresenter" BasedOn="{StaticResource TaskBarPresenterBaseStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttNormalTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel BarHeight="{TemplateBinding BarHeight}" x:Name="ContentPanel" LeftShapeAlignment="InsideEdge" RightShapeAlignment="InsideEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttNormalTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <Grid Visibility="{TemplateBinding ComputedLeftShapeVisibility}" Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,1 1,1 1,4 2.5,4 2.5,5 0,5 Z" />

                <!-- when this is a start only task then we want to be able to move the task (or change the progress) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource leftShapeToAreaType}}" RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Visibility="{TemplateBinding ComputedRightShapeVisibility}" Canvas.ZIndex="1">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path StrokeThickness="1" IsHitTestVisible="false" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,5 0,5 0,4 1.5,4 1.5,1 0,1 Z" />

                <!-- when this is a finish only task then we want to be able to move the task (or drag the end) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource rightShapeToAreaType}}" RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
            <Grid Visibility="{TemplateBinding ComputedMiddleBarVisibility}">
              <!-- Active Manually Scheduled -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeManualNonCriticalToVisibility}}" Fill="{StaticResource ManualTaskBackgroundBrush}" Stroke="{StaticResource ManualTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Active Automatically Scheduled -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeAutoTaskNonCriticalToVisibility}}" Fill="{StaticResource AutomaticTaskBackgroundBrush}" Stroke="{StaticResource AutomaticTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Inactive -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stroke="{StaticResource InactiveTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Active Duration-Only -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeDurationOnlyToVisibility}}" Fill="{StaticResource DurationOnlyTaskBackgroundBrush}" Stroke="{StaticResource DurationOnlyTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Critical task -->
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeCriticalToVisibility}}" Fill="{StaticResource CriticalTaskBackgroundBrush}" Stroke="{StaticResource CriticalTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <!-- Duration only overlay to white-out the left/right edges -->
              <Grid Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource durationOnlyToVisibility}}">
                <Rectangle HorizontalAlignment="Left" Width="9" Fill="{StaticResource DurationOnlyOverlayLeftBrush}" />
                <Rectangle HorizontalAlignment="Right" Width="9" Fill="{StaticResource DurationOnlyOverlayRightBrush}" />
              </Grid>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                </Grid.ColumnDefinitions>
                <!-- this spans the entire middle and is used to move the task -->
                <igSchedulePrim:GanttTaskDragArea Grid.ColumnSpan="3" />

                <!-- we only need this when we don't have a left shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ChangePercentComplete" Visibility="{Binding ComputedLeftShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="0" />

                <!-- we only need this when we don't have a right shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ResizeTaskBarEnd" Visibility="{Binding ComputedRightShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="2" />
              </Grid>
            </Grid>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
              <Grid IsHitTestVisible="False">
                <TextBlock Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource emptyToCollapsed}}" Text="{Binding Path=Task.ResourcesText, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid>
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttSummaryTaskToolTipPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttSummaryTaskToolTipPresenter">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttSummaryTaskToolTipPresenter">
          <StackPanel>
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource summaryToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notProjectSummaryToVisibility}}" />
            <ContentControl Style="{StaticResource ToolTipHeaderStyle}" Content="{Binding Source={StaticResource projectSummaryToolTipTitle}, Path=Value}" Foreground="{StaticResource TooltipForegroundBrush}" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource projectSummaryToVisibility}}" />

            <StackPanel Orientation="Horizontal" Margin="5,0">
              <TextBlock Text="{Binding Source={StaticResource taskToolTipNameLabel}, Path=Value}" />
              <TextBlock Text="{Binding Task.TaskName, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>

            <Grid Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notFinishOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskStartLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasStartDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskStartLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ScheduledStart, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <Grid Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipTaskFinishLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.CalculatedFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasFinishDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskFinishLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDatePresenter DateTime="{Binding Task.ScheduledFinish, RelativeSource={RelativeSource TemplatedParent}}" StringFormat="{Binding Task.Project.SettingsResolved.DateStringFormat, RelativeSource={RelativeSource TemplatedParent}}" LocalToken="{Binding Task.Project.TimeZoneInfoProvider.LocalToken, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <Grid Margin="5,0" Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource notStartOrFinishOnlyToVisibility}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Source={StaticResource taskToolTipDurationLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ManualDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
              </StackPanel>

              <StackPanel Margin="16,0,0,0" Orientation="Horizontal" Grid.Column="2" Visibility="{Binding HasDurationDifference, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibility}}">
                <TextBlock Text="(" />
                <TextBlock Text="{Binding Source={StaticResource taskToolTipSubtaskDurationLabel}, Path=Value}" />
                <igSchedulePrim:ProjectDurationPresenter Duration="{Binding Task.ScheduledDuration, RelativeSource={RelativeSource TemplatedParent}}" Project="{Binding Task.Project, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=")" />
              </StackPanel>
            </Grid>

            <TextBlock Text="{TemplateBinding StartDifferenceText}" Visibility="{Binding Path=StartDifferenceText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource emptyToCollapsed}}" />
            <TextBlock Text="{TemplateBinding FinishDifferenceText}" Visibility="{Binding Path=FinishDifferenceText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource emptyToCollapsed}}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  GanttSummaryTaskPresenter Style  ********************************* -->
  <Style TargetType="igSchedulePrim:GanttSummaryTaskPresenter" BasedOn="{StaticResource TaskBarPresenterBaseStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedulePrim:GanttSummaryTaskPresenter">
          <igSchedulePrim:GanttTaskContentPanel x:Name="ContentPanel" BarHeight="{TemplateBinding BarHeight}" LeftShapeAlignment="OverEdge" RightShapeAlignment="OverEdge" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ToolTipService.ToolTip>
              <ToolTip Template="{StaticResource ToolTipTemplate}" Style="{StaticResource SimpleToolTipStyle}">
                <igSchedulePrim:GanttSummaryTaskToolTipPresenter Task="{TemplateBinding Task}" TaskStates="{TemplateBinding TaskStates}" />
              </ToolTip>
            </ToolTipService.ToolTip>
            <igSchedulePrim:GanttTaskContentPanel.LeftShape>
              <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
              <Grid Canvas.ZIndex="1" Visibility="{TemplateBinding ComputedLeftShapeVisibility}">
                <Path x:Name="LeftShape" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeProject" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeInactive" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="LeftShapeStartOnly" IsHitTestVisible="false" StrokeThickness="1" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,1 1,1 1,4 2.5,4 2.5,5 0,5 Z" />

                <!-- when this is a start only task then we want to be able to move the task -->
                <igSchedulePrim:GanttTaskDragArea Visibility="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource startOnlyToVisibility}}" RenderTransform="{Binding Path=LeftShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.LeftShape>
            <igSchedulePrim:GanttTaskContentPanel.RightShape>
              <Grid Canvas.ZIndex="1" Visibility="{TemplateBinding ComputedRightShapeVisibility}">
                <!-- Note: The natural size of the shape paths should be small so it scales properly with the uniformtofill -->
                <Path x:Name="RightShape" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeProject" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" StrokeThickness="1" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeInactive" IsHitTestVisible="false" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" StrokeThickness="1" Stroke="{StaticResource InactiveTaskBorderBrush}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2,0 2,1 1,2 0,1 Z" />
                <Path x:Name="RightShapeFinishOnly" IsHitTestVisible="false" StrokeThickness="1" Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource finishOnlyToVisibility}}" Stroke="{StaticResource TaskShapeBorderBrush}" Fill="{StaticResource TaskShapeBackgroundBrush}" Stretch="UniformToFill" Data="M 0,0 2.5,0 2.5,5 0,5 0,4 1.5,4 1.5,1 0,1 Z" />

                <!-- when this is a finish only task then we want to be able to move the task (or drag the end) -->
                <igSchedulePrim:GanttTaskDragArea AreaType="{Binding TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource rightShapeToAreaType}}" RenderTransform="{Binding Path=RightShapeDragAreaTransform, ElementName=ContentPanel}" />
              </Grid>
            </igSchedulePrim:GanttTaskContentPanel.RightShape>
            <Grid Visibility="{TemplateBinding ComputedMiddleBarVisibility}">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeSummaryNotPlaceholderToVisibility}}" Fill="{StaticResource ActiveSummaryTaskBackgroundBrush}" Stroke="{StaticResource ActiveSummaryTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource activeProjectSummaryNotPlaceholderToVisibility}}" Fill="{StaticResource ActiveProjectSummaryTaskBackgroundBrush}" Stroke="{StaticResource ActiveProjectSummaryTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Rectangle Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inactiveToVisibility}}" Fill="{StaticResource InactiveTaskBackgroundBrush}" Stroke="{StaticResource InactiveTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <Grid Visibility="{Binding Path=TaskStates, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource durationOnlyToVisibility}}" Grid.RowSpan="2">
                <Rectangle Fill="{StaticResource DurationOnlyTaskBackgroundBrush}" Stroke="{StaticResource DurationOnlyTaskBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                <Rectangle HorizontalAlignment="Left" Width="9" Fill="{StaticResource DurationOnlyOverlayLeftBrush}" />
                <Rectangle HorizontalAlignment="Right" Width="9" Fill="{StaticResource DurationOnlyOverlayRightBrush}" />
              </Grid>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition MaxWidth="8" MinWidth="1" />
                </Grid.ColumnDefinitions>

                <!-- this spans the entire middle and is used to move the task -->
                <igSchedulePrim:GanttTaskDragArea Grid.ColumnSpan="2" />

                <!-- we only need this when we don't have a right shape -->
                <igSchedulePrim:GanttTaskDragArea AreaType="ResizeTaskBarEnd" Visibility="{Binding ComputedRightShapeVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visibilityToNotVisibility}}" Grid.Column="1" />
              </Grid>
            </Grid>

            <!-- Adorners -->
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Left">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Start" Margin="5,0,0,0" Visibility="{TemplateBinding ComputedStartLinkVisibility}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Visibility="{TemplateBinding TaskAdornmentVisibility}" igSchedulePrim:GanttTaskContentPanel.AdornerLocation="Right">
              <igSchedulePrim:GanttTaskDependencyDragArea AreaType="Finish" Margin="0,0,5,0" Visibility="{TemplateBinding ComputedFinishLinkVisibility}" />
            </StackPanel>
          </igSchedulePrim:GanttTaskContentPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  BlockingError Style  ********************************* -->
  <Style x:Key="BlockingErrorStyle" TargetType="ContentControl">
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border Opacity=".9" Background="{StaticResource BlockingErrorBackgroundBrush}">
            <Grid>
              <Border Background="{StaticResource TooltipShadowBrush}" Width="550" Height="350" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02" />
              <Border Background="{StaticResource TooltipShadowBrush}" Width="550" Height="350" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08" />
              <Border Background="{StaticResource TooltipShadowBrush}" Width="550" Height="350" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.15" />
              <Border Background="{StaticResource TooltipShadowBrush}" Width="550" Height="350" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.21" />
              <Border Background="{StaticResource TooltipBackgroundBrush}" Width="550" Height="350" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="1" BorderBrush="{StaticResource BlockingErrorBorderBrush}">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>

                  <!--Header-->
                  <Border Background="{StaticResource BlockingErrorHeaderBackgroundBrush}">
                    <ContentControl Grid.Row="0" FontWeight="Bold" Foreground="{StaticResource BlockingErrorHeaderForegroundBrush}" Content="{Binding Source={StaticResource BlockingErrorLiteral}, Path=Value}" Margin="10,5">
                      <ContentControl.FontSize>
                        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                          <Binding.Converter>
                            <igPrim:MinMaxConverter MinValue="14" />
                          </Binding.Converter>
                        </Binding>
                      </ContentControl.FontSize>
                    </ContentControl>
                  </Border>

                  <!--Description-->
                  <TextBlock Grid.Row="1" Margin="10,5,5,0" FontWeight="Bold" TextWrapping="Wrap" Foreground="{StaticResource BlockingErrorForegroundBrush}" Text="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=Content.UserErrorText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nullToVisibility}}">
                    <TextBlock.FontSize>
                      <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                          <igPrim:MinMaxConverter MinValue="12.5" />
                        </Binding.Converter>
                      </Binding>
                    </TextBlock.FontSize>
                  </TextBlock>

                  <!--Details-->
                  <ScrollViewer Grid.Row="2" Margin="5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0">
                    <TextBox Text="{Binding Path=Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource BlockingErrorForegroundBrush}" IsReadOnly="True" TextWrapping="Wrap" BorderBrush="{StaticResource TextBoxBorderBrush}" Padding="6,4" BorderThickness="1" />
                  </ScrollViewer>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  XamGantt Style  ********************************* -->
  <Style TargetType="igSchedule:XamGantt">
    <Setter Property="Background" Value="{StaticResource GanttBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GanttBorderBrush}" />
    <Setter Property="TaskBarHeight" Value="14" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="ManualValueTextBlockStyle" Value="{StaticResource manualTextBlockStyle}" />
    <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource ExpansionIndicatorStyle}" />
    <Setter Property="TaskModeResourceProvider">
            <Setter.Value>
                <igSchedule:ProjectTaskModeResourceProvider>
                    <igSchedule:ProjectTaskModeResourceProvider.ResourceOverrides>
                                <ResourceDictionary Source="MetroDark.xamGantt.TaskModeIcons.xaml" />
                    </igSchedule:ProjectTaskModeResourceProvider.ResourceOverrides>
                </igSchedule:ProjectTaskModeResourceProvider>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenuProvider">
            <Setter.Value>
                <igSchedule:GanttContextMenuProvider>
                    <igSchedule:GanttContextMenuProvider.ResourceOverrides>
                                <ResourceDictionary Source="MetroDark.xamGantt.ContextMenuIcons.xaml"/>
                    </igSchedule:GanttContextMenuProvider.ResourceOverrides>
                </igSchedule:GanttContextMenuProvider>
            </Setter.Value>
        </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igSchedule:XamGantt">
          <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="ErrorStates">
                <VisualState Name="NoError" />
                <VisualState Name="Error">
                  <Storyboard Storyboard.TargetName="ErrorDisplay" Storyboard.TargetProperty="Visibility">
                    <ObjectAnimationUsingKeyFrames>
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="RootPanel" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding Path=GridWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="{Binding Path=ChartWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid x:Name="GridSite" Grid.Column="0" Grid.Row="0" />
                <Grid x:Name="ChartSite" Grid.Column="2" Grid.Row="0" />
                <igSchedulePrim:ProjectGridSplitter x:Name="GridChartSplitter" ShowsPreview="True" HorizontalAlignment="Center" Width="6" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" />
                <ScrollBar x:Name="GridHorizontalScrollBar" Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="ChartHorizontalScrollBar" Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="VerticalScrollBar" Orientation="Vertical" Grid.Column="3" Grid.Row="0" Style="{StaticResource ScrollBarStyle}" />
              </Grid>

              <ContentControl x:Name="ErrorDisplay" Visibility="Collapsed" Content="{Binding Path=BlockingError, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlockingErrorStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>