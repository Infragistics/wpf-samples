<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ig="http://schemas.infragistics.com/xaml" xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" xmlns:igWindows="http://infragistics.com/Windows" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase">

    <!-- *********************************  RESOURCES  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MetroDark.DataVisualization.xaml" />
        <ResourceDictionary Source="MetroDark.xamColorPicker.xaml" />
        <ResourceDictionary Source="MetroDark.xamMaskedInput.xaml" />
        <ResourceDictionary Source="Styles.WPF.xaml" />
        <ResourceDictionary Source="Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="ExclamationIcon">M 0 5 L 2 5 L 2 0 L 0 0 L 0 5 ZM 0 8 L 2 8 L 2 6 L 0 6 L 0 8 Z</Geometry>
    
    <!-- *********************************  BRUSHES  ********************************* -->
    <!-- Slider Brushes -->
    <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="SliderThumbFocusedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="SliderTrackBackgroundBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="SliderSelectionRangeBackgroundBrush" Color="{StaticResource Color_024}" />

    <!-- TabControl Brushes -->
    <SolidColorBrush x:Key="TabControlBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabControlBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="TabItemBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemForegroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="TabItemSelectedBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabItemSelectedBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemSelectedForegroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="TabItemDisabledForegroundBrush" Color="{StaticResource Color_014}" />

    <!-- Expander Brushes -->
    <SolidColorBrush x:Key="ExpanderHeaderBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="ExpanderHeaderHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ExpanderArrowHoverBackgroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ExpanderArrowPressedBorderBrush" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ExpanderDisabledForegroundBrush" Color="{StaticResource Color_007}" />

    <!-- Diagram Brushes -->
    <SolidColorBrush x:Key="DiagramBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="DiagramBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="DiagramNodeBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="DiagramNodeBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="DiagramNodeForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="DiagramConnectionBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="DiagramConnectionBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="DiagramConnectionForegroundBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="DragRectangleBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="PreviewPathBackgroundBrush" Color="{StaticResource Color_015}" />
    <SolidColorBrush x:Key="ConnectionPointBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ConnectionPointHighlightBackgroundBrush" Color="{StaticResource Color_037}" />
    <SolidColorBrush x:Key="OptionsPaneBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="OptionsPaneBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ToolBoxHeaderBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ToolBoxHeaderBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ToolBoxBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ToolBoxBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ToolBoxItemHoverBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ConnectionCapBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ConnectionCapBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ZOrderBigRectangleBackgroundBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="ZOrderSmallRectangleBackgroundBrush" Color="{StaticResource Color_007}" />

    <!-- ColorPicker Palette -->
    <ig:ColorPalette x:Key="ColorPickerPalette">
        <ig:ColorPalette.Colors>
            <ig:ColorPatchCollection>
                <ig:ColorPatch Color="#FFFFFFFF" />
                <ig:ColorPatch Color="#FF000000" />
                <ig:ColorPatch Color="#FFEEECE1" />
                <ig:ColorPatch Color="#FF2B579A" />
                <ig:ColorPatch Color="#FF487DCC" />
                <ig:ColorPatch Color="#FFC05046" />
                <ig:ColorPatch Color="#FF9DBB61" />
                <ig:ColorPatch Color="#FFAB9AC0" />
                <ig:ColorPatch Color="#FF4BACC6" />
                <ig:ColorPatch Color="#FFF59D56" />
            </ig:ColorPatchCollection>
        </ig:ColorPalette.Colors>
    </ig:ColorPalette>

    <!-- *********************************  Converters  ********************************* -->
    <igPrim:DiagramNodeOptionsVisibilityConverter x:Key="nodeOptionsVisibilityConverter" />
    <igPrim:DiagramConnectionOptionsVisibilityConverter x:Key="connectionOptionsVisibilityConverter" />
    <igPrim:SolidColorBrushToColorConverter x:Key="colorToBrushConverter" />
    <igPrim:DoubleCollectionToStringConverter x:Key="dashArrayConverter" />
    <igPrim:DiagramConnectionCapTypeToSizeConverter x:Key="capTypeToSizeConverter" />
    <igPrim:DiagramConnectionTypeConverter x:Key="connectionTypeConverter" />
    <igPrim:FallbackFontFamilyConverter x:Key="fontFamilyConverter" />
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <ig:DiagramStringSettings x:Key="stringResources" />
     <!--  *********************************  AdvancedFocusTextBox Style*********************************  -->    
    <Style TargetType="{x:Type igPrim:AdvancedFocusTextBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxSelectionBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igPrim:AdvancedFocusTextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!-- *********************************  SliderRepeatButton Style  ********************************* -->
    <Style x:Key="TitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
    </Style>

    <!-- *********************************  CutButton Style  ********************************* -->
    <Style x:Key="CutButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Path x:Name="glyph" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" Width="26" Height="26" Margin="0,5,0,0" Data="M331.181,17.579C330.893,17.544 330.429,17.36 330.652,16.693 331.521,14.091 332.782,14.289 333.902,10.585 333.902,10.585 336.502,0.327 336.502,0.327 336.502,0.327 332.272,1.315 330.991,5.399 330.991,5.399 328.634,14.769 327.769,18.76 326.834,23.066 327.61,25.337 330.224,25.647 332.245,25.887 333.63,24.522 333.931,21.996 334.23,19.469 333.202,17.819 331.181,17.579z M329.908,14.159C330.353,14.159 330.713,14.52 330.713,14.963 330.713,15.407 330.353,15.768 329.908,15.768 329.464,15.768 329.104,15.407 329.104,14.963 329.104,14.52 329.464,14.159 329.908,14.159z M332.316,21.804C332.029,24.225 330.815,24.081 330.416,24.033 330.017,23.986 328.802,23.842 329.089,21.421 329.376,19.001 330.591,19.146 330.99,19.192 331.389,19.239 332.604,19.384 332.316,21.804z M335.131,11.503C334.564,13.108 333.969,14.029 333.479,14.742 333.256,15.068 333.05,15.378 332.853,15.747 336.526,15.304 339.254,14.951 339.254,14.951 343.461,14.159 344.942,10.076 344.942,10.076 344.942,10.076 335.131,11.503 335.131,11.503z M327.183,13.326C327.183,11.291 325.664,10.076 323.121,10.076 320.577,10.076 319.058,11.291 319.058,13.326 319.058,15.957 321.221,16.996 325.608,16.576 326.101,16.529 326.521,16.44 327.148,16.373 327.148,16.373 327.724,13.942 327.724,13.942 327.147,14.002 327.183,13.598 327.183,13.326z M323.121,14.951C320.683,14.951 320.683,13.728 320.683,13.326 320.683,12.924 320.683,11.701 323.121,11.701 325.558,11.701 325.558,12.924 325.558,13.326 325.558,13.728 325.558,14.951 323.121,14.951z"></Path>
                            <TextBlock x:Name="text" Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuCutCommandText}" Foreground="{StaticResource GlyphBackgroundBrush}"></TextBlock>
                        </Grid>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CopyButton Style  ********************************* -->
    <Style x:Key="CopyButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Path x:Name="glyph" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" Width="26" Height="26" Margin="0,5,0,0" Data="M24,53.02L46.68,53.02 46.68,55.02 24,55.02 24,53.02z M24,47.01L37.34,47.01 37.34,49.01 24,49.01 24,47.01z M24,41.01L41.34,41.01 41.34,43.01 24,43.01 24,41.01z M24,35.01L48.01,35.01 48.01,37.01 24,37.01 24,35.01z M24,29.01L37.34,29.01 37.34,31.01 24,31.01 24,29.01z M18,18.01L18,66.02 54.01,66.02 54.01,18.01 18,18.01z M12,12L60.01,12 60.01,72.02 12,72.02 12,12z M2.774E-07,0L48.01,0 48.01,6 48.01,9 42.01,9 42.01,6 6,6 6,54.02 9,54.02 9,60.02 6,60.02 2.774E-07,60.02 2.774E-07,0z"></Path>
                            <TextBlock x:Name="text" Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuCopyCommandText}" Foreground="{StaticResource GlyphBackgroundBrush}"></TextBlock>
                        </Grid>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PasteButton Style  ********************************* -->
    <Style x:Key="PasteButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Path x:Name="glyph" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" Width="26" Height="26" Margin="0,5,0,0" Data="M12,56.01L46.01,56.01 46.01,58.01 12,58.01 12,56.01z M12,50.01L32,50.01 32,52.01 12,52.01 12,50.01z M12,44.01L38.01,44.01 38.01,46.01 12,46.01 12,44.01z M12,38.01L48.01,38.01 48.01,40.01 12,40.01 12,38.01z M12,32.01L32,32.01 32,34.01 12,34.01 12,32.01z M6,12L6,72.02 54.01,72.02 54.01,12 40.01,12 41.17,15.489C46.689,16.7,48.01,20.05,48.01,24L12,24C12,20.239,13.56,17.03,18.77,15.69L20,12 6,12z M30,3C28.35,3 27,4.34 27,6 27,7.649 28.35,9 30,9 31.66,9 33,7.649 33,6 33,4.34 31.66,3 30,3z M30,0C33.32,0,36.01,2.68,36.01,6L60.01,6 60.01,78.02 -2.184E-07,78.02 -2.184E-07,6 24,6C24,2.68,26.69,0,30,0z"></Path>
                            <TextBlock x:Name="text" Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuPasteCommandText}" Foreground="{StaticResource GlyphBackgroundBrush}"></TextBlock>
                        </Grid>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DeleteButton Style  ********************************* -->
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Path x:Name="glyph" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" Width="26" Height="26" Margin="0,5,0,0" Data="M89.625,178.75C89.625,178.75 206.375,178.75 206.375,178.75 206.375,178.75 283.375,178.75 283.375,178.75 283.375,178.75 400.375,178.75 400.375,178.75 400.375,178.75 400.375,514.723 400.375,514.723 399.125,525.973 387.875,534.223 379.125,534.223 379.125,534.223 110.625,534.223 110.625,534.223 100.375,534.223 89.625,523.473 89.625,514.473 89.625,514.473 89.625,178.75 89.625,178.75z M311.375,89.75C311.375,89.75 178.625,89.75 178.625,89.75 178.625,89.75 178.625,77.75 178.625,77.75 178.875,76.5 179.125,74.75 179.125,73.5 180.375,59.75 195.625,46.75 205.625,46 207.125,46 208.875,45.75 210.375,45.5 210.375,45.5 279.375,45.5 279.375,45.5 281.125,45.75 282.875,46 284.375,46 297.625,47.25 310.375,64 310.625,73.5 310.625,74.75 311.375,77 311.375,77.75 311.375,77.75 311.375,89.75 311.375,89.75z M467.727,134.25C467.727,134.25 467.727,112 467.727,112 467.727,99.734 457.733,89.75 445.455,89.75 445.455,89.75 356.625,89.75 356.625,89.75 356.625,89.75 356.625,76.5 356.625,76.5 356.625,75.75 355.625,67.75 354.875,64 354.125,60.25 352.875,56.5 351.875,53 351.125,50.5 349.875,48 348.875,45.75 347.625,43.25 346.125,40.75 344.875,38.25 332.375,16.25 308.625,3.75 291.125,1.25 287.625,0.75 283.875,0.5 280.125,0.25 280.125,0.25 209.625,0.25 209.625,0.25 206.125,0.5 202.375,0.75 198.875,1.25 195.625,2 192.125,2.75 189.125,3.5 177.875,6.75 165.125,13.5 154.375,25.5 143.125,37.75 137.375,51.5 134.875,64 134.125,68 133.875,72.5 133.375,76.5 133.375,76.5 133.375,89.75 133.375,89.75 133.375,89.75 44.545,89.75 44.545,89.75 32.267,89.75 22.273,99.734 22.273,112 22.273,112 22.273,134.25 22.273,134.25 22.273,134.25 0,134.25 0,134.25 0,134.25 0,178.75 0,178.75 0,178.75 44.375,178.75 44.375,178.75 44.375,178.75 44.375,517.223 44.375,517.223 44.375,519.723 47.125,532.223 47.375,532.723 48.125,535.223 49.375,538.223 50.625,540.973 52.625,545.223 56.125,550.973 59.875,555.473 69.375,566.723 81.375,572.973 91.375,576.223 95.875,577.723 100.875,578.223 105.375,579.223 105.375,579.223 384.375,579.223 384.375,579.223 385.125,579.223 387.625,578.473 388.875,578.473 399.875,576.973 412.375,571.973 423.625,561.973 433.875,552.723 439.375,541.473 442.625,531.973 444.125,526.973 444.625,521.723 445.625,516.973 445.625,516.973 445.625,178.75 445.625,178.75 445.625,178.75 490,178.75 490,178.75 490,178.75 490,134.25 490,134.25 490,134.25 467.727,134.25 467.727,134.25z M353.75,215.875C350.25,204.875 340.25,200.375 332.5,200.375 322.25,200.375 311.5,207.875 310,220.875 310,220.875 310,491.125 310,491.125 310,496.875 317,508.375 324,509.875 326.5,510.375 330,511.625 332.5,511.625 342.5,511.625 353.5,504.375 355,491.125 355,491.125 355,220.875 355,220.875 355,220.125 354.25,217.125 353.75,215.875z M264.75,215.875C261.25,204.875 251.25,200.375 243.5,200.375 233.25,200.375 222.5,207.875 221,220.875 221,220.875 221,491.125 221,491.125 221,496.875 228,508.375 235,509.875 237.5,510.375 241,511.625 243.5,511.625 253.5,511.625 264.5,504.375 266,490.875 266,490.875 266,220.875 266,220.875 266,220.125 265.25,217.125 264.75,215.875z M175.75,216.125C172.25,204.875 162.25,200.375 154.25,200.375 144.5,200.375 133.25,207.375 132,220.875 132,220.875 132,491.375 132,491.375 132,497.125 138.25,507.875 146,509.875 148.25,510.625 152,511.625 154.5,511.625 164.5,511.625 175.5,504.375 177,490.875 177,490.875 177,221.125 177,221.125 177,220.375 176.25,217.375 175.75,216.125z"></Path>
                            <TextBlock x:Name="text" Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuDeleteCommandText}" Foreground="{StaticResource GlyphBackgroundBrush}"></TextBlock>
                        </Grid>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ButtonStyle  ********************************* -->
    <Style x:Key="OptionsPaneButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="glyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Path x:Name="glyph" Stretch="Fill" Width="24" Height="24" Margin="2" Fill="{StaticResource GlyphBackgroundBrush}" Data="M 24.03515625,13.4814453125 C24.03515625,13.4814453125 24.03515625,10.47265625 24.03515625,10.47265625 24.03515625,10.47265625 20.4541015625,9.8876953125 20.4541015625,9.8876953125 20.2421875,9.0390625 19.9091796875,8.2421875 19.47021484375,7.51171875 19.47021484375,7.51171875 21.5576171875,4.53662109375 21.5576171875,4.53662109375 21.5576171875,4.53662109375 19.4296875,2.40966796875 19.4296875,2.40966796875 19.4296875,2.40966796875 16.4931640625,4.521484375 16.4931640625,4.521484375 15.7607421875,4.078125 14.958984375,3.74072265625 14.1044921875,3.52783203125 14.1044921875,3.52783203125 13.48046875,-0.0361328125 13.48046875,-0.0361328125 13.48046875,-0.0361328125 10.4716796875,-0.0361328125 10.4716796875,-0.0361328125 10.4716796875,-0.0361328125 9.8916015625,3.51611328125 9.8916015625,3.51611328125 9.03662109375,3.7255859375 8.23095703125,4.05908203125 7.49658203125,4.5 7.49658203125,4.5 4.568359375,2.40771484375 4.568359375,2.40771484375 4.568359375,2.40771484375 2.4404296875,4.53466796875 2.4404296875,4.53466796875 2.4404296875,4.53466796875 4.5,7.48095703125 4.5,7.48095703125 4.05517578125,8.2177734375 3.7158203125,9.02392578125 3.5009765625,9.8837890625 3.5009765625,9.8837890625 -0.03515625,10.47265625 -0.03515625,10.47265625 -0.03515625,10.47265625 -0.03515625,13.4814453125 -0.03515625,13.4814453125 -0.03515625,13.4814453125 3.4970703125,14.107421875 3.4970703125,14.107421875 3.7099609375,14.9658203125 4.04931640625,15.77197265625 4.49609375,16.509765625 4.49609375,16.509765625 2.408203125,19.43017578125 2.408203125,19.43017578125 2.408203125,19.43017578125 4.53564453125,21.55859375 4.53564453125,21.55859375 4.53564453125,21.55859375 7.48486328125,19.4931640625 7.48486328125,19.4931640625 8.22119140625,19.93505859375 9.02490234375,20.27099609375 9.8798828125,20.48193359375 9.8798828125,20.48193359375 10.4716796875,24.0361328125 10.4716796875,24.0361328125 10.4716796875,24.0361328125 13.48046875,24.0361328125 13.48046875,24.0361328125 13.48046875,24.0361328125 14.1123046875,20.47216796875 14.1123046875,20.47216796875 14.96337890625,20.25732421875 15.76513671875,19.9189453125 16.4951171875,19.47509765625 16.4951171875,19.47509765625 19.46435546875,21.55859375 19.46435546875,21.55859375 19.46435546875,21.55859375 21.59130859375,19.43017578125 21.59130859375,19.43017578125 21.59130859375,19.43017578125 19.47216796875,16.486328125 19.47216796875,16.486328125 19.9111328125,15.755859375 20.24462890625,14.9580078125 20.4541015625,14.109375 20.4541015625,14.109375 24.03515625,13.4814453125 24.03515625,13.4814453125 zM 12,18.525390625 C8.396484375,18.525390625 5.474609375,15.603515625 5.474609375,12 5.474609375,8.396484375 8.396484375,5.474609375 12,5.474609375 15.603515625,5.474609375 18.525390625,8.396484375 18.525390625,12 18.525390625,15.603515625 15.603515625,18.525390625 12,18.525390625 zM 12,7.0703125 C9.2822265625,7.0703125 7.0703125,9.2822265625 7.0703125,12 7.0703125,14.7177734375 9.2822265625,16.9296875 12,16.9296875 14.7177734375,16.9296875 16.9296875,14.7177734375 16.9296875,12 16.9296875,9.2822265625 14.7177734375,7.0703125 12,7.0703125 zM 11.97607421875,14.078125 C10.82958984375,14.078125 9.89892578125,13.1474609375 9.89892578125,12.0009765625 9.89892578125,10.85302734375 10.82958984375,9.923828125 11.97607421875,9.923828125 13.12353515625,9.923828125 14.05322265625,10.85302734375 14.05322265625,12.0009765625 14.05322265625,13.1474609375 13.12353515625,14.078125 11.97607421875,14.078125 z" />
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DialogButton Style  ********************************* -->
    <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="28" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <ContentPresenter x:Name="contentPresenter" Opacity="0.7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SliderRepeatButton Style  ********************************* -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Horizontal Thumb Style  ********************************* -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground" Fill="{TemplateBinding Background}" Width="16" Height="16" />
                        <Ellipse x:Name="FocusedVisualElement" Stroke="{StaticResource SliderThumbFocusedBorderBrush}" Width="16" Height="16" StrokeThickness="2" Opacity="0" />
                        <Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Width="16" Height="16" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Style  ********************************* -->
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="6" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="6" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                            <Border x:Name="TrackBackground" Background="{StaticResource SliderTrackBackgroundBrush}" Height="6" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource SliderSelectionRangeBackgroundBrush}" Height="6" Width="0" Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToggleButton Style  ********************************* -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{StaticResource ForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  OptionsPaneTabControl Style  ********************************* -->
    <Style x:Key="OptionsPaneTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TabControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="2,2,30,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TabItem Style  ********************************* -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{StaticResource TabItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItemBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TabItemForegroundBrush}" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0,0,0,-1">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" />
                        <Border x:Name="bottomLine" BorderBrush="{StaticResource TabControlBackgroundBrush}" BorderThickness="0,0,0,1" Margin="1,0,1,-1" VerticalAlignment="Bottom" Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource LightForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource TabItemDisabledForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource TabItemSelectedForegroundBrush}" />
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItemSelectedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItemSelectedBorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter Property="Canvas.ZIndex" Value="1" />
                            <Setter Property="Opacity" TargetName="bottomLine" Value="1" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Expander Down Style  ********************************* -->
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Border x:Name="Bg" Background="{StaticResource ExpanderHeaderBackgroundBrush}">
                            <Grid Background="{StaticResource TransparentBrush}" Height="30" Margin="4,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Fill="{StaticResource GlyphBackgroundBrush}" Data="M0,0 L6,5 L0,10 z" Width="6" Height="10" Stretch="Fill" RenderTransformOrigin="0.5, 0.5" />
                                <ContentPresenter Grid.Column="1" TextBlock.FontWeight="SemiBold" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M0,0 L10,0 L5,6 z" />
                            <Setter Property="Width" TargetName="arrow" Value="10" />
                            <Setter Property="Height" TargetName="arrow" Value="6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowHoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ExpanderHeaderHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ExpanderArrowPressedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Expander Style  ********************************* -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ExpanderDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  CapType Enum  ********************************* -->
    <ObjectDataProvider x:Key="capTypeEnum" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="ig:DiagramConnectionCapType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- *********************************  Node Shapes  ********************************* -->
    <ResourceDictionary x:Key="NodeShapes">
        <EllipseGeometry x:Key="EllipseNodeGeometry" Center="50,50" RadiusX="50" RadiusY="50" />
        <RectangleGeometry x:Key="RectangleNodeGeometry" Rect="0 0 100 100" />
        <RectangleGeometry x:Key="RoundedRectangleNodeGeometry" Rect="0 0 120 80" RadiusX="5" RadiusY="5" />
        <PathGeometry x:Key="TriangeNodeGeometry">
            <PathFigure StartPoint="50, 0" IsFilled="True" IsClosed="True">
                <LineSegment Point="0, 100" />
                <LineSegment Point="100, 100" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="RightTriangeNodeGeometry">
            <PathFigure StartPoint="0, 0" IsFilled="True" IsClosed="True">
                <LineSegment Point="0, 100" />
                <LineSegment Point="100, 100" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="RightTriangeMirroredNodeGeometry">
            <PathFigure StartPoint="100, 0" IsFilled="True" IsClosed="True">
                <LineSegment Point="0, 100" />
                <LineSegment Point="100, 100" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="RhombusNodeGeometry">
            <PathFigure StartPoint="0, 50" IsFilled="True" IsClosed="True">
                <LineSegment Point="50, 0" />
                <LineSegment Point="100, 50" />
                <LineSegment Point="50, 100" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="OctagonNodeGeometry">
            <PathFigure StartPoint="30, 0" IsFilled="True" IsClosed="True">
                <LineSegment Point="70, 0" />
                <LineSegment Point="100, 30" />
                <LineSegment Point="100, 70" />
                <LineSegment Point="70, 100" />
                <LineSegment Point="30, 100" />
                <LineSegment Point="0, 70" />
                <LineSegment Point="0, 30" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="ChevronNodeGeometry">
            <PathFigure StartPoint="0, 0" IsFilled="True" IsClosed="True">
                <LineSegment Point="50, 0" />
                <LineSegment Point="100, 50" />
                <LineSegment Point="50, 100" />
                <LineSegment Point="0, 100" />
                <LineSegment Point="50, 50" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="HexagonNodeGeometry">
            <PathFigure StartPoint="0, 50" IsFilled="True" IsClosed="True">
                <LineSegment Point="25, 0" />
                <LineSegment Point="75, 0" />
                <LineSegment Point="100, 50" />
                <LineSegment Point="75, 100" />
                <LineSegment Point="25, 100" />
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="PentagonNodeGeometry">
            <PathFigure StartPoint="50, 0" IsClosed="True">
                <PathFigure.Segments>
                    <LineSegment Point="100, 40" />
                    <LineSegment Point="80, 100" />
                    <LineSegment Point="20, 100" />
                    <LineSegment Point="0, 40" />
                </PathFigure.Segments>
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="HeptagonNodeGeometry">
            <PathFigure StartPoint="50, 0" IsClosed="True">
                <PathFigure.Segments>
                    <LineSegment Point="90, 19" />
                    <LineSegment Point="100, 62" />
                    <LineSegment Point="73, 100" />
                    <LineSegment Point="27, 100" />
                    <LineSegment Point="0, 62" />
                    <LineSegment Point="10, 19" />
                </PathFigure.Segments>
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="CrossNodeGeometry">
            <PathFigure StartPoint="0,33" IsClosed="True">
                <PathFigure.Segments>
                    <LineSegment Point="33,33" />
                    <LineSegment Point="33,0" />
                    <LineSegment Point="66,0" />
                    <LineSegment Point="66,33" />
                    <LineSegment Point="99,33" />
                    <LineSegment Point="99,66" />
                    <LineSegment Point="66,66" />
                    <LineSegment Point="66,99" />
                    <LineSegment Point="33,99" />
                    <LineSegment Point="33,66" />
                    <LineSegment Point="0,66" />
                </PathFigure.Segments>
            </PathFigure>
        </PathGeometry>
        <PathGeometry x:Key="ThinCrossNodeGeometry">
            <PathFigure StartPoint="0,44" IsClosed="True">
                <PathFigure.Segments>
                    <LineSegment Point="44,44" />
                    <LineSegment Point="44,0" />
                    <LineSegment Point="55,0" />
                    <LineSegment Point="55,44" />
                    <LineSegment Point="99,44" />
                    <LineSegment Point="99,55" />
                    <LineSegment Point="55,55" />
                    <LineSegment Point="55,99" />
                    <LineSegment Point="44,99" />
                    <LineSegment Point="44,55" />
                    <LineSegment Point="0,55" />
                </PathFigure.Segments>
            </PathFigure>
        </PathGeometry>
    </ResourceDictionary>


    <!-- *********************************  Default Error Template  ********************************* -->
    <ResourceDictionary x:Key="DiagramResources">
        <ControlTemplate x:Key="EditorErrorTemplate">
            <DockPanel LastChildFill="true">
                <Border Background="{StaticResource ValidationErrorElement}"
                        DockPanel.Dock="right"
                        Margin="10,0,0,0" />
                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                    <Border BorderBrush="{StaticResource ValidationErrorElement}"
                            BorderThickness="1"
                            ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                        <Border.Resources>
                            <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}">
                                <Setter Property="Background" Value="{StaticResource ValidationErrorElement}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ValidationErrorElement}" />
                                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
                            </Style>
                        </Border.Resources>
                        <Grid HorizontalAlignment="Right" Margin="0 0 -1 0">
                            <Border Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Background="{StaticResource ValidationErrorElement}"/>
                            <Path Stretch="Fill"
                                  Width="2"
                                  Height="8"
                                  Data="{StaticResource ExclamationIcon}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Fill="{StaticResource LightForegroundBrush}"/>
                        </Grid>
                    </Border>
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
        <ControlTemplate x:Key="DisplayErrorTemplate">
            <DockPanel LastChildFill="true">
                <Border Background="{StaticResource ValidationErrorElement}"
                        DockPanel.Dock="right"
                        Margin="10,0,0,0" />
                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                    <Border BorderBrush="{StaticResource ValidationErrorElement}"
                            BorderThickness="1"
                            ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                        <Border.Resources>
                            <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}">
                                <Setter Property="Background" Value="{StaticResource ValidationErrorElement}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ValidationErrorElement}" />
                                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
                            </Style>
                        </Border.Resources>
                        <Grid HorizontalAlignment="Right" Margin="0 0 -1 0">
                            <Border Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                                    Background="{StaticResource ValidationErrorElement}"/>
                            <Path Stretch="Fill"
                                  Width="2"
                                  Height="8"
                                  Data="{StaticResource ExclamationIcon}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Fill="{StaticResource LightForegroundBrush}"/>
                        </Grid>
                    </Border>
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
    </ResourceDictionary>

    <!-- *********************************  NodeContent Template  ********************************* -->
    <DataTemplate x:Key="NodeContentTemplate">
        <TextBlock Margin="5 3" Text="{Binding Mode=OneWay}" TextWrapping="Wrap" TextAlignment="Center" />
    </DataTemplate>

    <!-- *********************************  DiagramNode Style  ********************************* -->
    <Style TargetType="ig:DiagramNode">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Rectangle StrokeThickness="1"
                                          Margin="-7"
                                          Stroke="{StaticResource DragRectangleBorderBrush}"
                                          StrokeDashArray="1 2"
                                          SnapsToDevicePixels="true"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Fill" Value="{StaticResource DiagramNodeBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DiagramNodeForegroundBrush}" />
        <Setter Property="Stroke" Value="{StaticResource DiagramNodeBorderBrush}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="DisplayTemplate" Value="{StaticResource NodeContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:DiagramNode" Resources="{StaticResource NodeShapes}">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid x:Name="ShapePanel" />
                        <Grid x:Name="ContentPanel" />
                        <Grid x:Name="EditPanel" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ConnectionContent Template  ********************************* -->
    <DataTemplate x:Key="ConnectionContentTemplate">
        <TextBlock Text="{Binding Mode=OneWay}" TextWrapping="Wrap" TextAlignment="Center" />
    </DataTemplate>

    <!-- *********************************  DiagramConnection Style  ********************************* -->
    <Style TargetType="ig:DiagramConnection">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Rectangle StrokeThickness="1"
                                          Margin="-7"
                                          Stroke="{StaticResource DragRectangleBorderBrush}"
                                          StrokeDashArray="1 2"
                                          SnapsToDevicePixels="true"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Stroke" Value="{StaticResource DiagramConnectionBorderBrush}" />
        <Setter Property="Fill" Value="{StaticResource DiagramConnectionBackgroundBrush}" />
        <Setter Property="EndCapType" Value="FilledArrow" />
        <Setter Property="Foreground" Value="{StaticResource DiagramConnectionForegroundBrush}" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="DisplayTemplate" Value="{StaticResource ConnectionContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:DiagramConnection">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid x:Name="ShapePanel">
                            <Canvas x:Name="ConnectionCanvas">
                                <Path x:Name="UnderlayPath"
                                      Stroke="{StaticResource TransparentBrush}"
                                      StrokeThickness="20"/>
                            </Canvas>
                            <Path x:Name="ShapePath" StrokeDashCap="Round"/>
                        </Grid>
                        <Grid x:Name="RootContentPanel" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Grid x:Name="ContentPanel">
                                <Rectangle Fill="{Binding Background, RelativeSource={RelativeSource AncestorType=ig:XamDiagram}}"/>
                                <igPrim:DiagramItemContentPresenter x:Name="ContentPresenter"/>
                            </Grid>
                            <Grid x:Name="EditPanel" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Diagram Style  ********************************* -->
    <Style TargetType="ig:XamDiagram">
        <Setter Property="Background" Value="{StaticResource DiagramBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DiagramBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamDiagram" Resources="{StaticResource DiagramResources}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ig:DragDropManager.DropTarget>
                            <ig:DropTarget IsDropTarget="True" />
                        </ig:DragDropManager.DropTarget>
                        <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <Grid x:Name="MainGrid">
                                <igPrim:DrawingPanel x:Name="DrawingPanel"></igPrim:DrawingPanel>
                            </Grid>
                            <Grid>
                                <Canvas x:Name="ConnectionPointsLayer" />
                                <Canvas x:Name="HandlesLayer">
                                    <Rectangle x:Name="SelectionRectangle" Stroke="{StaticResource DragRectangleBorderBrush}" StrokeDashArray="2 2" StrokeThickness="1" Visibility="Collapsed" />
                                </Canvas>
                                <Canvas>
                                    <Rectangle x:Name="DragRectangle" Visibility="Collapsed" Stroke="{StaticResource DragRectangleBorderBrush}" StrokeThickness="1" StrokeDashArray="3, 3"></Rectangle>
                                    <Path x:Name="PreviewPath" Visibility="Collapsed" Fill="{StaticResource PreviewPathBackgroundBrush}"></Path>
                                    <Button x:Name="OptionsPaneButton" Visibility="Collapsed" Command="ig:DiagramCommands.ShowOptionsPane" Cursor="Arrow" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource OptionsPaneButtonStyle}" Width="36" Height="36" Padding="1" />
                                    <Popup x:Name="OptionsPanePopup" IsOpen="False" StaysOpen="False" Focusable="False" PlacementTarget="{Binding ElementName=OptionsPaneButton}">
                                        <igPrim:DiagramOptionsPane x:Name="DiagramOptionsPane" Height="350" Width="370"></igPrim:DiagramOptionsPane>
                                    </Popup>
                                </Canvas>
                            </Grid>
                            <ig:XamOverviewPlusDetailPane x:Name="Thumbnail" IsZoomable="True" Visibility="{TemplateBinding NavigationPaneVisibility}" HorizontalAlignment="{TemplateBinding NavigationPaneHorizontalAlignment}" VerticalAlignment="{TemplateBinding NavigationPaneVerticalAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ConnectionDrawingHandle Style  ********************************* -->

    <Style TargetType="igPrim:DiagramConnectionHandle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource GlyphBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DragRectangleBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UniformHeight" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DiagramConnectionHandle">
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ResizeHandle Style  ********************************* -->
    <Style TargetType="igPrim:DiagramResizeHandle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{StaticResource GlyphBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DragRectangleBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UniformHeight" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DiagramResizeHandle">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ResizeHandleLine Style  ********************************* -->
    <Style TargetType="igPrim:DiagramResizeHandleLine">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UniformHeight" Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DiagramResizeHandleLine">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- *********************************  DiagramConnectionPointPresenter Style  ********************************* -->
    <Style TargetType="igPrim:DiagramConnectionPointPresenter">
        <Setter Property="Background" Value="{StaticResource ConnectionPointBackgroundBrush}" />
        <Setter Property="HighlightBrush" Value="{StaticResource ConnectionPointHighlightBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DiagramConnectionPointPresenter">
                    <Grid Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Rectangle Margin="4" Width="7" Height="7" Fill="{TemplateBinding Background}" />
                        <Rectangle Visibility="{TemplateBinding IsHighlighted, Converter={StaticResource boolToVisibilityConverter}}" Width="17" Height="17" StrokeThickness="3" Stroke="{TemplateBinding HighlightBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DiagramConnectionCapPresenter Style  ********************************* -->
    <Style TargetType="ig:DiagramConnectionCapPresenter">
        <Setter Property="BorderBrush" Value="{StaticResource ConnectionCapBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ConnectionCapBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:DiagramConnectionCapPresenter">
                    <Border Background="{TemplateBinding Background}" Padding="5" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Path Stroke="{TemplateBinding BorderBrush}">
                            <Path.Data>
                                <EllipseGeometry RadiusX="10" RadiusY="10" />
                            </Path.Data>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DiagramToolbox Style  ********************************* -->
    <Style TargetType="{x:Type ig:XamDiagramToolbox}">
        <Setter Property="MinWidth" Value="170" />
        <Setter Property="HeaderForeground" Value="{StaticResource LightForegroundBrush}" />
        <Setter Property="HeaderBackground" Value="{StaticResource ToolBoxHeaderBackgroundBrush}" />
        <Setter Property="HeaderBorderBrush" Value="{StaticResource ToolBoxHeaderBorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolBoxBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ToolBoxBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="2,0,2,2" />
        <Setter Property="Header" Value="{Binding Source={StaticResource stringResources}, Path=ToolboxHeaderText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ig:XamDiagramToolbox}">
                    <Border x:Name="toolboxBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid x:Name="ToolBoxLayout">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Border x:Name="headerBorder" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding HeaderBorderBrush}" BorderThickness="{TemplateBinding HeaderBorderThickness}" Visibility="{TemplateBinding HeaderVisibility}">
                                <ContentControl Content="{TemplateBinding Header}" Margin="10,5" TextBlock.FontSize="14.667" Foreground="{TemplateBinding HeaderForeground}" />
                            </Border>

                            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="4" Style="{StaticResource ScrollViewerStyle}">
                                <ItemsControl x:Name="toolBox" ItemsSource="{TemplateBinding Categories}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Expander Header="{Binding Name, Mode=OneWay}" IsExpanded="{Binding IsExpanded, Mode=OneWay}" Style="{StaticResource ExpanderStyle}">
                                                <igPrim:DiagramToolboxCategoryItemsControl ItemsSource="{Binding Items, Mode=OneWay}">
                                                    <igPrim:DiagramToolboxCategoryItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <ig:DiagramToolboxItemsPanel/>
                                                        </ItemsPanelTemplate>
                                                    </igPrim:DiagramToolboxCategoryItemsControl.ItemsPanel>
                                                </igPrim:DiagramToolboxCategoryItemsControl>
                                            </Expander>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DragTemplate Style  ********************************* -->
    <Style x:Key="DragTemplateStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle />
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DiagramToolBoxCategoryItem Style  ********************************* -->
    <Style TargetType="{x:Type igPrim:DiagramToolboxCategoryItem}">
        <Setter Property="MinHeight" Value="80" />
        <Setter Property="MinWidth" Value="135" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Title, Mode=OneWay}" FontSize="14.667" TextWrapping="Wrap" Foreground="{StaticResource ForegroundBrush}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:DiagramToolboxCategoryItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="DragTemplate">
                            <ContentControl Opacity=".72" x:Name="DragPresenter" Content="{Binding Path=Data}"/>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Margin="2 2 0 0" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Border.Style>
                            <Style>
                                <Setter Property="Border.Background" Value="{StaticResource TransparentBrush}" />
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Setter Property="Border.Background" Value="{StaticResource ToolBoxItemHoverBackgroundBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid x:Name="MainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Rectangle Fill="{TemplateBinding Background}" />
                                <ContentPresenter Content="{Binding Content, Mode=OneWay}" />
                            </Grid>
                            <Grid Grid.Column="1">
                                <Rectangle Stroke="{TemplateBinding Background}" />
                                <ContentPresenter Margin="5" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Left" TextBlock.Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ig:XamDiagramToolbox}}, Path=Foreground}" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DiagramOptionsPane Style  ********************************* -->
    <Style TargetType="{x:Type igPrim:DiagramOptionsPane}">
        <Setter Property="Background" Value="{StaticResource OptionsPaneBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource OptionsPaneBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:DiagramOptionsPane}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="-1,1,-1,-1" igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <TabControl Style="{StaticResource OptionsPaneTabControl}">
                                <!-- General -->
                                <TabItem Header="{Binding Source={StaticResource stringResources}, Path=ContextMenuGeneralHeaderText}">
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Button Grid.Column="0" Height="70" Margin="0,0,2,0" Command="ApplicationCommands.Cut" CommandTarget="{TemplateBinding Diagram}" Style="{StaticResource CutButtonStyle}" />
                                        <Button Grid.Column="1" Height="70" Margin="2,0,2,0" Command="ApplicationCommands.Copy" CommandTarget="{TemplateBinding Diagram}" Style="{StaticResource CopyButtonStyle}" />
                                        <Button Grid.Column="2" Height="70" Margin="2,0,2,0" Command="ApplicationCommands.Paste" CommandTarget="{TemplateBinding Diagram}" Style="{StaticResource PasteButtonStyle}" />
                                        <Button Grid.Column="3" Height="70" Margin="2,0,0,0" Command="ApplicationCommands.Delete" CommandTarget="{TemplateBinding Diagram}" Style="{StaticResource DeleteButtonStyle}" />

                                        <Rectangle Grid.Row="1" Grid.ColumnSpan="4" Height="1" VerticalAlignment="Center" Margin="5,10" Fill="{StaticResource OptionsPaneBorderBrush}" StrokeThickness="1" />
                                        <Button Grid.Row="2" Grid.Column="0" Height="70" Margin="0,0,2,0" Command="ig:DiagramCommands.BringForward" CommandTarget="{TemplateBinding Diagram}" ToolTip="{Binding Source={StaticResource stringResources}, Path=ContextMenuBringForwardCommandFullText}" Style="{StaticResource ButtonStyle}">
                                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Width="20"
                                                        Height="20"
                                                        Grid.Row="0">
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="14" Height="14" Canvas.Left="12" Canvas.Top="12" />
                                                    <Rectangle Fill="{StaticResource ZOrderBigRectangleBackgroundBrush}" Width="20" Height="20" />
                                                </Canvas>
                                                <TextBlock Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuBringForwardCommandText}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}" />
                                            </Grid>
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="1" Height="70" Margin="2,0,2,0" Command="ig:DiagramCommands.SendBackward" CommandTarget="{TemplateBinding Diagram}" ToolTip="{Binding Source={StaticResource stringResources}, Path=ContextMenuSendBackwardCommandFullText}" Style="{StaticResource ButtonStyle}">
                                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Width="20"
                                                        Height="20"
                                                        Grid.Row="0">
                                                    <Rectangle Fill="{StaticResource ZOrderBigRectangleBackgroundBrush}" Width="20" Height="20" />
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="14" Height="14" Canvas.Left="12" Canvas.Top="12" />
                                                </Canvas>
                                                <TextBlock Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuSendBackwardCommandText}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}" />
                                            </Grid>
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="2" Height="70" Margin="2,0,2,0" Command="ig:DiagramCommands.BringToFront" CommandTarget="{TemplateBinding Diagram}" ToolTip="{Binding Source={StaticResource stringResources}, Path=ContextMenuBringToFrontCommandFullText}" Style="{StaticResource ButtonStyle}">
                                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Width="20"
                                                        Height="20"
                                                        Grid.Row="0">
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="12" Height="12" />
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="12" Height="12" Canvas.Top="14" Canvas.Left="14" />
                                                    <Rectangle Fill="{StaticResource ZOrderBigRectangleBackgroundBrush}" Width="18" Height="18" Canvas.Top="4" Canvas.Left="4"/>
                                                </Canvas>
                                                <TextBlock Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuBringToFrontCommandText}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}" />
                                            </Grid>
                                        </Button>
                                        <Button Grid.Row="2" Grid.Column="3" Height="70" Margin="2,0,0,0" Command="ig:DiagramCommands.SendToBack" CommandTarget="{TemplateBinding Diagram}" ToolTip="{Binding Source={StaticResource stringResources}, Path=ContextMenuSendToBackCommandFullText}" Style="{StaticResource ButtonStyle}">
                                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition></RowDefinition>
                                                    <RowDefinition Height="Auto"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Width="20"
                                                        Height="20"
                                                        Grid.Row="0">
                                                    <Rectangle Fill="{StaticResource ZOrderBigRectangleBackgroundBrush}" Width="18" Height="18" Canvas.Top="4" Canvas.Left="4"/>
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="12" Height="12"/>
                                                    <Rectangle Fill="{StaticResource ZOrderSmallRectangleBackgroundBrush}" Stroke="{StaticResource ForegroundBrush}" Width="12" Height="12" Canvas.Top="14" Canvas.Left="14" />
                                                </Canvas>
                                                <TextBlock Grid.Row="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuSendToBackCommandText}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Path=Foreground}" />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </TabItem>

                                <!-- Shape -->
                                <TabItem Header="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeHeaderText}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="75"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,16" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeFillText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamColorPicker Grid.Row="0" Grid.Column="1" Margin="0,0,0,16" SelectedColor="{Binding Path=Fill, Converter={StaticResource colorToBrushConverter}, Mode=TwoWay}" CurrentPalette="{StaticResource ColorPickerPalette}" />

                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,16" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeOpacityText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <Slider Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="1" 
                                                SmallChange="0.01"
                                                LargeChange="0.1"
                                                Value="{Binding Opacity, TargetNullValue=1.1}" Margin="0,0,0,16" Style="{StaticResource SliderStyle}"></Slider>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="2" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeWidthText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding Width}" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Margin="0,0,0,11" Mask="{}{number:0-999999}" SpinButtonDisplayMode="Always" Grid.Row="2" Grid.Column="1" IsEnabled="{Binding Path=AllowResizeResolved}"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="3" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeHeightText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding Height}" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Margin="0,0,0,11" Mask="{}{number:0-999999}" SpinButtonDisplayMode="Always" Grid.Row="3" Grid.Column="1" IsEnabled="{Binding Path=AllowResizeResolved}"></ig:XamNumericInput>

                                        <StackPanel Grid.Row="4" Grid.ColumnSpan="4"
                                                        Margin="0,0,5,11"
                                                        Orientation="Horizontal"
                                                        Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}">
                                            <TextBlock VerticalAlignment="Center"
                                                           Text="{Binding Source={StaticResource stringResources}, Path=MaintainAspectRatioText}"
                                                           Style="{StaticResource TitleTextBlockStyle}"/>
                                            <CheckBox IsChecked="{Binding MaintainAspectRatio}"
                                                          VerticalAlignment="Bottom"
                                                          Margin="5,0,0,0"
                                                          Style="{StaticResource CheckBoxStyle}"></CheckBox>
                                        </StackPanel>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="5" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeStartPointXText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding X}" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="5" Grid.Column="1"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="6" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuShapeStartPointYText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding Y}" Visibility="{Binding Mode, Converter={StaticResource nodeOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="6" Grid.Column="1"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="2" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionStartPointXText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding StartX}" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="2" Grid.Column="1"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="3" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionStartPointYText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding StartY}" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="3" Grid.Column="1"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="4" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionEndPointXText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding EndX}" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="4" Grid.Column="1"></ig:XamNumericInput>

                                        <TextBlock Margin="0,5,0,11" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Grid.Row="5" Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionEndPointYText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Value="{Binding EndY}" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}" Mask="{}{number:-999999-999999}" SpinButtonDisplayMode="Always" Margin="0,0,0,11" Grid.Row="5" Grid.Column="1"></ig:XamNumericInput>
                                    </Grid>
                                </TabItem>

                                <!-- Line -->
                                <TabItem Header="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionHeaderText}">
                                    <Grid Margin="10" Grid.IsSharedSizeScope="True">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="FirstColumnGroup"></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,10" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuLineStrokeText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamColorPicker Margin="0,0,0,10" Grid.Row="0" Grid.Column="1" SelectedColor="{Binding Path=Stroke, Converter={StaticResource colorToBrushConverter}, Mode=TwoWay}" CurrentPalette="{StaticResource ColorPickerPalette}" />

                                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,10" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuLineThicknessText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ig:XamNumericInput Grid.Row="1" Grid.Column="1" Margin="0,0,0,10" Value="{Binding Path=StrokeThickness}" Mask="{}{number:0-999999}" SpinButtonDisplayMode="Always"></ig:XamNumericInput>

                                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="{Binding Source={StaticResource stringResources}, Path=ContextMenuLineDashTypeText}" Style="{StaticResource TitleTextBlockStyle}" />
                                        <ComboBox Grid.Row="2" Grid.Column="1" Height="22" ItemsSource="{TemplateBinding StrokeDashArrays}" SelectedItem="{Binding Path=StrokeDashArray, Converter={StaticResource dashArrayConverter}}" Style="{StaticResource ComboBoxStyle}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Height="20">
                                                        <Line X1="0" X2="100" Y1="0.5" Y2="0.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}" StrokeDashArray="{Binding}" SnapsToDevicePixels="True" VerticalAlignment="Center"></Line>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Grid Grid.Row="3" Grid.ColumnSpan="2" Visibility="{Binding Mode, Converter={StaticResource connectionOptionsVisibilityConverter}, FallbackValue=Collapsed}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>

                                            <Rectangle Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="1" Fill="{StaticResource OptionsPaneBorderBrush}" StrokeThickness="0" Margin="0,10,0,10"></Rectangle>

                                            <Grid Grid.Row="1" Grid.ColumnSpan="2"
                                                  Margin="0,0,0,15">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="FirstColumnGroup"></ColumnDefinition>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Column="0" 
                                                           Text="{Binding Source={StaticResource stringResources}, Path=ConnectionText}"
                                                           Margin="0,0,5,0"
                                                           VerticalAlignment="Center"
                                                           Style="{StaticResource TitleTextBlockStyle}"></TextBlock>

                                                <RadioButton Grid.Column="1" Margin="0,0,5,0" IsChecked="{Binding Path=ConnectionType, Converter={StaticResource connectionTypeConverter}, ConverterParameter={x:Static ig:DiagramConnectionType.RightAngle}}" Style="{StaticResource ToggleButtonStyle}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionTypeRightAngleText}" />
                                                <RadioButton Grid.Column="2" Margin="5,0,0,0" IsChecked="{Binding Path=ConnectionType, Converter={StaticResource connectionTypeConverter}, ConverterParameter={x:Static ig:DiagramConnectionType.Straight}}" Style="{StaticResource ToggleButtonStyle}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Content="{Binding Source={StaticResource stringResources}, Path=ContextMenuConnectionTypeStraightText}" />
                                            </Grid>

                                            <ComboBox Grid.Row="2" Grid.Column="0" Margin="0,0,5,10" ItemsSource="{Binding Source={StaticResource capTypeEnum}}" SelectedItem="{Binding StartCapType}" Style="{StaticResource ComboBoxStyle}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Height="20">
                                                            <ig:DiagramConnection VerticalAlignment="Center"
                                                                                  Margin="10,10,0,0"
                                                                                  StartPosition="0,0"
                                                                                  EndPosition="55,0" 
                                                                                  StartCapType="{Binding}" 
                                                                                  StartCapSize="{Binding Converter={StaticResource capTypeToSizeConverter}}" 
                                                                                  EndCapType="None"
                                                                                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}" 
                                                                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <ComboBox Grid.Row="2" Grid.Column="1" Margin="5,0,0,10" ItemsSource="{Binding Source={StaticResource capTypeEnum}}" SelectedItem="{Binding EndCapType}" Style="{StaticResource ComboBoxStyle}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Height="20">
                                                            <ig:DiagramConnection VerticalAlignment="Center"
                                                                                  Margin="10,10,0,0"
                                                                                  StartPosition="0,0"
                                                                                  EndPosition="55,0" 
                                                                                  StartCapType="None" 
                                                                                  EndCapType="{Binding}"
                                                                                  EndCapSize="{Binding Converter={StaticResource capTypeToSizeConverter}}" 
                                                                                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"
                                                                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <ig:XamNumericInput Grid.Row="3" Grid.Column="0" Margin="0,0,5,10" Value="{Binding Path=StartCapSize}" Mask="{}{number:0-999999}" SpinButtonDisplayMode="Always"></ig:XamNumericInput>

                                            <ig:XamNumericInput Grid.Row="3" Grid.Column="1" Margin="5,0,0,10" Value="{Binding Path=EndCapSize}" Mask="{}{number:0-999999}" SpinButtonDisplayMode="Always"></ig:XamNumericInput>
                                        </Grid>
                                    </Grid>
                                </TabItem>

                                <!-- Text -->
                                <TabItem Header="{Binding Source={StaticResource stringResources}, Path=ContextMenuTextHeaderText}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10" Grid.Row="0" Grid.Column="1" Style="{StaticResource TextBoxStyle}" IsEnabled="{Binding AllowEditResolved}" IsReadOnly="{Binding IsContentReadOnly}"/>

                                        <ComboBox VerticalContentAlignment="Center" Grid.Row="1" SelectedItem="{Binding Path=FontFamily}" Style="{StaticResource ComboBoxStyle}">
                                            <ComboBox.Resources>
                                                <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                                    <CollectionViewSource.SortDescriptions>
                                                        <ComponentModel:SortDescription PropertyName="Source" />
                                                    </CollectionViewSource.SortDescriptions>
                                                </CollectionViewSource>
                                            </ComboBox.Resources>
                                            <ComboBox.ItemsSource>
                                                <Binding Source="{StaticResource myFonts}" />
                                            </ComboBox.ItemsSource>

                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontFamily="{Binding Converter={StaticResource fontFamilyConverter}}" Text="{Binding Source}" VerticalAlignment="Center" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0,10,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="100"></ColumnDefinition>
                                                <ColumnDefinition></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton FontWeight="Bold" Grid.Column="0" FontFamily="Callibri" IsChecked="{Binding Path=IsBold}" Style="{StaticResource ToggleButtonStyle}" Padding="2,2,2,0">B</ToggleButton>
                                            <ToggleButton FontStyle="Italic" FontWeight="SemiBold" Grid.Column="1" Margin="8,0,0,0" FontFamily="Times New Roman" IsChecked="{Binding Path=IsItalic}" Style="{StaticResource ToggleButtonStyle}" Padding="2,0">I</ToggleButton>
                                            <igPrim:AdvancedEditableComboBox Margin="8,0,0,0" Grid.Column="2" ItemsSource="{TemplateBinding FontSizes}" Text="{Binding Path=FontSize, ValidatesOnDataErrors=True}" Style="{StaticResource ComboBoxStyle}" />
                                            <ig:XamColorPicker Grid.Column="3" Margin="8,0,0,0" SelectedColor="{Binding Path=FontBrush, Converter={StaticResource colorToBrushConverter}, Mode=TwoWay}" CurrentPalette="{StaticResource ColorPickerPalette}" />
                                        </Grid>
                                    </Grid>
                                </TabItem>
                            </TabControl>

                            <Button VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,6,10,0" Height="18" Width="18" Command="ig:DiagramCommands.CloseOptionsPane" Style="{StaticResource DialogButtonStyle}">
                                <Path Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" />
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>