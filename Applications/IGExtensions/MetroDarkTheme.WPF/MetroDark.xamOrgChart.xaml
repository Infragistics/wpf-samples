<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:local="http://schemas.infragistics.com/xaml" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="MetroDark.DataVisualization.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES **********************************-->
  <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_001}" />

  <!-- OrgChart Brushes -->
  <SolidColorBrush x:Key="OrgChartBackgroundBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="OrgChartBorderBrush" Color="{StaticResource Color_016}" />
  <SolidColorBrush x:Key="OrgChartConnectorLineBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OrgChartDragStrokeBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="OrgChartPreviewBrush" Color="{StaticResource Color_019}" />

  <!-- OrgChart NodeControl Brushes -->
  <SolidColorBrush x:Key="OrgChartNodeControlBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="OrgChartNodeControlBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OrgChartNodeControlHoverBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="OrgChartNodeControlSelectedBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="OrgChartNodeControlFocusedBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="OrgChartNodeControlDisabledBackgroundBrush" Color="{StaticResource Color_012}" />
  <SolidColorBrush x:Key="OrgChartNodeControlCornerBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="OrgChartNodeControlCornerHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OrgChartNodeControlCornerHoverBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="OrgChartNodeControlCornerSelectedBackgroundBrush" Color="{StaticResource Color_024}" />

  <!-- OrgChartNode ToggleButton Brushes -->
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonHoverBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonPressedBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonPressedBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonFocusBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonDisabledBackgroundBrush" Color="{StaticResource Color_012}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonExpandBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="OrgChartNodeToggleButtonCollapseBackgroundBrush" Color="{StaticResource Color_004}" />

  <!-- Tooltip Brushes -->
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_069}" />
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_006}" />

  <!-- *********************************  ToolTip Style  ********************************* -->
  <Style x:Key="ToolTipStyle" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="Padding" Value="10,7" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Grid>
              <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" />
              <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}" />

  <!-- *********************************  XamOrgChart Style  ********************************* -->
  <Style x:Key="XamOrgChartStyle" TargetType="local:XamOrgChart">
    <Setter Property="Background" Value="{StaticResource OrgChartBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource OrgChartBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="DragStroke" Value="{StaticResource OrgChartDragStrokeBrush}" />
    <Setter Property="DragStrokeThickness" Value="1" />
    <Setter Property="PreviewBrush" Value="{StaticResource OrgChartPreviewBrush}" />
    <Setter Property="ToolTipStyle" Value="{StaticResource ToolTipStyle}" />
    <!-- Connector properties -->
    <Setter Property="Line" Value="{StaticResource OrgChartConnectorLineBrush}" />
    <Setter Property="LineThickness" Value="1" />
    <Setter Property="LineStartCap" Value="None" />
    <Setter Property="LineEndCap" Value="None" />
    <Setter Property="IsTabStop" Value="False" />
    <!-- ControlTemplate. Overrides SurfaceViewer to add the NodesPanel -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:XamOrgChart">
          <Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <ContentPresenter x:Name="ContentPresenter" />
              <local:OrgChartNodesPanel x:Name="NodesPanel" Background="{TemplateBinding Background}" />
              <Canvas x:Name="Overlay" />
              <ig:XamOverviewPlusDetailPane x:Name="Thumbnail" IsZoomable="True" Visibility="{TemplateBinding OverviewPlusDetailPaneVisibility}" HorizontalAlignment="{TemplateBinding HorizontalOverviewPlusDetailPaneAlignment}" VerticalAlignment="{TemplateBinding VerticalOverviewPlusDetailPaneAlignment}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:XamOrgChart" BasedOn="{StaticResource XamOrgChartStyle}" />

  <!-- *********************************  NodeToggleButton Style  ********************************* -->
  <Style x:Key="NodeToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Width" Value="20" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="expand">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="collapse">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.6" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledFill" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-5" />
            <Rectangle x:Name="normal" Fill="{StaticResource OrgChartNodeToggleButtonBackgroundBrush}" Stroke="{StaticResource OrgChartNodeToggleButtonBorderBrush}" StrokeThickness="1" />
            <Rectangle x:Name="over" Fill="{StaticResource OrgChartNodeToggleButtonHoverBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource OrgChartNodeToggleButtonHoverBorderBrush}" />
            <Rectangle x:Name="pressed" Fill="{StaticResource OrgChartNodeToggleButtonPressedBackgroundBrush}" Opacity="0" StrokeThickness="1" Stroke="{StaticResource OrgChartNodeToggleButtonPressedBorderBrush}" />
            <Rectangle x:Name="focused" StrokeThickness="2" Opacity="0" Stroke="{StaticResource OrgChartNodeToggleButtonFocusBorderBrush}" />
            <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Width="8" Height="8">
              <Path x:Name="expand" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="{StaticResource OrgChartNodeToggleButtonExpandBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed" />
              <Path x:Name="collapse" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="{StaticResource OrgChartNodeToggleButtonCollapseBackgroundBrush}" Height="2" Stretch="Fill" UseLayoutRounding="False" />
            </Grid>
            <Rectangle x:Name="DisabledFill" Fill="{StaticResource OrgChartNodeToggleButtonDisabledBackgroundBrush}" Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- OrgChartNode
            This is a container for the page designer's item template, visually wrapping it with
            decorations for mouse, drag and drop, expanded and haschildren visual states-->

  <!-- *********************************  OrgChartNodeControl Style  ********************************* -->
  <Style x:Key="OrgChartNodeControlStyle" TargetType="local:OrgChartNodeControl">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="Padding" Value="12,0,12,1" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="MinWidth" Value="60" />
    <Setter Property="Background" Value="{StaticResource OrgChartNodeControlBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource OrgChartNodeControlBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:OrgChartNodeControl">
          <Grid x:Name="grid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeOver" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeCornerOver" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledFill">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="ReadOnly" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.97" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeFocused" d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeSelected" d:IsOptimized="True" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodeCornerSelected" d:IsOptimized="True" />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="NodeContainer">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="20" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="NodeBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" />
            <Border x:Name="NodeCorner" Background="{StaticResource OrgChartNodeControlCornerBackgroundBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="NodeCornerOver" Background="{StaticResource OrgChartNodeControlCornerHoverBackgroundBrush}" BorderBrush="{StaticResource OrgChartNodeControlCornerHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" />
            <Border x:Name="NodeCornerSelected" Background="{StaticResource OrgChartNodeControlCornerSelectedBackgroundBrush}" Opacity="0" />
            <ContentControl x:Name="NodeContainer" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Grid.Column="1">
              <ContentPresenter x:Name="NodePresenter" />
            </ContentControl>
            <ToggleButton x:Name="ExpanderButton" Width="Auto" Height="Auto" Style="{StaticResource NodeToggleButtonStyle}" />
            <Border x:Name="NodeOver" BorderBrush="{StaticResource OrgChartNodeControlHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Grid.ColumnSpan="2" />
            <Border x:Name="NodeSelected" BorderBrush="{StaticResource OrgChartNodeControlSelectedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Grid.ColumnSpan="2" />
            <Border x:Name="NodeFocused" BorderBrush="{StaticResource OrgChartNodeControlFocusedBorderBrush}" Opacity="0" BorderThickness="2" Grid.ColumnSpan="2" />
            <Rectangle x:Name="DisabledFill" Fill="{StaticResource OrgChartNodeControlDisabledBackgroundBrush}" Visibility="Collapsed" Grid.ColumnSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:OrgChartNodeControl" BasedOn="{StaticResource OrgChartNodeControlStyle}" />
</ResourceDictionary>