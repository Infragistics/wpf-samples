<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:ig="http://schemas.infragistics.com/xaml" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" 
                    xmlns:igLocal="http://schemas.infragistics.com/xaml" 
                    xmlns:igConverters="clr-namespace:Infragistics.Windows.Converters;assembly=InfragisticsWPF4.v18.1"
                    xmlns:igEditors="http://infragistics.com/Editors">

  <!-- *********************************  RESOURCES  ********************************* -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Theme.Colors.xaml" />
    <ResourceDictionary Source="Styles.WPF.xaml" />
    <ResourceDictionary Source="MetroDark.xamMenu.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!-- ********************************** BRUSHES ********************************** -->
  <!-- Tooltip Brushes -->
  <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_004}" />

  <!--  XamSpreadsheet Brushes -->
  <SolidColorBrush x:Key="XamSpreadsheetBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="XamSpreadsheetBorderBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="SheetPaneSplitterBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="SheetTabDropIndicatorBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="SheetScrollBarBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="SplitterBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="SheetFormulaBarAreaBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="SheetFormulaBarAreaButtonForegroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="SheetTabItemAreaBackgroundBrush" Color="{StaticResource Color_024}" />

  <!-- SelectAll Button Brushes -->
  <SolidColorBrush x:Key="SheetSelectAllButtonBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="SheetSelectAllTriangleBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="SheetSelectAllTriangleHoverBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="SheetSelectAllTriangleSelectedBackgroundBrush" Color="{StaticResource Color_024}" />

  <!-- SheetTabItem Brushes -->
  <SolidColorBrush x:Key="SheetTabItemBackgroundBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="SheetTabItemBorderBrush" Color="{StaticResource Color_024}" />
  <SolidColorBrush x:Key="SheetTabItemSelectedBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="SheetTabItemForegroundBrush" Color="{StaticResource Color_012}" />
  <SolidColorBrush x:Key="SheetTabItemSelectedForegroundBrush" Color="{StaticResource Color_024}" />

  <!-- Icon Brushes -->
  <SolidColorBrush x:Key="IconsDarkBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="IconsNormalBackgroundBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="IconsInnerBackgroundBrush" Color="{StaticResource Color_009}" />

    <!-- TabControl Brushes -->
    <SolidColorBrush x:Key="TabControlBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabControlBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemBackgroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="TabItemBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemForegroundBrush" Color="{StaticResource Color_012}" />
    <SolidColorBrush x:Key="TabItemSelectedBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TabItemSelectedBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TabItemSelectedForegroundBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="TabItemDisabledForegroundBrush" Color="{StaticResource Color_014}" />

   <!-- CellFormatDialog Brushes -->
    <SolidColorBrush x:Key="LineDecorationBackgroundBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="GuideLinesBackgroundBrush" Color="{StaticResource Color_015}" />
    <SolidColorBrush x:Key="BorderLinesBackgroundBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="BorderLineButtonContentBackgroundBrush" Color="{StaticResource Color_0151}" />

    <!--  BorderTab Presets Button Brushes  -->
    <SolidColorBrush x:Key="PresetButtonBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="PresetButtonBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="PresetButtonHoverBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="PresetButtonHoverBorderBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="PresetButtonPressedBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="PresetButtonPressedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="PresetButtonFocusedBorderBrush" Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="PresetButtonFocusedBackgroundBrush" Color="{StaticResource Color_009}" />
    
    <!-- *********************************  ICON IMAGES  ********************************* -->
  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CutImage}">
    <Grid Width="16" Height="16">
      <Path Width="13" Height="15" Data="M 69.5113,40.0949C 69.5113,39.7349 69.8046,39.4283 70.1646,39.4283C 70.5113,39.4283 70.8046,39.7349 70.8046,40.0949C 70.8046,40.4683 70.5113,40.7749 70.1646,40.7749C 69.8046,40.7749 69.5113,40.4683 69.5113,40.0949 Z M 72.1113,44.4683C 72.1113,43.535 72.8313,42.7883 73.7379,42.7883C 74.6313,42.7883 75.3513,43.535 75.3513,44.4683C 75.3513,45.4016 74.6313,46.1483 73.7379,46.1483C 72.8313,46.1483 72.1113,45.4016 72.1113,44.4683 Z M 64.9646,44.4683C 64.9646,43.535 65.6846,42.7883 66.5779,42.7883C 67.4846,42.7883 68.2046,43.535 68.2046,44.4683C 68.2046,45.4016 67.4846,46.1483 66.5779,46.1483C 65.6846,46.1483 64.9646,45.4016 64.9646,44.4683 Z M 63.6579,44.4683C 63.6579,46.1349 64.9646,47.4949 66.5779,47.4949C 68.2046,47.4949 69.5113,46.1349 69.5113,44.4683C 69.5113,43.9749 69.3913,43.5216 69.1913,43.1083L 70.2313,41.7749L 71.1779,43.0016C 70.938,43.4283 70.8046,43.9349 70.8046,44.4683C 70.8046,46.1349 72.1113,47.4949 73.7379,47.4949C 75.3513,47.4949 76.6579,46.1349 76.6579,44.4683C 76.6579,42.8016 75.3513,41.4416 73.7379,41.4416C 73.4979,41.4416 73.2846,41.4683 73.0713,41.5216L 71.7113,39.8549L 74.938,35.6816C 74.938,35.6816 76.3379,34.3483 74.7113,32.495L 70.2313,38.0283L 65.7513,32.495C 64.1246,34.3483 65.5113,35.6816 65.5113,35.6816L 68.7379,39.8549L 67.3646,41.5483C 67.1113,41.4816 66.8579,41.4416 66.5779,41.4416C 64.9646,41.4416 63.6579,42.8016 63.6579,44.4683 Z " Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=CopyImage}">
    <Grid Width="16" Height="16">
      <Path Margin="6,0,0,5" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Margin="0,5,6,0" Data="M0,0 L5,0 L5,7 L10,7 L10,11 L0,11 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Width="6" Height="7" HorizontalAlignment="Left" Margin="2,0,0,2" VerticalAlignment="Bottom" Data="M4.5895576E-06,6 L6,6 L6,7 L4.5895576E-06,7 z M4.5895576E-06,4.0000005 L3,4.0000005 L3,5 L4.5895576E-06,5.0000005 z M4.5895576E-06,2.0000005 L3,2.0000005 L3,3.0000002 L4.5895576E-06,3.0000002 z M0,0 L3,0 L3,0.99999994 L0,0.99999994 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,2,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type igLocal:SpreadsheetContextMenuProvider}, ResourceId=PasteImage}">
    <Grid Width="16" Height="16">
      <Path Width="5" Height="2" HorizontalAlignment="Left" Margin="3,0,0,0" VerticalAlignment="Top" Data="M0.99999994,0 L4,0 L4,0.99999994 L5,0.99999994 L5,2 L0,2 L0,0.99999994 L0.99999994,0.99999994 z" Fill="{StaticResource IconsNormalBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Width="11" Height="12" HorizontalAlignment="Left" Margin="0,1,0,0" VerticalAlignment="Top" Data="M0,0 L2,0 L2,2 L9,2 L9,0 L11,0 L11,3 L5,3 L5,12 L5.2452087E-06,12 z" Fill="{StaticResource IconsNormalBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Margin="6,5,0,0" Data="M8,0.01599128 L10,2.0159912 L10,11.015999 L0,11.015999 L0,0.015625549 z" Fill="{StaticResource IconsDarkBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
      <Path Width="6" Height="7" HorizontalAlignment="Right" Margin="0,7,2,0" VerticalAlignment="Top" Data="M4.5895586E-06,6.000001 L6.0000048,6.000001 L6.0000048,7.000001 L4.5895586E-06,7.000001 z M4.5895586E-06,4.000001 L6.0000048,4.000001 L6.0000048,5.000001 L4.5895586E-06,5.000001 z M4.5895586E-06,2.0000007 L6.0000048,2.0000007 L6.0000048,3.0000007 L4.5895586E-06,3.0000007 z M0,0 L6,0 L6,1 L0,1 z" Fill="{StaticResource IconsInnerBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" />
    </Grid>
  </DataTemplate>

    <!-- ********************************** Converters **********************************-->
    <BooleanToVisibilityConverter x:Key="boolToVis" />
    <igPrim:DecimalValueToVisibilityConverter x:Key="DecimalValueToVisibilityConverter" />
    <igPrim:ColorInfoToBrushConverter x:Key="ColorInfoToBrushConverter" />
    <igPrim:PaletteEntryToBrushConverter x:Key="PaletteEntryToBrushConverter" />
    <igPrim:ColorToBrushConverter x:Key="ColorToBrushConverter" />

    <igPrim:ValueConverterGroup x:Key="isEnabledToSplitterExtent">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>true</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>3</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Double>1</sys:Double>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notBoolToVisibility">
        <!-- when true then collapse the item, otherwise leave it visible -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup x:Key="notVisibility">
        <!-- flip the Visibility from Visible to Collapsed -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <ig:AlphaColorConverter Opacity="0" x:Key="transparentConverter" />
    <ig:CalculatedForegroundConverter x:Key="calculatedForegroundConverter" />
    <igPrim:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    <igConverters:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter"/>
    <ig:ColorBlendConverter x:Key="colorConverter" />

    <!-- *********************************  STRING RESOURCES  ********************************* -->
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarNameBox" ResourceName="ToolTip_FormulaBarNameBox" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarCancelButton" ResourceName="ToolTip_FormulaBarCancelButton" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarEnterButton" ResourceName="ToolTip_FormulaBarEnterButton" />
    <igPrim:SpreadsheetResourceString x:Key="toolTipFormulaBarTextEditor" ResourceName="ToolTip_FormulaBarTextEditor" />

    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Title" ResourceName="FilterDialog_Title" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_OK" ResourceName="FilterDialog_OK" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Cancel" ResourceName="FilterDialog_Cancel" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_AsteriskHint" ResourceName="FilterDialog_AsteriskHint" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_QuestionMarkHint" ResourceName="FilterDialog_QuestionMarkHint" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_Or" ResourceName="FilterDialog_Or" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_And" ResourceName="FilterDialog_And" />
    <igPrim:SpreadsheetResourceString x:Key="FilterDialog_ShowRowsWhere" ResourceName="FilterDialog_ShowRowsWhere" />

    <!-- FormatCellsDialog -->
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Title" ResourceName="FormatCellsDialog_Title" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_OK" ResourceName="FormatCellsDialog_OK" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_Cancel" ResourceName="FormatCellsDialog_Cancel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_CategoryLabel" ResourceName="FormatCellsDialog_NumberTab_CategoryLabel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_SampleLabel" ResourceName="FormatCellsDialog_NumberTab_SampleLabel" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_NumberTab_DecimalPlaces" ResourceName="FormatCellsDialog_NumberTab_DecimalPlaces" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontLabel" ResourceName="SpreadsheetFontControl_FontLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_FontStyleLabel" ResourceName="SpreadsheetFontControl_FontStyleLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SizeLabel" ResourceName="SpreadsheetFontControl_SizeLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_ColorLabel" ResourceName="SpreadsheetFontControl_ColorLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_NormalFontLabel" ResourceName="SpreadsheetFontControl_NormalFontLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_StrikethroughLabel" ResourceName="SpreadsheetFontControl_StrikethroughLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SubscriptLabel" ResourceName="SpreadsheetFontControl_SubscriptLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_SuperscriptLabel" ResourceName="SpreadsheetFontControl_SuperscriptLabel" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Effects" ResourceName="SpreadsheetFontControl_Text_Effects" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetFontControl_Text_Preview" ResourceName="SpreadsheetFontControl_Text_Preview" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_Automatic" ResourceName="SpreadsheetThemeColorPickerControl_Text_Automatic" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_NoColor" ResourceName="SpreadsheetThemeColorPickerControl_Text_NoColor" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_ThemeColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_ThemeColors" />
    <igPrim:SpreadsheetResourceString x:Key="SpreadsheetThemeColorPickerControl_Text_StandardColors" ResourceName="SpreadsheetThemeColorPickerControl_Text_StandardColors" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Horizontal" ResourceName="FormatCellsDialog_AlignmentTab_Text_Horizontal" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Vertical" ResourceName="FormatCellsDialog_AlignmentTab_Text_Vertical" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextAlignment" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextAlignment" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_Indent" ResourceName="FormatCellsDialog_AlignmentTab_Text_Indent" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" ResourceName="FormatCellsDialog_AlignmentTab_Text_JustifyDistributed" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextControl" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextControl" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_WrapText" ResourceName="FormatCellsDialog_AlignmentTab_Text_WrapText" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" ResourceName="FormatCellsDialog_AlignmentTab_Text_ShrinkToFit" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_MergeCells" ResourceName="FormatCellsDialog_AlignmentTab_Text_MergeCells" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_RightToLeft" ResourceName="FormatCellsDialog_AlignmentTab_Text_RightToLeft" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_AlignmentTab_Text_TextDirection" ResourceName="FormatCellsDialog_AlignmentTab_Text_TextDirection" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_BackgroundColor" ResourceName="FormatCellsDialog_FillTab_Text_BackgroundColor" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternColor" ResourceName="FormatCellsDialog_FillTab_Text_PatternColor" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_PatternStyle" ResourceName="FormatCellsDialog_FillTab_Text_PatternStyle" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_FillTab_Text_Sample" ResourceName="FormatCellsDialog_FillTab_Text_Sample" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Locked" ResourceName="FormatCellsDialog_ProtectionTab_Text_Locked" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_ProtectionTab_Text_Summary" ResourceName="FormatCellsDialog_ProtectionTab_Text_Summary" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Line" ResourceName="FormatCellsDialog_BorderTab_Text_Line" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Style" ResourceName="FormatCellsDialog_BorderTab_Text_Style" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Color" ResourceName="FormatCellsDialog_BorderTab_Text_Color" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Presets" ResourceName="FormatCellsDialog_BorderTab_Text_Presets" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetNone" ResourceName="FormatCellsDialog_BorderTab_Text_PresetNone" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetOutline" ResourceName="FormatCellsDialog_BorderTab_Text_PresetOutline" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_PresetInside" ResourceName="FormatCellsDialog_BorderTab_Text_PresetInside" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Border" ResourceName="FormatCellsDialog_BorderTab_Text_Border" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_SampleText" ResourceName="FormatCellsDialog_BorderTab_Text_SampleText" />
    <igPrim:SpreadsheetResourceString x:Key="FormatCellsDialog_BorderTab_Text_Description" ResourceName="FormatCellsDialog_BorderTab_Text_Description" />

    <!-- *********************************  Preset Button Style (FormatCell Dialog Border Settings)  ********************************* -->
    <Style x:Key="PresetButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="MainGrid" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Rectangle x:Name="normal" Opacity="1" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonBorderBrush}" Fill="{StaticResource PresetButtonBackgroundBrush}" />
                        <Rectangle x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonHoverBorderBrush}" Fill="{StaticResource PresetButtonHoverBackgroundBrush}" />
                        <Rectangle x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonPressedBorderBrush}" Fill="{StaticResource PresetButtonPressedBackgroundBrush}" />
                        <Rectangle x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonFocusedBorderBrush}" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Preset ToggleButton Style  (FormatCell Dialog Border Settings)  ********************************* -->
    <Style x:Key="PresetToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="MainGrid">
                        <Rectangle x:Name="normal" Opacity="1" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonBorderBrush}" Fill="{StaticResource PresetButtonBackgroundBrush}" />
                        <Rectangle x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonHoverBorderBrush}" Fill="{StaticResource PresetButtonHoverBackgroundBrush}" />
                        <Rectangle x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonPressedBorderBrush}" Fill="{StaticResource PresetButtonPressedBackgroundBrush}" />
                        <Rectangle x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource PresetButtonFocusedBorderBrush}" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   <!-- *********************************  ScrollBarButton Style  ********************************* -->    
   <Style x:Key="FormulaBarScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="MinWidth" Value="15" />
    <Setter Property="MinHeight" Value="15" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Grid x:Name="grid1">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollbarPageButtonArrowDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="0" />
            <Path x:Name="Arrow" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="6" Stretch="Uniform" Width="10" Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}" Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
 <!-- *********************************  Horizontal ScrollBarThumb Style  ********************************* -->
  <Style x:Key="FormulaBarHScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="MinHeight" Value="15" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Margin="0">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HScrollbarThumbDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="0" />
            <Rectangle x:Name="Thumb" Margin="1" Fill="{StaticResource HScrollbarThumbBackgroundBrush}" Height="8" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
<!-- *********************************  Vertical ScrollbarThumb Style  ********************************* -->
    <Style x:Key="FormulaBarVScrollBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="MinWidth" Value="15" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="grid" Height="Auto" Width="Auto">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VScrollbarThumbDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="0" />
            <Rectangle x:Name="Thumb" Fill="{StaticResource VScrollbarThumbBackgroundBrush}" Width="8" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
  <!-- *********************************  ScrollBar Style  ********************************* -->
    <Style x:Key="FormulaBarScrollBarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
    <Setter Property="Width" Value="15" />
    <Setter Property="MinWidth" Value="15" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg"
                          SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="15" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Grid.RowSpan="3" Fill="{StaticResource ScrollbarBackgroundBrush}" Margin="0" />
                        <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="True" Style="{StaticResource FormulaBarScrollBarButtonStyle}" HorizontalAlignment="Center" />
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="True" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{StaticResource FormulaBarVScrollBarThumbStyle}" HorizontalAlignment="Center" Width="15" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="True" Grid.Row="2" Style="{StaticResource FormulaBarScrollBarButtonStyle}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="15" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="15" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle Grid.ColumnSpan="5" Fill="{StaticResource ScrollbarBackgroundBrush}" />
                                <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}"  IsEnabled="True" Style="{DynamicResource FormulaBarScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource FormulaBarHScrollBarThumbStyle}" VerticalAlignment="Center" Height="15" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="True" Style="{DynamicResource FormulaBarScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- *********************************  ToolTip Style  ********************************* -->
  <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="10,7" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Grid>
            <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" />
            <StackPanel Orientation="Horizontal">
              <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  TransparentButton Style  ********************************* -->
  <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Foreground" Value="{StaticResource SheetFormulaBarAreaButtonForegroundBrush}" />
    <Setter Property="Padding" Value="0,0,0,2" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-6,0" />
            <ContentPresenter Opacity="0.7" x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** GridSplitter Style **********************************-->
  <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="GridSplitter">
          <Grid Background="{StaticResource TransparentBrush}">
            <Path Margin="{TemplateBinding Padding}" Width="2" Fill="{StaticResource SplitterBackgroundBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Data="M 0,0 2,0 2,2 0,2 M 0,5 2,5 2,7 0,7 M 0,10 2,10 2,12 0,12" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FormulaBarTextBox Style  ********************************* -->
  <ControlTemplate x:Key="FormulaBarExpanderToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Unchecked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Checked_Arrow" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Checked_Arrow" Storyboard.TargetProperty="OpacityMask">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush>#FF000000</SolidColorBrush>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{StaticResource TransparentBrush}" />
      <Grid x:Name="Unchecked_Arrow" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,2,0" VerticalAlignment="Center" Height="6" Width="9">
        <Rectangle Height="1" Width="2" Margin="0,0,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="2" Margin="0,0,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="3" Margin="0,1,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="0,1,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="3" Margin="1,2,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="1,2,1,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="5" Margin="2,3,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="3,4,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="1" Margin="4,5,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
      </Grid>
      <Grid x:Name="Checked_Arrow" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,2,0" VerticalAlignment="Center" Height="6" Width="9">
        <Rectangle Height="1" Width="1" Margin="4,0,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="3,1,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="5" Margin="2,2,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="1,3,1,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="3" Margin="1,3,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="3" Margin="0,4,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="3" Margin="0,4,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Rectangle Height="1" Width="2" Margin="0,5,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Right" />
        <Rectangle Height="1" Width="2" Margin="0,5,0,0" Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" />
      </Grid>
    </Grid>
  </ControlTemplate>

  <!-- *********************************  FormulaBarNameBox Style  ********************************* -->
  <Style TargetType="igPrim:FormulaBarNameBox">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FormulaBarNameBox">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <ComboBox x:Name="NameBoxCombo" IsEditable="True" Style="{StaticResource ComboBoxStyle}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FormulaBarTextEditor Style  ********************************* -->
  <Style TargetType="igPrim:FormulaBarTextEditor">
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="FontSize" Value="14.667" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FormulaBarTextEditor">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
              </Grid.RowDefinitions>

              <igPrim:FormulaBarTextEditorControl x:Name="FormulaTextBox" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" MinHeight="{TemplateBinding MinHeight}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <igPrim:FormulaBarTextEditorControl.Resources>
                  <!--Border colors-->
                  <Color x:Key="BorderMediumColor">#FF888888</Color>
                  <!-- Styles -->
                  <Style TargetType="{x:Type ScrollViewer}">
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition />
                              <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto" />
                              <RowDefinition />
                              <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0,1,1,1" Grid.Row="0" Grid.RowSpan="2" Padding="6,3">
                              <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                              </Border.BorderBrush>
                              <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            <!-- Button for toggling the height of the textbox. -->
                            <ToggleButton x:Name="ExpanderButton" Grid.Column="1" igPrim:XamlHelper.Focusable="False" Width="24" Height="24" VerticalAlignment="Top" Template="{StaticResource FormulaBarExpanderToggleButton}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource FormulaBarScrollBarStyle}" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource FormulaBarScrollBarStyle}" Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                          </Grid>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </igPrim:FormulaBarTextEditorControl.Resources>
              </igPrim:FormulaBarTextEditorControl>
              <Thumb x:Name="ResizeThumb" Grid.Row="1" Height="8" Margin="0,0,0,-2" Cursor="SizeNS" igPrim:XamlHelper.Focusable="False">
                <Thumb.Template>
                  <ControlTemplate>
                    <Border Background="{StaticResource TransparentBrush}" />
                  </ControlTemplate>
                </Thumb.Template>
              </Thumb>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- *********************************  FormulaBarControl Style  ********************************* -->
  <Style TargetType="igPrim:FormulaBarControl">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:FormulaBarControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=NameBoxWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <!-- Name ComboBox -->
              <igPrim:FormulaBarNameBox x:Name="FormulaBarNameBox" Grid.Column="0" VerticalAlignment="Top" ToolTip="{Binding Source={StaticResource toolTipFormulaBarNameBox}, Path=Value}" IsEnabled="{Binding Path=IsInEditMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBooleanConverter}}" />

              <!-- Splitter -->
              <GridSplitter Style="{StaticResource GridSplitterStyle}" x:Name="FormulaBarNameBoxSplitter" igPrim:XamlHelper.Focusable="False" Grid.Column="1" ResizeBehavior="PreviousAndCurrent" HorizontalAlignment="Center" VerticalAlignment="Top" Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}" Background="{StaticResource GlyphBackgroundBrush}" Padding="14,0,14,0" />

              <!-- OK/Cancel Buttons -->
              <Border BorderThickness="1" BorderBrush="{StaticResource TextBoxBorderBrush}" Background="{StaticResource TextBoxBackgroundBrush}" Grid.Column="2" VerticalAlignment="Top" Height="{Binding ElementName=FormulaBarNameBox, Path=ActualHeight}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <Button x:Name="CancelButton" igPrim:XamlHelper.Focusable="False" Grid.Column="0" BorderThickness="0" Margin="7,0,7,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarCancelButton}, Path=Value}" Style="{StaticResource TransparentButtonStyle}">
                    <ig:Commanding.Command>
                      <igPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndDiscardChanges" EventName="Click" />
                    </ig:Commanding.Command>
                    <Button.Content>
                      <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{Binding Path=Foreground, ElementName=CancelButton}" StrokeThickness="2">
                        <Path.Data>
                          <GeometryGroup>
                            <LineGeometry StartPoint="0,0" EndPoint="10,10" />
                            <LineGeometry StartPoint="10,0" EndPoint="0,10" />
                          </GeometryGroup>
                        </Path.Data>
                      </Path>
                    </Button.Content>
                  </Button>
                  <Button x:Name="OKButton" igPrim:XamlHelper.Focusable="False" Grid.Column="1" BorderThickness="0" Margin="7,0,7,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarEnterButton}, Path=Value}" Style="{StaticResource TransparentButtonStyle}">
                    <ig:Commanding.Command>
                      <igPrim:SpreadsheetCommandSource CommandType="ExitEditModeAndUpdateActiveCell" EventName="Click" />
                    </ig:Commanding.Command>
                    <Path Height="10" Width="12" Stretch="Fill" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{Binding Path=Foreground, ElementName=OKButton}" UseLayoutRounding="False" />
                  </Button>
                </Grid>
              </Border>

              <!-- Formula TextBox -->
              <igPrim:FormulaBarTextEditor x:Name="FormulaBarTextEditor" Grid.Column="3" Margin="10,0,0,0" ToolTip="{Binding Source={StaticResource toolTipFormulaBarTextEditor}, Path=Value}" />

              <!-- Button for toggling the height of the formula textbox. Place this button on top of the FormulaBarTextEditor and align it to the right so it looks like a dropdown button. -->
              <!--<ToggleButton Content="^" Grid.Column="3" Width="15" BorderThickness="1" BorderBrush="Transparent" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top"/>-->
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** XamSpreadsheet Style **********************************-->
  <Style TargetType="igLocal:XamSpreadsheet">
    <Setter Property="Background" Value="{StaticResource XamSpreadsheetBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource XamSpreadsheetBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="NameBoxWidth" Value="160" />
    <Setter Property="ResourceProvider">
      <Setter.Value>
        <igPrim:SpreadsheetResourceProvider>
          <igPrim:SpreadsheetResourceProvider.ResourceOverrides>
            <ResourceDictionary>
              <SolidColorBrush x:Key="RowHeaderBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="ColumnHeaderBackground" Color="{StaticResource Color_009}" />
              <SolidColorBrush x:Key="RowHeaderBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="ColumnHeaderBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="RowHeaderWithSelectedCellsBackground" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsBackground" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="RowHeaderWithSelectedCellsBorder" Color="{StaticResource Color_004}" />
              <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsBorder" Color="{StaticResource Color_004}" />
              <SolidColorBrush x:Key="RowHeaderSelectedBackground" Color="{StaticResource Color_024}" />
              <SolidColorBrush x:Key="ColumnHeaderSelectedBackground" Color="{StaticResource Color_024}" />
              <SolidColorBrush x:Key="RowHeaderSelectedBorder" Color="{StaticResource Color_024}" />
              <SolidColorBrush x:Key="ColumnHeaderSelectedBorder" Color="{StaticResource Color_024}" />
              <SolidColorBrush x:Key="RowHeaderSelectedForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="RowHeaderWithSelectedCellsForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="ColumnHeaderWithSelectedCellsForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="ColumnHeaderSelectedForeground" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="RowHeaderForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="ColumnHeaderForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="RowHeaderHotTrackForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="ColumnHeaderHotTrackForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="RowHeaderHotTrackBackground" Color="{StaticResource Color_005}" />
              <SolidColorBrush x:Key="ColumnHeaderHotTrackBackground" Color="{StaticResource Color_005}" />
              <SolidColorBrush x:Key="RowHeaderHotTrackBorder" Color="{StaticResource Color_004}" />
              <SolidColorBrush x:Key="ColumnHeaderHotTrackBorder" Color="{StaticResource Color_004}" />
              <SolidColorBrush x:Key="RowHeaderHotTrackSelectedForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="ColumnHeaderHotTrackSelectedForeground" Color="{StaticResource Color_002}" />
              <SolidColorBrush x:Key="TabAreaSplitterForeground" Color="{StaticResource Color_003}" />
              <SolidColorBrush x:Key="TabAreaBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="TabAreaBackground" Color="{StaticResource Color_008}" />
              <SolidColorBrush x:Key="CellSelectionFill" Color="{StaticResource Color_002}" Opacity="0.3" />
              <SolidColorBrush x:Key="CellSelectionDragBorder" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="CellSelectionInnerBorder" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="CellSelectionHandleBorder" Color="{StaticResource Color_001}" />
              <SolidColorBrush x:Key="CellSelectionHandleFill" Color="{StaticResource Color_006}" />
              <SolidColorBrush x:Key="CellSelectionDragBorderInHeader" Color="{StaticResource Color_016}" />
              <SolidColorBrush x:Key="MultiSelectActiveCellBorder" Color="{StaticResource Color_009}" />
              <DataTemplate x:Key="TabDropIndicatorTemplate">
                <Grid>
                  <Path Fill="{StaticResource SheetTabDropIndicatorBackgroundBrush}" Data="M 0,0 5,6 10,0 Z" />
                </Grid>
              </DataTemplate>
            </ResourceDictionary>
          </igPrim:SpreadsheetResourceProvider.ResourceOverrides>
        </igPrim:SpreadsheetResourceProvider>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igLocal:XamSpreadsheet">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Border.Resources>
              <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{StaticResource SheetScrollBarBackgroundBrush}" />
              </Style>
              <Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="{x:Type ScrollViewer}" />
            </Border.Resources>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Border Grid.Row="0" Background="{StaticResource SheetFormulaBarAreaBackgroundBrush}" Visibility="{Binding Path=IsFormulaBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}">
                <igPrim:FormulaBarControl x:Name="FormulaBar" Margin="5,5,5,2" />
              </Border>
              <Rectangle Grid.Row="1" Height="1" Fill="{StaticResource XamSpreadsheetBorderBrush}" Visibility="{Binding Path=IsFormulaBarVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}" />
              <Rectangle Grid.Row="2" Fill="{StaticResource LightForegroundBrush}" />
              <igPrim:SpreadsheetLayoutPanel x:Name="RootPanel" Grid.Row="2" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SpreadsheetSelectAllButton Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetSelectAllButton">
    <Setter Property="Padding" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SpreadsheetSelectAllButton">
          <Border Background="{StaticResource SheetSelectAllButtonBackgroundBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" igPrim:XamlHelper.SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
            <Path x:Name="triangle" Data="M 0,1 1,1 1,0 Z" Height="12" Width="12" Stretch="UniformToFill" Fill="{StaticResource SheetSelectAllTriangleBackgroundBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="triangle" Value="{StaticResource SheetSelectAllTriangleHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="AreAllRowsAndColumnsSelected" Value="True">
              <Setter Property="Fill" TargetName="triangle" Value="{StaticResource SheetSelectAllTriangleSelectedBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** PaneSplitter Style **********************************-->
  <Style x:Key="PaneSplitterStyle" TargetType="Control">
    <Setter Property="Background" Value="{StaticResource SheetPaneSplitterBackgroundBrush}" />
    <Setter Property="Margin" Value="1,1,0,0" />
    <Setter Property="MinWidth" Value="6" />
    <Setter Property="MinHeight" Value="6" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Control">
          <Border Background="{TemplateBinding Background}" MinWidth="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource isEnabledToSplitterExtent}}" MinHeight="{Binding MinWidth, RelativeSource={RelativeSource Self}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SpreadsheetPaneSplitter Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetPaneSplitter" BasedOn="{StaticResource PaneSplitterStyle}" />

  <!-- ********************************** SpreadsheetPaneSplitterIntersection Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetPaneSplitterIntersection" BasedOn="{StaticResource PaneSplitterStyle}" />

  <!-- ********************************** TabAreaButton Style **********************************-->
  <Style TargetType="ButtonBase" x:Key="TabAreaButtonStyle">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="igPrim:XamlHelper.Focusable" Value="False" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ButtonBase">
          <Grid Background="{StaticResource TransparentBrush}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** TabAreaAddButton Style **********************************-->
  <Style TargetType="ButtonBase" x:Key="TabAreaAddButtonStyle" BasedOn="{StaticResource TabAreaButtonStyle}">
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************** TabAreaScrollButton Style **********************************-->
  <Style TargetType="ButtonBase" x:Key="TabAreaScrollButtonStyle" BasedOn="{StaticResource TabAreaButtonStyle}">
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************** TabAreaEllipsesButton Style **********************************-->
  <Style TargetType="ButtonBase" x:Key="TabAreaEllipsesButtonStyle" BasedOn="{StaticResource TabAreaScrollButtonStyle}">
    <Setter Property="Margin" Value="0,5,0,0" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Foreground" Value="{StaticResource GlyphPressedBackgroundBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************** SpreadsheetTabItemArea Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetTabItemArea">
    <Setter Property="Padding" Value="14,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SpreadsheetTabItemArea">
          <Grid Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <RepeatButton Grid.Column="0" x:Name="ScrollPrevious" Style="{StaticResource TabAreaScrollButtonStyle}">
                <ig:Commanding.Commands>
                  <ig:CommandSourceCollection>
                    <igPrim:SpreadsheetCommandSource CommandType="ScrollPreviousWorksheet" EventName="Click" DisallowedModifiers="Control" />
                    <igPrim:SpreadsheetCommandSource CommandType="ScrollToFirstWorksheet" EventName="Click" RequiredModifiers="Control" />
                  </ig:CommandSourceCollection>
                </ig:Commanding.Commands>
                <Path Fill="{Binding Path=Foreground, ElementName=ScrollPrevious}" Data="M 6,0 6,10 0,5 Z" />
              </RepeatButton>
              <RepeatButton Grid.Column="1" x:Name="ScrollNext" Style="{StaticResource TabAreaScrollButtonStyle}">
                <ig:Commanding.Commands>
                  <ig:CommandSourceCollection>
                    <igPrim:SpreadsheetCommandSource CommandType="ScrollNextWorksheet" EventName="Click" DisallowedModifiers="Control" />
                    <igPrim:SpreadsheetCommandSource CommandType="ScrollToLastWorksheet" EventName="Click" RequiredModifiers="Control" />
                  </ig:CommandSourceCollection>
                </ig:Commanding.Commands>
                <Path Fill="{Binding Path=Foreground, ElementName=ScrollNext}" Data="M 0,0 0,10 6,5 Z" />
              </RepeatButton>
              <Button x:Name="ActivatePrevious" Grid.Column="2" Style="{StaticResource TabAreaEllipsesButtonStyle}">
                <ig:Commanding.Command>
                  <igPrim:SpreadsheetCommandSource CommandType="ActivatePreviousOutOfViewWorksheet" EventName="Click" />
                </ig:Commanding.Command>
                <Path Fill="{Binding Path=Foreground, ElementName=ActivatePrevious}" igPrim:XamlHelper.SnapsToDevicePixels="True" Data="M 0,0 2,0 2,2 0,2 M 5,0 7,0 7,2 5,2 M 10,0 12,0 12,2 10,2" />
              </Button>
              <Button x:Name="ActivateNext" Grid.Column="4" Style="{StaticResource TabAreaEllipsesButtonStyle}">
                <ig:Commanding.Command>
                  <igPrim:SpreadsheetCommandSource CommandType="ActivateNextOutOfViewWorksheet" EventName="Click" />
                </ig:Commanding.Command>
                <Path Fill="{Binding Path=Foreground, ElementName=ActivateNext}" igPrim:XamlHelper.SnapsToDevicePixels="True" Data="M 0,0 2,0 2,2 0,2 M 5,0 7,0 7,2 5,2 M 10,0 12,0 12,2 10,2" />
              </Button>
              <Button x:Name="AddSheet" Grid.Column="5" Style="{StaticResource TabAreaAddButtonStyle}" Visibility="{Binding Path=AllowAddWorksheet, RelativeSource={RelativeSource AncestorType={x:Type igLocal:XamSpreadsheet}}, Converter={StaticResource boolToVis}}">
                <ig:Commanding.Command>
                  <igPrim:SpreadsheetCommandSource CommandType="AddNewWorksheet" EventName="Click" />
                </ig:Commanding.Command>
                <Grid>
                  <Rectangle Height="10" Width="2" Fill="{Binding Path=Foreground, ElementName=AddSheet}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  <Rectangle Height="2" Width="10" Fill="{Binding Path=Foreground, ElementName=AddSheet}" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
              </Button>
              <igPrim:SpreadsheetTabItemPanel Grid.Column="3" x:Name="TabItemPanel" Background="{StaticResource SheetTabItemAreaBackgroundBrush}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SpreadsheetTabItem Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetTabItem">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="10,0,10,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SpreadsheetTabItem">
          <Grid Background="{StaticResource TransparentBrush}">
            <Grid.Resources>
              <Style x:Key="SheetTabItemTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
                <Setter Property="MinHeight" Value="0" />
              </Style>
            </Grid.Resources>
            <Border x:Name="background" Margin="0" Background="{StaticResource SheetTabItemBackgroundBrush}" BorderThickness="1,0" BorderBrush="{StaticResource SheetTabItemBorderBrush}" />
            <Grid x:Name="CustomColorBackground" Visibility="Collapsed">
              <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.5">
                  <GradientStop Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource transparentConverter}, FallbackValue=Transparent}" Offset="0" />
                  <GradientStop Color="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}, FallbackValue=Transparent}" Offset="1" />
                </LinearGradientBrush>
              </Grid.Background>
            </Grid>
            <Grid Margin="3,5,3,3" x:Name="TextGrid">
              <TextBlock x:Name="normalText" FontSize="14.667" Margin="0,0,0,3" Padding="{TemplateBinding Padding}" Foreground="{StaticResource SheetTabItemForegroundBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding WorksheetName}" />
              <!-- Note the negative padding is to counteract the default margins that the TextBoxView has on itself -->
              <TextBox x:Name="TextBox" Visibility="Collapsed" BorderThickness="0" FontWeight="Bold" Padding="-3,0,-3,0" Margin="{TemplateBinding Padding}" Style="{StaticResource SheetTabItemTextBoxStyle}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="normalText" Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsActive" Value="False" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="background" Property="Background" Value="{StaticResource SheetTabItemSelectedBackgroundBrush}" />
              <Setter TargetName="normalText" Property="Foreground" Value="{StaticResource SheetTabItemSelectedForegroundBrush}" />
            </MultiTrigger>

            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="background" Property="Margin" Value="0,0,0,4" />
              <Setter TargetName="TextGrid" Property="Margin" Value="3,4,3,6" />
              <Setter TargetName="normalText" Property="Margin" Value="0,0,0,0" />
              <Setter TargetName="normalText" Property="Foreground" Value="{StaticResource SheetTabItemSelectedForegroundBrush}" />
            </Trigger>

            <Trigger Property="IsActive" Value="True">
              <Setter TargetName="background" Property="Background" Value="{StaticResource SheetTabItemSelectedBackgroundBrush}" />
            </Trigger>

            <!-- if there's a custom color and its selected then we'll use a half-opaque gradient of that color -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasCustomColor" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="CustomColorBackground" Property="Visibility" Value="Visible" />
            </MultiTrigger>

            <!-- if there's a custom color and the tab is not selected then we'll use that  background behind the text so we also need to calculate the foreground -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasCustomColor" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="TextGrid" Property="Background" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}}" />
              <Setter TargetName="normalText" Property="Foreground" Value="{Binding Path=CustomColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource calculatedForegroundConverter}}" />
            </MultiTrigger>

            <Trigger Property="IsEditing" Value="True">
              <Setter TargetName="normalText" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="TextBox" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ********************************** SpreadsheetTabItemAreaSplitter Style **********************************-->
  <Style TargetType="igPrim:SpreadsheetTabItemAreaSplitter">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:SpreadsheetTabItemAreaSplitter">
          <Grid Background="{StaticResource TransparentBrush}">
            <Path Fill="{StaticResource GlyphBackgroundBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Data="M 0,0 2,0 2,2 0,2 M 0,5 2,5 2,7 0,7 M 0,10 2,10 2,12 0,12" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <!-- ********************************** SpreadsheetInputMessageControl Style **********************************-->
    <Style TargetType="igPrim:SpreadsheetInputMessageControl">
        <Setter Property="MaxWidth" Value="260" />
        <Setter Property="MaxHeight" Value="170" />
        <Setter Property="Foreground" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageForeground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderBrush" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBorder], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Path=(igPrim:ResourceProvider.ResourceProvider)[InputMessageBackground], RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetInputMessageControl">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="1" 
                        Padding="4,2,6,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" 
                                       Text="{TemplateBinding Title}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="Bold" 
                                       Padding="0,0,22,0"
                                       Visibility="{Binding Path=HasTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVis}}"
                                       />
                            <TextBlock Grid.Row="1" 
                                       Text="{TemplateBinding Message}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="Wrap" 
                                       Padding="2,0,0,0"
                                       />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** SpreadsheetFilterDialogControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFilterDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FilterDialog_Title}, Path=Value}"  />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFilterDialogControl">
                    <Border BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding Source={StaticResource FilterDialog_ShowRowsWhere}, Path=Value}" Foreground="{StaticResource ForegroundBrush}" />
                            <TextBlock Grid.Row="1" Text="{Binding Path=ColumnName }" Margin="0,10,0,0" Foreground="{StaticResource ForegroundBrush}"/>
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="191"/>
                                    <ColumnDefinition Width="Auto" MinWidth="525 "/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Name="cboOperator1" Grid.Row="0" Grid.Column="0" Margin="10,10,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue" SelectedValue="{Binding Path=Operator1}"/>
                                <ComboBox Name="cboOperand1" Grid.Row="0" Grid.Column="1" Margin="10,10,0,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand1}"/>

                                <Grid Grid.Row="1" Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <RadioButton Name="optAnd" Content="{Binding Source={StaticResource FilterDialog_And}, Path=Value}" Grid.Row="0" Grid.Column="0" Margin="20,10,0,0" IsChecked="{Binding Path=IsAnd}" />
                                    <RadioButton Name="optOr" Content="{Binding Source={StaticResource FilterDialog_Or}, Path=Value}" Grid.Row="0" Grid.Column="1" Margin="10,10,0,0" IsChecked="{Binding Path=IsOr}"/>
                                </Grid>

                                <ComboBox Name="cboOperator2" Grid.Row="2" Grid.Column="0" Margin="10,10,0,0" ItemsSource="{Binding Path=OperatorsList}" DisplayMemberPath="DisplayText" SelectedValuePath="DataValue"  SelectedValue="{Binding Path=Operator2}"/>
                                <ComboBox Name="cboOperand2" Grid.Row="2" Grid.Column="1" Margin="10,10,0,0" IsEditable="True" ItemsSource="{Binding Path=OperandsList}" Text="{Binding Path=Operand2}"/>
                            </Grid>
                            <TextBlock Grid.Row="3" Text="{Binding Source={StaticResource FilterDialog_QuestionMarkHint}, Path=Value}" Margin="0,10,0,10" Foreground="{StaticResource ForegroundBrush}"/>
                            <TextBlock Grid.Row="4" Text="{Binding Source={StaticResource FilterDialog_AsteriskHint}, Path=Value}" Foreground="{StaticResource ForegroundBrush}"/>
                            <Grid Grid.Row="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Name="btnOK" Grid.Column ="1" Content="{Binding Source={StaticResource FilterDialog_OK}, Path=Value}" Margin="0,10,10,0" Command="{x:Static igPrim:SpreadsheetFilterDialogControl.ApplyFilterCommand}" MinWidth="75"/>
                                <Button Name="btnCancel" Grid.Column ="2" Content="{Binding Source={StaticResource FilterDialog_Cancel}, Path=Value}" Margin="0,10,0,0" Command="{x:Static igPrim:SpreadsheetFilterDialogControl.CancelCommand}" MinWidth="75"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TabControl Style  *********************************  -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TabControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 1 0 0" />
    </Style>

    <!-- *********************************  TabItem Style  ********************************* -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{StaticResource TabItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItemBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TabItemForegroundBrush}" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0,0,0,-1">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" />
                        <Border x:Name="bottomLine" BorderBrush="{StaticResource TabControlBackgroundBrush}" BorderThickness="0,0,0,1" Margin="1,0,1,-1" VerticalAlignment="Bottom" Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource LightForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource TabItemDisabledForegroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{StaticResource TabItemSelectedForegroundBrush}" />
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItemSelectedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItemSelectedBorderBrush}" />
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter Property="Canvas.ZIndex" Value="1" />
                            <Setter Property="Opacity" TargetName="bottomLine" Value="1" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** Border buttons content template **********************************-->
    <DataTemplate x:Key="borderLineButtonContent">
        <Border>
            <Grid x:Name="mainGrid" Margin="8" Background="{StaticResource BorderLineButtonContentBackgroundBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!-- Guidelines -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource GuideLinesBackgroundBrush}" />
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource GuideLinesBackgroundBrush}" />

                <!-- Border lines -->
                <!-- Left -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Left"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.LeftBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Top -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Top"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.TopBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Right -->
                <Rectangle Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.RightBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- Bottom -->
                <Rectangle Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.BottomBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideVertical -->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1" HorizontalAlignment="Right"
                           Width="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- InsideHorizontal-->
                <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                           Height="1" Fill="{StaticResource BorderLinesBackgroundBrush}"
                           Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"/>
                <!-- DiagonalDown-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="0" 
                      Y2="{Binding ActualHeight, ElementName=mainGrid}"
                      StrokeThickness="1" Stroke="{StaticResource BorderLinesBackgroundBrush}"
                      Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
                <!-- DiagonalUp-->
                <Line Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                      X1="0" 
                      X2="{Binding ActualWidth, ElementName=mainGrid}"
                      Y1="{Binding ActualHeight, ElementName=mainGrid}" 
                      Y2="0"
                      StrokeThickness="1" Stroke="{StaticResource BorderLinesBackgroundBrush}"
                      Visibility="{Binding Path=(igPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility), RelativeSource={RelativeSource AncestorType=ButtonBase}}"
                      />
            </Grid>
        </Border>
    </DataTemplate>

    <!-- ********************************** ColorPaletteButtonControl **********************************-->
    <Style TargetType="igPrim:ColorPaletteButtonControl" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Command" Value="{x:Static igPrim:ThemeColorPaletteControl.SelectColorCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding Path=PaletteEntry, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Margin="1" BorderBrush="{StaticResource ListBoxBorderBrush}">
                        <Grid Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=igPrim:ColorPaletteButtonControl}}"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ThemeColorPaletteControl **********************************-->
    <Style TargetType="igPrim:ThemeColorPaletteControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ThemeColorPaletteControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Button Name="AutomaticColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" 
                                      Command="{x:Static igPrim:ThemeColorPaletteControl.SelectAutomaticColorCommand}"
                                      Visibility="{TemplateBinding AutomaticColorButtonVisibility}" >
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Rectangle Width="20" Height="20" VerticalAlignment="Center" 
                                                   Fill="{Binding AutomaticColor, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Converter={StaticResource ColorToBrushConverter}}"
                                                   Stroke="{StaticResource ListBoxBorderBrush}" StrokeThickness="1"/>

                                        <Label Grid.Column="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}" Margin="8,0,0,0" 
                                               VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="0" />
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <ToggleButton Name="NoColorButton" Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" 
                                      IsChecked="{Binding Path=IsNoColorSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Background="{StaticResource TransparentBrush}" Visibility="{TemplateBinding NoColorButtonVisibility}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid >
                                        <Border BorderThickness="1" BorderBrush="{StaticResource ButtonBorderBrush}" Name="ToggleBorder">
                                            <TextBlock TextAlignment="Center" Height="20" Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_NoColor}, Path=Value}" 
                                                       Margin="0,3,0,0" VerticalAlignment="Center" Padding="0" Foreground="{StaticResource ForegroundBrush}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="{StaticResource PresetButtonPressedBackgroundBrush}"/>
                                            <Setter Property="BorderBrush" TargetName="ToggleBorder" Value="{StaticResource PresetButtonPressedBorderBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Background" TargetName="ToggleBorder" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Label Grid.Row="1" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_ThemeColors}" Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="BaseThemeColorsGrid" Grid.Row="2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[0-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="3" Height="1" Fill="Gray" Margin="0,3,0,3"/>

                        <!-- TintedThemeColorsGrid -->
                        <Grid Name="TintedThemeColorsGrid" Grid.Row="4" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- Row 1 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[1-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 2 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="1" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[2-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 3 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="2" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[3-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 4 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="3" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[4-9], RelativeSource={RelativeSource Self}}"/>

                            <!-- Row 5 -->
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="4" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[5-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="5" Height="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Margin="0,3,0,3" Visibility="{TemplateBinding SectionHeaderVisibility, Converter={StaticResource notVisibility}}"/>
                        <Label Grid.Row="5" Content="{StaticResource SpreadsheetThemeColorPickerControl_Text_StandardColors}"  Padding="0" Visibility="{TemplateBinding SectionHeaderVisibility}"/>

                        <Grid Name="StandardColorsGrid" Grid.Row="6" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="0" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-0], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="1" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-1], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="2" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-2], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="3" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-3], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="4" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-4], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="5" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-5], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="6" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-6], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="7" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-7], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="8" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-8], RelativeSource={RelativeSource Self}}"/>
                            <igPrim:ColorPaletteButtonControl Grid.Row="0" Grid.Column="9" ThemeColorPickerControlViewModel="{TemplateBinding ThemeColorPickerControlViewModel}" PaletteEntry="{Binding Path=ThemeColorPickerControlViewModel.Palette[6-9], RelativeSource={RelativeSource Self}}"/>
                        </Grid>

                        <Rectangle Grid.Row="7" Fill="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********************************** ThemeColorPickerControl **********************************-->
    <Style TargetType="igPrim:ThemeColorPickerControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ThemeColorPickerControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ToggleButton x:Name="ThemeColorPickerToggleButton" Height="30" HorizontalAlignment="Stretch" 
                                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                      IsChecked="{Binding ElementName=ThemeColorPickerPopup, Path=IsOpen}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="30"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="ToggleBorder" BorderThickness="1" BorderBrush="{StaticResource ComboBoxBorderBrush}" Background="{StaticResource TransparentBrush}" Grid.ColumnSpan="2" />

                                                    <Grid Margin="4" >
                                                        <TextBlock x:Name="SpecialColorText" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" 
                                                                   Text="{Binding Source={StaticResource SpreadsheetThemeColorPickerControl_Text_Automatic}, Path=Value}" 
                                                                   Foreground="{StaticResource ForegroundBrush}"
                                                                   Visibility="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                    <Rectangle x:Name="SelectedColorSwatch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                               Fill="{Binding Path=SelectedBrush, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}}" 
                                                               Visibility="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPickerControl}, Converter={StaticResource boolToVis}}"/>
                                                </Grid>
                                                    <Grid Grid.Column="1">
                                                    <Rectangle  Width="1" Fill="{StaticResource ComboBoxToggleButtonDropDownSeparatorBackgroundBrush}" HorizontalAlignment="Left" Margin="-1,5,0,5" />
                                                    <Path x:Name="Arrow" Width="10" Height="6" Fill="{StaticResource GlyphBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
                                                    <Path x:Name="ArrowSelected" Width="10" Height="6" Visibility="Collapsed" Fill="{StaticResource GlyphPressedBackgroundBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.Background" Value="{StaticResource ComboBoxHoverBackgroundBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphPressedBackgroundBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxToggleButtonPressedBorderBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.Background" Value="{StaticResource ComboBoxHoverBackgroundBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxToggleButtonPressedBorderBrush}" />
                                                        <Setter TargetName="ToggleBorder" Property="Border.Background" Value="{StaticResource ComboBoxHoverBackgroundBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOpen, ElementName=ThemeColorPickerPopup}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Popup x:Name="ThemeColorPickerPopup" HorizontalAlignment="Stretch" 
                               StaysOpen="False" PlacementTarget="{Binding ElementName=ThemeColorPickerToggleButton}" Placement="Bottom">
                            <Border Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource PopupBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                <igPrim:ThemeColorPaletteControl HorizontalAlignment="Stretch"
                                                                      MinWidth="225"
                                                                      Margin="6,3,6,3"
                                                                      ThemeColorPickerControlViewModel="{Binding Path=ThemeColorPickerControlViewModel, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      SelectedColorInfo="{Binding Path=SelectedColorInfo, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}" 
                                                                      SpecialColorModeOption="{Binding Path=SpecialColorModeOption, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}}"
                                                                      IsNoColorSelected="{Binding Path=IsNoColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsAutomaticColorSelected="{Binding Path=IsAutomaticColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"
                                                                      IsColorSelected="{Binding Path=IsColorSelected, RelativeSource={RelativeSource AncestorType=igPrim:ThemeColorPaletteControl}, Mode=TwoWay}"/>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 01/09/2018 - TFS247301 - FormatCellsDialog  -->
    <!-- ********************************** SpreadsheetFontControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFontControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFontControl">
                    <Grid Margin="0" Name="FontControlRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="83"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="1.6*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>

                        <!-- ==================  Font  ================== -->
                        <!--<Label Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" Content="{StaticResource SpreadsheetFontControl_FontLabel}"/>-->
                        <Label Grid.Row="1" Grid.Column="1" Content="{Binding Source={StaticResource SpreadsheetFontControl_FontLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,5" />
                        <Label Grid.Row="1" Grid.Column="3" Content="{Binding Source={StaticResource SpreadsheetFontControl_FontStyleLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,5"/>
                        <Label Grid.Row="1" Grid.Column="5" Content="{Binding Source={StaticResource SpreadsheetFontControl_SizeLabel}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,5"/>

                        <ListBox Grid.Row="2" Grid.Column="1" x:Name="TESTID_FT_FontNames" ItemsSource="{Binding FontNames}" SelectedValue="{Binding SelectedFontName, Mode=TwoWay}" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontNameSelectionEnabled}"/>
                        <ListBox Grid.Row="2" Grid.Column="3"  x:Name="TESTID_FT_FontStyles" ItemsSource="{Binding FontStyles}" SelectedValue="{Binding SelectedFontStyle, Mode=TwoWay}" DisplayMemberPath="DisplayText"/>
                        <ListBox Grid.Row="2" Grid.Column="5" x:Name="TESTID_FT_FontSizes" ItemsSource="{Binding FontSizes}" SelectedValue="{Binding SelectedFontSize, Mode=TwoWay}"  igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True" IsEnabled="{Binding IsFontSizeSelectionEnabled}"/>

                        <!-- ==================  Color  ================== -->
                        <Grid Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,10,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_ColorLabel}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <igPrim:ThemeColorPickerControl Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,5,0,0"  
                                                        x:Name="TESTID_FT_FontColor" 
                                                             VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                             ThemeColorPickerControlViewModel="{Binding ThemeColorPickerControlViewModel}"
                                                             SpecialColorModeOption="Automatic" 
                                                             SelectedColorInfo="{Binding SelectedFontColorInfo, Mode=TwoWay}" 
                                                             SectionHeaderVisibility="Visible"/>

                        <!-- ==================  Normal Font  ================== -->
                        <CheckBox Grid.Row="4" Grid.Column="5" Grid.ColumnSpan="1" x:Name="TESTID_FT_NormalFont" VerticalAlignment="Top" Margin="0,6,0,0" Content="{Binding Source={StaticResource SpreadsheetFontControl_NormalFontLabel}, Path=Value}" 
                              IsChecked="{Binding IsNormalFont, Mode=TwoWay}"/>

                        <!-- ==================  Text Effects  ================== -->
                        <Grid Grid.Row="3" Grid.Column="1" Margin="0,10,0,2" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Effects}, Path=Value}" Padding="0"/>
                            <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                        <StackPanel Grid.Row="4" Grid.Column="1">
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_StrikethroughLabel}, Path=Value}" x:Name="TESTID_FT_Strikethrough" IsChecked="{Binding Strikeout, Mode=TwoWay}" Margin="0,2,2,2" IsThreeState="False"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SuperscriptLabel}, Path=Value}" x:Name="TESTID_FT_Superscript" IsChecked="{Binding Superscript, Mode=TwoWay}" Margin="0,2,2,2" IsThreeState="False" IsEnabled="{Binding IsSuperscriptSelectionEnabled}"/>
                            <CheckBox Content="{Binding Source={StaticResource SpreadsheetFontControl_SubscriptLabel}, Path=Value}" x:Name="TESTID_FT_Subscript" IsChecked="{Binding Subscript, Mode=TwoWay}" Margin="0,2,2,2" IsThreeState="False" IsEnabled="{Binding IsSubscriptSelectionEnabled}"/>
                        </StackPanel>

                        <!-- ==================  Text Preview  ================== -->
                        <Label Grid.Row="5" Grid.Column="1" Margin="0,15,0,5" Content="{Binding Source={StaticResource SpreadsheetFontControl_Text_Preview}, Path=Value}" Padding="0"/>
                        <Border Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="5" BorderBrush="{StaticResource ListBoxBorderBrush}" BorderThickness="1" Padding="7" Background="{StaticResource LightForegroundBrush}">
                            <Grid  x:Name="fontPreviewGrid">
                                <Border Margin="0" BorderThickness="0" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                    <Grid ClipToBounds="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width=".35*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width=".35*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle  x:Name="LeftBaselineMarker" Grid.Column="0" Fill="{StaticResource ListBoxBorderBrush}" Height="1" VerticalAlignment="Center"  igPrim:XamlHelper.SnapsToDevicePixels="True" />
                                        <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                            <igPrim:SpreadsheetFontPreviewControl 
                                                x:Name="FontPreviewControl" Padding="0" IsHitTestVisible="False" 
                                                Background="{Binding ElementName=fontPreviewGrid, Path=Background}" 
                                                MinWidth="0" />
                                        </Grid>
                                        <Rectangle x:Name="RightBaselineMarker" Grid.Column="2" Fill="{StaticResource ListBoxBorderBrush}" Height="1" VerticalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>

                        <Rectangle  Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="5" Fill="Transparent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- ********************************** FormatCellsDialogNumberTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogNumberTabTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- ================================= Category ================================= -->
            <Label Grid.Row="0" Grid.Column="1" Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_CategoryLabel}, Path=Value}" Padding="0" Margin="0,0,0,5"/>
            <ListBox Grid.Row="1" Grid.RowSpan="4" Grid.Column="1" x:Name="TESTID_NT_Category"  SelectedItem="{Binding ViewModel.SelectedNumberFormatDefinition}" ItemsSource="{Binding ViewModel.NumberFormatDefinitions}" DisplayMemberPath="CategoryName" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>

            <!-- ================================= Sample / Preview Area ================================= -->
            <Label Grid.Row="1" Grid.Column="3" Padding="0,0,0,2" Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_SampleLabel}, Path=Value}" Margin="0,-5,0,0" />
            <Border Grid.Row="2" Grid.Column="3" BorderThickness="1" BorderBrush="{StaticResource ListBoxBorderBrush}" Background="{StaticResource LightForegroundBrush}"  Margin="0,5,0,0" Height="35" >
                <igPrim:CellFormatPreviewControl BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" PreviewFormatMask="{Binding ViewModel.SelectedFormat.Mask}" PreviewValue="{Binding ViewModel.CellValue}"/>
            </Border>
            <Rectangle Grid.Row="2" Grid.Column="3" Margin="0,0,0,0" Height="35" VerticalAlignment="Center" Fill="Transparent"/>

            <!-- ================================= DecimalPlaces ================================= -->
            <StackPanel Grid.Row="3" Grid.Column="3"  Visibility="{Binding ViewModel.SelectedNumberFormatDefinition.DecimalPlaces, Converter={StaticResource DecimalValueToVisibilityConverter}, ConverterParameter=-1}" Margin="0,12,0,0">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_NumberTab_DecimalPlaces}, Path=Value}" Padding="0,0,0,5" />
                <igEditors:XamNumericEditor Grid.Row="2" Grid.Column="3" Height="25"  HorizontalAlignment="Left" Width="100" 
                                        SpinButtonDisplayMode="Always" PromptChar="" Name="numberOfColumns"
                                        Value="{Binding ViewModel.SelectedNumberFormatDefinition.DecimalPlaces}" ValueType="{x:Type sys:Int32}" Margin="0,0,0,0">
                    <igEditors:XamNumericEditor.ValueConstraint>
                        <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="30" ValidateAsType="Integer32"/>
                    </igEditors:XamNumericEditor.ValueConstraint>
                </igEditors:XamNumericEditor>
            </StackPanel>

            <!-- ================================= Selected Category Formats ================================= -->
            <Grid Grid.Row="4" Grid.Column="3" Visibility="{Binding ViewModel.SelectedNumberFormatDefinition.AreFormatsVisible, Converter={StaticResource boolToVis}}" Margin="0,17,0,0">
                <Label Content="{Binding ViewModel.SelectedNumberFormatDefinition.FormatsHeader}" Padding="0,0,0,2"  />
                <ListBox  x:Name="TESTID_NT_Formats" SelectedItem="{Binding ViewModel.SelectedFormat}" ItemsSource="{Binding ViewModel.SelectedNumberFormatDefinition.Formats}" VerticalAlignment="Stretch" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding PreviewText}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <!-- ================== Description ================== -->
            <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,20,0,50" TextWrapping="Wrap" Text="{Binding ViewModel.SelectedNumberFormatDefinition.Description}" Foreground="{StaticResource ForegroundBrush}" FontSize="13.333"/>
        </Grid>
    </DataTemplate>

    <!-- JM 12/19/2017 - TFS247301 - FormatCellsDialog -->
    <!-- ********************************** FormatCellsDialogAlignmentTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogAlignmentTabTemplate">
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ================== Text Alignment  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,8,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextAlignment}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <Label Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,5" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Horizontal}, Path=Value}" Target="{Binding ElementName=cmbHorizontalTextAlignment}" Padding="0" />
            <ComboBox Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,3,0,0" Width="150" HorizontalAlignment="Left" Name="cmbHorizontalTextAlignment" 
                              ItemsSource="{Binding ViewModel.HorizontalCellAlignments}"
                              SelectedValue="{Binding ViewModel.SelectedHorizontalCellAlignment}"/>

            <Label Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Indent}, Path=Value}" Target="{Binding ElementName=spinIndent}" Padding="0"/>
            <igEditors:XamNumericEditor Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="2" Margin="0,5,0,0" HorizontalAlignment="Left" Width="100" Height="30" Name="spinIndent"
                                        SpinButtonDisplayMode="Always" PromptChar="" Mask="nnn" TrimFractionalZeros="True" SpinIncrement="1" SpinWrapBehavior="NoWrapping"
                                        Value="{Binding ViewModel.Indent, Mode=TwoWay}" ValueType="{x:Type sys:Int32}" >
                <igEditors:XamNumericEditor.ValueConstraint>
                    <igEditors:ValueConstraint MinInclusive="0" MaxInclusive="250"/>
                </igEditors:XamNumericEditor.ValueConstraint>
            </igEditors:XamNumericEditor>

            <Label Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,10,0,5" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_Vertical}, Path=Value}" Target="{Binding ElementName=cmbVerticalTextAlignment}" Padding="0" />
            <ComboBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="3" Width="150" HorizontalAlignment="Left" Name="cmbVerticalTextAlignment"
                              ItemsSource="{Binding ViewModel.VerticalCellAlignments}"
                              SelectedValue="{Binding ViewModel.SelectedVerticalCellAlignment}" Margin="0,3,0,0" />

            <Rectangle  Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="3" Fill="Transparent" Height="26"/>
            <!-- ================== Text Control  ================== -->
            <Grid Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,11,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_TextControl}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <CheckBox Grid.Row="7" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                              IsChecked="{Binding ViewModel.WrapText}" Name="chkWrapText"
                              Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_WrapText}, Path=Value}"/>
            <CheckBox Grid.Row="8" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_ShrinkToFit" 
                      IsChecked="{Binding ViewModel.ShrinkToFit}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_ShrinkToFit}, Path=Value}"
                      IsEnabled="{Binding ElementName=chkWrapText, Path=IsChecked, Converter={StaticResource inverseBooleanConverter}}"/>
            <CheckBox Grid.Row="9" Grid.Column="2" Grid.ColumnSpan="3" Margin="0,8,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
                      x:Name="TESTID_AT_MergeCells" 
                      IsChecked="{Binding ViewModel.MergeCells}" 
                      Content="{Binding Source={StaticResource FormatCellsDialog_AlignmentTab_Text_MergeCells}, Path=Value}"
                      IsEnabled="{Binding ViewModel.IsMergeCellsSelectionEnabled}"/>
            <Rectangle  Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="5" Fill="Transparent"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogFontTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogFontTabTemplate">
        <Grid>
            <igPrim:SpreadsheetFontControl DataContext="{Binding ViewModel.FontControlViewModel}"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogBorderTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogBorderTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Line ================== -->
            <!-- Line -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Line}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <!-- Style -->
            <Grid  Grid.Row="1" Grid.Column="2" Grid.RowSpan="5" Margin="0,6,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Style}, Path=Value}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Padding="0,0,0,8" />
                <ListBox Grid.Row="1"  x:Name="TESTID_BT_LineStyles"  ItemsSource="{Binding ViewModel.CellBorderLineStyles}" SelectedValue="{Binding ViewModel.SelectedCellBorderLineStyle, Mode=TwoWay}" igPrim:ListBoxBehaviors.AutoscrollToSelectedItem="True"/>
            </Grid>

            <!-- Color -->
            <StackPanel Grid.Row="6" Grid.RowSpan="3" Grid.Column="2" >
                <Label Margin="0,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Color}, Path=Value}" Padding="0" />
                <igPrim:ThemeColorPickerControl Margin="0,5,0,0" 
                                                x:Name="TESTID_BT_LineColor" 
                                                     SpecialColorModeOption="Automatic" 
                                                     SelectedColorInfo="{Binding ViewModel.CellBorderLineColorInfo, Mode=TwoWay}" 
                                                     ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"/>
            </StackPanel>

            <!-- ==================  Presets ================== -->
            <Grid Grid.Row="0" Grid.Column="4" Grid.ColumnSpan="4" Margin="0,10,0,8" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Presets},Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <!-- Preset buttons -->
            <!-- None -->
            <Button Grid.Row="1" Grid.Column="5" Width="50" Height="50"  
                    x:Name="TESTID_BT_NonePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.None}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
            <!-- Outline -->
            <Button Grid.Row="1" Grid.Column="6" Width="50" Height="50"
                    x:Name="TESTID_BT_OutlinePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.Outline}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                    />
            <!-- Inside -->
            <Button Grid.Row="1" Grid.Column="7" Width="50" Height="50" 
                    x:Name="TESTID_BT_InsidePreset" 
                    Style="{StaticResource PresetButtonStyle}"
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplyCellBorderPresetCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderPresetType.Inside}"
                    ContentTemplate="{StaticResource borderLineButtonContent}"
                    HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                    igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                    igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                    IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"
                    />

            <!-- Preset labels -->
            <Label Grid.Row="2" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetNone}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetOutline}, Path=Value}"/>
            <Label Grid.Row="2" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Center" 
                   Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_PresetInside}, Path=Value}"
                   IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideCellBordersEditable}"/>

            <!-- Border -->
            <Grid Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="4" Margin="0,10,0,8" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Border}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>

            <!-- Line-adding buttons -->
            <!-- Top -->
            <ToggleButton Grid.Row="4" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddTopLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Top}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.TopBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsTopCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Inside Horizontal -->
            <ToggleButton Grid.Row="5" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddInsideHorizontalLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.InsideHorizontal}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.InsideHorizontalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideHorizontalCellBorderEditable}"
                          />
            <!-- Bottom -->
            <ToggleButton Grid.Row="6" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddBottomLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Bottom}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.BottomBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsBottomCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalUp-->
            <ToggleButton Grid.Row="7" Grid.Column="4" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddDiagonalUpLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.DiagonalUp}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.DiagonalUpBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalUpCellBorderVisible, Mode=OneWay}"
                          />
            <!-- Left -->
            <ToggleButton Grid.Row="7" Grid.Column="5" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddLeftLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Left}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.LeftBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsLeftCellBorderVisible, Mode=OneWay}"
                          />
            <!-- InsideVertical -->
            <ToggleButton Grid.Row="7" Grid.Column="6" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddInsideVerticalLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.InsideVertical}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.InsideVerticalBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsInsideVerticalCellBorderVisible, Mode=OneWay}"
                          IsEnabled="{Binding ViewModel.CellBorderInfo.IsInsideVerticalCellBorderEditable}"
                          />
            <!-- Right -->
            <ToggleButton Grid.Row="7" Grid.Column="7" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddRightLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.Right}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.RightBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsRightCellBorderVisible, Mode=OneWay}"
                          />
            <!-- DiagonalDown-->
            <ToggleButton Grid.Row="7" Grid.Column="8" Width="40" Height="40" 
                          x:Name="TESTID_BT_AddDiagonalDownLine" 
                          Style="{StaticResource PresetToggleButtonStyle}"
                          HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0" 
                          Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ToggleCellBorderLineCommand}" CommandParameter="{x:Static igPrim:SpreadsheetCellBorderType.DiagonalDown}"
                          ContentTemplate="{StaticResource borderLineButtonContent}"
                          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                          igPrim:BorderButtonBehaviors.DiagonalDownBorderVisibility="Visible"
                          IsChecked="{Binding Path=ViewModel.CellBorderInfo.IsDiagonalDownCellBorderVisible, Mode=OneWay}"
                          />

            <!-- Preview -->
            <igPrim:CellBordersPreviewControl Grid.Row="4" Grid.RowSpan="3" Grid.Column="5" Grid.ColumnSpan="3" 
                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                   OriginalWorkbook="{Binding ViewModel.Workbook}"/>

            <!-- Description -->
            <TextBlock Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="8" Margin="0,10,0,20" TextWrapping="Wrap" 
                       Text="{Binding Source={StaticResource FormatCellsDialog_BorderTab_Text_Description}, Path=Value}"  
                       Foreground="{StaticResource ForegroundBrush}" FontSize="13.333"
                       VerticalAlignment="Bottom"/>

            <Rectangle  Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="8" Fill="{StaticResource TransparentBrush}"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogFillTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogFillTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <!-- ==================  Background Color  ================== -->
            <Grid Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Margin="0,10,0,2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_BackgroundColor}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <igPrim:ThemeColorPaletteControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="4" Grid.ColumnSpan="1" Margin="0,2,0,0"
                                             x:Name="TESTID_FILLT_Background" 
                                                  VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                  SpecialColorModeOption="NoColor" 
                                                  SelectedColorInfo="{Binding ViewModel.BackgroundColorInfo, Mode=TwoWay}" 
                                                  ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Collapsed"/>

            <!-- ==================  Pattern ================== -->
            <!-- Pattern Color -->
            <Grid Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,10,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternColor}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <igPrim:ThemeColorPickerControl Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,5,0,0" 
                                            x:Name="TESTID_FILLT_PatternColor" 
                                                 VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                                                 SpecialColorModeOption="Automatic" 
                                                 SelectedColorInfo="{Binding ViewModel.FillPatternColorInfo, Mode=TwoWay}" 
                                                 ThemeColorPickerControlViewModel="{Binding ViewModel.ThemeColorPickerControlViewModel}" SectionHeaderVisibility="Visible"/>

            <!-- Pattern Style -->
            <Grid Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,12,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_PatternStyle}, Path=Value}" Padding="0"/>
                <Rectangle Grid.Column="1" Fill="{StaticResource LineDecorationBackgroundBrush}" Height="1" Margin="6,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </Grid>
            <ComboBox Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="1" Margin="0,5,0,0"  
                      x:Name="TESTID_FILLT_PatternStyle" 
                      ItemsSource="{Binding ViewModel.FillPatternStyles}"
                      SelectedValue="{Binding Path=ViewModel.SelectedFillPatternStyle, Mode=TwoWay}"/>

            <!-- ================== Sample ================== -->
            <StackPanel Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="0,0,0,10" VerticalAlignment="Bottom">
                <Label Content="{Binding Source={StaticResource FormatCellsDialog_FillTab_Text_Sample}, Path=Value}" Padding="0"/>
                <Border BorderThickness="1" BorderBrush="{StaticResource ListBoxBorderBrush}" Margin="0,5,0,0">
                    <igPrim:CellFillPreviewControl BorderThickness="0" IsEnabled="False" PreviewFill="{Binding ViewModel.SelectedFillForPreview}" Height="59" Margin="8" HorizontalAlignment="Stretch"/>
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- ********************************** FormatCellsDialogProtectionTabTemplate **********************************-->
    <DataTemplate x:Key="FormatCellsDialogProtectionTabTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>

            <CheckBox Grid.Row="0" Grid.Column="1" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" 
                      x:Name="TESTID_PT_Locked" 
                              IsChecked="{Binding ViewModel.Locked}" 
                              Content="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Locked}, Path=Value}"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="0,10,0,0" Text="{Binding Source={StaticResource FormatCellsDialog_ProtectionTab_Text_Summary}, Path=Value}" 
                       HorizontalAlignment="Left" VerticalAlignment="Top" 
                       Padding="0" TextWrapping="Wrap"  
                       Foreground="{StaticResource ForegroundBrush}" FontSize="13.333"/>
        </Grid>
    </DataTemplate>

    <!-- ********************************** SpreadsheetFormatCellsDialogControl **********************************-->
    <Style TargetType="igPrim:SpreadsheetFormatCellsDialogControl">
        <Setter Property="TitleDescription" Value="{Binding Source={StaticResource FormatCellsDialog_Title}, Path=Value}"  />
        <Setter Property="AlignmentTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogAlignmentTabTemplate}}"/>
        <Setter Property="BorderTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogBorderTabTemplate}}"/>
        <Setter Property="FillTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFillTabTemplate}}"/>
        <Setter Property="FontTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogFontTabTemplate}}"/>
        <Setter Property="NumberTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogNumberTabTemplate}}"/>
        <Setter Property="ProtectionTabTemplate" Value="{Binding Source={StaticResource FormatCellsDialogProtectionTabTemplate}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SpreadsheetFormatCellsDialogControl">
                    <Border BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TabControl x:Name="MainTabControl"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column ="1" x:Name="TESTID_DIALOG_OK" Content="{Binding Source={StaticResource FormatCellsDialog_OK}, Path=Value}" Margin="0,8,0,8" MinWidth="75" Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.ApplySettingsCommand}" />
                            <Button Grid.Column ="2" x:Name="TESTID_DIALOG_Cancel" Content="{Binding Source={StaticResource FormatCellsDialog_Cancel}, Path=Value}" Margin="8,8,8,8" MinWidth="75" Command="{x:Static igPrim:SpreadsheetFormatCellsDialogControl.CancelSettingsCommand}" />
                        </Grid>
                    </Grid>
                        </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>