<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Lbl_NegativeNumbers" xml:space="preserve">
    <value>負の数の表示形式</value>
  </data>
  <data name="Lbl_Types" xml:space="preserve">
    <value>種類</value>
  </data>
  <data name="Text_Accounting" xml:space="preserve">
    <value>会計</value>
  </data>
  <data name="Text_BlankDocument" xml:space="preserve">
    <value>空白のブック</value>
  </data>
  <data name="Text_Currency" xml:space="preserve">
    <value>通貨</value>
  </data>
  <data name="Text_Currency_NumberFormat_Description" xml:space="preserve">
    <value>通貨の表示形式を設定します。小数点位置を揃える場合は、[会計] を選択してください。</value>
  </data>
  <data name="Text_Custom" xml:space="preserve">
    <value>ユーザー定義</value>
  </data>
  <data name="Text_Custom_NumberFormat_Description" xml:space="preserve">
    <value>基になる組み込みの表示形式を選択し、新しい表示形式を入力してください。</value>
  </data>
  <data name="Text_Date" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="Text_Date_NumberFormat_Description" xml:space="preserve">
    <value>[日付] は、日付/時刻のシリアル値を日付形式で表示します。アスタリスク (*) で始まる日付形式は、オペレーティング システムで指定する地域の日付/時刻の設定に応じて変わります。アスタリスクのない形式は、オペレーティング システムの設定が変わってもそのままです。</value>
  </data>
  <data name="Text_General" xml:space="preserve">
    <value>標準</value>
  </data>
  <data name="Text_General_NumberFormat_Description" xml:space="preserve">
    <value>セルの値に対して一般の書式を適用します (特定の書式を指定しません)。</value>
  </data>
  <data name="Text_Number" xml:space="preserve">
    <value>数値</value>
  </data>
  <data name="Text_Number_NumberFormat_Description" xml:space="preserve">
    <value>数値の表示形式を設定します。小数点位置を揃える場合は、[会計] を選択してください。</value>
  </data>
  <data name="Text_Percentage" xml:space="preserve">
    <value>パーセンテージ</value>
  </data>
  <data name="Text_Percentage_NumberFormat_Description" xml:space="preserve">
    <value>[パーセンテージ] は、セルの値の百分率にパーセント記号を付けて表示します。</value>
  </data>
  <data name="Text_ProjectBudget" xml:space="preserve">
    <value>プロジェクトの予算</value>
  </data>
  <data name="Text_Special" xml:space="preserve">
    <value>その他</value>
  </data>
  <data name="Text_Special_NumberFormat_Description" xml:space="preserve">
    <value>[その他] は、リストやデータベースの管理に使用します。</value>
  </data>
  <data name="Text_Text" xml:space="preserve">
    <value>文字列</value>
  </data>
  <data name="Text_Text_NumberFormat_Description" xml:space="preserve">
    <value>[文字列] は、数値も文字列として扱います。セルには入力した値がそのまま表示されます。</value>
  </data>
  <data name="Text_Time" xml:space="preserve">
    <value>時刻</value>
  </data>
  <data name="Text_Time_NumberFormat_Description" xml:space="preserve">
    <value>[時刻] は、日付/時刻のシリアル値を時刻形式で表示します。アスタリスク (*) で始まる時刻形式は、オペレーティング システムで指定する地域の日付/時刻の設定に応じて変わります。アスタリスクのない形式は、オペレーティング システムの設定が変わってもそのままです。</value>
  </data>
</root>