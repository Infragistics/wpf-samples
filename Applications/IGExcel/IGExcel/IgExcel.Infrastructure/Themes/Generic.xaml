<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:IgExcel.Infrastructure"
    xmlns:controls="clr-namespace:IgExcel.Infrastructure.Controls"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igwpf="http://schemas.infragistics.com/xaml/wpf"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igCP="http://schemas.infragistics.com/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">


    <!-- =================================  BRUSHES  ================================= -->

    <SolidColorBrush x:Key="ApplicationAccentColor" Color="#2B579A"/>
    <SolidColorBrush x:Key="HeaderTextBrush" Color="#4D82C0" />
    <SolidColorBrush x:Key="BorderBrush" Color="#ABABAB"/>

    <!-- ================================= ColorPickerTool Template ================================= -->

    <Style TargetType="{x:Type local:ColorPickerTool}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPickerTool}">
                    <StackPanel Orientation="Horizontal" Name="btnColor" Width="34" Height="23" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <StackPanel Width="16" Height="16" Margin="3,3,3,4">
                            <igwpf:AutoDisabledImage Width="17" Height="16" Stretch="Uniform" Source="{Binding Path=Image,RelativeSource={RelativeSource TemplatedParent}}"  HorizontalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                            <Rectangle Width="16" Height="4" Margin="0,-4,0,0" StrokeThickness="0" Name="rectSelectedColor">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding ElementName=PART_ColorPicker, Path=SelectedColor}" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <local:XamColorPickerExtended Name="PART_ColorPicker" Height="0" ShowRecentColorsPalette="False" AdvancedButtonCaption="More Colors..." 
                                                          Width="16" DerivedColorPalettesCaption="Theme Colors" CurrentPaletteCaption="Standart Colors" Margin="-7,2,0,0" MinHeight="0" ShowAdvancedEditorButton="False"
                                                          TransparentColorItemText="{TemplateBinding TransparentColorItemText}"
                                                          SelectedColor="{Binding Path=SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                <ig:XamColorPicker.CurrentPalette>
                                    <!-- Create Custom Palette -->
                                    <ig:ColorPalette>
                                        <ig:ColorPalette.Colors>
                                            <ig:ColorPatchCollection>
                                                <ig:ColorPatch Color="#FFFFFF"/>
                                                <ig:ColorPatch Color="#000000"/>
                                                <ig:ColorPatch Color="#E7E6E6"/>
                                                <ig:ColorPatch Color="#44546A"/>
                                                <ig:ColorPatch Color="#5B9BD5"/>
                                                <ig:ColorPatch Color="#ED7D31"/>
                                                <ig:ColorPatch Color="#A5A5A5"/>
                                                <ig:ColorPatch Color="#FFC000"/>
                                                <ig:ColorPatch Color="#4472C4"/>
                                                <ig:ColorPatch Color="#70AD47"/>
                                            </ig:ColorPatchCollection>
                                        </ig:ColorPalette.Colors>
                                    </ig:ColorPalette>
                                </ig:XamColorPicker.CurrentPalette>
                                <local:XamColorPickerExtended.Resources>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <StackPanel></StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </local:XamColorPickerExtended.Resources>
                            </local:XamColorPickerExtended>
                        </StackPanel>
                        <StackPanel Width="11" Height="20" Background="White" Margin="0,1,1,1">
                            <ToggleButton IsChecked="{Binding ElementName=PART_ColorPicker, Path=IsDropDownOpen}" Cursor="Hand" MaxWidth="6" Width="4" Height="16">
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <StackPanel Background="White" Width="11" Height="20" Margin="-15,0,0,0" >
                                            <Path Data="M 0,0 L 3,3 L 6,0" Name="arrow" HorizontalAlignment="Center" Fill="#6D6D6D" StrokeThickness="1" VerticalAlignment="Center" Margin="3,7,0,0"/>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#B9B9B9" TargetName="arrow"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </StackPanel>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#D5E1F2" TargetName="btnColor"/>
                        </Trigger>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="#C2D5F2" TargetName="btnColor"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" Value="#B9B9B9" TargetName="rectSelectedColor"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!-- ================================= HightlightColorTool Template ================================= -->
    <Style TargetType="{x:Type local:HightlightColorTool}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HightlightColorTool}">
                    <StackPanel Orientation="Horizontal" Name="btnColor" Width="34" Height="23" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <StackPanel Width="16" Height="16" Margin="3,3,3,4">
                            <igwpf:AutoDisabledImage Width="16" Height="17" Stretch="Uniform" Source="{Binding Path=Image,RelativeSource={RelativeSource TemplatedParent}}"  HorizontalAlignment="Center" igPrim:XamlHelper.SnapsToDevicePixels="True"/>
                            <Rectangle Width="16" Height="4" Margin="0,-5,0,0" StrokeThickness="0" Name="rectSelectedColor">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding TextHighlightColor}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </StackPanel>
                        <StackPanel Width="11" Height="20" Background="White" Margin="0,1,1,1">
                            <ToggleButton IsChecked="{Binding ElementName=PART_Popup, Path=IsOpen}" Cursor="Hand" MaxWidth="6" Width="4" Height="16">
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <StackPanel Background="White" Width="11" Height="20" Margin="-15,0,0,0" >
                                            <Path Data="M 0,0 L 3,3 L 6,0" Name="arrow" HorizontalAlignment="Center" Fill="#6D6D6D" StrokeThickness="1" VerticalAlignment="Center" Margin="3,7,0,0"/>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" Value="#B9B9B9" TargetName="arrow"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </StackPanel>
                        <Popup Name="PART_Popup" IsOpen="False" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=btnColor}" Placement="Bottom"  StaysOpen="False">
                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Background="White">
                                <Grid>
                                    <ListView x:Name="PART_ListView" BorderThickness="0" ItemsSource="{TemplateBinding ItemsSource}" 
                                          SelectedValue="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}}"  ItemTemplateSelector="{DynamicResource TextHighlightColorTemplateSelector}" Margin="0,0,0,0">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Width="150" Height="155" Background="White" />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.Resources>
                                            <DataTemplate x:Key="RectangleTemplate">
                                                <Rectangle Width="25" Height="23" Margin="0,5,0,0" StrokeThickness="1" Stroke="{StaticResource BorderBrush}">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush Color="{Binding }"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </DataTemplate>
                                            <DataTemplate x:Key="TextTemplate">
                                                <TextBlock Text="No Color" Height="23" Width="150" Margin="0,2,0,0"/>
                                            </DataTemplate>
                                            <local:TextHighlightColorTemplateSelector x:Key="TextHighlightColorTemplateSelector"
                                                     RectangleTemplate="{StaticResource RectangleTemplate}"
                                                     TextTemplate="{StaticResource TextTemplate}"/>
                                        </ListView.Resources>
                                    </ListView>
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#D5E1F2" TargetName="btnColor"/>
                        </Trigger>
                        <Trigger Property="RadioButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="#C2D5F2" TargetName="btnColor"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" Value="#B9B9B9" TargetName="rectSelectedColor"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ********************************** THEME BRUSHES - For Color Tuner **********************************-->
    <SolidColorBrush x:Key="Brush01" Color="#FF0072C6"/>
    <SolidColorBrush x:Key="Brush02" Color="White"/>
    <SolidColorBrush x:Key="Brush03" Color="#FF6D6D6D"/>
    <SolidColorBrush x:Key="Brush04" Color="#FFE1E1E1"/>
    <SolidColorBrush x:Key="Brush05" Color="#FFF3F3F3"/>

    <!-- ********************************** THEME COLORS **********************************-->
    <!--Base Colors-->
    <Color x:Key="Color_001">#FF444444</Color>
    <!--Foreground-->
    <Color x:Key="Color_002">#FF6D6D6D</Color>
    <!--Disabled Foreground-->
    <Color x:Key="Color_003">#FF777777</Color>
    <Color x:Key="Color_004">#FF959595</Color>
    <Color x:Key="Color_005">#FFABABAB</Color>
    <!--Border-->
    <Color x:Key="Color_006">#FFE1E1E1</Color>
    <!--Disabled Border-->
    <Color x:Key="Color_007">#FFF0F0F0</Color>
    <!--Disabled Bg-->
    <Color x:Key="Color_008">#FFF3F3F3</Color>
    <Color x:Key="Color_009">#FFFFFFFF</Color>

    <!--Theme Accent colors -->
    <Color x:Key="Color_0010">#FFE6F2FA</Color>
    <!--Grid Hover-->
    <Color x:Key="Color_010">#FFCDE6F7</Color>
    <!--Background Hover / Grid Selected-->
    <Color x:Key="Color_011">#FF92C0E0</Color>
    <!--Border Hover Background Pressed/selected-->
    <Color x:Key="Color_012">#FF2A8DD4</Color>
    <!--button border Pressed / Window Active Border-->
    <Color x:Key="Color_013">#FF0072C6</Color>
    <!--Foreground Hover/selected Ribon tab-->

    <!--Theme Error colors -->
    <Color x:Key="Color_014">#FFD20000</Color>

    <!--Colors for Chart Series-->
    <Color x:Key="Color_015">#FF5B9BD5</Color>
    <Color x:Key="Color_016">#FFED7D31</Color>
    <Color x:Key="Color_017">#FFA5A5A5</Color>
    <Color x:Key="Color_018">#FFFFC000</Color>
    <Color x:Key="Color_019">#FF4472C4</Color>
    <Color x:Key="Color_020">#FF70AD47</Color>
    <Color x:Key="Color_021">#FF255E91</Color>
    <Color x:Key="Color_022">#FF9E480E</Color>
    <Color x:Key="Color_023">#FFE0CD8E</Color>
    <Color x:Key="Color_024">#FF997300</Color>

    <!--Colors for BulletGraph/LinearGauge-->
    <Color x:Key="Color_030">#FF5185B1</Color>
    <Color x:Key="Color_031">#FF6699C0</Color>
    <Color x:Key="Color_032">#FF7CACD0</Color>

    <!--Transparent and Whites with transparency-->
    <Color x:Key="Color_040">#E5FFFFFF</Color>
    <!--90% White-->
    <Color x:Key="Color_041">#BFFFFFFF</Color>
    <!--75% White-->
    <Color x:Key="Color_042">#99FFFFFF</Color>
    <!--60% White-->
    <Color x:Key="Color_043">#72FFFFFF</Color>
    <!--45% White-->
    <Color x:Key="Color_044">#4CFFFFFF</Color>
    <!--30% White-->
    <Color x:Key="Color_045">#26FFFFFF</Color>
    <!--15% White-->
    <Color x:Key="Color_046">#00FFFFFF</Color>
    <!--0% White-->
    <!--TransparentBrush-->

    <!--Blacks and grays with transparency-->
    <Color x:Key="Color_050">#E5000000</Color>
    <!--90% Black-->
    <Color x:Key="Color_051">#BF000000</Color>
    <!--75% Black-->
    <Color x:Key="Color_052">#99000000</Color>
    <!--60% Black-->
    <Color x:Key="Color_053">#72000000</Color>
    <!--45% Black-->
    <Color x:Key="Color_054">#4C000000</Color>
    <!--30% Black-->
    <Color x:Key="Color_055">#26000000</Color>
    <!--15% Black-->
    <Color x:Key="Color_056">#19000000</Color>
    <!--10% Black-->
    <!--ShadowBrush-->


    <!-- *********************************  COLOR PICKER (ONLY) COLORS  ********************************* -->
    <Color x:Key="Color_1001">#ff000000</Color>
    <Color x:Key="Color_1002">#FFD1D1D1</Color>
    <Color x:Key="Color_1003">#FFFFFF00</Color>
    <Color x:Key="Color_1004">#ff00ff00</Color>
    <Color x:Key="Color_1005">#FF008000</Color>
    <Color x:Key="Color_1006">#ff00ffff</Color>
    <Color x:Key="Color_1007">#ff0000ff</Color>
    <Color x:Key="Color_1008">#FFFF00FF</Color>
    <Color x:Key="Color_1009">#FFFF0000</Color>

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource Color_007}" />
    <SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource Color_005}" />

    <!-- TextBox Brushes -->
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource Color_011}" />

    <!-- Slider Brushes -->
    <SolidColorBrush x:Key="SliderHTrackBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderVTrackBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderThumbBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="SliderThumbHoverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="SliderThumbPressedBackgroundBrush" Color="{StaticResource Color_011}" />

    <!-- Button Brushes -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_012}" />

    <!-- ToggleButton -->
    <SolidColorBrush x:Key="ToggleButtonBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ToggleButtonHoverBackgroundBrush" Color="{StaticResource Color_010}" />
    <SolidColorBrush x:Key="ToggleButtonHoverBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ToggleButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ToggleButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ToggleButtonGlyphBackgroundBrush" Color="{StaticResource Color_003}" />

    <!-- ColorModes Brushes -->
    <SolidColorBrush x:Key="ColorModeRadioButtonBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ColorModeRadioButtonInnerBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorModeRadioButtonInnerBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ColorModeTabsBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorModeTabsBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorModeSelectedForegroundBrush" Color="{StaticResource Color_013}" />

    <!-- ColorPickerDialog Brushes -->
    <SolidColorBrush x:Key="ColorPickerDialogHeaderBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="ColorPickerDialogHeaderBorderBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="ColorPickerDialogFooterBackgroundBrush" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="ColorPickerDialogBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorPickerDialogBorderBrush" Color="{StaticResource Color_005}" />

    <!-- TrackFill Brushes -->
    <SolidColorBrush x:Key="TrackFillBackgroundBrush" Color="{StaticResource Color_013}" />

    <!-- ColorItem Brushes -->
    <SolidColorBrush x:Key="ColorItemBoxBorderBrush" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ColorItemBoxSelectedOuterBorderBrush" Color="{StaticResource Color_013}" />
    <SolidColorBrush x:Key="ColorItemBoxSelectedInnerBorderBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorItemBoxHoverOuterBorderBrush" Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="ColorItemBoxHoverInnerBorderBrush" Color="{StaticResource Color_008}" />

    <!-- AdvancedColorShadePicker Brushes -->
    <SolidColorBrush x:Key="AdvancedColorShadePickerBackgroundBrush" Color="{StaticResource Color_009}" />
    <LinearGradientBrush x:Key="AdvancedColorShadePickerWhiteBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="{StaticResource Color_009}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AdvancedColorShadePickerBlackBackgroundBrush" StartPoint="0,1" EndPoint="0, 0">
        <GradientStop Offset="0" Color="{StaticResource Color_1001}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="AdvancedColorShadePickerHueBackgroundBrush" StartPoint="0,0" EndPoint="0,1" igPrim:XamlHelper.IsExcludedFromWash="True">
        <GradientStop Offset="0.00" Color="{StaticResource Color_1009}" />
        <GradientStop Offset="0.17" Color="{StaticResource Color_1003}" />
        <GradientStop Offset="0.33" Color="{StaticResource Color_1004}" />
        <GradientStop Offset="0.50" Color="{StaticResource Color_1006}" />
        <GradientStop Offset="0.66" Color="{StaticResource Color_1007}" />
        <GradientStop Offset="0.83" Color="{StaticResource Color_1008}" />
        <GradientStop Offset="1.00" Color="{StaticResource Color_1009}" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="AdvancedColorShadePickerColorSamplingBackgroundBrush" Color="{StaticResource Color_1009}" />
    <SolidColorBrush x:Key="AdvancedColorShadePickerCurrentColorBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="AdvancedColorShadePickerHueRectangleBorderBrush" Color="{StaticResource Color_046}" />
    <SolidColorBrush x:Key="AdvancedColorShadePickerShadingCanvasBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="RedSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1009}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="GreenSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1005}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="BlueSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1007}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="CyanSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1006}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="MagentaSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1008}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="YellowSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1003}" igPrim:XamlHelper.IsExcludedFromWash="True" />
    <SolidColorBrush x:Key="BlackSliderTrackFillBackgroundBrush" Color="{StaticResource Color_1001}" igPrim:XamlHelper.IsExcludedFromWash="True" />

    <!-- ColorPicker Brushes -->
    <SolidColorBrush x:Key="ColorPickerBorderBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ColorPickerBackgroundBrush" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ColorPickerGlyphBackgroundBrush" Color="{StaticResource Color_003}" />

    <!-- *********************************  TextBlock Style  ********************************* -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Margin" Value="0,0,0,-2" />
    </Style>

    <!-- *********************************  TextBox Style  ********************************* -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Padding" Value="2" />
    </Style>

    <!-- *********************************  TrackFill Style  ********************************* -->
    <Style x:Key="TrackFillStyle" TargetType="igPrimBase:TrackFill">
        <Setter Property="Background" Value="{StaticResource TrackFillBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:TrackFill">
                    <Rectangle Height="1" Fill="{TemplateBinding Background}" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ButtonStyle  ********************************* -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="10,0,10,2" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonHoverBorderBrush}" Visibility="Collapsed" StrokeThickness="1" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledBackgroundBrush}" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ByteSlider Style  ********************************* -->
    <Style x:Key="ByteSliderStyle" TargetType="igPrimBase:ByteSlider">
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsMouseWheelEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:ByteSlider">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal" />
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalSlider">
                            <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}" />
                            <Grid x:Name="HorizontalTrack" Height="11" Grid.Column="1" Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                <Border Height="1" Background="{StaticResource SliderHTrackBackgroundBrush}" />
                                <Canvas x:Name="HorizontalTrackFills" />
                                <Canvas x:Name="HorizontalThumbs" />
                            </Grid>
                        </Grid>
                        <Grid x:Name="VerticalSlider" Visibility="Collapsed">
                            <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="0,5,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}" />
                            <Grid x:Name="VerticalTrack" Width="11" Grid.Row="1" Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                <Border Width="1" Background="{StaticResource SliderVTrackBackgroundBrush}" />
                                <Canvas x:Name="VerticalTrackFills" />
                                <Canvas x:Name="VerticalThumbs" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  NumericSlider Style  ********************************* -->
    <Style x:Key="NumericSliderStyle" TargetType="ig:XamSliderBase">
        <Setter Property="Margin" Value="1,0" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsMouseWheelEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderBase">
                    <Grid x:Name="RootElement" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal" />
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalSlider" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalSlider">
                            <Grid x:Name="HorizontalTickMarks" Grid.Column="1" Background="{StaticResource TransparentBrush}" />
                            <Grid x:Name="HorizontalTrack" Height="11" Grid.Column="1" Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                <Border Height="1" Background="{StaticResource SliderHTrackBackgroundBrush}" />
                                <Canvas x:Name="HorizontalTrackFills" />
                                <Canvas x:Name="HorizontalThumbs" />
                            </Grid>
                        </Grid>
                        <Grid x:Name="VerticalSlider" Visibility="Collapsed">
                            <Grid x:Name="VerticalSlidersGrid" Grid.Row="1" Margin="0,5,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <Grid x:Name="VerticalTickMarks" Grid.Row="1" Background="{StaticResource TransparentBrush}" />
                            <Grid x:Name="VerticalTrack" Width="11" Grid.Row="1" Background="{StaticResource TransparentBrush}" igPrim:XamlHelper.SnapsToDevicePixels="True">
                                <Border Width="1" Background="{StaticResource SliderVTrackBackgroundBrush}" />
                                <Canvas x:Name="VerticalTrackFills" />
                                <Canvas x:Name="VerticalThumbs" />
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  SliderThumb Style  ********************************* -->
    <Style x:Key="SliderThumbStyle" TargetType="ig:XamSliderThumbBase">
        <Setter Property="Height" Value="11" />
        <Setter Property="Width" Value="4" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamSliderThumbBase">
                    <Grid x:Name="RootElement">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="ThumbToolTip" ContentTemplate="{TemplateBinding ToolTipTemplate}" Visibility="{TemplateBinding ToolTipVisibility}" />
                        </ToolTipService.ToolTip>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal" />
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive" />
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HoverStates">
                                <VisualState x:Name="Hover">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoHover" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalThumb" HorizontalAlignment="Left">
                            <Rectangle Width="4" Height="11" x:Name="Thumb" Fill="{StaticResource SliderThumbBackgroundBrush}" />
                        </Grid>
                        <Grid x:Name="VerticalThumb" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamColorPickerToggleButton Style  ********************************* -->
    <Style x:Key="XamColorPickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid igPrim:XamlHelper.SnapsToDevicePixels="True" x:Name="contentPresenter">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.35" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="pressedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <!--Replace the TransparencyBackgroundControl-->
                        <!--<igPrim:TransparencyBackgroundControl Grid.ColumnSpan="2" />-->
                        <TextBlock Text="{TemplateBinding Tag}" Margin="7,0,0,0" VerticalAlignment="Center"/>
                        <Border Grid.ColumnSpan="2" Background="{TemplateBinding Background}" Margin="4,4,20,4" />
                        <Border x:Name="Bd" Grid.Column="1" Background="{StaticResource ToggleButtonBackgroundBrush}" BorderBrush="{StaticResource ToggleButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="Border" BorderBrush="{StaticResource ToggleButtonBorderBrush}" BorderThickness="1,1,0,1" />
                        <Rectangle x:Name="hoverElem" Grid.Column="1" Fill="{StaticResource ToggleButtonHoverBackgroundBrush}" Opacity="0" Stroke="{StaticResource ToggleButtonHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="pressedElem" Grid.Column="1" Fill="{StaticResource ToggleButtonPressedBackgroundBrush}" Opacity="0" Stroke="{StaticResource ToggleButtonPressedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Path x:Name="Arrow" Data="M5,6 C5,6 10,0 10,0 C10,0 0,0 0,0 C0,0 5,6 5,6 z" Grid.Column="1" Fill="{StaticResource ToggleButtonGlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="5" Height="3" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  XamColorPicker Style  ********************************* -->
    <Style TargetType="local:XamColorPickerExtended">
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ColorPickerBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorPickerBorderBrush}" />
        <Setter Property="DerivedPaletteColorItemBoxStyle">
            <Setter.Value>
                <Style TargetType="igPrimBase:ColorItemBox">
                    <Setter Property="Foreground" Value="{StaticResource TransparentBrush}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Width" Value="13" />
                    <Setter Property="Height" Value="13" />
                    <Setter Property="Margin" Value="2,0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="igPrimBase:ColorItemBox">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectedStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="WasSelected">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedOuterBorderBrush}">
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedInnerBorderBrush}">
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Hover">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverOuterBorderBrush}">
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverInnerBorderBrush}">
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid>
                                        <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0" Fill="{TemplateBinding ColorItemBrush}" />
                                        <Border x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1">
                                            <Border x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:XamColorPickerExtended">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <igPrimBase:ColorStripManager x:Key="StripManager" />
                            <igPrimBase:NullableColorConverter x:Key="ColorConverter" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisplayColorPalettesDropdownButton">
                                <VisualState x:Name="Hide" />
                                <VisualState x:Name="Show">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettesButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorPalettes" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShowAdvancedEditorButton">
                                <VisualState x:Name="ShowEditorButton" />
                                <VisualState x:Name="HideEditorButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AdvancedEditorButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShowRecentColorPalette">
                                <VisualState x:Name="ShowRCPalette" />
                                <VisualState x:Name="HideRCPalette">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorCaption" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorStrip" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShowDPalettes">
                                <VisualState x:Name="ShowDerivedPalettes" />
                                <VisualState x:Name="HideDerivedPalettes">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedColorCaption" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DerivedPalettes" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <igPrimBase:ColorPickerDialog x:Name="ColorPickerDialog" ColorPicker="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ToggleButton x:Name="ToggleButton" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource XamColorPickerToggleButtonStyle}" Tag="{TemplateBinding TransparentColorItemText}">
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </ToggleButton.Background>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup" VerticalAlignment="Bottom" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" IsOpen="False">
                            <Border x:Name="RootPopupElement" Background="{StaticResource ColorPickerBackgroundBrush}" BorderBrush="{StaticResource ColorPickerBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <StackPanel>
                                    <Border Padding="10,0,10,3">
                                        <StackPanel Orientation="Vertical">
                                            <!--TransparentColorItem Template-->
                                            <Border Background="White" Margin="-10,2,-10,2" Height="25">
                                                <Button Command="{Binding  Path=SelectTransparentColor, RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding TransparentColorItemText}" Tag="{TemplateBinding IsSelectedColorTransparent}">
                                                    <Button.Template>
                                                        <ControlTemplate TargetType="Button">
                                                            <StackPanel Orientation="Horizontal" Name="rootPanel" Background="White">
                                                                <Border Visibility="{TemplateBinding Tag}" BorderThickness="1" BorderBrush="#FFE294" Background="#EF4810" Width="18" Height="19" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                                                <Rectangle Width="14" Height="15" Fill="Black" VerticalAlignment="Center" Margin="-18,0,0,0"/>
                                                                <Label Content="{TemplateBinding Content}" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="15,0,0,0" Padding="0"/>
                                                            </StackPanel>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#D5E1F2" TargetName="rootPanel"/>
                                                                </Trigger>
                                                                <Trigger Property="RadioButton.IsChecked" Value="True">
                                                                    <Setter Property="Background" Value="#C2D5F2" TargetName="rootPanel"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>
                                            </Border>

                                            <Border Background="{StaticResource DisabledBackgroundBrush}" Margin="-10,2,-10,6" Padding="4">
                                                <TextBlock Margin="10,0,0,0" Text="{TemplateBinding CurrentPaletteCaption}" Style="{StaticResource TextBlockStyle}" FontWeight="SemiBold"  />
                                            </Border>
                                            <Grid>
                                                <ComboBox x:Name="ColorPalettes" Height="25" Grid.Column="1" ItemsSource="{Binding ColorPalettes, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" SelectedItem="{Binding CurrentPalette, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <igPrimBase:ColorStrip ColorPalette="{Binding}" IsHitTestVisible="False" />
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition x:Name="colorStrip" Width="*" />
                                                        <ColumnDefinition x:Name="ColorPalettesBtn" Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="ColorPalettesButton" Grid.Column="1" Margin="4,8,0,0" Cursor="Hand" HorizontalContentAlignment="Center" Padding="1" Style="{StaticResource ButtonStyle}" VerticalContentAlignment="Center" Visibility="Collapsed">
                                                        <Path x:Name="Arrow" Data="M5,6 C5,6 10,0 10,0 C10,0 0,0 0,0 C0,0 5,6 5,6 z" Grid.Column="1" Fill="{StaticResource ColorPickerGlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="5" Height="3" />
                                                    </Button>
                                                    <igPrimBase:ColorStrip x:Name="CurrentColorStrip" ColorPalette="{Binding CurrentPalette, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}" Margin="0,0,0,-9" />
                                                </Grid>
                                            </Grid>
                                            <Border Background="{StaticResource DisabledBackgroundBrush}" Margin="-10,14,-10,6" Padding="4">
                                                <TextBlock x:Name="DerivedColorCaption" Margin="10,0,0,0" Text="{TemplateBinding DerivedColorPalettesCaption}" Style="{StaticResource TextBlockStyle}" FontWeight="SemiBold"  />
                                            </Border>
                                            <StackPanel x:Name="DerivedPalettes" Orientation="Vertical" />
                                            <Border Visibility="{Binding ElementName=RecentColorStrip, Path=Visibility}" Background="{StaticResource DisabledBackgroundBrush}" Margin="-10,6,-10,6" Padding="4">
                                                <TextBlock x:Name="RecentColorCaption" Margin="10,0,0,0" Text="{TemplateBinding RecentColorPaletteCaption}" Style="{StaticResource TextBlockStyle}" FontWeight="SemiBold"  />
                                            </Border>
                                            <igPrimBase:ColorStrip x:Name="RecentColorStrip" igPrimBase:ColorStripManager.Manager="{StaticResource StripManager}" />
                                        </StackPanel>
                                    </Border>

                                    <Border Height="1" Margin="1,0,1,3" HorizontalAlignment="Stretch" Background="{StaticResource DisabledBackgroundBrush}" Visibility="{TemplateBinding ShowAdvancedEditorButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                    <Border Margin="1,0,1,1" HorizontalAlignment="Stretch">
                                        <Button x:Name="AdvancedEditorButton" Content="{TemplateBinding AdvancedButtonCaption}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="25">
                                            <ig:Commanding.Commands>
                                                <ig:CommandSourceCollection>
                                                    <igCP:XamPickerCommandSource CommandType="Toggle" EventName="Click" />
                                                    <igCP:XamPickerCommandSource CommandType="OpenAdvanceEditor" EventName="Click" />
                                                </ig:CommandSourceCollection>
                                            </ig:Commanding.Commands>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <StackPanel Orientation="Horizontal" Name="rootPanel" Background="White">
                                                        <Image Width="16" Height="16" VerticalAlignment="Center" Margin="5,0,10,0" Source="/IgExcel.Infrastructure;component/Images/MoreColors_16x16.png"/>
                                                        <Label Content="{TemplateBinding Content}" Padding="0" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#D5E1F2" TargetName="rootPanel"/>
                                                        </Trigger>
                                                        <Trigger Property="RadioButton.IsChecked" Value="True">
                                                            <Setter Property="Background" Value="#C2D5F2" TargetName="rootPanel"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Border>
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ColorStrip Style  ********************************* -->
    <Style x:Key="ColorStripStyle" TargetType="igPrimBase:ColorStrip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:ColorStrip">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel x:Name="ColorPickerPanel" Background="{TemplateBinding Background}" Orientation="Horizontal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorStrip" BasedOn="{StaticResource ColorStripStyle}" />

    <!-- *********************************  ColorItemBox Style  ********************************* -->
    <Style x:Key="ColorItemBoxStyle" TargetType="igPrimBase:ColorItemBox">
        <Setter Property="Foreground" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorItemBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Margin" Value="2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:ColorItemBox">
                    <Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="WasSelected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedOuterBorderBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxSelectedInnerBorderBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hover">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder1" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverOuterBorderBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder2" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ColorItemBoxHoverInnerBorderBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0" Fill="{TemplateBinding ColorItemBrush}" />
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                            <Border x:Name="SelectedBorder1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Border x:Name="SelectedBorder2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource TransparentBrush}" BorderBrush="{StaticResource TransparentBrush}" BorderThickness="1" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorItemBox" BasedOn="{StaticResource ColorItemBoxStyle}" />

    <!-- *********************************  ColorModeRadioButton Style  ********************************* -->
    <Style x:Key="ColorModeRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Height" Value="26" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorModeRadioButtonBorderBrush}" />
        <Setter Property="Padding" Value="15,2" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused" />
                                <VisualState x:Name="InvalidFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Border x:Name="border" Grid.ColumnSpan="2" Margin="0" BorderBrush="{StaticResource ColorModeRadioButtonInnerBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ColorModeRadioButtonInnerBackgroundBrush}" Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl" Opacity="0.7" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{StaticResource ForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" Visibility="Collapsed" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{StaticResource ColorModeSelectedForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  AdvancedColorShadePicker Style  ********************************* -->
    <Style x:Key="AdvancedColorShadePickerStyle" TargetType="igPrimBase:AdvancedColorShadePicker">
        <Setter Property="Background" Value="{StaticResource LightForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AdvancedColorShadePicker">
                    <Grid Background="{StaticResource AdvancedColorShadePickerBackgroundBrush}">
                        <Grid.Resources>
                            <igPrim:SpecializedTextBoxValueConverter x:Key="TextConverter"></igPrim:SpecializedTextBoxValueConverter>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ColorSliders">
                                <VisualState x:Name="RGB">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HSL">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CMYK">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="RGBSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HSLSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CMYKSliders" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="colorModeRow" />
                            <RowDefinition x:Name="samplingRow" />
                            <RowDefinition x:Name="colorSliderRow" Height="160" />
                            <RowDefinition x:Name="alphaRow" />
                            <RowDefinition x:Name="buttonsRow" />
                        </Grid.RowDefinitions>
                        <Grid x:Name="colorModes" Margin="0,0,0,5" Height="32">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="colorModesBackground" Grid.ColumnSpan="5" Fill="{StaticResource ColorModeTabsBackgroundBrush}" Stroke="{StaticResource ColorModeTabsBorderBrush}" />
                            <Rectangle Height="1" Grid.ColumnSpan="5" VerticalAlignment="Bottom" Fill="{StaticResource LightBackgroundBrush}" />
                            <RadioButton Grid.Column="1" Content="RGB" GroupName="modes" IsChecked="True" Style="{StaticResource ColorModeRadioButtonStyle}" VerticalAlignment="Bottom">
                                <ig:Commanding.Command>
                                    <igCP:ColorStripsCommandSource CommandType="ShowRGBSliders" EventName="Click" />
                                </ig:Commanding.Command>
                            </RadioButton>
                            <RadioButton Grid.Column="2" Content="HSL" GroupName="modes" Style="{StaticResource ColorModeRadioButtonStyle}" VerticalAlignment="Bottom">
                                <ig:Commanding.Command>
                                    <igCP:ColorStripsCommandSource CommandType="ShowHSLSliders" EventName="Click" />
                                </ig:Commanding.Command>
                            </RadioButton>
                            <RadioButton Grid.Column="3" Content="CMYK" GroupName="modes" Style="{StaticResource ColorModeRadioButtonStyle}" VerticalAlignment="Bottom">
                                <ig:Commanding.Command>
                                    <igCP:ColorStripsCommandSource CommandType="ShowCMYKSliders" EventName="Click" />
                                </ig:Commanding.Command>
                            </RadioButton>
                        </Grid>
                        <Grid x:Name="samplingArea" Grid.Row="1" Margin="15,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="187" />
                                <ColumnDefinition x:Name="spacerColumn" Width="11" />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="shadingCanvasRow" Height="*" />
                                <RowDefinition x:Name="currentColorRow" Height="20" />
                            </Grid.RowDefinitions>
                            <!-- SHADING CANVAS -->
                            <Border BorderBrush="{StaticResource AdvancedColorShadePickerShadingCanvasBorderBrush}" BorderThickness="1,1,1,0" />
                            <Canvas x:Name="ShadingCanvas" Width="185" Height="100">
                                <Rectangle x:Name="ColorSamplingRectangle" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerColorSamplingBackgroundBrush}" Margin="0,1,0,0" />
                                <Rectangle x:Name="rectWhiteGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerWhiteBackgroundBrush}" Margin="0,1,0,0" />
                                <Rectangle x:Name="rectBlackGradient" Width="{Binding Width, ElementName=ShadingCanvas}" Height="{Binding Height, ElementName=ShadingCanvas}" Fill="{StaticResource AdvancedColorShadePickerBlackBackgroundBrush}" Margin="0,1,0,0" />
                                <Canvas x:Name="LightnessSelector" Width="10" Height="10" Canvas.Left="100" Canvas.Top="96" IsHitTestVisible="False">
                                    <Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="{StaticResource LightForegroundBrush}" StrokeThickness="3" />
                                    <Ellipse Width="10" Height="10" IsHitTestVisible="False" Stroke="{StaticResource ForegroundBrush}" StrokeThickness="1" />
                                </Canvas>
                            </Canvas>
                            <!-- PREVIOUS AND CURRENT COLOR -->
                            <Border x:Name="currentColor" Grid.Row="1" BorderBrush="{StaticResource AdvancedColorShadePickerCurrentColorBorderBrush}" BorderThickness="1,0,1,1">
                                <Grid>
                                    <Grid.Resources>
                                        <igPrimBase:NullableColorConverter x:Key="ColorConverter" />
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <igPrim:TransparencyBackgroundControl Grid.ColumnSpan="2" />
                                    <Rectangle>
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding SelectedColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle Grid.Column="1">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding CurrentColor, Converter={StaticResource ColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                            <!-- HUE CANVAS -->
                            <Canvas x:Name="HueCanvas" Grid.Column="2" Grid.RowSpan="2">
                                <Rectangle x:Name="HueRectangle" Width="28" Height="120" Stroke="{StaticResource AdvancedColorShadePickerHueRectangleBorderBrush}" Fill="{StaticResource AdvancedColorShadePickerHueBackgroundBrush}" />
                                <Canvas x:Name="HueSelector" Height="7" Canvas.Left="-4" IsHitTestVisible="False">
                                    <Path Width="4" Height="7" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ToggleButtonGlyphBackgroundBrush}" Stretch="Fill" />
                                    <Path Width="4" Height="7" Canvas.Left="36" Canvas.Top="7" Data="F1 M 276.761,316L 262.619,307.835L 262.619,324.165L 276.761,316 Z " Fill="{StaticResource ToggleButtonGlyphBackgroundBrush}" Stretch="Fill">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </Canvas>
                        </Grid>
                        <!-- RGB SLIDERS-->
                        <Border x:Name="RGBSliders" Grid.Row="2" Margin="15,0,19,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="44"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{TemplateBinding RedCaption}" Grid.Row="0" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <igPrimBase:ByteSlider x:Name="Red" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource RedSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Red, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="RedTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=Red, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                                <TextBlock Text="{TemplateBinding GreenCaption}" Grid.Row="2" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <igPrimBase:ByteSlider x:Name="Green" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource GreenSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Green, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="GreenTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=Green, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                                <TextBlock Text="{TemplateBinding BlueCaption}" Grid.Row="4" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <igPrimBase:ByteSlider x:Name="Blue" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource BlueSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Blue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="BlueTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=Blue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </Border>
                        <!-- HSL SLIDERS-->
                        <Border x:Name="HSLSliders" Grid.Row="2" Margin="15,0,19,0" Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="44"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{TemplateBinding HueCaption}" Grid.Row="0" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="Hue" MaxValue="360.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" Value="{Binding H, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TrackFillStyle="{StaticResource TrackFillStyle}" />
                                    <TextBox x:Name="HTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=H, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                                <TextBlock Text="{TemplateBinding SaturationCaption}" Grid.Row="2" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="Saturation" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding S, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="STextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=S, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                                <TextBlock Text="{TemplateBinding LightnessCaption}" Grid.Row="4" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="Lightness" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding L, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="LTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=L, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </Border>
                        <!-- CMYK SLIDERS-->
                        <Border x:Name="CMYKSliders" Grid.Row="2" Margin="15,0,19,0" Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="26"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{TemplateBinding CyanCaption}" Grid.Row="0" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="C" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource CyanSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding C, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="CTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=C, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center" />
                                </Grid>

                                <TextBlock Text="{TemplateBinding MagentaCaption}" Grid.Row="2" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="M" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource MagentaSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding M, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="MTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=M, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center" />
                                </Grid>

                                <TextBlock Text="{TemplateBinding YellowCaption}" Grid.Row="4" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="Y" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource YellowSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Y, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="YTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=Y, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>

                                <TextBlock Text="{TemplateBinding BlackCaption}" Grid.Row="6" Style="{StaticResource TextBlockStyle}" />
                                <Grid Grid.Row="7">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <ig:XamNumericSlider x:Name="K" MaxValue="100.0" MinValue="0.0" Style="{StaticResource NumericSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillBrush="{StaticResource BlackSliderTrackFillBackgroundBrush}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding K, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="KTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=K, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource TextConverter}, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </Border>
                        <!-- ALPHA SLIDER -->
                        <Border x:Name="alphaSlider" Grid.Row="3" Margin="15,0,19,0">
                            <StackPanel>
                                <TextBlock Text="{TemplateBinding AlphaCaption}" Style="{StaticResource TextBlockStyle}" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="15" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <igPrimBase:ByteSlider x:Name="Alpha" Style="{StaticResource ByteSliderStyle}" ThumbStyle="{StaticResource SliderThumbStyle}" TrackFillStyle="{StaticResource TrackFillStyle}" Value="{Binding Alpha, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <TextBox x:Name="AlphaTextBox" Style="{StaticResource TextBoxStyle}" Grid.Column="2" Text="{Binding Path=Alpha, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True }" VerticalAlignment="Center" />
                                </Grid>
                            </StackPanel>
                        </Border>
                        <!-- BUTTONS -->
                        <Grid Grid.Row="4" Height="42" Background="{StaticResource ColorPickerDialogFooterBackgroundBrush}" Margin="0,15,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button Content="{TemplateBinding OKCaption}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Center">
                                <ig:Commanding.Commands>
                                    <ig:CommandSourceCollection>
                                        <igCP:ColorStripsCommandSource CommandType="Accept" EventName="Click" />
                                        <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click" />
                                    </ig:CommandSourceCollection>
                                </ig:Commanding.Commands>
                            </Button>
                            <Button Grid.Column="1" Grid.Row="1" Content="{TemplateBinding CancelCaption}" Style="{StaticResource ButtonStyle}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center">
                                <ig:Commanding.Commands>
                                    <ig:CommandSourceCollection>
                                        <igCP:ColorStripsCommandSource CommandType="Cancel" EventName="Click" />
                                        <igCP:ColorPickerDialogCommandSource CommandType="Close" EventName="Click" />
                                    </ig:CommandSourceCollection>
                                </ig:Commanding.Commands>
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igPrimBase:AdvancedColorShadePicker" BasedOn="{StaticResource AdvancedColorShadePickerStyle}" />

    <!-- *********************************  ColorPickerDialog Style  ********************************* -->
    <Style x:Key="ColorPickerDialogStyle" TargetType="igPrimBase:ColorPickerDialog">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ColorPickerDialogBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorPickerDialogBorderBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrimBase:ColorPickerDialog">
                    <Grid>
                        <Popup x:Name="Popup">
                            <Border x:Name="RootElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border Background="{StaticResource ColorPickerDialogHeaderBackgroundBrush}" BorderBrush="{StaticResource ColorPickerDialogHeaderBorderBrush}" BorderThickness="1">
                                        <Grid>
                                            <Grid x:Name="HeaderElem" Background="{StaticResource TransparentBrush}">
                                                <TextBlock Margin="8,0" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}" Text="{Binding DialogCaption, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TextBlockStyle}" />
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <Grid Grid.Row="1" Margin="{TemplateBinding Padding}">
                                        <igPrimBase:AdvancedColorShadePicker SelectedColor="{Binding ColorPicker.SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="igPrimBase:ColorPickerDialog" BasedOn="{StaticResource ColorPickerDialogStyle}" />

    <!-- *********************************  TransparencyBackgroundControl Style  ********************************* -->
    <Style TargetType="igPrim:TransparencyBackgroundControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:TransparencyBackgroundControl">
                    <Grid x:Name="Root" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>