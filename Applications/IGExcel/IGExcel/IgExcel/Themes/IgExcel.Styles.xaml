<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	                xmlns:ig="http://schemas.infragistics.com/xaml"
	                xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">



    <!-- *********************************  BRUSHES  ********************************* -->

    <SolidColorBrush x:Key="ApplicationAccentColor" Color="#217346"/>
    <SolidColorBrush x:Key="AppRecentDocsFilesHoverBackgrColor" Color="#FFD8EBE0"/>
    <SolidColorBrush x:Key="AppDefaultBtnBackgrColor" Color="#FFC7E5D5"/>
    <SolidColorBrush x:Key="AppDefaultBtnHoverBackgrColor" Color="#FFB0D9C3"/>
    <SolidColorBrush x:Key="AppDefaultBtnPressedBackgrColor" Color="#FF9BCDB2"/>
    <SolidColorBrush x:Key="HeaderTextBrush" Color="#FF50956F" />
    <SolidColorBrush x:Key="BorderBrush" Color="#ABABAB"/>
    <SolidColorBrush x:Key="LineBrush" Color="#D4D4D4" />
    <SolidColorBrush x:Key="SelectedBrush" Color="#CDE6F7" />
    <SolidColorBrush x:Key="LightTextBrush" Color="#666666" />
    <SolidColorBrush x:Key="DarkTextBrush" Color="#444444" />
    <SolidColorBrush x:Key="HoverBrush" Color="#D3F0E0" />
    <SolidColorBrush x:Key="PressedBrush" Color="#9FD5B7" />
    <SolidColorBrush x:Key="TransparentBrush" Color="#00FFFFFF" />

    <SolidColorBrush x:Key="ApplicationPrimaryBtnHoverBackgroundColor" Color="#FF50956F"/> 
    <SolidColorBrush x:Key="ApplicationPrimaryBtnPressedBackgroundColor" Color="#FF86BFA0"/>
    <SolidColorBrush x:Key="NullTextBrush" Color="#ABABAB"/>
    <SolidColorBrush x:Key="ReadOnlyBorderBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="LabelForegroundBrush" Color="#FF666666" />
    <SolidColorBrush x:Key="DisabledBtnBackgroundColor" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="DisabledBtnForegroundColor" Color="#FF6D6D6D" />
    
    
    <!-- *********************************  LabelStyle  ********************************* -->
    <Style x:Key="HeaderTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="0" />
    </Style>
    <Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="0" />
    </Style>


    <!-- *********************************  PrimaryButtonStyle  ********************************* -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ApplicationAccentColor}" StrokeThickness="0" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{StaticResource ApplicationPrimaryBtnHoverBackgroundColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="{StaticResource ApplicationPrimaryBtnPressedBackgroundColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" Value="{StaticResource ApplicationPrimaryBtnHoverBackgroundColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" Value="{StaticResource DisabledBtnBackgroundColor}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledBtnForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  DefaultButtonStyle  ********************************* -->
    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ApplicationAccentColor}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle x:Name="Bd" Fill="{StaticResource AppDefaultBtnBackgrColor}" StrokeThickness="0" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{StaticResource AppDefaultBtnHoverBackgrColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="{StaticResource AppDefaultBtnPressedBackgrColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Fill" Value="{StaticResource AppDefaultBtnHoverBackgrColor}" TargetName="Bd"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" Value="{StaticResource DisabledBtnBackgroundColor}" TargetName="Bd"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledBtnForegroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Horizontal Thumb Style  ********************************* -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="11" />
        <Setter Property="MinWidth" Value="4" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="root">
                        <Rectangle x:Name="ThumbBackground" Fill="{TemplateBinding Background}" Width="4" Height="11" />
                        <Rectangle x:Name="FocusedVisualElement" Stroke="#98B2D9" Width="4" Height="11" StrokeThickness="1" Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="#F0F0F0" Width="4" Height="11" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="#98B2D9" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="#98B2D9" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                            <Setter TargetName="root" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Slider Style  ********************************* -->
    
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IGExcelSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#444444" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="1" Placement="Top" Grid.Row="0" Visibility="Collapsed" />
                            <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="1" Placement="Bottom" Grid.Row="2" Visibility="Collapsed" />
                            <Border x:Name="TrackBackground" Background="#FFFFFF" Height="1" Grid.Row="1" VerticalAlignment="center">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="#FFFFFF" Height="1" Width="0" Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Foreground" TargetName="Thumb" Value="#98B2D9" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- *********************************  Masked Input Textbox Style  ********************************* -->

    <!--<LinearGradientBrush x:Key="SilverlightDarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>-->

    <!--<SolidColorBrush x:Key="FocusBorderFillKey" Color="#FF6DBDD1"/>-->

    <igPrim:HorizontalToTextAlignmentConverter x:Key="horizToTextAlignmentConverter" />


    <Style x:Key="maskedInputTextBoxStyle" TargetType="igPrim:MaskedInputTextBox">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="0,3,0,1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="FontSize" Value="11"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="FontSize" Value="11"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0,1,0,1"/>
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
                <Setter Property="FontSize" Value="11"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#ffe1e1e1"/>
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="3,3,3,2"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalContentAlignment" Value="Left" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaskedInputStyle" TargetType="ig:XamMaskedInput">
        <Setter Property="Background" Value="White" />
        <Setter Property="igPrim:XamlHelper.SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="0,0,40,0" />
        <Setter Property="Width" Value="300" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="PromptChar" Value=""/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamMaskedInput">
                    <igPrim:ValidationDecorator x:Name="MainBorder">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <igPrim:MaskedInputTextBox
                            				x:Name="PART_InputTextBox"
                            				Style="{StaticResource maskedInputTextBoxStyle}"
                            				HorizontalAlignment="Stretch"
                            				HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            				VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            				TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource horizToTextAlignmentConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            				Foreground="{TemplateBinding Foreground}"
                                            InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}" 
                            				InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" 
                            				Margin="{TemplateBinding Padding}"
                            				VerticalAlignment="Top"
                                            igPrim:XamlHelper.Focusable="{TemplateBinding igPrim:XamlHelper.Focusable}"
                                            IsTabStop="{TemplateBinding IsTabStop}" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </igPrim:ValidationDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ff666666"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>