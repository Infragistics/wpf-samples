<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igExtensions="http://schemas.infragistics.com/xaml/extensions"
    xmlns:igMapExtensions="clr-namespace:IGExtensions.Common.Maps.Controls;assembly=IGExtensions.Common.Maps" 
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives">

	<ResourceDictionary.MergedDictionaries>
	    <ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Styles.Shared.xaml"/>
	    <ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Styles.WPF.xaml"/> 
		<ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Metro.DataVisualization.xaml"/>
		<ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Metro.xamGeographicMap.xaml"/>
		<ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Metro.xamMap.xaml"/>
		<ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Metro.xamSlider.xaml"/>
		<ResourceDictionary Source="/Infragistics.Themes.MetroTheme;component/Metro.xamDialogWindow.xaml"/>
	
	  <!--<ResourceDictionary Source="/IGShowcase.GeographicMapBrowser;component/Assets/Styles/Metro.ExtensionStyles.xaml" />-->
	</ResourceDictionary.MergedDictionaries>

	<ig:StringFormatConverter x:Key="StringFormatConverter" />
    <igMapExtensions:GeoMapSymbolLocalizationConverter x:Key="ConvertLocalizationLayout"/>

    <SolidColorBrush x:Key="SliderThumbFillBrush" Color="{StaticResource Color_024}"/>
	<SolidColorBrush x:Key="SliderTrackFillBrush" Color="{StaticResource Color_024}"/>
	<SolidColorBrush x:Key="MovablePanelBackgroundBrush" Color="{StaticResource Color_009}" Opacity="0.8"/>
	<SolidColorBrush x:Key="MovablePanelBorderBrush" Color="{StaticResource Color_023}"/>

	<SolidColorBrush x:Key="GeoMapLocationPaneTitleForeground" Color="{StaticResource Color_009}" />
	<SolidColorBrush x:Key="GeoMapLocationPaneForeground" Color="{StaticResource Color_001}" />
	<SolidColorBrush x:Key="GeoMapLocationPaneBackground" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="GeoMapLocationPaneBorderBrush" Color="{StaticResource Color_024}"/>
	<SolidColorBrush x:Key="GeoMapLocationPaneTitleBackground" Color="{StaticResource Color_024}"/>
	<SolidColorBrush x:Key="GeoMapLocationPaneTitleBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ZoomSliderTrackRailFillBrush" Color="DodgerBlue"/>

    <SolidColorBrush x:Key="GeoMapLocationPaneHoverStroke" Color="{StaticResource Color_024}" />
	<SolidColorBrush x:Key="GeoMapLocationPaneHoverBackground" Color="{StaticResource Color_024}"/>
	<SolidColorBrush x:Key="SliderTrackBorderBrush" Color="{StaticResource Color_004}"/>

	<Thickness x:Key="LatLongTextMargin">8,2,10,2</Thickness>
	<Thickness x:Key="LocationPaneTextLeftMargin">4,0,0,0</Thickness>
	<Thickness x:Key="LocationPaneLastTextMargin">4,0</Thickness>
	<Thickness x:Key="DegreesElementMargin">2,-4,0,0</Thickness>
	<Thickness x:Key="PanelsElementsVertMargin">0,0,0,16</Thickness>
	<Thickness x:Key="PanelsElementsVertSmallMargin">0,0,0,6</Thickness>

    <SolidColorBrush x:Key="OverviewPlusDetailPaneStroke" Color="{StaticResource Color_024}"/>

    <Style x:Key="XamOverviewPlusDetailPaneStyleOverride" TargetType="ig:XamOverviewPlusDetailPane" BasedOn="{StaticResource OverviewPlusDetailPaneStyle}">
	<Setter Property="ZoomTo100ButtonVisibility" Value="Collapsed" />
	<Setter Property="InteractionStatesToolVisibility" Value="Visible" />
	<!--<Setter Property="ScaleToFitButtonToolTip" Value="{Binding OPD_ScaleToFit_SeriesViewer, Source={StaticResource Strings}}" />-->
	<Setter Property="ZoomLevelLargeChange" Value="0.2" />
	<!-- thumbnail area of the whole world in the OverviewPlusDetailPane-->
	<Setter Property="WorldStyle">
	  <Setter.Value>
		<Style TargetType="Path">
                    <Setter Property="Stroke" Value="{StaticResource OverviewPlusDetailPaneStroke}"/>
		  <Setter Property="StrokeThickness" Value="1"/>
		  <Setter Property="Fill">
			<Setter.Value>
			  <!--<ImageBrush Stretch="Uniform" ImageSource="{Binding Source='Resources/OPDThumbnail.png', Converter={StaticResource GetImageConverter}}" />-->
			  <ImageBrush Stretch="Uniform" ImageSource="/IGExtensions.Common.Maps;component/Assets/Images/ThemeMetroPreview.png" />
			</Setter.Value>
		  </Setter>
		</Style>
	  </Setter.Value>
	</Setter>
	<!-- visible area of the world in the OverviewPlusDetailPane-->
	<!--<Setter Property="WindowStyle">
	  <Setter.Value>
		<Style TargetType="Path">
		  <Setter Property="Stroke" Value="{StaticResource GeographicMapWindowStroke}"/>
		  <Setter Property="StrokeThickness" Value="2"/>
		  <Setter Property="Fill" Value="Transparent"/>
		</Style>
	  </Setter.Value>
	</Setter>-->
  </Style>

  <!-- IMPLICIT STYLES FOR SYSTEM CONTROLS FROM METRO THEME RESOURCE DICTIONARY (SOME LOADED FROM CODE-BEHIND) -->
	<!--*********************************************************************************************************-->
	<Style TargetType="ScrollBar" BasedOn="{StaticResource ScrollBarStyle}"/>
	<Style TargetType="ScrollViewer" BasedOn="{StaticResource ScrollViewerStyle}"/>
	<Style TargetType="ListBox" BasedOn="{StaticResource ListBoxStyle}"/>
	<Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemStyle}"/>
	<Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}"/>
	<Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}"/>

	<!-- *********************************  ToggleButton Style  ********************************* -->
    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="10,0,10,2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1"/>
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBackgroundBrush}" Visibility="Collapsed" StrokeThickness="2"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonStyle}"/>

    <!-- IMPLICIT STYLES FOR IG CONTROLS FROM METRO THEME RESOURCE DICTIONARY (SOME LOADED FROM CODE-BEHIND) -->
	<!--*****************************************************************************************************-->
    <Style TargetType="ig:XamNumericRangeSlider" BasedOn="{StaticResource SliderBaseStyle}">
		<!--<Setter Property="Margin" Value="7,0,7,0" />-->
	</Style>
    <Style TargetType="ig:XamNumericSlider" BasedOn="{StaticResource SliderBaseStyle}">
		<!--<Setter Property="Margin" Value="7,0,7,0" />-->
	</Style>
		
	<!-- *********************************  TextBlock Style  ********************************* -->
	<Style x:Key="TextBlockStyle" TargetType="TextBlock">
	  <Setter Property="Foreground" Value="Black"/>
	  <Setter Property="FontSize" Value="13.333"/>
	  <Setter Property="FontFamily" Value="Segoe UI"/>
	  <Setter Property="MinHeight" Value="24"/>
	</Style>
	
	<!-- *********************************  ToolTip Style  ********************************* -->
	<Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <!--<Setter Property="Foreground" Value="red"/>-->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MaxWidth" Value="350"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}"/>
        <!--<Setter Property="Background" Value="Red"/>-->
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}"/>
        <Setter Property="Padding" Value="10,7"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Grid>
                            <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" 
                                       StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}"/>

    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
 
  <!-- ****************************************************************************************
		 ********************************* IG EXTENSIONS STYLES *********************************
		 **************************************************************************************** -->

  <igExtensions:MapCoordinateDisplayModeConverter x:Key="MapCoordinateConverter"/>
  <igExtensions:MapStrings x:Key="MapStrings"/>

  <!-- *********************************  PropertyValueEditor Style  ********************************* -->
  <Style TargetType="igExtensions:PropertyValueEditor" x:Key="MetroPropertyValueEditorStyle">
	<Setter Property="Padding" Value="9,0,9,0" />
	<Setter Property="Margin" Value="{StaticResource PanelsElementsVertMargin}" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="igExtensions:PropertyValueEditor">
		  <Grid>
			<Grid.Resources>
			  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
			</Grid.Resources>
			<ToolTipService.ToolTip>
			  <ToolTip Visibility="{Binding Path=PropertyToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
				<StackPanel>
				  <TextBlock Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"/>
				  <TextBlock Text="{Binding Path=PropertyToolTip, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap"/>
				</StackPanel>
			  </ToolTip>
			</ToolTipService.ToolTip>
			<Grid.RowDefinitions>
			  <RowDefinition Height="auto"/>
			  <RowDefinition Height="auto"/>
			</Grid.RowDefinitions>

			<Grid Grid.Row="0" Visibility="{Binding Path=PropertyNameVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
			  <Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto"/>
				<ColumnDefinition Width="*"/>
			  </Grid.ColumnDefinitions>
			  <TextBlock Grid.Column="0" Margin="0,0,3,0" HorizontalAlignment="Left" VerticalAlignment="Center"
				  Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}"/>
			  <TextBlock Grid.Column="1" Margin="{TemplateBinding Padding}" HorizontalAlignment="Right"  VerticalAlignment="Center"
				  Text="{Binding Path=PropertyValueString, RelativeSource={RelativeSource TemplatedParent}}"/>
			</Grid>

			<ig:XamNumericSlider
				Grid.Row="1" SmallChange="0.1" LargeChange="0.1" Margin="{TemplateBinding Padding}"
				IncreaseButtonVisibility="Collapsed" DecreaseButtonVisibility="Collapsed"
				MinValue="{Binding Path=PropertyValueMin, RelativeSource={RelativeSource TemplatedParent}}"
				MaxValue="{Binding Path=PropertyValueMax, RelativeSource={RelativeSource TemplatedParent}}"
				Value="{Binding Path=PropertyValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
				HorizontalAlignment="Stretch" Style="{StaticResource SliderBaseStyle}" />
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="igExtensions:PropertyValueEditor" BasedOn="{StaticResource MetroPropertyValueEditorStyle}"/>


    <Style x:Key="TransparentTrackFillStyle" TargetType="igPrim:TrackFill">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="TransparentThumbStyle" TargetType="ig:XamSliderNumericThumb" BasedOn="{StaticResource XamSliderThumbBaseStyle}" >
        <Setter Property="TrackFillStyle" Value="{StaticResource TransparentTrackFillStyle}" />
    </Style>
    
    <!-- *********************************  PropertyRangeEditor Style  ********************************* -->
  <Style TargetType="igExtensions:PropertyRangeEditor" x:Key="MetroPropertyRangeEditorStyle">
	<Setter Property="Padding" Value="9,0,9,0" />
	<Setter Property="Margin" Value="{StaticResource PanelsElementsVertMargin}" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="igExtensions:PropertyRangeEditor">
		  <Grid >
			<Grid.Resources>
			  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
			</Grid.Resources>
			<ToolTipService.ToolTip>
			  <ToolTip Visibility="{Binding Path=PropertyToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
				<StackPanel>
				  <TextBlock Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"/>
				  <TextBlock Text="{Binding Path=PropertyToolTip, RelativeSource={RelativeSource TemplatedParent}}"/>
				</StackPanel>
			  </ToolTip>
			</ToolTipService.ToolTip>
			<Grid.RowDefinitions>
			  <RowDefinition Height="auto"/>
			  <RowDefinition Height="auto"/>
			</Grid.RowDefinitions>

			<Grid Grid.Row="0" Visibility="{Binding Path=PropertyNameVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
			  <Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.5*"/>
				<ColumnDefinition Width="auto"/>
				<ColumnDefinition Width="0.5*"/>
			  </Grid.ColumnDefinitions>
			  <TextBlock Grid.Column="1" Grid.Row="0" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
				  Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" />
			  <TextBlock Grid.Column="0" Grid.Row="0" Margin="0,0,3,0" x:Name="PropertyValueRangeMinTextBlock" HorizontalAlignment="Left"  VerticalAlignment="Center"
				  Text="{Binding Path=PropertyValueRangeMinString, RelativeSource={RelativeSource TemplatedParent}}" />
			  <TextBlock Grid.Column="2" Grid.Row="0" Margin="3,0,0,0" x:Name="PropertyValueRangeMaxTextBlock" HorizontalAlignment="Right"  VerticalAlignment="Center"
				  Text="{Binding Path=PropertyValueRangeMaxString, RelativeSource={RelativeSource TemplatedParent}}"  />
			</Grid>
			<ig:XamNumericRangeSlider Grid.Row="1" SmallChange="0.1" LargeChange="0.1" Margin="{TemplateBinding Padding}"
									  MinValue="{Binding Path=PropertyValueAbsoluteMin, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  MaxValue="{Binding Path=PropertyValueAbsoluteMax, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									  IncreaseButtonVisibility="Collapsed" DecreaseButtonVisibility="Collapsed" 
                                      Style="{StaticResource SliderBaseStyle}" >
			  <ig:XamSliderNumericThumb InteractionMode="Lock" Style="{StaticResource TransparentThumbStyle}"
				  Value="{Binding Path=PropertyValueRangeMin, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
			  </ig:XamSliderNumericThumb>
			  <ig:XamSliderNumericThumb InteractionMode="Lock"
				  Value="{Binding Path=PropertyValueRangeMax, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
			  </ig:XamSliderNumericThumb>
			</ig:XamNumericRangeSlider>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="igExtensions:PropertyRangeEditor" BasedOn="{StaticResource MetroPropertyRangeEditorStyle}"/>

  <!-- *********************************  PropertyBrushColorEditor Style  ********************************* -->
  <Style TargetType="igExtensions:PropertyBrushColorEditor" x:Key="PropertyBrushColorEditorStyle">
	<Setter Property="MinWidth" Value="5" />
	<Setter Property="MinHeight" Value="5" />
	<Setter Property="Width" Value="auto" />
	<Setter Property="Height" Value="auto" />
	<Setter Property="Margin" Value="{StaticResource PanelsElementsVertMargin}" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="igExtensions:PropertyBrushColorEditor">
		  <Grid HorizontalAlignment="Stretch" >
			<Grid.Resources>
			  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
			</Grid.Resources>
			<ToolTipService.ToolTip>
			  <ToolTip Visibility="{Binding Path=PropertyToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
				<StackPanel>
				  <TextBlock Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"/>
				  <TextBlock Text="{Binding Path=PropertyToolTip, RelativeSource={RelativeSource TemplatedParent}}"/>
				</StackPanel>
			  </ToolTip>
			</ToolTipService.ToolTip>
			<Grid.RowDefinitions>
			  <RowDefinition Height="auto"/>
			  <RowDefinition Height="20"/>
			  <RowDefinition Height="auto"/>
			</Grid.RowDefinitions>

			<TextBlock Visibility="{Binding Path=PropertyNameVisibility, RelativeSource={RelativeSource TemplatedParent}}"
					   Grid.Row="0" Margin="0,0,3,0" HorizontalAlignment="Left" VerticalAlignment="Center"
					   Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" />
			<Border Grid.Row="1"
				x:Name="BrushColorPreviewBorder" BorderBrush="Black" BorderThickness="0.5"
				Background="{Binding ElementName=BrushColorPicker, Path=SelectedBrush, Mode=OneWay}" Margin="0"
				HorizontalAlignment="Stretch" Height="{TemplateBinding Height}" />
			<Popup  x:Name="BrushColorPopup" Grid.Row="2" >
			  <Border x:Name="BrushColorPickerContainer" Background="#FFFAFBFB" Opacity="1"
					   BorderBrush="Black" BorderThickness="0.5" HorizontalAlignment="Center">
				<igExtensions:ColorPicker
					x:Name="BrushColorPicker"  ColorSamplerMode="Circle" Margin="2"
					ColorOpacitySliderVisibility="{Binding Path=OpacitySliderVisibility, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					SelectedBrush="{Binding Path=BrushColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
					ColorSamplerBackground="Transparent"
					ColorSamplerToggleVisibility="Collapsed"
					ColorSamplerPreviewVisibility="Collapsed" />
			  </Border>
			</Popup>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="igExtensions:PropertyBrushColorEditor" BasedOn="{StaticResource PropertyBrushColorEditorStyle}"/>

  <!-- *********************************  PropertyBrushCollectionEditor Style  ********************************* -->
  <Style TargetType="igExtensions:PropertyBrushCollectionEditor" x:Key="PropertyBrushCollectionEditorStyle">
	  <Setter Property="MinWidth" Value="5" />
	  <Setter Property="MinHeight" Value="5" />
	  <Setter Property="Width" Value="auto" />
	  <Setter Property="Height" Value="auto" />
	  <Setter Property="Margin" Value="{StaticResource PanelsElementsVertMargin}" />
	  <Setter Property="Template">
		<Setter.Value>
		  <ControlTemplate TargetType="igExtensions:PropertyBrushCollectionEditor">
			<Grid HorizontalAlignment="Stretch" >
			  <Grid.Resources>
				<Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
			  </Grid.Resources>
			  <ToolTipService.ToolTip>
				<ToolTip Visibility="{Binding Path=PropertyToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
				  <StackPanel>
					<TextBlock Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"/>
					<TextBlock Text="{Binding Path=PropertyToolTip, RelativeSource={RelativeSource TemplatedParent}}"/>
				  </StackPanel>
				</ToolTip>
			  </ToolTipService.ToolTip>
			  <Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="20"/>
				<RowDefinition Height="auto"/>
			  </Grid.RowDefinitions>

			  <TextBlock Visibility="{Binding Path=PropertyNameVisibility, RelativeSource={RelativeSource TemplatedParent}}"
						 Grid.Row="0" Margin="0,0,3,0" HorizontalAlignment="Left" VerticalAlignment="Center"
						 Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" />
			  <Border Grid.Row="1" x:Name="BrushCollectionPreviewBorder" BorderBrush="Black" BorderThickness="0.5"  Margin="0"
				  Background="{Binding Path=BrushCollectionPreview, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
				  HorizontalAlignment="Stretch" Height="{TemplateBinding Height}"  />
			  <!--<Canvas>-->
			  <Popup x:Name="BrushColorPopup" Grid.Row="2" >
				<Border x:Name="BrushColorPickerContainer" Background="#FFFAFBFB" Opacity="1"
					 BorderBrush="Black" BorderThickness="0.5" HorizontalAlignment="Center">
				  <igExtensions:ColorPicker
				  x:Name="BrushColorPicker" ColorSamplerMode="Circle"  Margin="2"
				  ColorSamplerBackground="Transparent"
				  ColorSamplerToggleVisibility="Collapsed"
				  ColorSamplerPreviewVisibility="Collapsed" />
				</Border>
			  </Popup>
			  <!--</Canvas>-->
			</Grid>
		  </ControlTemplate>
		</Setter.Value>
	  </Setter>
	</Style>
  <Style TargetType="igExtensions:PropertyBrushCollectionEditor" BasedOn="{StaticResource PropertyBrushCollectionEditorStyle}"/>

  <!-- *********************************  PropertyColorCollectionEditor Style  ********************************* -->
  <Style TargetType="igExtensions:PropertyColorCollectionEditor" x:Key="PropertyColorCollectionEditorStyle">
	<Setter Property="MinWidth" Value="5" />
	<Setter Property="MinHeight" Value="5" />
	<Setter Property="Width" Value="auto" />
	<Setter Property="Height" Value="auto" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="igExtensions:PropertyColorCollectionEditor">
		  <Grid HorizontalAlignment="Stretch" >
			<Grid.Resources>
			  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}"/>
			</Grid.Resources>
			<ToolTipService.ToolTip>
			  <ToolTip Visibility="{Binding Path=PropertyToolTipVisibility, RelativeSource={RelativeSource TemplatedParent}}" >
				<StackPanel>
				  <TextBlock Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold"/>
				  <TextBlock Text="{Binding Path=PropertyToolTip, RelativeSource={RelativeSource TemplatedParent}}"/>
				</StackPanel>
			  </ToolTip>
			</ToolTipService.ToolTip>
			<Grid.RowDefinitions>
			  <RowDefinition Height="auto"/>
			  <RowDefinition Height="20"/>
			  <RowDefinition Height="auto"/>
			</Grid.RowDefinitions>

			<TextBlock Visibility="{Binding Path=PropertyNameVisibility, RelativeSource={RelativeSource TemplatedParent}}"
					   Grid.Row="0" Margin="0,0,3,0" HorizontalAlignment="Left" VerticalAlignment="Center"
					   Text="{Binding Path=PropertyName, RelativeSource={RelativeSource TemplatedParent}}" />
			<Border Grid.Row="1" x:Name="ColorCollectionPreviewBorder" BorderBrush="Black" BorderThickness="0.5"  Margin="0"
				Background="{Binding Path=ColorCollectionPreview, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
				HorizontalAlignment="Stretch" Height="{TemplateBinding Height}"  />
			<!--<Canvas>-->
			<Popup x:Name="ColorPopup" Grid.Row="2" >
			  <Border x:Name="ColorPickerContainer" Background="#FFFAFBFB" Opacity="1"
				   BorderBrush="Black" BorderThickness="0.5" HorizontalAlignment="Center">
				<igExtensions:ColorPicker
				x:Name="ColorPicker" ColorSamplerMode="Circle"  Margin="2"
				ColorSamplerBackground="Transparent"
				ColorSamplerToggleVisibility="Collapsed"
				ColorSamplerPreviewVisibility="Collapsed" />
			  </Border>
			</Popup>
			<!--</Canvas>-->

		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="igExtensions:PropertyColorCollectionEditor" BasedOn="{StaticResource PropertyColorCollectionEditorStyle}"/>


    <!-- *********************************  ZoomInButton Style  ********************************* -->
    <Style x:Key="ZoomInButtonStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-3" />
                        <Rectangle x:Name="normal" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}"/>
                        <Rectangle x:Name="hover" Opacity="0" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}"/>
                        <Rectangle x:Name="pressed" Opacity="0"  Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" />
                        <ContentPresenter Margin="4,5,8,8" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        <Path x:Name="Path" Stretch="Fill" Opacity="1" Fill="{StaticResource LightForegroundBrush}" UseLayoutRounding="False" Margin="3" Data="M3.0000002,0 L5,0 L5,3.0000002 L8,3.0000002 L8,5 L5,5 L5,8 L3.0000002,8 L3.0000002,5 L0,5 L0,3.0000002 L3.0000002,3.0000002 z" Width="10" Height="10"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Opacity="0"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ZoomOutButton Style  ********************************* -->
    <Style x:Key="ZoomOutButtonStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-3" />
                        <Rectangle x:Name="normal" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}"/>
                        <Rectangle x:Name="hover" Opacity="0" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}"/>
                        <Rectangle x:Name="pressed" Opacity="0"  Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" />
                        <ContentPresenter Margin="4,5,4,4" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed"/>
                        <Rectangle x:Name="Path" Width="10" Height="3" Margin="4,7" Fill="{StaticResource LightForegroundBrush}" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Opacity="0"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  PanButton Style  ********************************* -->
    <Style x:Key="ArrowStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="28"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-3" />
                        <Rectangle x:Name="normal" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" />
                        <Rectangle x:Name="hover" Opacity="0" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}"/>
                        <Rectangle x:Name="pressed" Opacity="0"  Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" />
                        <Path x:Name="Arrow" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="6" Stretch="Uniform" Width="10" 
                    Fill="{StaticResource LightForegroundBrush}" Margin="{TemplateBinding Padding}"/>
                        <ContentPresenter Margin="4,5,4,4" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Opacity="0"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  FitButton Style  ********************************* -->
    <Style x:Key="FitButtonStyle" TargetType="Button" BasedOn="{StaticResource ZoomInButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Path" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-3" />
                        <Rectangle x:Name="normal" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}"/>
                        <Rectangle x:Name="hover" Opacity="0" Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}"/>
                        <Rectangle x:Name="pressed" Opacity="0"  Fill="{StaticResource ButtonHoverBackgroundBrush}" Stroke="{StaticResource ButtonHoverBorderBrush}" />
                        <ContentPresenter Margin="4,5,8,8" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        <Path x:Name="Path" Data="M11.086025,9.3790007 C11.341936,9.3789997 11.597846,9.4766264 11.793098,9.6718788 L14.060756,11.939531 L14.101651,11.898638 C15.15629,10.844002 16,10.000293 16,10.000293 C16,10.000293 16,16 16,16 C16,16 10.00028,16 10.00028,16 C10.00028,16 10.843991,15.156291 11.898628,14.101655 L11.939535,14.060748 L9.6718779,11.793097 C9.2813711,11.402592 9.2813711,10.769457 9.6718779,10.378952 L10.378952,9.6718788 C10.574205,9.4766264 10.830115,9.3789997 11.086025,9.3790007 z M4.9139771,9.3790007 C5.1698871,9.3789997 5.4257975,9.4766264 5.6210499,9.6718788 L6.3281231,10.378952 C6.7186284,10.769457 6.7186284,11.40259 6.3281231,11.793096 L4.060463,14.060753 L4.1013651,14.101655 C5.156002,15.156291 5.999711,16 5.999711,16 C5.999711,16 0,16 0,16 C0,16 0,10.000294 0,10.000294 C0,10.000294 0.84370929,10.844003 1.8983462,11.898638 L1.9392445,11.939537 L4.2069044,9.6718788 C4.4021568,9.4766264 4.6580672,9.3789997 4.9139771,9.3790007 z M0,2.3841858E-07 C9.6857548E-08,1.8505716E-07 5.999711,1.8505716E-07 5.999711,2.3841858E-07 C5.999711,1.8505716E-07 5.156002,0.84370887 4.1013651,1.8983448 L4.060463,1.9392469 L6.3281231,4.2069044 C6.7186284,4.5974097 6.7186284,5.2305436 6.3281231,5.6210485 L5.6210499,6.3281212 C5.2305446,6.718626 4.5974097,6.718626 4.2069044,6.3281212 L1.9392445,4.0604634 L1.8983462,4.1013618 C0.84370941,5.1559973 9.6857548E-08,5.9997063 0,5.9997063 C9.6857548E-08,5.9997063 9.6857548E-08,1.8505716E-07 0,2.3841858E-07 z M10.00028,0 C10.00028,1.5525484E-07 16,1.5525484E-07 16,0 C16,1.5525484E-07 16,5.9997072 16,5.9997072 C16,5.9997072 15.15629,5.1559987 14.101651,4.1013627 L14.060756,4.0604682 L11.793098,6.3281207 C11.402594,6.718626 10.769458,6.718626 10.378952,6.3281207 L9.6718779,5.621048 C9.2813711,5.2305431 9.2813711,4.5974088 9.6718779,4.2069039 L11.939535,1.9392517 L11.898628,1.8983452 C10.84399,0.84370905 10.00028,1.5525484E-07 10.00028,0 z" 
                              HorizontalAlignment="Center" Height="16" Stretch="Fill" Width="16" VerticalAlignment="Center" Margin="3"
                              Fill="{StaticResource LightForegroundBrush}"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Opacity="0"/>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="2" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ********************************* GeoMapNavigationPane Style  ********************************* -->
    <Style TargetType="igExtensions:GeoMapNavigationPane" x:Key="GeoMapNavigationPaneStyle">
        <Setter Property="Background" Value="{StaticResource MovablePanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MovablePanelBorderBrush}"/>
        <Setter Property="MinWidth" Value="57"/>
        <Setter Property="MinHeight" Value="57"/>
        <Setter Property="Effect" Value="{StaticResource NavigationPaneShadow}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igExtensions:GeoMapNavigationPane">
                    <Grid>
                        <Border x:Name="MovablePanel" BorderThickness="2"                              
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"/>
                        <!-- Horizontal -->
                        <Grid x:Name="HorizontalRoot" Margin="{TemplateBinding Padding}"    >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="HorizontalZoomControl" VerticalAlignment="Center" Grid.Column="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="28"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="28"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="HorizontalZoomOutButton" Style="{StaticResource ZoomOutButtonStyle}" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_ZoomOut, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Grid Grid.Column="1" Margin="5,0,5,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" MinWidth="80">
                                    <Rectangle Height="8" Fill="{StaticResource SliderTrackBorderBrush}" Cursor="Arrow"/>
                                    <Slider x:Name="HorizontalZoomRange" Orientation="Horizontal" Cursor="Arrow"
                                        Style="{StaticResource ZoomRangeSliderStyle}"/>
                                </Grid>
                                <Button x:Name="HorizontalZoomInButton" Style="{StaticResource ZoomInButtonStyle}" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_ZoomIn, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3"/>
                            </Grid>
                            <!-- Horizontal -->
                            <Grid x:Name="HorizontalPanControl">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition Height="34"/>
                                    <RowDefinition Height="32"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="34"/>
                                    <ColumnDefinition Width="32"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="HorizontalPanWestButton" Style="{StaticResource ArrowStyle}" Content="W" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanWest, Source={StaticResource MapStrings}}" 
                                        Grid.Column="0" Grid.Row="1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>

                                <Button x:Name="HorizontalPanSouthButton" Style="{StaticResource ArrowStyle}" Content="S" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanSouth, Source={StaticResource MapStrings}}" 
                                        Grid.Column="1" Grid.Row="2" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="HorizontalPanEastButton" Style="{StaticResource ArrowStyle}" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanEast, Source={StaticResource MapStrings}}" 
                                        Grid.Column="2" Grid.Row="1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <!--<Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="6" Stretch="Uniform" Width="10" Fill="{StaticResource ButtonHoverBackgroundBrush}" Margin="{TemplateBinding Padding}"/>-->
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="HorizontalPanNorthButton" Style="{StaticResource ArrowStyle}" Content="N" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanNorth, Source={StaticResource MapStrings}}" 
                                        Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <Button x:Name="HorizontalFitButton" Content="*" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_FitWindow, Source={StaticResource MapStrings}}" Visibility="Visible" Grid.Column="1" Grid.Row="1" Style="{StaticResource FitButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            </Grid>
                        </Grid>
                        <!-- Vertical -->
                        <Grid x:Name="VerticalRoot"  Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="ZoomControl" Grid.Column="0" Width="42" Grid.Row="1" Margin="0,10,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="28"/>
                                    <RowDefinition Height="*" MinHeight="70"/>
                                    <RowDefinition Height="28"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="{StaticResource ZoomSliderTrackRailFillBrush}" Grid.Row="1" Width="6" HorizontalAlignment="Center" />
                                <Slider x:Name="VerticalZoomRange" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.Row="1"  MinHeight="80"
                                        Style="{StaticResource ZoomRangeSliderStyle}"/>
                                <Grid x:Name="ZoomIn">
                                    <Button x:Name="VerticalZoomInButton" Content="+" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_ZoomIn, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource ZoomInButtonStyle}" FontFamily="Segoe UI" FontWeight="Normal"/>
                                </Grid>
                                <Grid x:Name="ZoomOut" Grid.Row="2">
                                    <Button x:Name="VerticalZoomOutButton" Content="-" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_ZoomOut, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource ZoomOutButtonStyle}" RenderTransformOrigin="0.5,0.5" FontFamily="Segoe UI" FontWeight="Normal"/>
                                </Grid>
                            </Grid>
                            <Grid x:Name="PanControl" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition Height="34"/>
                                    <RowDefinition Height="32"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="34"/>
                                    <ColumnDefinition Width="32"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="VerticalPanNorthButton" Content="N" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanNorth, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Style="{StaticResource ArrowStyle}"/>
                                <Button x:Name="VerticalPanWestButton" Content="W" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanWest, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Style="{StaticResource ArrowStyle}" RenderTransformOrigin="0.5,0.5">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="VerticalPanEastButton" Content="E" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanEast, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1" Style="{StaticResource ArrowStyle}" RenderTransformOrigin="0.5,0.5">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="VerticalPanSouthButton" Content="S" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_PanSouth, Source={StaticResource MapStrings}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" Style="{StaticResource ArrowStyle}" RenderTransformOrigin="0.5,0.5">
                                    <Button.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="VerticalFitButton" Content="*" ToolTipService.ToolTip="{Binding GeoMapNavigationPane_FitWindow, Source={StaticResource MapStrings}}" Visibility="Visible" Grid.Column="1" Grid.Row="1" Style="{StaticResource FitButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MapPaneOrientation" Value="Horizontal"/>
    </Style>
    <Style TargetType="igExtensions:GeoMapNavigationPane" BasedOn="{StaticResource GeoMapNavigationPaneStyle}" />

    <!-- ********************************* GeoMapLocationPane Style  ********************************* -->
  <Style TargetType="igExtensions:GeoMapLocationPane" x:Key="GeoMapLocationPaneStyle">
	<Setter Property="Foreground" Value="{StaticResource GeoMapLocationPaneForeground}" />
	<Setter Property="Background" Value="{StaticResource GeoMapLocationPaneBackground}" />
	<Setter Property="BorderBrush" Value="{StaticResource GeoMapLocationPaneBorderBrush}" />
	<Setter Property="BorderThickness" Value="1" />
	<Setter Property="FontSize" Value="14.667" />
	<Setter Property="FontFamily" Value="Segoe UI"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="igExtensions:GeoMapLocationPane">
		  <Grid >
			<VisualStateManager.VisualStateGroups>
			  <VisualStateGroup x:Name="CommonStates">
				<VisualState x:Name="Normal" >
				  <Storyboard>
					<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverBorder"  />
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="MouseOver">
				  <Storyboard>
					<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverBorder"  />
				  </Storyboard>
				</VisualState>
				<VisualState x:Name="Pressed">
				  <!--<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
									</Storyboard>-->
				</VisualState>
				<VisualState x:Name="Disabled">
				  <!--<Storyboard>
										<DoubleAnimation Duration="0" To="0.45" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" />
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
									</Storyboard>-->
				</VisualState>
			  </VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="MovablePanel" VerticalAlignment="Stretch"
					BorderBrush="Transparent"
					Background="Transparent" >
			  <Grid >
				<Border x:Name="HoverBorder" Opacity="0" VerticalAlignment="Stretch"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{StaticResource GeoMapLocationPaneHoverStroke}"
						Background="{StaticResource GeoMapLocationPaneHoverBackground}"/>
				<Grid x:Name="ContentGrid" VerticalAlignment="Stretch" Margin="{TemplateBinding Padding}">
				  <!--<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="auto"/>
				  </Grid.RowDefinitions>-->
				  <!-- Geographic Decimal Degrees  -->
				  <StackPanel Grid.Row="0"  Margin="0,0,0,0" VerticalAlignment="Stretch"
						  Orientation="{Binding MapPaneOrientation, RelativeSource={RelativeSource TemplatedParent}}"
						   Visibility="{Binding MapCoordinateDisplayMode, ConverterParameter=GDD, Converter={StaticResource MapCoordinateConverter}, RelativeSource={RelativeSource TemplatedParent}}">
					<!--UNCOMMENT -->
					<Grid MinWidth="160" Margin="0,0,0,0">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
								Background="{StaticResource GeoMapLocationPaneTitleBackground}"
								BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}" MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_Latitude, Source={StaticResource MapStrings}}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" VerticalAlignment="Center" />
						</Border>
						<TextBlock Text="{Binding MapLocation.Latitude, ConverterParameter=\{0\,10:##0.0000\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Right" VerticalAlignment="Center"/>
						<Ellipse Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="{StaticResource DegreesElementMargin}" />
					  </StackPanel>
					</Grid>
					<Grid MinWidth="140" Margin="0,0,0,0" VerticalAlignment="Stretch">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
					Background="{StaticResource GeoMapLocationPaneTitleBackground}"
					BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}" MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_Longitude, Source={StaticResource MapStrings}}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" VerticalAlignment="Center"  />
						</Border>
						<TextBlock Text="{Binding MapLocation.Longitude, ConverterParameter=\{0\,9:##0.0000\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Right" VerticalAlignment="Center"/>
						<Ellipse Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="{StaticResource DegreesElementMargin}"/>
					  </StackPanel>
					</Grid>
				  </StackPanel>
				  <!-- Geographic Degrees Minutes Seconds -->
				  <StackPanel Grid.Row="0"  Margin="0,0,0,0" VerticalAlignment="Stretch"
						  Orientation="{Binding MapPaneOrientation, RelativeSource={RelativeSource TemplatedParent}}"
						   Visibility="{Binding MapCoordinateDisplayMode, ConverterParameter=GDMS, Converter={StaticResource MapCoordinateConverter}, RelativeSource={RelativeSource TemplatedParent}}">
					<!--UNCOMMENT -->
					<Grid MinWidth="200" Margin="0,0,0,0" VerticalAlignment="Stretch">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
						<Border BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="Stretch"
					  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
					  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}" MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_Latitude, Source={StaticResource MapStrings}}" TextAlignment="Right" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
                        <TextBlock x:Name="jpLatitudeSymbolTB" Text="{Binding MapLatitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}" Margin="4, 0, -3, 0" VerticalAlignment="Center"
                                   Visibility="{Binding Converter={StaticResource ConvertLocalizationLayout}, ConverterParameter='JP'}"/>
                        <TextBlock Text="{Binding MapLatitude.Degrees, ConverterParameter=\{0\,4:#00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Right" VerticalAlignment="Center" />
						<Ellipse Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="{StaticResource DegreesElementMargin}"/>
						<TextBlock Text="{Binding MapLatitude.Minutes, ConverterParameter=\{0\,3:#00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}"  TextAlignment="Right" VerticalAlignment="Center"/>
						<TextBlock Text="'" VerticalAlignment="Center" />
						<TextBlock Text="{Binding MapLatitude.Seconds, ConverterParameter=\{0\,5:#00.00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" TextAlignment="Right" Margin="{StaticResource LocationPaneTextLeftMargin}" VerticalAlignment="Center"/>
						<TextBlock Text="&quot;" VerticalAlignment="Center"/>
                        <TextBlock x:Name="LatitudeSymbolTB" Text="{Binding MapLatitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Visibility="{Binding Converter={StaticResource ConvertLocalizationLayout}, ConverterParameter='EN'}" Margin="4,0" VerticalAlignment="Center" />
                        <!--<TextBlock Text="{Binding MapLatitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneLastTextMargin}" VerticalAlignment="Center" />-->
					  </StackPanel>
					</Grid>
					<Grid MinWidth="200" Margin="0,0,0,0" VerticalAlignment="Stretch">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
						<Border BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="Stretch"
					  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
					  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}" MinWidth="70">
						  <TextBlock TextAlignment="Right" Text="{Binding GeoMapLocationPane_Longitude, Source={StaticResource MapStrings}}" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
                        <TextBlock x:Name="jpLongitudeSymbolTB" Text="{Binding MapLongitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}" Margin="4, 0, 0, 0" VerticalAlignment="Center"
                                   Visibility="{Binding Converter={StaticResource ConvertLocalizationLayout}, ConverterParameter='JP'}"/>
                        <TextBlock Text="{Binding MapLongitude.Degrees, ConverterParameter=\{0\,3:#00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Right" VerticalAlignment="Center" />
						<Ellipse Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="{StaticResource DegreesElementMargin}" />
						<TextBlock Text="{Binding MapLongitude.Minutes, ConverterParameter=\{0\,3:#00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}"  TextAlignment="Right" VerticalAlignment="Center" />
						<TextBlock Text="'" VerticalAlignment="Center"/>
						<TextBlock Text="{Binding MapLongitude.Seconds, ConverterParameter=\{0\,5:#00.00\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Right" VerticalAlignment="Center"  />
						<TextBlock Text="&quot;" VerticalAlignment="Center"/>
                        <TextBlock x:Name="LongitudeSymbolTB" Text="{Binding MapLongitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="{Binding Converter={StaticResource ConvertLocalizationLayout}, ConverterParameter='EN'}" Margin="4,0" VerticalAlignment="Center" />
                        <!--<TextBlock Text="{Binding MapLongitude.Symbol, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneLastTextMargin}"  Width="12" VerticalAlignment="Center" />-->
					  </StackPanel>
					</Grid>
				  </StackPanel>
				  <!-- Map Windows Coordinates  -->
				  <StackPanel Grid.Row="0"
						  Orientation="{Binding MapPaneOrientation, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,0" 
						   Visibility="{Binding MapCoordinateDisplayMode, ConverterParameter=MWC, Converter={StaticResource MapCoordinateConverter}, RelativeSource={RelativeSource TemplatedParent}}">
					<!--UNCOMMENT -->
					<Grid Margin="0,0,0,0">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
						  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}"
	  MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_CoordinateY, Source={StaticResource MapStrings}}" TextAlignment="Right" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
						<TextBlock MinWidth="40" Text="{Binding MapCrosshairPoint.Y, ConverterParameter=\{0\,6:0.0000\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Left" VerticalAlignment="Center"/>
						<Rectangle Visibility="Collapsed" Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Top" Margin="2,7,0,0" />
						<TextBlock Visibility="Collapsed" Text="{Binding GeoMapLocationPane_Y, Source={StaticResource MapStrings}}" Margin="{StaticResource LocationPaneLastTextMargin}" VerticalAlignment="Center" />
					  </StackPanel>
					</Grid>
					<Grid Margin="0,0,0,0">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
						  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}"
	  MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_CoordinateX, Source={StaticResource MapStrings}}" TextAlignment="Right" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
						<TextBlock MinWidth="40" Text="{Binding MapCrosshairPoint.X, ConverterParameter=\{0\,6:0.0000\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="{StaticResource LocationPaneTextLeftMargin}" TextAlignment="Left" VerticalAlignment="Center"/>
						<Rectangle Visibility="Collapsed" Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Top" Margin="2,7,0,0" />
						<TextBlock Visibility="Collapsed" Text="{Binding GeoMapLocationPane_X, Source={StaticResource MapStrings}}" Margin="{StaticResource LocationPaneLastTextMargin}" VerticalAlignment="Center"  />
					  </StackPanel>
					</Grid>
				  </StackPanel>
				  <!-- Map Mouse Position -->
				  <StackPanel Grid.Row="0" Margin="0,0,0,0" 
						  Orientation="{Binding MapPaneOrientation, RelativeSource={RelativeSource TemplatedParent}}" 
						   Visibility="{Binding MapCoordinateDisplayMode, ConverterParameter=MMC, Converter={StaticResource MapCoordinateConverter}, RelativeSource={RelativeSource TemplatedParent}}">
					<Grid Margin="0,0,0,0" >
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal">
						<Border BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
						  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}"
                                MinWidth="70">
						  <TextBlock Text="{Binding GeoMapLocationPane_PositionY, Source={StaticResource MapStrings}}" TextAlignment="Right" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
						<TextBlock MinWidth="40" Text="{Binding MapPosition.Y, ConverterParameter=\{0\,8:##0\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,0,3,0" TextAlignment="Left" VerticalAlignment="Center"/>
						<Rectangle Visibility="Collapsed" Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Top" Margin="2,7,0,0" />
						<TextBlock Visibility="Collapsed" Text="{Binding GeoMapLocationPane_Y, Source={StaticResource MapStrings}}" Margin="{StaticResource LocationPaneLastTextMargin}" VerticalAlignment="Center" />
					  </StackPanel>
					</Grid>
					<Grid Margin="0,0,0,0">
					  <Rectangle Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
					  <StackPanel Orientation="Horizontal">
						<Border BorderThickness="{TemplateBinding BorderThickness}" MinWidth="70"
						  Background="{StaticResource GeoMapLocationPaneTitleBackground}"
						  BorderBrush="{StaticResource GeoMapLocationPaneTitleBorderBrush}"  >
						  <TextBlock Text="{Binding GeoMapLocationPane_PositionX, Source={StaticResource MapStrings}}" TextAlignment="Right" Foreground="{StaticResource GeoMapLocationPaneTitleForeground}" Margin="{StaticResource LatLongTextMargin}" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Border>
						<TextBlock MinWidth="40" Text="{Binding MapPosition.X, ConverterParameter=\{0\,8:##0\}, Converter={StaticResource StringFormatConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,0,3,0" TextAlignment="Left" VerticalAlignment="Center"/>
						<Rectangle Visibility="Collapsed" Width="4" Height="4" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Top" Margin="2,7,0,0" />
						<TextBlock Visibility="Collapsed" Text="{Binding GeoMapLocationPane_X, Source={StaticResource MapStrings}}" Margin="{StaticResource LocationPaneLastTextMargin}" VerticalAlignment="Center"  />
					  </StackPanel>
					</Grid>
				  </StackPanel>
				</Grid>
			  </Grid>
			</Border>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="igExtensions:GeoMapLocationPane" BasedOn="{StaticResource GeoMapLocationPaneStyle}"/>

</ResourceDictionary>
