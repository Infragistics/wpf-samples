<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DensityMaximumColor" xml:space="preserve">
    <value>最大密度の色:</value>
    <comment>HD Series</comment>
  </data>
  <data name="DensityMaximumColorToolTip" xml:space="preserve">
    <value>スケールの最大の端に使用する色を変更します。</value>
  </data>
  <data name="DensityMinimumColor" xml:space="preserve">
    <value>最小密度の色:</value>
  </data>
  <data name="DensityMinimumColorToolTip" xml:space="preserve">
    <value>スケールの最小の端に使用する色を変更します。</value>
  </data>
  <data name="DensityPointExtent" xml:space="preserve">
    <value>密度のポイント範囲</value>
  </data>
  <data name="DensityPointExtentToolTip" xml:space="preserve">
    <value>描画される四角データ ポイントのピクセル範囲を変更します。</value>
  </data>
  <data name="DensityValueScale" xml:space="preserve">
    <value>密度の値スケール:</value>
  </data>
  <data name="DensityValueScaleToolTip" xml:space="preserve">
    <value>密度の最大色および最小色にマップされる値を変更します。</value>
  </data>
  <data name="LayerProperties" xml:space="preserve">
    <value>レイヤー プロパティ</value>
  </data>
  <data name="MarkerFillScaleColors" xml:space="preserve">
    <value>マーカーの塗りつぶしスケール色:</value>
    <comment>Marker Series</comment>
  </data>
  <data name="MarkerFillScaleColorsToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerOutlineColor" xml:space="preserve">
    <value>マーカー アウトラインの色:</value>
  </data>
  <data name="MarkerOutlineColorToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerOutOfScaleColor" xml:space="preserve">
    <value>マーカー スケール以外の色:</value>
  </data>
  <data name="MarkerOutOfScaleColorToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerSizeScale" xml:space="preserve">
    <value>マーカー サイズ スケール:</value>
  </data>
  <data name="MarkerSizeScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerValueScale" xml:space="preserve">
    <value>マーカー値スケール:</value>
  </data>
  <data name="MarkerValueScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Opacity" xml:space="preserve">
    <value>不透明度:</value>
  </data>
  <data name="OpacityToolTip" xml:space="preserve">
    <value>マップ レイヤーを描画する際の不透明度を変更します。不透明を小さい値に設定すると、現在のマップ レイヤーが半透明になり、下のマップ レイヤーが表示されます。</value>
  </data>
  <data name="OutlineBrush" xml:space="preserve">
    <value>アウトライン ブラシ/色:</value>
  </data>
  <data name="OutlineThickness" xml:space="preserve">
    <value>アウトライン幅</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>解像度:</value>
  </data>
  <data name="ResolutionToolTip" xml:space="preserve">
    <value>マップ レイヤーの描画解決を変更します。高い値に設定すると、パフォーマンスを向上しますが、図形要素の質が低くなります。このようなわけで、忠実度が受け入れられなくなるまで値を大きくする可能性があります。</value>
  </data>
  <data name="ScatterColorScale" xml:space="preserve">
    <value>散布色スケール:</value>
    <comment>Scatter Series</comment>
  </data>
  <data name="ScatterColorScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ScatterValueScale" xml:space="preserve">
    <value>散布値スケール:</value>
  </data>
  <data name="ScatterValueScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ShapeDetailResolution" xml:space="preserve">
    <value>図形詳細の解像度:</value>
    <comment>Shape Series</comment>
  </data>
  <data name="ShapeDetailResolutionToolTip" xml:space="preserve">
    <value>マップ レイヤーの描画解決を変更します。高い値に設定すると、パフォーマンスを向上しますが、図形要素の質が低くなります。このようなわけで、忠実度が受け入れられなくなるまで値を大きくする可能性があります。</value>
  </data>
  <data name="ShapeFillColor" xml:space="preserve">
    <value>図形の塗りつぶし色:</value>
  </data>
  <data name="ShapeFillColorToolTip" xml:space="preserve">
    <value>図形要素の塗りつぶしを描画する色を変更します。</value>
  </data>
  <data name="ShapeOutlineColor" xml:space="preserve">
    <value>図形アウトラインの色:</value>
  </data>
  <data name="ShapeOutlineColorToolTip" xml:space="preserve">
    <value>図形要素のアウトラインを描画する色を変更します。</value>
  </data>
  <data name="ShapeOutlineThickness" xml:space="preserve">
    <value>図形のアウトラインの幅:</value>
  </data>
  <data name="ShapeOutlineThicknessToolTip" xml:space="preserve">
    <value>図形要素のアウトラインを描画する幅を変更します。</value>
  </data>
  <data name="ShapeProperties" xml:space="preserve">
    <value>図形プロパティ</value>
  </data>
  <data name="ShapeSizeResolution" xml:space="preserve">
    <value>図形サイズの解像度:</value>
  </data>
  <data name="ShapeSizeResolutionToolTip" xml:space="preserve">
    <value>マップ レイヤーの図形をフィルター アウトする解像度を変更します。たとえば、ShapeSizeResolution を 3 に設定すると、3 x 3 ピクセルより小さい境界四角形を持つ要素はフィルター アウトされます。</value>
  </data>
  <data name="Visibility" xml:space="preserve">
    <value>可視性:</value>
  </data>
  <data name="VisibilityToolTip" xml:space="preserve">
    <value>マップ レイヤーの表示状態を変更します。</value>
  </data>
  <data name="ImagerySource" xml:space="preserve">
    <value>画像ソース:</value>
  </data>
</root>