<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DensityMaximumColor" xml:space="preserve">
    <value>Density Maximum Color:</value>
    <comment>HD Series</comment>
  </data>
  <data name="DensityMaximumColorToolTip" xml:space="preserve">
    <value>Changes the color used for the maximum end of the scale.</value>
  </data>
  <data name="DensityMinimumColor" xml:space="preserve">
    <value>Density Minimum Color:</value>
  </data>
  <data name="DensityMinimumColorToolTip" xml:space="preserve">
    <value>Changes the color used for the minimum end of the scale.</value>
  </data>
  <data name="DensityPointExtent" xml:space="preserve">
    <value>Density Point Extent:</value>
  </data>
  <data name="DensityPointExtentToolTip" xml:space="preserve">
    <value>Changes the pixel extent of the square data points that are rendered.</value>
  </data>
  <data name="DensityValueScale" xml:space="preserve">
    <value>Density Value Scale:</value>
  </data>
  <data name="DensityValueScaleToolTip" xml:space="preserve">
    <value>Changes values that are mapped to minimum and maximum density colors</value>
  </data>
  <data name="LayerProperties" xml:space="preserve">
    <value>Layer Properties</value>
  </data>
  <data name="MarkerFillScaleColors" xml:space="preserve">
    <value>Marker Fill Scale Colors:</value>
    <comment>Marker Series</comment>
  </data>
  <data name="MarkerFillScaleColorsToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerOutlineColor" xml:space="preserve">
    <value>Marker Outline Color:</value>
  </data>
  <data name="MarkerOutlineColorToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerOutOfScaleColor" xml:space="preserve">
    <value>Marker Out-of-Scale Color:</value>
  </data>
  <data name="MarkerOutOfScaleColorToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerSizeScale" xml:space="preserve">
    <value>Marker Size Scale:</value>
  </data>
  <data name="MarkerSizeScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="MarkerValueScale" xml:space="preserve">
    <value>Marker Value Scale:</value>
  </data>
  <data name="MarkerValueScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Opacity" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="OpacityToolTip" xml:space="preserve">
    <value>Changes opacity used for rendering a map layer. Setting opacity to a lower value will make current map layer semi-transparent and reveal a map layer behind/below it.</value>
  </data>
  <data name="OutlineBrush" xml:space="preserve">
    <value>Outline Brush/Color:</value>
  </data>
  <data name="OutlineThickness" xml:space="preserve">
    <value>Outline Thickness</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Resolution:</value>
  </data>
  <data name="ResolutionToolTip" xml:space="preserve">
    <value>Changes rendering resoltion of a map layer. A higher value can help with performance, but it will lower the graphical fidelity of the shape elements. As such, it can be increased up until the fidelity is unacceptable.</value>
  </data>
  <data name="ScatterColorScale" xml:space="preserve">
    <value>Scatter Color Scale:</value>
    <comment>Scatter Series</comment>
  </data>
  <data name="ScatterColorScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ScatterValueScale" xml:space="preserve">
    <value>Scatter Value Scale:</value>
  </data>
  <data name="ScatterValueScaleToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ShapeDetailResolution" xml:space="preserve">
    <value>Shape Detail Resolution:</value>
    <comment>Shape Series</comment>
  </data>
  <data name="ShapeDetailResolutionToolTip" xml:space="preserve">
    <value>Changes rendering resoltion of a map layer. A higher value can help with performance, but it will lower the graphical fidelity of the shape elements. As such, it can be increased up until the fidelity is unacceptable.</value>
  </data>
  <data name="ShapeFillColor" xml:space="preserve">
    <value>Shape Fill Color:</value>
  </data>
  <data name="ShapeFillColorToolTip" xml:space="preserve">
    <value>Changes color used for rendering fill of shape elements.</value>
  </data>
  <data name="ShapeSizeResolution" xml:space="preserve">
    <value>Shape Size Resolution:</value>
  </data>
  <data name="ShapeSizeResolutionToolTip" xml:space="preserve">
    <value>Changes resolution at which to filter out shapes in the map layer. For example, if the Shape Size Resolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.</value>
  </data>
  <data name="ShapeProperties" xml:space="preserve">
    <value>Shape Properties</value>
  </data>
  <data name="ShapeOutlineColor" xml:space="preserve">
    <value>Shape Outline  Color:</value>
  </data>
  <data name="ShapeOutlineColorToolTip" xml:space="preserve">
    <value>Changes color used for rendering outline of shape elements</value>
  </data>
  <data name="ShapeOutlineThickness" xml:space="preserve">
    <value>Shape Outline Thickness:</value>
  </data>
  <data name="ShapeOutlineThicknessToolTip" xml:space="preserve">
    <value>Changes thickness used for rendering outline of shape elements</value>
  </data>
  <data name="Visibility" xml:space="preserve">
    <value>Visibility:</value>
  </data>
  <data name="VisibilityToolTip" xml:space="preserve">
    <value>Changes visibility of a map layer</value>
  </data>
  <data name="ImagerySource" xml:space="preserve">
    <value>Imagery Source:</value>
    <comment> </comment>
  </data>
</root>