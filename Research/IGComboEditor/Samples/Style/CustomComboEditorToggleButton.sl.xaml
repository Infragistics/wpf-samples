<framework:SampleContainer x:Class="IGComboEditor.Samples.Style.CustomComboEditorToggleButton"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="DisplayLargeNumberItems"
      xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Framework"
      xmlns:ig="http://schemas.infragistics.com/xaml"
      xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
      xmlns:res="clr-namespace:IGComboEditor.Resources"
      xmlns:data="clr-namespace:IGComboEditor.Samples.Data">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGComboEditor;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <res:ComboEditorStrings x:Key="ComboStrings" />

            <LinearGradientBrush x:Key="SilverlightDarkBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="#FFA3AEB9"/>
                <GradientStop Offset="0.375" Color="#FF8399A9"/>
                <GradientStop Offset="0.375" Color="#FF718597"/>
                <GradientStop Offset="1" Color="#FF617584"/>
            </LinearGradientBrush>
            
            <Style x:Name="toggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="#FF333333"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.15"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
                                                    BeginTime="00:00:00"
                                                    Duration="00:00:00.001"
                                                    Storyboard.TargetName="Pressed1"
                                                    Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible

                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked"/>
                                        <VisualState x:Name="Unchecked"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused"/>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Ellipse Margin="0,0,0,-1" Fill="#3F000000" Stretch="Uniform"/>
                                    <Ellipse Stretch="Uniform">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="1" Color="Black"/>
                                                <GradientStop Color="#FF0046A4"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#FFA1E3FF"/>
                                                <GradientStop Offset="1" Color="#FF0A2850"/>
                                                <GradientStop Offset="0.5" Color="#FF3287AA"/>
                                                <GradientStop Offset="0.501" Color="#FF1C4D8E"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse Margin="1" Stretch="Uniform">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#7FFFFFFF"/>
                                                <GradientStop Offset="1" Color="Transparent"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Ellipse
                                        x:Name="Hover"
                                        Margin="1"
                                        Opacity="0"
                                        Stretch="Uniform">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0" Color="#0000FFDC"/>
                                                <GradientStop Offset="1" Color="#A500FFDC"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse
                                        x:Name="Pressed1"
                                        Margin="1"
                                        Stretch="Uniform"
                                        Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="1"/>
                                                <GradientStop Color="#A5000000"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboStyle" TargetType="ig:XamComboEditor">
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="MinHeight" Value="22"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="TabNavigation" Value="Once"/>
                <Setter Property="Background" Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush" Value="{StaticResource SilverlightDarkBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ig:XamComboEditor">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ModeStates">
                                        <VisualState x:Name="Selectable"/>
                                        <VisualState x:Name="Editable">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible

                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectConentPanel" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed

                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible

                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="toggleButton" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WaterMarkStates">
                                        <VisualState x:Name="WaterMarkHidden"/>
                                        <VisualState x:Name="WaterMarkVisible">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DropDownStates">
                                        <VisualState x:Name="Closed"/>
                                        <VisualState x:Name="Open">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="true"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle
                                    x:Name="DisabledVisualElement"
                                    Fill="White"
                                    IsHitTestVisible="false"
                                    Opacity="0"
                                    RadiusX="1"
                                    RadiusY="1"/>
                                <Rectangle
                                    x:Name="FocusVisualElement"
                                    Margin="1"
                                    IsHitTestVisible="false"
                                    Opacity="0"
                                    RadiusX="1"
                                    RadiusY="1"
                                    Stroke="#FF6DBDD1"
                                    StrokeThickness="1"/>
                                <Border x:Name="ContentPresenterBorder">
                                    <Grid x:Name="gridLayout" ShowGridLines="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Popup
                                            x:Name="Popup"
                                            Grid.ColumnSpan="2"
                                            VerticalAlignment="Bottom"
                                            IsOpen="False">
											<Grid>
												<Border
													x:Name="RootPopupElement"
													Height="Auto"
													MaxHeight="{TemplateBinding MaxDropDownHeight}"
													HorizontalAlignment="Stretch"
													BorderBrush="{TemplateBinding BorderBrush}"
													BorderThickness="{TemplateBinding BorderThickness}"
													CornerRadius="3">
													<Border.Background>
														<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
															<GradientStop Offset="0" Color="#FFFFFFFF"/>
															<GradientStop Offset="1" Color="#FFFEFEFE"/>
														</LinearGradientBrush>
													</Border.Background>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="*"/>
															<ColumnDefinition Width="Auto"/>
														</Grid.ColumnDefinitions>
														<Grid.RowDefinitions>
															<RowDefinition Height="*"/>
															<RowDefinition Height="Auto"/>
														</Grid.RowDefinitions>
														<igPrim:ItemsPanel x:Name="ItemsPanel"/>
														<ScrollBar
															x:Name="VerticalScrollBar"
															Width="20"
															Grid.Column="1"
															Grid.Row="0"/>
														<ScrollBar
															x:Name="HorizontalScrollBar"
															Height="20"
															Grid.Column="0"
															Grid.Row="1"/>
													</Grid>
												</Border>
												<igPrim:PopupResizer x:Name="Resizer" Popup="{Binding ElementName=Popup}" Visibility="Collapsed" Grid.Row="2" Grid.ColumnSpan="2" ResizeElement="{Binding ElementName=RootPopupElement}">
													<igPrim:PopupResizer.RenderTransform>
														<TransformGroup>
															<ScaleTransform />
															<SkewTransform />
															<RotateTransform />
															<TranslateTransform />
														</TransformGroup>
													</igPrim:PopupResizer.RenderTransform>
												</igPrim:PopupResizer>
											</Grid>
                                        </Popup>
                                        <Border
                                            x:Name="borderEditMode"
                                            Grid.ColumnSpan="2"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="2"
                                            Visibility="Collapsed"/>
                                        <ToggleButton
                                            x:Name="toggleButton"
                                            Width="21"
                                            Height="21"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            HorizontalAlignment="Stretch"
                                            Margin="0,0,2,0"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Right"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsTabStop="False"
                                            Style="{StaticResource toggleButtonStyle}">
                                            <Grid Margin="0,0,5,0" VerticalAlignment="Center">
                                                <Path
                                                    x:Name="BtnArrowBackground"
                                                    Width="7"
                                                    Height="4"
                                                    Margin="0,2,0,0"
                                                    Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 5,3 5,3 5,3 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
                                                    Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush x:Name="BtnArrowColorBackground" Color="#FF333333"/>
                                                    </Path.Fill>
                                                </Path>
                                                <Path
                                                    x:Name="BtnArrowForeground"
                                                    Width="7"
                                                    Height="4"
                                                    Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 5,3 5,3 5,3 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
                                                    Stretch="Fill">
                                                    <Path.Fill>
                                                        <SolidColorBrush x:Name="BtnArrowColorForeground" Color="#FFFFFFFF"/>
                                                    </Path.Fill>
                                                </Path>
                                            </Grid>
                                        </ToggleButton>
                                        <TextBlock
                                            x:Name="WaterMark"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            IsHitTestVisible="False"
                                            Padding="{TemplateBinding Padding}"
                                            Text="{TemplateBinding EmptyText}"
                                            Visibility="Collapsed"/>
                                        <igPrim:SpecializedTextBox
                                            x:Name="TextBoxPresenter"
                                            HorizontalAlignment="Stretch"
                                            Margin="1,1,0,1"
                                            VerticalAlignment="Stretch"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Padding="{TemplateBinding Padding}"
                                            Visibility="Collapsed"/>
                                        <StackPanel
                                            x:Name="MultiSelectConentPanel"
                                            HorizontalAlignment="Stretch"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Orientation="Horizontal"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </framework:SampleContainer.Resources>

    <framework:SampleContainer.DataContext>
        <data:CustomersDataSource />
    </framework:SampleContainer.DataContext>
    
    <Grid x:Name="LayoutRoot">
        <!--#BEGIN SNIPPET#-->
        <ig:XamComboEditor x:Name="ComboEditor" 
                           ItemsSource="{Binding Path=Customers}"
                           DisplayMemberPath="Company"
                           Height="25" Width="300" 
                           Style="{StaticResource ComboStyle}"/>
        <!--#END SNIPPET#-->
    </Grid>
</framework:SampleContainer>
