<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    mc:Ignorable="d">    

        <!--  *********************************  RESOURCES  *********************************  -->
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="RoyalLight.Theme.Colors.xaml" />
        </ResourceDictionary.MergedDictionaries>

        <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
        <System:Double x:Key="DefaultMinHeight">24</System:Double>
        <System:Double x:Key="ToggleMinWidth">21</System:Double>
        <System:Double x:Key="DefaultSize">24</System:Double>
        <System:Double x:Key="DefaultStrokeThickness">1</System:Double>
        <Thickness x:Key="DefaultBorderThickness">1 1 1 1</Thickness>
        <Thickness x:Key="DefaultPadding">6 2 6 2</Thickness>
        <Thickness x:Key="ButtonPadding">6 0 6 2</Thickness>
        <Thickness x:Key="GridCellPadding">6 5 6 5</Thickness>
        <Thickness x:Key="GridHeaderPadding">6 6 6 10</Thickness>
        <Thickness x:Key="TextBoxPadding">6 2 6 2</Thickness>
        <Thickness x:Key="ComboBoxPadding">6 2 24 2</Thickness>
        <Thickness x:Key="ContentPadding">6 6 6 6</Thickness>
        <Thickness x:Key="ToolTipPadding">8 6 8 8</Thickness>
        <Thickness x:Key="ToggleButtonPadding">6 0 6 2</Thickness>
        <CornerRadius x:Key="CornerRadius">1</CornerRadius>
        <System:Double x:Key="RadiusXY">1</System:Double>
        <CornerRadius x:Key="DropDownCornerRadius">0 1 1 0</CornerRadius>

        <!--  Fonts  -->
        <FontFamily x:Key="FontFamily">/Infragistics.Samples.Shared;component/fonts/#Segoe UI</FontFamily>
        <System:Double x:Key="FontSize">12</System:Double>
        <System:Double x:Key="FontSize14">14</System:Double>
        <FontWeight x:Key="FontNormal">Normal</FontWeight>
        <FontWeight x:Key="FontBold">Bold</FontWeight>
        <FontWeight x:Key="FontSemiBold">SemiBold</FontWeight>
        <FontWeight x:Key="FontLight">Light</FontWeight>

        <!--  *********************************  COMMON GLYPHS  *********************************  -->
        <!--  Combo Arrow  -->
        <!--  Width="7" Height="4"  -->
        <Geometry x:Key="DownArrow">M 0 0 L 3.5 4 L 7 0 L 0 0 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0 7 L 4 3.5 L 0 0 L 0 7 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0 4 L 3.5 0 L 7 4 L 0 4 Z</Geometry>

        <!--  Scrollbar Arrow  -->
        <!--  Width="8" Height="5"  -->
        <Geometry x:Key="ScrollbarArrow">M 5 5 L 1 0 L -3 5 L 5 5 Z</Geometry>

        <!--  CheckBox Check  -->
        <!--  Height="8" Width="9"  -->
        <Geometry x:Key="CheckBoxCheck">M 1.3394 3.4286 L 0 4.8932 L 3.75 8 L 9 1.165 L 7.5938 0 L 3.6831 5.3703 L 1.3394 3.4286 Z</Geometry>

        <!--  Rating Star  -->
        <Geometry x:Key="StarShape">M 11.5 0 L 14.708 7.6804 L 22.8975 8.4032 L 16.6909 13.8728 L 18.5439 22 L 11.5 17.7 L 4.4561 22 L 6.3091 13.8728 L 0.1025 8.4032 L 8.292 7.6804 L 11.5 0 Z</Geometry>

        <!--  ClearFilter x icon  -->
        <!--  Height="8" Width="8"  -->
        <Geometry x:Key="ClearFilterIcon">M 0 1.1429 L 2.8572 4 L 0 6.8571 L 1.1429 8 L 4 5.1429 L 6.8571 8 L 8 6.8571 L 5.1428 4 L 8 1.1429 L 6.8571 0 L 4 2.8571 L 1.1429 0 L 0 1.1429 Z</Geometry>

        <!--  VShaped Arrow   -->
        <!--  Height="6" Width="10"  -->
        <Geometry x:Key="VArrowDown">M 8.3882 0 L 10 1.4175 L 5 6 L 0 1.4175 L 1.489 0.0675 L 4.9755 3.2177 L 8.3882 0 Z</Geometry>
        <Geometry x:Key="VArrowTop">M 1.6118 6 L 0 4.5825 L 5 0 L 10 4.5825 L 8.511 5.9325 L 5.0245 2.7823 L 1.6118 6 Z</Geometry>
        <Geometry x:Key="VArrowRight">M 0 8.3882 L 1.4175 10 L 6 5 L 1.4175 0 L 0.0675 1.489 L 3.2177 4.9755 L 0 8.3882 Z</Geometry>
        <Geometry x:Key="VArrowLeft">M 6 8.3882 L 4.5825 10 L 0 5 L 4.5825 0 L 5.9325 1.489 L 2.7823 4.9755 L 6 8.3882 Z</Geometry>

        <!--  Plus/Minus Icons  -->
        <Geometry x:Key="PlusIcon">M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z</Geometry>
        <Geometry x:Key="MinusIcon">M0,0 L8,0 L8,2 L0,2 z</Geometry>

        <!--  Window related icons Maximize, Minimize...  -->
        <Geometry x:Key="CloseIcon">M 0 1.2857 L 3.5715 4.5 L 0 7.7143 L 1.4287 9 L 5 5.7857 L 8.5713 9 L 10 7.7143 L 6.4285 4.5 L 10 1.2857 L 8.5713 0 L 5 3.2143 L 1.4287 0 L 0 1.2857 Z</Geometry>
        <Geometry x:Key="MinimizeIcon">M 2047 307 L 2056 307 L 2056 310 L 2047 310 L 2047 307 Z</Geometry>
        <Geometry x:Key="MaximizeIcon">M 2082 344 L 2089 344 L 2089 349 L 2082 349 L 2082 344 ZM 2081 341 L 2081 350 L 2090 350 L 2090 341 L 2081 341 Z</Geometry>
        <Geometry x:Key="RestoreDownIcon">M 2086 425 L 2086 426 L 2086 428 L 2081 428 L 2081 424 L 2086 424 L 2086 425 ZM 2084 422 L 2084 421 L 2089 421 L 2089 425 L 2087 425 L 2087 422 L 2084 422 ZM 2083 419 L 2083 422 L 2080 422 L 2080 429 L 2087 429 L 2087 426 L 2090 426 L 2090 419 L 2083 419 Z</Geometry>

        <!--  *********************************  BRUSHES  *********************************  -->
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="HoverForegroundBrush" Color="{StaticResource Color_014}" />
        <SolidColorBrush x:Key="ActiveForegroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_046}" />
        <SolidColorBrush x:Key="ValidationErrorElement" igPrim:XamlHelper.IsExcludedFromWash="True" Color="{StaticResource Color_019}" />

        <!--  Scrollbar Brushes  -->
        <SolidColorBrush x:Key="HScrollbarThumbBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="VScrollbarThumbBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="VScrollbarThumbHoverBackgroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="HScrollbarThumbHoverBackgroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="VScrollbarThumbPressedBackgroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="HScrollbarThumbPressedBackgroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonArrowBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonArrowPressedBackgroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonArrowHoverBackgroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonPressedBackgroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="ScrollbarPageButtonHoverBackgroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="ScrollbarBackgroundBrush" Color="{StaticResource Color_046}" />

        <!--  ComboBox Brushes  -->
        <SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ComboBoxReadOnlyBorderBrush" Color="{StaticResource Color_010}" />
        <SolidColorBrush x:Key="ComboBoxReadOnlyBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ComboBoxHoverBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ComboBoxHoverBorderBrush" Color="{StaticResource Color_005}" />
        <SolidColorBrush x:Key="ComboBoxActiveBorderBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ComboBoxActiveBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ComboBoxFocusedBorderBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{StaticResource Color_007}" />
        <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_012}" />


        <!--  TextBox Brushes  -->
        <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="TextBoxHoverBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource Color_005}" />
        <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="TextBoxReadOnlyBorderBrush" Color="{StaticResource Color_010}" />
        <SolidColorBrush x:Key="CaretForegroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="CaretActiveForegroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="SelectionBrush" Color="{StaticResource Color_011}" />


        <!--  Button Brushes  -->
        <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_003}" />
        <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="ButtonFocusedBackgroundBrush" Color="{StaticResource Color_003}" />


        <!--  ComboBoxItem Brushes  -->
        <SolidColorBrush x:Key="ComboBoxItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ComboBoxItemFocusedBorderBrush" Color="{StaticResource Color_013}" />


        <!--  ComboBoxButton Brushes  -->
        <SolidColorBrush x:Key="ComboBoxToggleButtonBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonHoverBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonHoverBorderBrush" Color="{StaticResource Color_005}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonPressedBorderBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonPressedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonFocusedBorderBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonDisabledBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ComboBoxToggleButtonDisabledBorderBrush" Color="{StaticResource Color_010}" />


        <!--  ListBox Brushes  -->
        <SolidColorBrush x:Key="ListBoxBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ListBoxBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ListBoxItemBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="ListBoxItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="ListBoxItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="ListBoxItemFocusedBorderBrush" Color="{StaticResource Color_013}" />


        <!--  CheckBox Brushes  -->
        <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="CheckBoxHoverBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="CheckBoxCheckedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="CheckBoxFocusedBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBackgroundBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="CheckBoxInvalidFocusedBackgroundBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource Color_005}" />
        <SolidColorBrush x:Key="CheckBoxCheckedBorderBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="CheckBoxFocusedBorderBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBorderBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="CheckBoxInvalidFocusedBorderBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="CheckBoxIndeterminateCheckBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="CheckBoxCheckBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="CheckBoxCheckHoverBackgroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="CheckBoxCheckFocusedBackgroundBrush" Color="{StaticResource Color_001}" />

        <!--  RadioButton Brushes  -->
        <SolidColorBrush x:Key="RadioButtonBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="RadioButtonHoverBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="RadioButtonCheckedBackgroundBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="RadioButtonFocusedBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="RadioButtonInvalidUnfocusedBackgroundBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="RadioButtonInvalidFocusedBackgroundBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="RadioButtonBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="RadioButtonHoverBorderBrush" Color="{StaticResource Color_005}" />
        <SolidColorBrush x:Key="RadioButtonCheckedBorderBrush" Color="{StaticResource Color_011}" />
        <SolidColorBrush x:Key="RadioButtonFocusedBorderBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="RadioButtonInvalidUnfocusedBorderBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="RadioButtonInvalidFocusedBorderBrush" Color="{StaticResource Color_019}" />
        <SolidColorBrush x:Key="RadioButtonCheckBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="RadioButtonCheckFocusedBackgroundBrush" Color="{StaticResource Color_001}" />

        <!--  Visual Glyphs brushes  -->
        <SolidColorBrush x:Key="GlyphBackgroundBrush" Color="{StaticResource Color_004}" />
        <SolidColorBrush x:Key="GlyphHoverBackgroundBrush" Color="{StaticResource Color_006}" />
        <SolidColorBrush x:Key="GlyphPressedBackgroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="GlyphActiveBackgroundBrush" Color="{StaticResource Color_002}" />
        <SolidColorBrush x:Key="GlyphDisabledBackgroundBrush" Color="{StaticResource Color_045}" />
        <SolidColorBrush x:Key="GlyphDeleteIconBackgroundBrush" Color="{StaticResource Color_019}" />

        <!--  ValidationToolTip Brushes  -->
        <SolidColorBrush x:Key="ValidationToolTipTemplateShadowBrush" Color="{StaticResource Color_046}" />

        <!--  Tooltip Brushes  -->
        <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="{StaticResource Color_040}" />
        <SolidColorBrush x:Key="TooltipBorderBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="TooltipShadowBrush" Color="{StaticResource Color_056}" />

        <!--  Hyperlink Brushes  -->
        <SolidColorBrush x:Key="HyperlinkForegroundBrush" Color="{StaticResource Color_013}" />
        <SolidColorBrush x:Key="HyperlinkHoverForegroundBrush" Color="{StaticResource Color_0013}" />
        <SolidColorBrush x:Key="HyperlinkDisabledForegroundBrush" Color="{StaticResource Color_052}" />


        <!--  *********************************  ToolTip Style  *********************************  -->
        <Style x:Key="ToolTipStyle" TargetType="ContentControl">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
            <Setter Property="Padding" Value="{StaticResource ToolTipPadding}" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <Grid>
                            <Grid Margin="5">
                                <Border Margin="-4"
                                        Background="{StaticResource TooltipShadowBrush}"
                                        CornerRadius="5"
                                        Opacity="0.1" />
                                <Border Margin="-3"
                                        Background="{StaticResource TooltipShadowBrush}"
                                        CornerRadius="4"
                                        Opacity="0.2" />
                                <Border Margin="-2"
                                        Background="{StaticResource TooltipShadowBrush}"
                                        CornerRadius="3"
                                        Opacity="0.3" />
                                <Border Margin="-1"
                                        Background="{StaticResource TooltipShadowBrush}"
                                        CornerRadius="2"
                                        Opacity="0.4" />
                                <Rectangle Fill="{TemplateBinding Background}"
                                           Stroke="{TemplateBinding BorderBrush}"
                                           StrokeThickness="{TemplateBinding BorderThickness}" />
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />

        <!--  *********************************  ValidationToolTip Template  *********************************  -->
        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root"
                  Margin="5,0"
                  Opacity="0"
                  RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25" />
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" />
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" />
                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border Margin="4,4,-4,-4"
                        Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                        Opacity="0.02" />
                <Border Margin="3,3,-3,-3"
                        Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                        Opacity="0.08" />
                <Border Margin="2,2,-2,-2"
                        Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                        Opacity="0.15" />
                <Border Margin="1,1,-1,-1"
                        Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                        Opacity="0.21" />
                <Border Background="{StaticResource ValidationErrorElement}" />
                <Border>
                    <TextBlock MaxWidth="250"
                               Margin="8,4,8,4"
                               Foreground="{StaticResource ActiveForegroundBrush}"
                               Text="{Binding (Validation.Errors)[0].ErrorContent}"
                               TextWrapping="Wrap"
                               UseLayoutRounding="false" />
                </Border>
            </Grid>
        </ControlTemplate>

        <!--  *********************************  ComboBoxToggleButton Style   *********************************  -->
        <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="MainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="22" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Bd"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource TransparentBrush}" />
                            <Rectangle x:Name="normal"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource ComboBoxToggleButtonBackgroundBrush}"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ComboBoxToggleButtonBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="hover"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ComboBoxToggleButtonHoverBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="focused"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ComboBoxToggleButtonFocusedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="pressed"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}"
                                       IsHitTestVisible="False"
                                       Opacity="0"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ComboBoxToggleButtonPressedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Grid Grid.Column="1" HorizontalAlignment="Center">
                                <Path x:Name="Arrow"
                                      Width="7"
                                      Height="4"
                                      Data="{StaticResource DownArrow}"
                                      Fill="{StaticResource GlyphBackgroundBrush}"
                                      Stretch="Fill" />
                                <Path x:Name="ArrowSelected"
                                      Width="7"
                                      Height="4"
                                      Data="{StaticResource DownArrow}"
                                      Fill="{StaticResource GlyphActiveBackgroundBrush}"
                                      Stretch="Fill"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                <Setter TargetName="hover" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="pressed" Property="Opacity" Value="1" />
                                <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Opacity" Value="0" />
                                <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                                <Setter TargetName="focused" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="focused" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  *********************************  ComboBoxItem Style  *********************************  -->
        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
            <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Grid x:Name="Main" Background="{TemplateBinding Background}">
                            <Rectangle Fill="{StaticResource TransparentBrush}" />
                            <Rectangle x:Name="fillColor"
                                       Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}"
                                       IsHitTestVisible="False"
                                       Opacity="0" />
                            <Rectangle x:Name="FocusedVisualElement"
                                       Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                                       Visibility="Collapsed" />
                            <Rectangle x:Name="CheckedBd"
                                       Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                                       IsHitTestVisible="False"
                                       Visibility="Collapsed" />
                            <ContentControl x:Name="contentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="fillColor" Property="Opacity" Value="1" />
                                <Setter TargetName="FocusedVisualElement" Property="Stroke" Value="{StaticResource ComboBoxItemHoverBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CheckedBd" Property="Visibility" Value="Visible" />
                                <Setter TargetName="contentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Path=IsDropDownOpen}" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Main" Property="Opacity" Value="0.3" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  *********************************  ListBoxItem Style  *********************************  -->
        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
            <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid x:Name="MainGrid">
                            <Rectangle x:Name="FocusedVisualElement"
                                       IsHitTestVisible="False"
                                       Stroke="{StaticResource ListBoxItemFocusedBorderBrush}"
                                      StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                       Visibility="Collapsed" />
                            <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" />
                            <Rectangle x:Name="BgSelected"
                                       Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                                       Visibility="Collapsed" />
                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Fill" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="BgSelected" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ********************************** CheckBoxStyle **********************************  -->
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="6,0,0,0" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid x:Name="MainGrid"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource TransparentBrush}" />
                            <Rectangle x:Name="normal"
                                       Grid.Column="0"
                                       Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxBackgroundBrush}"
                                       Stroke="{StaticResource CheckBoxBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                            <Rectangle x:Name="hover"
                                       Grid.Column="0"
                                       Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxHoverBackgroundBrush}"
                                       Opacity="0"
                                       Stroke="{StaticResource CheckBoxHoverBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                            <Rectangle x:Name="focused"
                                        Grid.Column="0"
                                        Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxFocusedBackgroundBrush}"
                                       Opacity="0"
                                       Stroke="{StaticResource CheckBoxFocusedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="checked"
                                       Grid.Column="0"
                                       Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxCheckedBackgroundBrush}"
                                       Opacity="0"
                                       Stroke="{StaticResource CheckBoxCheckedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="invalidUnfocused"
                                       Grid.Column="0"
                                       Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                                       Opacity="0"
                                       Stroke="{StaticResource CheckBoxInvalidUnfocusedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Rectangle x:Name="invalidFocused"
                                       Grid.Column="0"
                                       Width="15"
                                       Height="15"
                                       Fill="{StaticResource CheckBoxBackgroundBrush}"
                                       Opacity="0"
                                       Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Path x:Name="checkBox"
                                  Grid.Column="0"
                                  Width="9"
                                  Height="8"
                                  Data="{StaticResource CheckBoxCheck}"
                                  Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                                  Opacity="0"
                                  Stretch="Fill"
                                  UseLayoutRounding="False" />
                            <Rectangle x:Name="IndeterminateCheck"
                                       Grid.Column="0"
                                       Width="7"
                                       Height="7"
                                       Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}"
                                       Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              igPrim:XamlHelper.RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="hover" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checked" Property="Opacity" Value="1" />
                                <Setter TargetName="checkBox" Property="Opacity" Value="1" />
                                <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="checked" Property="Opacity" Value="1" />
                                <Setter TargetName="IndeterminateCheck" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                                <Setter TargetName="hover" Property="Opacity" Value="0" />
                                <Setter TargetName="checked" Property="Opacity" Value="0" />
                                <Setter TargetName="focused" Property="Opacity" Value="0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                                <Setter TargetName="hover" Property="Opacity" Value="0" />
                                <Setter TargetName="checked" Property="Opacity" Value="1" />
                                <Setter TargetName="focused" Property="Opacity" Value="0" />
                                <Setter TargetName="checkBox" Property="Opacity" Value="1" />
                                <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="checked" Property="Opacity" Value="0" />
                                <Setter TargetName="focused" Property="Opacity" Value="1" />
                                <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource CheckBoxCheckBackgroundBrush}" />
                                <Setter TargetName="IndeterminateCheck" Property="Fill" Value="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="focused" Property="Opacity" Value="1" />
                                    <Setter TargetName="focused" Property="Fill" Value="{StaticResource CheckBoxCheckedBackgroundBrush}" />
                                    <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource CheckBoxCheckBackgroundBrush}" />
                                    <Setter TargetName="IndeterminateCheck" Property="Fill" Value="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="True" />
                                    <Condition Property="IsChecked" Value="{x:Null}" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="focused" Property="Opacity" Value="1" />
                                    <Setter TargetName="focused" Property="Fill" Value="{StaticResource CheckBoxCheckedBackgroundBrush}" />
                                    <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource CheckBoxCheckBackgroundBrush}" />
                                    <Setter TargetName="IndeterminateCheck" Property="Fill" Value="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ********************************** RadioButton Style **********************************  -->
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="6,0,0,0" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="normal"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonBackgroundBrush}"
                                     Opacity="1"
                                     Stroke="{StaticResource RadioButtonBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="hover"
                                     Grid.Column="0"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonHoverBackgroundBrush}"
                                     Opacity="0"
                                     Stroke="{StaticResource RadioButtonHoverBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="focused"
                                     Grid.Column="0"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonFocusedBackgroundBrush}"
                                     Opacity="0"
                                     Stroke="{StaticResource RadioButtonFocusedBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="checked"
                                     Grid.Column="0"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonCheckedBackgroundBrush}"
                                     Opacity="0"
                                     Stroke="{StaticResource RadioButtonCheckedBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="invalidUnfocused"
                                     Grid.Column="0"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonInvalidUnfocusedBackgroundBrush}"
                                     Opacity="0"
                                     Stroke="{StaticResource RadioButtonInvalidUnfocusedBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="invalidFocused"
                                     Grid.Column="0"
                                     Width="15"
                                     Height="15"
                                     Fill="{StaticResource RadioButtonBackgroundBrush}"
                                     Opacity="0"
                                     Stroke="{StaticResource RadioButtonInvalidFocusedBorderBrush}"
                                     StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                            <Ellipse x:Name="CheckedGlyph"
                                     Grid.Column="0"
                                     Width="7"
                                     Height="7"
                                     Fill="{StaticResource RadioButtonCheckBackgroundBrush}"
                                     Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              igPrim:XamlHelper.RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="hover" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checked" Property="Opacity" Value="1" />
                                <Setter TargetName="CheckedGlyph" Property="Opacity" Value="1" />
                                <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                                <Setter TargetName="hover" Property="Opacity" Value="0" />
                                <Setter TargetName="checked" Property="Opacity" Value="0" />
                                <Setter TargetName="focused" Property="Opacity" Value="0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                                <Setter TargetName="hover" Property="Opacity" Value="0" />
                                <Setter TargetName="checked" Property="Opacity" Value="1" />
                                <Setter TargetName="focused" Property="Opacity" Value="0" />
                                <Setter TargetName="CheckedGlyph" Property="Opacity" Value="1" />
                                <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="checked" Property="Opacity" Value="0" />
                                <Setter TargetName="focused" Property="Opacity" Value="1" />
                                <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource RadioButtonCheckBackgroundBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="focused" Property="Opacity" Value="1" />
                                    <Setter TargetName="focused" Property="Fill" Value="{StaticResource RadioButtonCheckedBackgroundBrush}" />
                                    <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource RadioButtonCheckBackgroundBrush}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  *********************************  ButtonStyle  *********************************  -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
            <Setter Property="FontSize" Value="{StaticResource FontSize}" />
            <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
            <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                            <Rectangle x:Name="Bd"
                                       Fill="{TemplateBinding Background}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="FocusedVisualElement"
                                       Fill="{StaticResource ButtonFocusedBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonFocusedBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Visibility="Collapsed" />
                            <Rectangle x:Name="hover"
                                       Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonHoverBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Opacity="0"/>
                            <Rectangle x:Name="pressed"
                                       Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonPressedBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Opacity="0"/>
                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="hover" Property="Opacity" Value="1" />
                                <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="pressed" Property="Opacity" Value="1" />
                                <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                    <Condition Property="IsPressed" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                    <Condition Property="IsPressed" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  *********************************  IconButtonStyle  *********************************  -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
            <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
            <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                            <Rectangle x:Name="Bd"
                                       Fill="{TemplateBinding Background}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="FocusedVisualElement"
                                       Fill="{StaticResource ButtonFocusedBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonFocusedBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Visibility="Collapsed" />
                            <Rectangle x:Name="hover"
                                       Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonHoverBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Opacity="0"/>
                            <Rectangle x:Name="pressed"
                                       Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                       RadiusX="{StaticResource RadiusXY}"
                                       RadiusY="{StaticResource RadiusXY}"
                                       Stroke="{StaticResource ButtonPressedBorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Opacity="0"/>
                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="hover" Property="Opacity" Value="1" />
                                <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="pressed" Property="Opacity" Value="1" />
                                <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="True" />
                                    <Condition Property="IsPressed" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                    <Condition Property="IsPressed" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  *********************************  Hyperlink Style  *********************************  -->
        <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="{StaticResource HyperlinkForegroundBrush}"/>
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForegroundBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource HyperlinkDisabledForegroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>  

    <!--  *********************************  ScrollBarButton Style  *********************************  -->
    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="MainGrid">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="8"
                              Height="5"
                              Margin="{TemplateBinding Padding}"
                              Data="{StaticResource ScrollbarArrow}"
                              Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                     <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBarPageButton Style  *********************************  -->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Horizontal ScrollBarThumb Style  *********************************  -->
    <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="Thumb"
                                   Height="6"
                                   Margin="1"
                                   Fill="{StaticResource HScrollbarThumbBackgroundBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Vertical ScrollbarThumb Style  *********************************  -->
    <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid"
                          Width="Auto"
                          Height="Auto">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="Thumb"
                                   Width="6"
                                   Fill="{StaticResource VScrollbarThumbBackgroundBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBar Style  *********************************  -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ScrollbarBackgroundBrush}" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="16" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="16" />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.RowSpan="3"
                                   Margin="0"
                                   Fill="{TemplateBinding Background}" />
                        <RepeatButton x:Name="repeatButton"
                                      Grid.Row="0"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="True"
                                      Style="{StaticResource ScrollBarButtonStyle}" />
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb"
                                       Width="30"
                                       HorizontalAlignment="Center"
                                       Style="{StaticResource VScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1"
                                      Grid.Row="2"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="True"
                                      RenderTransformOrigin="0.5,0.5"
                                      Style="{StaticResource ScrollBarButtonStyle}">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                          <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="MainGrid" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="18" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="16" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="5"  Fill="{TemplateBinding Background}" />
                                <RepeatButton x:Name="repeatButton"
                                              Grid.Column="0"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Height="30"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource HScrollBarThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1"
                                              Grid.Column="2"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                 <Trigger Property="IsMouseOver" Value="True">
                                     <Setter Property="Opacity" TargetName="repeatButton1" Value="1" />
                                     <Setter Property="Opacity" TargetName="repeatButton" Value="1" />
                                 </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="MainGrid" Value="0.3" />
                                </Trigger>
                    </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  ScrollViewer Style *********************************  -->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <!--<Setter Property="VerticalScrollBarVisibility" Value="Auto" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  TextBoxValidationToolTip Template  *********************************  -->
    <ControlTemplate x:Key="TextBoxValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="4,4,-4,-4"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.02" />
            <Border Margin="3,3,-3,-3"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.08" />
            <Border Margin="2,2,-2,-2"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.15" />
            <Border Margin="1,1,-1,-1"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}" />
            <Border>
                <TextBlock MaxWidth="250"
                           Margin="8,4,8,4"
                           Foreground="{StaticResource ActiveForegroundBrush}"
                           Text="{Binding (Validation.Errors).CurrentItem.ErrorContent}"
                           TextWrapping="Wrap"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  ComboBoxEditableTextBox Style  *********************************  -->
    <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="{StaticResource TransparentBrush}"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  Style="{StaticResource ScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Hidden"/>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.3" />                    
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxEditable Template  *********************************  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="23" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="normal"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource ComboBoxBackgroundBrush}"
                       Stroke="{StaticResource ComboBoxBorderBrush}"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle x:Name="hover"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                       Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"/>
              <Rectangle x:Name="active"
                         Grid.Column="0"
                         Grid.ColumnSpan="2"
                         Fill="{StaticResource ComboBoxActiveBackgroundBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"
                         Stroke="{StaticResource ComboBoxActiveBorderBrush}"
                         StrokeThickness="{StaticResource DefaultStrokeThickness}"
                         Visibility="Collapsed" />
            <Popup x:Name="PART_Popup"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="DropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource PopupBackgroundBrush}"
                        BorderBrush="{StaticResource PopupBorderBrush}"
                        BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Canvas Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                <Rectangle x:Name="OpaqueRect"
                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                           Fill="{Binding Background, ElementName=DropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggle" 
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButtonStyle}" />
            <TextBox x:Name="PART_EditableTextBox"
                     Grid.Column="0"
                     Margin="-2,1,5,0"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{StaticResource ComboBoxEditableTextBoxStyle}" />
            <Rectangle x:Name="focused"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"/>
        </Grid>
        <ControlTemplate.Triggers>
              <Trigger  Property="IsMouseOver" Value="True">
                  <Setter TargetName="hover" Property="Visibility" Value="Visible" />
              </Trigger>
            <Trigger  Property="IsFocused" Value="True">
                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger  Property="IsDropDownOpen" Value="True">
                <Setter TargetName="active" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                  <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />   
              </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
             <MultiTrigger>
                 <MultiTrigger.Conditions>
                     <Condition Property="IsEditable" Value="True"/>
                     <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True"/>
                 </MultiTrigger.Conditions>
                  <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                  <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ForegroundBrush}" />
             </MultiTrigger>
             <DataTrigger Binding="{Binding ElementName=toggle, Path=IsPressed}" Value="True" >
               <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  ComboBox Style  *********************************  -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />     
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource ComboBoxPadding}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="23" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="normal"
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="hover"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="active"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxActiveBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxActiveBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                        <Popup x:Name="PART_Popup"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Margin="1"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="DropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource PopupBackgroundBrush}"
                                    BorderBrush="{StaticResource PopupBorderBrush}"
                                    BorderThickness="{StaticResource DefaultBorderThickness}">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource ScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButtonStyle}" />
                        <ContentPresenter x:Name="contentPresenter"
										  Grid.ColumnSpan="2"
                                          Grid.Column="0"
                                          Margin="6 3 24 1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle x:Name="focused"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                         <Trigger  Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger  Property="IsFocused" Value="True">
                            <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                        </Trigger>
                         <Trigger  Property="IsMouseCaptureWithin" Value="True">
                            <Setter TargetName="active" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger  Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="active" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="normal" Property="Opacity" Value="0.3" />   
 							<Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />                  
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  TextBox Style  *********************************  -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="1" />
                            <Border x:Name="DisabledVisualElement"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    IsHitTestVisible="False"
                                    Opacity="0" />
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                    BorderBrush="{StaticResource TextBoxReadOnlyBorderBrush}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          IsTabStop="False"
                                          Padding="{TemplateBinding Padding}" />
                        </Grid>
                        <Border x:Name="FocusVisualElement"
                                BorderBrush="{StaticResource TextBoxFocusedBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource TextBoxValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Width="12"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="{StaticResource TransparentBrush}">
                                <Path Margin="1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}" />
                                <Path Margin="1,3,0,0"
                                      Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource ForegroundBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ListBox Style  *********************************  -->
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ListBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />     
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="fillColor"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="10"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="{StaticResource TransparentBrush}">
                                <Path Margin="-1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}" />
                                <Path Margin="-1,3,0,0"
                                      Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource ForegroundBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  DatePickerTextbox Style  *********************************  -->
    <Style x:Key="DatePickerTextBoxStyle" BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Padding" Value="6 4 6 2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                               <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>                                     
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unwatermarked" />
                                <VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="0" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To="0.3" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>                                       
                                         <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To="0" />
                                        <ThicknessAnimation Duration="0" FillBehavior="HoldEnd" From="1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="1"
                                CornerRadius="{StaticResource CornerRadius}">
                            <Grid x:Name="WatermarkContent"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" />
                                <Border x:Name="watermark_decorator"
                                        Margin="4,0,0,1"
                                        VerticalAlignment="Center"
                                        CornerRadius="{StaticResource CornerRadius}">
                                    <ContentControl x:Name="PART_Watermark"
                                                    Focusable="False"
                                                    Foreground="{StaticResource ForegroundBrush}"
                                                    IsHitTestVisible="False"
                                                    Opacity="0"
                                                    Padding="0" />
                                </Border>
                            </Grid>
                        </Border>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="-2,0,0,0"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Border x:Name="FocusVisual"
                                BorderBrush="{StaticResource TextBoxFocusedBrush}"                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                CornerRadius="{StaticResource CornerRadius}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>