<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2006"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:resources="clr-namespace:Infragistics.Samples.Shared.Resources"
                    xmlns:converters="clr-namespace:Infragistics.Samples.Shared.Converters" 
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    mc:Ignorable="d">
    
     <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="IGBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <resources:CommonStrings x:Key="CommonStrings" />
    <converters:GetImageConverter x:Key="getImageConverter"/>
    <converters:StringCaseConverter x:Key="UpperCaseConverter" StringCase="Upper"/>
    <converters:StringCaseConverter x:Key="LowerCaseConverter" StringCase="Lower"/>
    

    <!--  *********************************  COMMON ATTRIBUTES  *********************************  -->
    <System:Double x:Key="DefaultMinHeight">24</System:Double>
    <System:Double x:Key="ToggleMinWidth">21</System:Double>
    <System:Double x:Key="DefaultSize">24</System:Double>
    <System:Double x:Key="DefaultStrokeThickness">1</System:Double>
    <Thickness x:Key="DefaultBorderThickness">1 1 1 1</Thickness>
    <Thickness x:Key="DefaultPadding">6 2 6 2</Thickness>
    <Thickness x:Key="ButtonPadding">6 0 6 2</Thickness>
    <Thickness x:Key="GridCellPadding">6 5 6 5</Thickness>
    <Thickness x:Key="GridHeaderPadding">6 6 6 10</Thickness>
    <Thickness x:Key="TextBoxPadding">6 3 6 2</Thickness>
    <Thickness x:Key="ComboBoxPadding">6 2 24 2</Thickness>
    <Thickness x:Key="ContentPadding">6 6 6 6</Thickness>
    <Thickness x:Key="ToolTipPadding">8 6 8 8</Thickness>
    <Thickness x:Key="ToggleButtonPadding">6 0 6 2</Thickness>
	<Thickness x:Key="TabControlContentMargin">20 20 0 0</Thickness>
    <Thickness x:Key="BreadcrumbControlMargin">20 66 0 0</Thickness>
    <Thickness x:Key="SampleAreaInnerMargin">0 20 20 20</Thickness>
    <Thickness x:Key="BottomPaddingLarge">0 0 0 20</Thickness>
    <Thickness x:Key="BottomPaddingMid">0 0 0 12</Thickness>
    <Thickness x:Key="CodeAreaInnerMargin">0 40 0 0</Thickness>
    <CornerRadius x:Key="CornerRadius">1</CornerRadius>
    <System:Double x:Key="RadiusXY">1</System:Double>
    <CornerRadius x:Key="DropDownCornerRadius">0 1 1 0</CornerRadius>
    <Thickness x:Key="SampleInnerNavigationPadding">0 0 0 20</Thickness>
    <Thickness x:Key="SampleInnerNavigationTopBottomPadding">0 20 0 20</Thickness>

    <!--  Charts  -->
    <Thickness x:Key="CategoryChartSamplesPadding">0</Thickness>
    <Thickness x:Key="ChartSamplesPadding">0,20,0,0</Thickness>
    <!--  Grids  -->
    <Thickness x:Key="GridsSamplesBottomPadding">0,0,0,10</Thickness>
    <Thickness x:Key="GridsSamplesTopBottomPadding">0,20,0,10</Thickness>

    <!--  Release Status Icons  -->
    <Thickness x:Key="StatusIconInnerMargin">5,0</Thickness>
    <Thickness x:Key="StatusIconOuterMargin">8,0,8,0</Thickness>
    
    <!--  Fonts  -->
    <FontFamily x:Key="FontFamily">/Infragistics.Samples.Shared;component/fonts/#Segoe UI</FontFamily>
    <System:Double x:Key="FontSize">12</System:Double>
    <System:Double x:Key="FontSize14">14</System:Double>
    <FontWeight x:Key="FontNormal">Normal</FontWeight>
    <FontWeight x:Key="FontBold">Bold</FontWeight>
    <FontWeight x:Key="FontSemiBold">SemiBold</FontWeight>
    <FontWeight x:Key="FontLight">Light</FontWeight>

    <!--  *********************************  COMMON GLYPHS  *********************************  -->
    <!--  Combo Arrow  -->
    <!--  Width="7" Height="4"  -->
    <Geometry x:Key="DownArrow">M 0 0 L 3.5 4 L 7 0 L 0 0 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0 7 L 4 3.5 L 0 0 L 0 7 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0 4 L 3.5 0 L 7 4 L 0 4 Z</Geometry>

    <!--  Scrollbar Arrow  -->
    <!--  Width="8" Height="5"  -->
    <Geometry x:Key="ScrollbarArrow">M 5 5 L 1 0 L -3 5 L 5 5 Z</Geometry>

    <!--  CheckBox Check  -->
    <!--  Height="8" Width="9"  -->
    <Geometry x:Key="CheckBoxCheck">M 1.3394 3.4286 L 0 4.8932 L 3.75 8 L 9 1.165 L 7.5938 0 L 3.6831 5.3703 L 1.3394 3.4286 Z</Geometry>

    <!--  Rating Star  -->
    <Geometry x:Key="StarShape">M 11.5 0 L 14.708 7.6804 L 22.8975 8.4032 L 16.6909 13.8728 L 18.5439 22 L 11.5 17.7 L 4.4561 22 L 6.3091 13.8728 L 0.1025 8.4032 L 8.292 7.6804 L 11.5 0 Z</Geometry>

    <!--  ClearFilter x icon  -->
    <!--  Height="8" Width="8"  -->
    <Geometry x:Key="ClearFilterIcon">M 0 1.1429 L 2.8572 4 L 0 6.8571 L 1.1429 8 L 4 5.1429 L 6.8571 8 L 8 6.8571 L 5.1428 4 L 8 1.1429 L 6.8571 0 L 4 2.8571 L 1.1429 0 L 0 1.1429 Z</Geometry>

    <!--  VShaped Arrow   -->
    <!--  Height="6" Width="10"  -->
    <Geometry x:Key="VArrowDown">M 8.3882 0 L 10 1.4175 L 5 6 L 0 1.4175 L 1.489 0.0675 L 4.9755 3.2177 L 8.3882 0 Z</Geometry>
    <Geometry x:Key="VArrowTop">M 1.6118 6 L 0 4.5825 L 5 0 L 10 4.5825 L 8.511 5.9325 L 5.0245 2.7823 L 1.6118 6 Z</Geometry>
    <Geometry x:Key="VArrowRight">M 0 8.3882 L 1.4175 10 L 6 5 L 1.4175 0 L 0.0675 1.489 L 3.2177 4.9755 L 0 8.3882 Z</Geometry>
    <Geometry x:Key="VArrowLeft">M 6 8.3882 L 4.5825 10 L 0 5 L 4.5825 0 L 5.9325 1.489 L 2.7823 4.9755 L 6 8.3882 Z</Geometry>

    <!--  Plus/Minus Icons  -->
    <Geometry x:Key="PlusIcon">M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z</Geometry>
    <Geometry x:Key="MinusIcon">M0,0 L8,0 L8,2 L0,2 z</Geometry>
    
     <Geometry x:Key="ScaleToFitIcon">M 1457 1622 L 1457 1620 L 1457 1617 L 1455 1617 L 1455 1620 L 1452 1620 L 1452 1622 L 1455 1622 L 1457 1622 ZM 1457 1610 L 1455 1610 L 1452 1610 L 1452 1612 L 1455 1612 L 1455 1615 L 1457 1615 L 1457 1612 L 1457 1610 ZM 1445 1622 L 1447 1622 L 1450 1622 L 1450 1620 L 1447 1620 L 1447 1617 L 1445 1617 L 1445 1620 L 1445 1622 ZM 1445 1610 L 1445 1612 L 1445 1615 L 1447 1615 L 1447 1612 L 1450 1612 L 1450 1610 L 1447 1610 L 1445 1610 Z</Geometry>

    <!--  Window related icons Maximize, Minimize...  -->
    <Geometry x:Key="CloseIcon">M 0 1.2857 L 3.5715 4.5 L 0 7.7143 L 1.4287 9 L 5 5.7857 L 8.5713 9 L 10 7.7143 L 6.4285 4.5 L 10 1.2857 L 8.5713 0 L 5 3.2143 L 1.4287 0 L 0 1.2857 Z</Geometry>
    <Geometry x:Key="MinimizeIcon">M 2047 307 L 2056 307 L 2056 310 L 2047 310 L 2047 307 Z</Geometry>
    <Geometry x:Key="MaximizeIcon">M 2082 344 L 2089 344 L 2089 349 L 2082 349 L 2082 344 ZM 2081 341 L 2081 350 L 2090 350 L 2090 341 L 2081 341 Z</Geometry>
    <Geometry x:Key="RestoreDownIcon">M 2086 425 L 2086 426 L 2086 428 L 2081 428 L 2081 424 L 2086 424 L 2086 425 ZM 2084 422 L 2084 421 L 2089 421 L 2089 425 L 2087 425 L 2087 422 L 2084 422 ZM 2083 419 L 2083 422 L 2080 422 L 2080 429 L 2087 429 L 2087 426 L 2090 426 L 2090 419 L 2083 419 Z</Geometry>

    <!--  Used in samples...  -->
    <Geometry x:Key="ExportIcon">M 1189.8572 133 L 1195 129 L 1189.8572 125 L 1189.8572 127.4615 C 1189.2142 127.4615 1188.1469 127.7297 1187.5166 128.2399 C 1186.517 129.0199 1186.0144 130.2679 1186 131.4776 C 1186.0411 131.9157 1186.0801 132.3868 1186.3402 132.7646 C 1186.5404 133.0271 1186.6794 132.6695 1186.7573 132.3542 C 1187.0229 131.5963 1187.6754 131.032 1188.3903 130.5515 C 1188.7872 130.2646 1189.8572 130.5385 1189.8572 130.5385 L 1189.8572 133 ZM 1183 126 L 1183 136 L 1184 136 L 1193 136 L 1193 132 L 1192 134 L 1192 135 L 1184 135 L 1184 127 L 1186 127 L 1188 126 L 1183 126 Z</Geometry><!-- w:12 h:11 -->
    <Geometry x:Key="PrintIcon">M 1141 153 L 1135 153 L 1135 152 L 1141 152 L 1141 153 ZM 1141 159 L 1141 161 L 1135 161 L 1135 159 L 1135 157 L 1141 157 L 1141 159 ZM 1133 153 C 1132.4478 153 1132 153.4477 1132 154 L 1132 158 C 1132 158.5523 1132.4478 159 1133 159 L 1134 159 L 1134 161 L 1134 162 L 1135 162 L 1141 162 L 1142 162 L 1142 161 L 1142 159 L 1143 159 C 1143.5522 159 1144 158.5523 1144 158 L 1144 154 C 1144 153.4477 1143.5522 153 1143 153 L 1142 153 L 1142 152 L 1142 151 L 1141 151 L 1135 151 L 1134 151 L 1134 152 L 1134 153 L 1133 153 Z</Geometry><!-- w:12 h:11 -->
    <Geometry x:Key="ArrowUpIcon">M 1187 157 L 1190 157 L 1190 162 L 1192 162 L 1192 157 L 1195 157 L 1191 152 L 1187 157 Z</Geometry><!-- w:8 h:10 -->
    <Geometry x:Key="ArrowDownIcon">M 1172 181 L 1175 181 L 1175 176 L 1177 176 L 1177 181 L 1180 181 L 1176 186 L 1172 181 Z</Geometry>
    <Geometry x:Key="ArrowLeftIcon">M 1195 178 L 1195 181 L 1200 181 L 1200 183 L 1195 183 L 1195 186 L 1190 182 L 1195 178 Z</Geometry><!-- w:10 h:8 -->
    <Geometry x:Key="ArrowRightIcon">M 1210 178 L 1210 181 L 1205 181 L 1205 183 L 1210 183 L 1210 186 L 1215 182 L 1210 178 Z</Geometry>
    <Geometry x:Key="PlayIcon">M 1189 163 L 1189 171 L 1194 167 L 1189 163 Z</Geometry><!-- w:5 h:8 -->
    <Geometry x:Key="SelectIcon">M 1205 158 L 1203 158 L 1203 160 L 1205 160 L 1205 158 ZM 1208 158 L 1206 158 L 1206 160 L 1208 160 L 1208 158 ZM 1211 158 L 1209 158 L 1209 160 L 1211 160 L 1211 158 ZM 1211 163 L 1211 161 L 1209 161 L 1209 163 L 1211 163 ZM 1211 166 L 1211 164 L 1209 164 L 1209 166 L 1211 166 ZM 1211 169 L 1211 167 L 1209 167 L 1209 169 L 1211 169 ZM 1206 169 L 1208 169 L 1208 167 L 1206 167 L 1206 169 ZM 1203 169 L 1205 169 L 1205 167 L 1203 167 L 1203 169 ZM 1200 169 L 1202 169 L 1202 167 L 1200 167 L 1200 169 ZM 1200 164 L 1200 166 L 1202 166 L 1202 164 L 1200 164 ZM 1200 161 L 1200 163 L 1202 163 L 1202 161 L 1200 161 ZM 1200 158 L 1200 160 L 1202 160 L 1202 158 L 1200 158 Z</Geometry><!-- w:11 h:11 -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    
    <!-- ********************************* Styles for Labels in Samples ********************************* -->
    <Style x:Key="SamplesInnerNavigationLabelTitleStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Margin" Value="0,0,6,0" />
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="HeaderLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="{StaticResource FontBold}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="-5,12,0,0" />
    </Style>
    
    <!-- ********************************* Styles for TextBlock controls ********************************* -->
    <Style x:Key="BaseFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    </Style>

    <Style x:Key="BodyStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="SamplesTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="13.333" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="SamplesBigTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="SamplesDescriptionTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>
    
    <Style x:Key="SamplesDescriptionStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxHeight" Value="51" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0,8,0,20"/>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>
    
    <Style x:Key="SamplesInnerNavigationTitleStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Semibold" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="{StaticResource FontBold}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="BreadcrumbTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="{StaticResource FontSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,5,6,4" />
    </Style>
    
    <Style x:Key="SourceTextblockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Infragistics.Samples.Data;component/fonts/#Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundWithTransparency}" />
        <Setter Property="Padding" Value="6" />
    </Style>
    
    <!--  *********************************  ValidationToolTip Template  *********************************  -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="4,4,-4,-4"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.02" />
            <Border Margin="3,3,-3,-3"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.08" />
            <Border Margin="2,2,-2,-2"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.15" />
            <Border Margin="1,1,-1,-1"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}" />
            <Border>
                <TextBlock MaxWidth="250"
                           Margin="8,4,8,4"
                           Foreground="{StaticResource ForegroundBrush}"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           TextWrapping="Wrap"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  ToolTip Style  *********************************  -->
    <Style x:Key="ToolTipStyle" TargetType="ContentControl">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Background" Value="{StaticResource TooltipBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TooltipBorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource ToolTipPadding}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Grid Margin="5">
                            <Border Margin="-4"
                                    Background="{StaticResource TooltipShadowBrush}"
                                    CornerRadius="5"
                                    Opacity="0.1" />
                            <Border Margin="-3"
                                    Background="{StaticResource TooltipShadowBrush}"
                                    CornerRadius="4"
                                    Opacity="0.2" />
                            <Border Margin="-2"
                                    Background="{StaticResource TooltipShadowBrush}"
                                    CornerRadius="3"
                                    Opacity="0.3" />
                            <Border Margin="-1"
                                    Background="{StaticResource TooltipShadowBrush}"
                                    CornerRadius="2"
                                    Opacity="0.4" />
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Stroke="{TemplateBinding BorderBrush}"
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />

    <!--  *********************************  ScrollBarButton Style  *********************************  -->
    <Style x:Key="ScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="MainGrid">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="8"
                              Height="5"
                              Margin="{TemplateBinding Padding}"
                              Data="{StaticResource ScrollbarArrow}"
                              Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Arrow" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBarPageButton Style  *********************************  -->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Horizontal ScrollBarThumb Style  *********************************  -->
    <Style x:Key="HScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="Thumb"
                                   Height="6"
                                   Margin="1"
                                   Fill="{StaticResource HScrollbarThumbBackgroundBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Vertical ScrollbarThumb Style  *********************************  -->
    <Style x:Key="VScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid"
                          Width="Auto"
                          Height="Auto">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="Thumb"
                                   Width="6"
                                   Fill="{StaticResource VScrollbarThumbBackgroundBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="Thumb" Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollBar Style  *********************************  -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource ScrollbarBackgroundBrush}" />
        <Setter Property="MinWidth" Value="18" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="16" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="16" />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.RowSpan="3"
                                   Margin="0"
                                   Fill="{TemplateBinding Background}" />
                        <RepeatButton x:Name="repeatButton"
                                      Grid.Row="0"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="True"
                                      Style="{StaticResource ScrollBarButtonStyle}" />
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb"
                                       Width="30"
                                       HorizontalAlignment="Center"
                                       Style="{StaticResource VScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1"
                                      Grid.Row="2"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="True"
                                      RenderTransformOrigin="0.5,0.5"
                                      Style="{StaticResource ScrollBarButtonStyle}">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="MainGrid" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="18" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="16" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="5"  Fill="{TemplateBinding Background}" />
                                <RepeatButton x:Name="repeatButton"
                                              Grid.Column="0"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Height="30"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource HScrollBarThumbStyle}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1"
                                              Grid.Column="2"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="True"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{DynamicResource ScrollBarButtonStyle}">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="repeatButton1" Value="1" />
                                    <Setter Property="Opacity" TargetName="repeatButton" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="MainGrid" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  ScrollViewer Style *********************************  -->
    <Style x:Key="IGScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Style="{StaticResource ScrollBarStyle}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ButtonStyle  *********************************  -->
    <Style x:Key="IGGenericButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Rectangle x:Name="Bd"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusedVisualElement"
                                   Fill="{StaticResource ButtonFocusedBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonFocusedBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="hover"
                                   Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonHoverBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"/>
                        <Rectangle x:Name="pressed"
                                   Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"/>
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IGCompactButtonStyle" BasedOn="{StaticResource IGGenericButton}" TargetType="Button">
        <Setter Property="MinHeight" Value="18"/>
        <Setter Property="MaxWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="10.667"/>
    </Style>

    <!--  *********************************  IconButtonStyle  *********************************  -->
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Rectangle x:Name="Bd"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusedVisualElement"
                                   Fill="{StaticResource ButtonFocusedBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonFocusedBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="hover"
                                   Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonHoverBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"/>
                        <Rectangle x:Name="pressed"
                                   Fill="{StaticResource ButtonPressedBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="24"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Separator" Width="1" Stroke="{StaticResource SeparatorBrush}" HorizontalAlignment="Left" Grid.Column="1" Margin="0,4" Opacity="0.7"/>
                            <ContentControl x:Name="ContentControl" Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"/>
                            </ContentControl>
                            <TextBlock
									x:Name="text"
									Text="{TemplateBinding Tag}"
									Grid.Column="1"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}"
									Margin="6,1,6,2"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter TargetName="Separator" Property="Stroke" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** Toggle Button Style **********************************  -->
    <Style x:Key="IGToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonCheckedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonHoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonPressedBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource LightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonDisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonDisabledBorderBrush}"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ToggleButtonCheckedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ToggleButtonCheckedBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource LightForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** CheckBoxStyle **********************************  -->
    <Style x:Key="IGCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="MainGrid"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="normal" 
                                   Grid.Column="0" 
                                   Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxBackgroundBrush}"
                                   Stroke="{StaticResource CheckBoxBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                        <Rectangle x:Name="hover" 
                                   Grid.Column="0"
                                   Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxHoverBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxHoverBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                        <Rectangle x:Name="focused" 
                                    Grid.Column="0"
                                    Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxFocusedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="checked" 
                                   Grid.Column="0"
                                   Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxCheckedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxCheckedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="invalidUnfocused" 
                                   Grid.Column="0" 
                                   Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidUnfocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="invalidFocused" 
                                   Grid.Column="0"
                                   Width="15"
                                   Height="15"
                                   Fill="{StaticResource CheckBoxBackgroundBrush}"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Path x:Name="checkBox" 
                              Grid.Column="0"
                              Width="9"
                              Height="8"
                              Data="{StaticResource CheckBoxCheck}"
                              Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                              Opacity="0"
                              Stretch="Fill"
                              UseLayoutRounding="False" />
                        <Rectangle x:Name="IndeterminateCheck"
                                   Grid.Column="0"
                                   Width="7"
                                   Height="7"
                                   Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          igPrim:XamlHelper.RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBox" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="IndeterminateCheck" Property="Opacity" Value="1" />
                            <Setter TargetName="IndeterminateCheck" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            <Setter TargetName="hover" Property="Opacity" Value="0" />
                            <Setter TargetName="checked" Property="Opacity" Value="0" />
                            <Setter TargetName="focused" Property="Opacity" Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            <Setter TargetName="hover" Property="Opacity" Value="0" />
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="focused" Property="Opacity" Value="0" />
                            <Setter TargetName="checkBox" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="0" />
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                            <Setter TargetName="checkBox" Property="Fill" Value="{StaticResource CheckBoxCheckBackgroundBrush}" />
                            <Setter TargetName="IndeterminateCheck" Property="Fill" Value="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** RadioButton Style **********************************  -->
    <Style x:Key="IGRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="normal"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonBackgroundBrush}"
                                 Opacity="1"
                                 Stroke="{StaticResource RadioButtonBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="hover"
                                 Grid.Column="0"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonHoverBackgroundBrush}"
                                 Opacity="0"
                                 Stroke="{StaticResource RadioButtonHoverBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="focused"
                                 Grid.Column="0"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonFocusedBackgroundBrush}"
                                 Opacity="0"
                                 Stroke="{StaticResource RadioButtonFocusedBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="checked"
                                 Grid.Column="0"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonCheckedBackgroundBrush}"
                                 Opacity="0"
                                 Stroke="{StaticResource RadioButtonCheckedBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="invalidUnfocused"
                                 Grid.Column="0"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonInvalidUnfocusedBackgroundBrush}"
                                 Opacity="0"
                                 Stroke="{StaticResource RadioButtonInvalidUnfocusedBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="invalidFocused"
                                 Grid.Column="0"
                                 Width="15"
                                 Height="15"
                                 Fill="{StaticResource RadioButtonBackgroundBrush}"
                                 Opacity="0"
                                 Stroke="{StaticResource RadioButtonInvalidFocusedBorderBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Ellipse x:Name="CheckedGlyph"
                                 Grid.Column="0"
                                 Width="7"
                                 Height="7"
                                 Fill="{StaticResource RadioButtonCheckBackgroundBrush}"
                                 Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          igPrim:XamlHelper.RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            <Setter TargetName="hover" Property="Opacity" Value="0" />
                            <Setter TargetName="checked" Property="Opacity" Value="0" />
                            <Setter TargetName="focused" Property="Opacity" Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                            <Setter TargetName="hover" Property="Opacity" Value="0" />
                            <Setter TargetName="checked" Property="Opacity" Value="1" />
                            <Setter TargetName="focused" Property="Opacity" Value="0" />
                            <Setter TargetName="CheckedGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="checked" Property="Opacity" Value="0" />
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph" Property="Fill" Value="{StaticResource CheckBoxCheckBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Hyperlink Style  *********************************  -->
    <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource HyperlinkForegroundBrush}"/>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HyperlinkHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource HyperlinkDisabledForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  SliderRepeatButton Style  *********************************  -->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{StaticResource TransparentBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Horizontal Thumb Style  *********************************  -->
    <Style x:Key="HSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground"
                                 Width="12"
                                 Height="12"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{StaticResource SliderThumbBorderdBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                        <Ellipse x:Name="FocusedVisualElement"
                                 Width="12"
                                 Height="12"
                                 Opacity="0"
                                 Stroke="{StaticResource SliderThumbFocusedBorderBrush}"
                                 StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Vertical Thumb Style  *********************************  -->
    <Style x:Key="VSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource SliderThumbBackgroundBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="ThumbBackground"
                                 Width="12"
                                 Height="12"
                                 Fill="{TemplateBinding Background}"
                                 Stroke="{StaticResource SliderThumbBorderdBrush}"
                                 StrokeThickness="{StaticResource DefaultStrokeThickness}"/>
                        <Ellipse x:Name="FocusedVisualElement"
                                 Width="12"
                                 Height="12"
                                 Opacity="0"
                                 Stroke="{StaticResource SliderThumbFocusedBorderBrush}"
                                 StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="ThumbBackground" Property="Fill" Value="{StaticResource SliderThumbPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ThumbBackground" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Slider Style  *********************************  -->
    <Style x:Key="IGSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Top"
                                     Visibility="Collapsed" />
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Height="2"
                                    VerticalAlignment="center"
                                    Background="{StaticResource SliderTrackBackgroundBrush}">
                                <Canvas Margin="-6 0 -6 -1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Height="2"
                                               Fill="{StaticResource SliderSelectionRangeBackgroundBrush}"
                                               Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource HSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Height="1"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Bottom"
                                     Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource HSliderThumbStyle}" />
                            <Setter TargetName="TrackBackground" Property="Margin" Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="true">
                            <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Thumb" Property="Foreground" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Width="2"
                                             Fill="{TemplateBinding Foreground}"
                                             Placement="Left"
                                             Visibility="Collapsed" />
                                    <Border x:Name="TrackBackground"
                                            Grid.Column="1"
                                            Width="2"
                                            HorizontalAlignment="center"
                                            Background="{StaticResource SliderTrackBackgroundBrush}">
                                        <Canvas Margin="0 -6 -1 -6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Width="2"
                                                       Fill="{StaticResource SliderSelectionRangeBackgroundBrush}"
                                                       Visibility="Hidden" />
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb" Style="{StaticResource VSliderThumbStyle}" />
                                        </Track.Thumb>
                                    </Track>
                                    <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Width="2"
                                             Fill="{TemplateBinding Foreground}"
                                             Placement="Right"
                                             Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Thumb" Property="Style" Value="{StaticResource VSliderThumbStyle}" />
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="2,5,0,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Thumb" Property="Style" Value="{StaticResource VSliderThumbStyle}" />
                                    <Setter TargetName="TrackBackground" Property="Margin" Value="0,5,2,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                                    <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Thumb" Property="Foreground" Value="{StaticResource SliderThumbFocusedBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Simple TabItem -->
    <Style x:Key="TabItem_FeatureBrowser" d:IsControlPart="True" TargetType="{x:Type TabItem}">

    </Style>

    <!-- Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control -->

    <!-- Simple TabControl 
	This template uses Simple TabItem for each Tab. The TabItems are placed in the TabPanel
	Limitations : The Simple TabControl only allow the Tabs to be shown at the top of the Tab control. You can re-position the TabPanel to change this-->

    <Style x:Key="TabControl_FeatureBrowser" TargetType="{x:Type TabControl}">

    </Style>

    <!-- *********************************  OPTIONS PANEL STYLING  ********************************* --> 
    <System:Double x:Key="RowDefinitionMinHeight">26</System:Double>
    <Thickness x:Key="VerticalPaddingBottomSmall">0,0,0,10</Thickness>
    <Thickness x:Key="OptionsTextMargin">0,0,0,6</Thickness>
    <Thickness x:Key="OptionsTextRightMargin">0,0,10,0</Thickness>
    <Thickness x:Key="OptionsTextLeftMargin">8,0,0,0</Thickness>
    <Thickness x:Key="OptionsTextTopBottomMargin">0,0,0,8</Thickness>
    <Thickness x:Key="OptionsTextRightBottomMargin">0,0,8,8</Thickness>
    <Thickness x:Key="OptionsElementsMargin">0,0,0,8</Thickness>
    <Thickness x:Key="OptionsElementsTopBottomMargin">0,8,0,8</Thickness>
    <Thickness x:Key="OptionsElementsTopMargin">0,8,0,0</Thickness>
    <Thickness x:Key="OptionsElementsRightMarginLarge">0,0,20,0</Thickness>
    <Thickness x:Key="OptionsPanelTitleMargin">0,12,0,8</Thickness>
    <Thickness x:Key="OptionsPanelHeaderLabelLeftMargin">-5,0,0,0</Thickness>
    <Thickness x:Key="OptionsPanelHeaderLabelTopLeftMargin">-5,12,0,0</Thickness>
    <Thickness x:Key="OptionsElementsSeparationLeft">4,0,0,0</Thickness>
    <Thickness x:Key="OptionsElementsSeparationRight">0,0,4,0</Thickness>
    <Thickness x:Key="XamSliderMargin">6,0,6,8</Thickness>

    <System:Double x:Key="OptionsFirstColumnMinWidth">120</System:Double>
    <System:Double x:Key="OptionsMiddleColumnMinWidth">100</System:Double>
    <System:Double x:Key="OptionsLastColumnMinWidth">30</System:Double>
    <System:Double x:Key="OptionsLastColumnWider">40</System:Double>
    <System:Double x:Key="OptionsMinRowHeight">30</System:Double>
    <System:Double x:Key="OptionsMinRowHeightSmaller">20</System:Double>

    <Style x:Key="OptionsPanelTitleStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="{StaticResource FontBold}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,8"/>        
    </Style>

    <Style x:Key="OptionsPanelTextStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
    </Style>

    <Style x:Key="DividerStyle" TargetType="Rectangle">
        <Setter Property="Margin" Value="0,8" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Fill" Value="{StaticResource OptionsPanelLineSeparatorBrush}"/>
    </Style>
    
    <!--OptionSlider Style-->
    <!--<Style x:Key="OptionSlider"  TargetType="{x:Type Slider}">
        <Setter  Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Slider}">
                    <Grid  x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition  Height="Auto"/>
                            <RowDefinition  Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition  Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border  Grid.Row="1" Margin="0" x:Name="Border" Height="3" CornerRadius="1,1,1,1" VerticalAlignment="Center" Background="#FF3C3C3C" BorderBrush="#FF666666" BorderThickness="1,1,1,1"/>

                        --><!-- The Track lays out the repeat buttons and thumb --><!--
                        <Track  Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb  Style="{DynamicResource OptionSliderThumb}" VerticalAlignment="Center"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton  Style="{DynamicResource OptionRepeatButton}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton  Style="{DynamicResource OptionRepeatButton}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                        </Track>

                        --><!--Added tick marks to the option slider--><!--I
                        <TickBar 
                            Name="tickMarksTop"
                            SnapsToDevicePixels="True" 
                            Grid.Row="0"
                            Placement="Top"
                            Fill="{TemplateBinding Foreground}"
                            TickFrequency="{TemplateBinding TickFrequency}"
                            Ticks="{TemplateBinding Ticks}"
                            Maximum="{TemplateBinding Maximum}"
                            Minimum="{TemplateBinding Minimum}"
                            Height="4"
                            Visibility="Collapsed" />

                        <TickBar 
                            Name="tickMarksBottom"
                            SnapsToDevicePixels="True" 
                            Grid.Row="2"
                            Placement="Bottom"
                            Fill="Black"
                            TickFrequency="{TemplateBinding TickFrequency}"
                            Ticks="{TemplateBinding Ticks}"
                            Maximum="{TemplateBinding Maximum}"
                            Minimum="{TemplateBinding Minimum}"
                            Height="4"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsEnabled" Value="false">
                            <Setter  Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter  Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                        </Trigger>

                        --><!-- Use a rotation to create a Vertical Slider form the default Horizontal --><!--
                        <Trigger  Property="Orientation" Value="Vertical">
                            <Setter  Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform  Angle="-90"/>
                                </Setter.Value>
                            </Setter>

                            --><!-- Track rotates itself based on orientation so need to force it back --><!--
                            <Setter  TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>

                            --><!--The tick marks on the bottom and top of a horizontal slider will now be on the right and left the slider--><!--
                            <Setter TargetName="tickMarksBottom" Property="Placement" Value="Right" />
                            <Setter TargetName="tickMarksTop" Property="Placement" Value="Left" />
                        </Trigger>


                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="tickMarksTop" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="tickMarksBottom" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="tickMarksTop" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="tickMarksBottom" Property="Visibility" Value="Visible"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter  Property="Foreground" Value="{x:Null}"/>
        <Setter  Property="Background" Value="{x:Null}"/>
    </Style>-->

    <!--Simple SliderThumb - The Thumb is the draggable part of a Slider-->
    <!--<Style x:Key="OptionSliderThumb"  d:IsControlPart="True" TargetType="{x:Type Thumb}">
        <Setter  Property="SnapsToDevicePixels" Value="true"/>
        <Setter  Property="Height" Value="14"/>
        <Setter  Property="Width" Value="14"/>
        <Setter  Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Thumb}">
                    <Grid >
                        <Ellipse  x:Name="thumb" Fill="#FFAD76D3" Stroke="#FF9359BB" StrokeThickness="1"/>
                        <Ellipse  x:Name="thumbHighlight" Stroke="{x:Null}" StrokeThickness="1" HorizontalAlignment="Stretch" Margin="1,1,1,1" VerticalAlignment="Stretch">
                            <Ellipse.Fill>
                                <LinearGradientBrush  EndPoint="0.47,0.476" StartPoint="0.469,0.001">
                                    <GradientStop  Color="#B2FFFFFF" Offset="0.087"/>
                                    <GradientStop  Color="#00FFFFFF" Offset="0.856"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse  x:Name="thumbHightlight2" Stroke="{x:Null}" StrokeThickness="1" Margin="1,1,1,1">
                            <Ellipse.Fill>
                                <LinearGradientBrush  EndPoint="0.472,0.551" StartPoint="0.479,0.922">
                                    <GradientStop  Color="#66FFFFFF" Offset="0"/>
                                    <GradientStop  Color="#00FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True"/>
                        <Trigger  Property="IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--ScrollRepeatButton Style - This RepeatButton is used above and below the Thumb in the Scrollbar. They are set to transparent si that they do not show over the scrollbar -->
    <!--<Style x:Key="OptionRepeatButton"  d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
        <Setter  Property="Background" Value="Transparent"/>
        <Setter  Property="BorderBrush" Value="Transparent"/>
        <Setter  Property="IsTabStop" Value="false"/>
        <Setter  Property="Focusable" Value="false"/>
        <Setter  Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type RepeatButton}">
                    <Grid >
                        <Rectangle  Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style for radio buttons in a list box-->
    <!--<Style x:Key="OptionsRadioButtonItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <RadioButton 
                                x:Name="radioButton" 					
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}" 
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="IsChecked" Value="True" TargetName="radioButton" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--  *********************************  TextBoxValidationToolTip Template  *********************************  -->
    <ControlTemplate x:Key="TextBoxValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Margin="4,4,-4,-4"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.02" />
            <Border Margin="3,3,-3,-3"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.08" />
            <Border Margin="2,2,-2,-2"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.15" />
            <Border Margin="1,1,-1,-1"
                    Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}" />
            <Border>
                <TextBlock MaxWidth="250"
                           Margin="8,4,8,4"
                           Foreground="{StaticResource ForegroundBrush}"
                           Text="{Binding (Validation.Errors).CurrentItem.ErrorContent}"
                           TextWrapping="Wrap"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--  *********************************  ComboBoxToggleButton Style   *********************************  -->
    <Style x:Key="IGComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="MainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="22" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Bd"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="normal" 
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxToggleButtonBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxToggleButtonBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="hover" 
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2" 
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxToggleButtonHoverBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="focused" 
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxToggleButtonFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="pressed" 
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxToggleButtonPressedBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxToggleButtonPressedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Grid Grid.Column="1" HorizontalAlignment="Center">
                            <Path x:Name="Arrow"
                                  Width="7"
                                  Height="4"
                                  Data="{StaticResource DownArrow}"
                                  Fill="{StaticResource GlyphBackgroundBrush}"
                                  Stretch="Fill" />
                            <Path x:Name="ArrowSelected"
                                  Width="7"
                                  Height="4"
                                  Data="{StaticResource DownArrow}"
                                  Fill="{StaticResource GlyphActiveBackgroundBrush}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                            <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0" />
                            <Setter TargetName="ArrowSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxItem Style  *********************************  -->
    <Style x:Key="IGComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="Main" Background="{TemplateBinding Background}">
                        <Rectangle Fill="{StaticResource TransparentBrush}" />
                        <Rectangle x:Name="fillColor"
                                   Fill="{StaticResource ComboBoxItemHoverBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="CheckedBd"
                                   Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                                   IsHitTestVisible="False"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="fillColor" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusedVisualElement" Property="Stroke" Value="{StaticResource ComboBoxItemHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="CheckedBd" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Path=IsDropDownOpen}" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Main" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxEditableTextBox Style  *********************************  -->
    <Style x:Key="ComboBoxEditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="{StaticResource TransparentBrush}"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  Style="{StaticResource IGScrollViewerStyle}"
                                  VerticalScrollBarVisibility="Hidden"/>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.3" />                    
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboBoxEditable Template  *********************************  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="23" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="normal"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource ComboBoxBackgroundBrush}"
                       Stroke="{StaticResource ComboBoxBorderBrush}"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}" />
            <Rectangle x:Name="hover"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                       Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"/>
            <Rectangle x:Name="active"
                         Grid.Column="0"
                         Grid.ColumnSpan="2"
                         Fill="{StaticResource ComboBoxActiveBackgroundBrush}"
                         RadiusX="{StaticResource RadiusXY}"
                         RadiusY="{StaticResource RadiusXY}"
                         Stroke="{StaticResource ComboBoxActiveBorderBrush}"
                         StrokeThickness="{StaticResource DefaultStrokeThickness}"
                         Visibility="Collapsed" />
            <Popup x:Name="PART_Popup"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="DropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        HorizontalAlignment="Stretch"
                        Background="{StaticResource PopupBackgroundBrush}"
                        BorderBrush="{StaticResource PopupBorderBrush}"
                        BorderThickness="1">
                    <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource IGScrollViewerStyle}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <Canvas Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                <Rectangle x:Name="OpaqueRect"
                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                           Fill="{Binding Background, ElementName=DropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggle" 
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource IGComboBoxToggleButtonStyle}" />
            <TextBox x:Name="PART_EditableTextBox"
                     Grid.Column="0"
                     Margin="-2,1,5,0"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{StaticResource ComboBoxEditableTextBoxStyle}" />
            <Rectangle x:Name="focused"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                       StrokeThickness="{StaticResource DefaultStrokeThickness}"
                       Visibility="Collapsed"
                       RadiusX="{StaticResource RadiusXY}"
                       RadiusY="{StaticResource RadiusXY}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger  Property="IsMouseOver" Value="True">
                <Setter TargetName="hover" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger  Property="IsFocused" Value="True">
                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger  Property="IsDropDownOpen" Value="True">
                <Setter TargetName="active" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="True"/>
                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding ElementName=toggle, Path=IsPressed}" Value="True" >
                <Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  *********************************  ComboBox Style  *********************************  -->
    <Style x:Key="IGComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource IGComboBoxItemStyle}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource ComboBoxPadding}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="23" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="normal"
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                        <Rectangle x:Name="hover"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxHoverBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxHoverBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="active"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Fill="{StaticResource ComboBoxActiveBackgroundBrush}"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxActiveBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                        <Popup x:Name="PART_Popup"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Margin="1"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="DropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    HorizontalAlignment="Stretch"
                                    Background="{StaticResource PopupBackgroundBrush}"
                                    BorderBrush="{StaticResource PopupBorderBrush}"
                                    BorderThickness="{StaticResource DefaultBorderThickness}">
                                <ScrollViewer x:Name="DropDownScrollViewer" Style="{StaticResource IGScrollViewerStyle}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource IGComboBoxToggleButtonStyle}" />
                        <ContentPresenter x:Name="contentPresenter"
										  Grid.ColumnSpan="2"
                                          Grid.Column="0"
                                          Margin="6 3 24 1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle x:Name="focused"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   RadiusX="{StaticResource RadiusXY}"
                                   RadiusY="{StaticResource RadiusXY}"
                                   Stroke="{StaticResource ComboBoxFocusedBorderBrush}"
                                   StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger  Property="IsFocused" Value="True">
                            <Setter TargetName="focused" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger  Property="IsMouseCaptureWithin" Value="True">
                            <Setter TargetName="active" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger  Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="active" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="normal" Property="Opacity" Value="0.3" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  *********************************  TextBox Style  *********************************  -->
    <Style x:Key="SamplesTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxValidationToolTipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Opacity" To="0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="1" />
                            <Border x:Name="DisabledVisualElement"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    IsHitTestVisible="False"
                                    Opacity="0" />
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                    BorderBrush="{StaticResource TextBoxReadOnlyBorderBrush}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          IsTabStop="False"
                                          Padding="{TemplateBinding Padding}" />
                        </Grid>
                        <Border x:Name="FocusVisualElement"
                                BorderBrush="{StaticResource TextBoxFocusedBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource TextBoxValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Width="12"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="{StaticResource TransparentBrush}">
                                <Path Margin="1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}" />
                                <Path Margin="1,3,0,0"
                                      Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource ForegroundBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** PasswordBox Style **********************************  -->
    <SolidColorBrush x:Key="PasswordBoxForegroundBrush" Color="{StaticResource Color_001}" />
    <Style x:Key="SamplesPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="{StaticResource PasswordBoxForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Padding" Value="{StaticResource TextBoxPadding}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="CaretBrush" Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource CornerRadius}" />
                        <Border x:Name="ReadOnlyVisualElement"
                                Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                CornerRadius="{StaticResource CornerRadius}"
                                Opacity="0" />
                        <Border>
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--  *********************************  RichTextBox Template  *********************************  -->  
    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border x:Name="border" 
                BorderBrush="{StaticResource TextBoxBorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{StaticResource TextBoxBackgroundBrush}" 
                SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.3" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter  TargetName="border" Property="BorderBrush" Value="{StaticResource TextBoxFocusedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  *********************************  ListBoxItem Style  *********************************  -->
    <Style x:Key="IGListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource FontNormal}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="MainGrid">
                        <Rectangle x:Name="FocusedVisualElement"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource ListBoxItemFocusedBorderBrush}"
                                  StrokeThickness="{StaticResource DefaultStrokeThickness}"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BgSelected"
                                   Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Fill" Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BgSelected" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentControl" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusedVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ListBox Style  *********************************  -->
    <Style x:Key="IGListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource ListBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource IGListBoxItemStyle}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="fillColor"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource IGScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="10"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  Background="{StaticResource TransparentBrush}">
                                <Path Margin="-1,3,0,0"
                                      Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}" />
                                <Path Margin="-1,3,0,0"
                                      Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource ForegroundBrush}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--  *********************************  ScrollPreviousRepeatButton Style  *********************************  -->
    <Style x:Key="IGPreviousButtonStyle" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid >
                        <Rectangle Width="10"
                                   Height="10"
                                   Margin="{StaticResource RepeatButtonArrowMargin}"
                                   Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="6"
                              Height="10"
                              Margin="{StaticResource RepeatButtonArrowMargin}"
                              Data="{StaticResource VArrowLeft}"
                              Fill="{StaticResource ScrollRepeatButtonBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                     <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ScrollRepeatButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ScrollRepeatButtonPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ScrollNextRepeatButton Style  *********************************  -->
    <Style x:Key="IGNextButtonStyle" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid >
                        <Rectangle Width="10"
                                   Height="10"
                                   Margin="{StaticResource RepeatButtonArrowMargin}"
                                   Fill="{StaticResource TransparentBrush}" />
                        <Path x:Name="Arrow"
                              Width="6"
                              Height="10"
                              Margin="{StaticResource RepeatButtonArrowMargin}"
                              Data="{StaticResource VArrowRight}"
                              Fill="{StaticResource ScrollRepeatButtonBackgroundBrush}"
                              Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ScrollRepeatButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ScrollRepeatButtonPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Naviagtion Pane - ArrowButton Style  *********************************  -->
    <Style x:Key="ArrowButtonStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="{StaticResource NavPaneButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NavPaneButtonBorderBrush}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{StaticResource TransparentBrush}" x:Name="grid">
                        <Ellipse x:Name="normal" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Ellipse x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonHoverBorderBrush}" Fill="{StaticResource NavPaneButtonHoverBackgroundBrush}"/>
                        <Ellipse x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonPressedBorderBrush}" Fill="{StaticResource NavPaneButtonPressedBackgroundBrush}"/>
                        <Ellipse x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonFocusedBorderBrush}" Fill="{StaticResource NavPaneButtonFocusedBackgroundBrush}"/>
                        <ContentPresenter Margin="4,4,4,4" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <Path x:Name="path" HorizontalAlignment="Center" VerticalAlignment="Center" Height="6" Width="10" Stretch="Fill" Opacity="1" Data="M 1.6118 6 L 0 4.5825 L 5 0 L 10 4.5825 L 8.511 5.9325 L 5.0245 2.7823 L 1.6118 6 Z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Fill="{StaticResource GlyphBackgroundBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" /> 
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  Naviagtion Pane - CrossButton Style  *********************************  -->
    <Style x:Key="CrossButtonStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="IsTabStop" Value="true" />
        <Setter Property="Background" Value="{StaticResource NavPaneButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NavPaneButtonBorderBrush}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <Ellipse x:Name="normal" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Ellipse x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonHoverBorderBrush}" Fill="{StaticResource NavPaneButtonHoverBackgroundBrush}"/>
                        <Ellipse x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonPressedBorderBrush}" Fill="{StaticResource NavPaneButtonPressedBackgroundBrush}"/>
                        <Ellipse x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonFocusedBorderBrush}" Fill="{StaticResource NavPaneButtonFocusedBackgroundBrush}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" />
                        <Path x:Name="path" Height="10" Width="10" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" UseLayoutRounding="False" 
                                      Data="{StaticResource ScaleToFitIcon}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.3" />
                        </Trigger>
                        <!--<Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="focused" Property="Opacity" Value="1" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** IGGridSplitter Style **********************************  -->
    <Style x:Key="IGGridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource GridSplitterBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="{StaticResource GridSplitterPressedBackgroundBrush}"
                                           Opacity="0.75"
                                           Stroke="{StaticResource GridSplitterPressedBorderBrush}"
                                           StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid>
                        <Border x:Name="border"
                                MinWidth="8"
                                MinHeight="8"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <StackPanel x:Name="HGrip"
                                            Height="8"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Vertical">
                                    <Rectangle x:Name="HGripTopElem"
                                               Width="20"
                                               Height="1"
                                               Margin="1,2,1,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                    <Rectangle x:Name="HGripBottomElem"
                                               Width="20"
                                               Height="1"
                                               Margin="1,1,1,2"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                </StackPanel>
                                <StackPanel x:Name="VGrip"
                                            Width="8"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="Collapsed">
                                    <Rectangle x:Name="VGripTopElem"
                                               Width="1"
                                               Height="20"
                                               Margin="2,1,1,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                    <Rectangle x:Name="VGripBottomElem"
                                               Width="1"
                                               Height="20"
                                               Margin="1,1,2,1"
                                               Fill="{StaticResource GlyphBackgroundBrush}"
                                               StrokeThickness="0" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalAlignment" Value="Stretch">
                            <Setter TargetName="HGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="VGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="VerticalAlignment" Value="Stretch">
                            <Setter TargetName="VGrip" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterHoverBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterHoverBorderBrush}" />
                            <Setter TargetName="HGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="HGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GridSplitterPressedBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GridSplitterPressedBorderBrush}" />
                            <Setter TargetName="HGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="HGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripTopElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="VGripBottomElem" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
     <!--  ********************************** ProgressBar Style **********************************  -->
    <Style x:Key="IGProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarTrackFillBrush}" />
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter Property="Height" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="00:00:2" From="0" Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" To="500" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ProgressBarTrack" Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="PART_Track" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Decorator>
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle x:Name="IndeterminateSolidFill"
                                       Fill="{TemplateBinding Background}"
                                       Opacity="1"
                                       RenderTransformOrigin="0.5,0.5" />
                            <Rectangle x:Name="IndeterminateGradientFill" Fill="{StaticResource ProgressBarIndeterminateBackgroundBrush}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateRoot" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <!-- *********************************  Motion PLay Button Style  ********************************* -->
            <Style x:Key="MotionPlayButtonStyle" TargetType="ToggleButton">
                <Setter Property="Padding" Value="8,0,8,1" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinWidth" Value="24" />
                <Setter Property="MinHeight" Value="24" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="Container">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pause">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible
                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="play">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed
                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Ellipse x:Name="normal" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonBorderBrush}" Fill="{StaticResource ButtonBackgroundBrush}" />
                                <Ellipse x:Name="hover" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonHoverBorderBrush}" Fill="{StaticResource ButtonHoverBackgroundBrush}" Opacity="0" />
                                <Ellipse x:Name="pressed" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonPressedBorderBrush}" Fill="{StaticResource ButtonPressedBackgroundBrush}" Opacity="0" />
                                <Ellipse x:Name="disabled" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ToggleButtonDisabledBorderBrush}" Fill="{StaticResource ToggleButtonDisabledBackgroundBrush}" Opacity="0" />
                                <Ellipse x:Name="checked" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource ButtonFocusedBorderBrush}" Fill="{StaticResource ButtonFocusedBackgroundBrush}" Opacity="0" />
                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="0" Opacity="0" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" RadiusY="3" RadiusX="3" />
                                <Path x:Name="play" Data="M 662 335 L 668 331 L 662 327 L 662 335 Z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="8" Margin="1,0,0,0" />
                                <Path x:Name="pause" Data="M 731 309 L 731 318 L 733 318 L 733 309 L 731 309 ZM 727 309 L 727 318 L 729 318 L 729 309 L 727 309 Z" Fill="{StaticResource GlyphBackgroundBrush}" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="8" Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="play" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                                    <Setter TargetName="hover" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="play" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
									<Setter TargetName="pause" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                                    <Setter TargetName="pressed" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Container" Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style> 
    
     <!--  *********************************  IncrementButton Style  *********************************  -->
    <Style x:Key="IGMinusButtonStyle" TargetType="Button">
         <Setter Property="Background" Value="{StaticResource NavPaneButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NavPaneButtonBorderBrush}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <Ellipse x:Name="normal" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Ellipse x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonHoverBorderBrush}" Fill="{StaticResource NavPaneButtonHoverBackgroundBrush}"/>
                        <Ellipse x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonPressedBorderBrush}" Fill="{StaticResource NavPaneButtonPressedBackgroundBrush}"/>
                        <Ellipse x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonFocusedBorderBrush}" Fill="{StaticResource NavPaneButtonFocusedBackgroundBrush}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" />
                        <Path x:Name="path" Height="2" Width="8" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" UseLayoutRounding="False" 
                                      Data="{StaticResource MinusIcon}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  *********************************  IncrementButton Style  *********************************  -->
    <Style x:Key="IGPlusButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource NavPaneButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource NavPaneButtonBorderBrush}" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid">
                        <Ellipse x:Name="normal" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                        <Ellipse x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonHoverBorderBrush}" Fill="{StaticResource NavPaneButtonHoverBackgroundBrush}"/>
                        <Ellipse x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonPressedBorderBrush}" Fill="{StaticResource NavPaneButtonPressedBackgroundBrush}"/>
                        <Ellipse x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource NavPaneButtonFocusedBorderBrush}" Fill="{StaticResource NavPaneButtonFocusedBackgroundBrush}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Visibility="Collapsed" />
                        <Path x:Name="path" Height="8" Width="8" Stretch="Fill" Opacity="1" Fill="{StaticResource GlyphBackgroundBrush}" Data="{StaticResource PlusIcon}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                            <Setter TargetName="pressed" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************** GroupBox Style **********************************  -->
    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--<Border BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1" Grid.RowSpan="2" BorderBrush="{TemplateBinding BorderBrush}">
							<Border.Clip>
								<GeometryGroup FillRule="EvenOdd">
									<RectangleGeometry x:Name="FullRect" Rect="0,0,300,200" />
									<RectangleGeometry x:Name="HeaderRect" Rect="6,0,100,100" />
								</GeometryGroup>
							</Border.Clip>
						</Border>-->
                        <!--  Header  -->

                        <ContentControl x:Name="HeaderContainer"
                                        HorizontalAlignment="Left"
                                        Foreground="{TemplateBinding Foreground}">
                            <Border Margin="0,0,0,12"
                                    Background="{StaticResource TransparentBrush}"
                                    Padding="0 2 6 4">
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Content="{TemplateBinding Header}"
                                                  Opacity="0.6" />
                            </Border>
                        </ContentControl>

                        <!--  Content  -->
                        <ContentPresenter Grid.Row="2"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- this code creates implicit styles for MS controls -->
    <!-- ============================================================================= -->
    <Style BasedOn="{StaticResource IGListBoxItemStyle}" TargetType="ListBoxItem" />
    <Style BasedOn="{StaticResource IGListBoxStyle}" TargetType="ListBox" />
    <Style BasedOn="{StaticResource IGCheckBoxStyle}" TargetType="CheckBox" />
    <Style BasedOn="{StaticResource IGGenericButton}" TargetType="Button" />
    <Style BasedOn="{StaticResource IGToggleButtonStyle}" TargetType="ToggleButton" />
    <Style BasedOn="{StaticResource IGRadioButtonStyle}" TargetType="RadioButton" />
    <Style BasedOn="{StaticResource IGComboBoxItemStyle}" TargetType="ComboBoxItem" />
    <Style BasedOn="{StaticResource IGScrollViewerStyle}" TargetType="ScrollViewer" />
    <Style BasedOn="{StaticResource IGSliderStyle}" TargetType="Slider" />
    <Style BasedOn="{StaticResource IGComboBoxStyle}" TargetType="ComboBox" />
    <Style BasedOn="{StaticResource SamplesTextBoxStyle}" TargetType="TextBox" />
    <Style BasedOn="{StaticResource SamplesPasswordBoxStyle}" TargetType="PasswordBox" />

    <!-- ============================================================================= -->

</ResourceDictionary>