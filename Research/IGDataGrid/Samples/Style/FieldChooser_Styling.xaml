<igFramework:SampleContainer x:Class="IGDataGrid.Samples.Style.FieldChooser_Styling"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="FieldChooser_Styling"
      xmlns:igDP="http://infragistics.com/DataPresenter"
      xmlns:igEditors="http://infragistics.com/Editors"
      xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:igWindows="http://infragistics.com/Windows">

    <igFramework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGDataGrid;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </igFramework:SampleContainer.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!-- Create a FieldChooser and associate it with a data presenter by simply setting its
        DataPresenter property.-->
        <igDP:FieldChooser x:Name="fieldChooser"
                           Width="180"
                           Grid.Column="0"
                           Margin="0,0,10,0"
                           DataPresenter="{Binding ElementName=XamDataGrid1}" />
        <igDP:XamDataGrid x:Name="XamDataGrid1"
                          Grid.Column="1"
                          Theme="RoyalLight">

            <igDP:XamDataGrid.Resources>
                <!-- You can use the FieldChooserButtonStyleKey to change the way the field chooser button
                in the data presenter looks.-->
                <Style x:Key="{x:Static igDP:DataPresenterBase.FieldChooserButtonStyleKey}"
                       TargetType="{x:Type Button}">
                    <Setter Property="Cursor"
                            Value="Hand" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Image HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       igWindows:Utilities.SnapElementToDevicePixels="True"
                                       Stretch="None"
                                       Width="16"
                                       Height="16">
                                    <Image.Source>
                                        <BitmapImage UriSource="../../Resources/FieldChooserIcon.png" />
                                    </Image.Source>
                                </Image>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="{x:Type igDP:FieldChooser}"
                       TargetType="{x:Type igDP:FieldChooser}">
                    <Style.Resources>
                        <!--FieldChooserEntry represents a field in the field chooser. This data template shows
                        the checkbox inside the label presenter instead of the default which is show it left of
                        the label presenter.-->
                        <DataTemplate DataType="{x:Type igDP:FieldChooserEntry}">
                            <Grid>
                                <igDP:LabelPresenter x:Name="label"
                                                     HorizontalAlignment="Stretch"
                                                     VerticalAlignment="Stretch"
                                                     Field="{Binding Path=Field}"
                                                     IsInFieldChooser="true"
                                                     IsSelectedInFieldChooser="{Binding Path=IsSelected}"
                                                     Padding="30,7,2,7">
                                    <igDP:LabelPresenter.Style>
                                        <Style TargetType="{x:Type igDP:LabelPresenter}">
                                            <Setter Property="BorderBrush"
                                                    Value="#FFBBBBBB" />
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0.49,-0.00"
                                                                         EndPoint="0.49,0.99">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Offset="0"
                                                                              Color="#FFDDDDDD" />
                                                                <GradientStop Offset="0.99"
                                                                              Color="#FFCCCCCC" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type igDP:LabelPresenter}">
                                                        <Grid>
                                                            <Rectangle Fill="{TemplateBinding Background}"
                                                                       Stroke="{TemplateBinding BorderBrush}"
                                                                       StrokeThickness="1"
                                                                       SnapsToDevicePixels="True" />
                                                            <Rectangle x:Name="Highlight"
                                                                       Height="1"
                                                                       Margin="1"
                                                                       VerticalAlignment="Top"
                                                                       Stroke="#CCCCCC"
                                                                       SnapsToDevicePixels="True"
                                                                       StrokeThickness="1" />
                                                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"
                                                                              Margin="{TemplateBinding Padding}">
                                                            </ContentPresenter>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="True">
                                                                <Setter Property="Cursor"
                                                                        Value="Hand" />
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0.47,-0.17"
                                                                                             EndPoint="0.47,2.04">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStopCollection>
                                                                                    <GradientStop Offset="0"
                                                                                                  Color="#FFCCCCCC" />
                                                                                    <GradientStop Offset="0.98"
                                                                                                  Color="#FFffffff" />
                                                                                </GradientStopCollection>
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsSelectedInFieldChooser"
                                                                     Value="True">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0.49,-0.00"
                                                                                             EndPoint="0.49,0.99">
                                                                            <LinearGradientBrush.GradientStops>
                                                                                <GradientStopCollection>
                                                                                    <GradientStop Offset="0"
                                                                                                  Color="#FF6E42B2" />
                                                                                    <GradientStop Offset="0.99"
                                                                                                  Color="#FFCFBFE8" />
                                                                                </GradientStopCollection>
                                                                            </LinearGradientBrush.GradientStops>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="Highlight"
                                                                        Property="Stroke"
                                                                        Value="#59FFFFFF" />
                                                                <Setter Property="Foreground"
                                                                        Value="#FFFFFFFF" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </igDP:LabelPresenter.Style>
                                    <!--This is for toggling the visibility of a field by double clicking on it in the field chooser.-->
                                    <igDP:LabelPresenter.InputBindings>
                                        <MouseBinding Command="{x:Static igDP:FieldChooserCommands.ToggleVisibility}"
                                                      MouseAction="LeftDoubleClick" />
                                    </igDP:LabelPresenter.InputBindings>
                                </igDP:LabelPresenter>
                                <igEditors:XamCheckEditor x:Name="checkBox"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center"
                                                          Margin="5,0,10,0"
                                                          IsThreeState="false"
                                                          Value="{Binding Path=IsVisible, Mode=TwoWay}" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <!-- This trigger changes the appearance of labels in the field chooser that are currently
                                hidden in the data presenter. -->
                                <DataTrigger Binding="{Binding Path=IsVisible}"
                                             Value="False">
                                    <Setter TargetName="label"
                                            Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0.48,-0.82"
                                                                 EndPoint="0.48,1.28">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0"
                                                                      Color="#FFCCCCCC" />
                                                        <GradientStop Offset="0.99"
                                                                      Color="#FFffffff" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="label"
                                            Property="Foreground"
                                            Value="#FF333333" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Style.Resources>
                    <Style.Triggers>
                        <!-- You can show some kind of visual queue when the user drags a field from the field chooser by
                        using IsDraggingItem property.-->
                        <Trigger Property="IsDraggingItem" Value="true">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="#FF3C4EAE" />
                        </Trigger>
                        <!-- You can show some kind of visual queue when the user drags a field from the data presenter
                        using the IsDraggingItemFromDataPresenter property.-->
                        <Trigger Property="IsDraggingItemFromDataPresenter" Value="true">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <!-- You can show some kind of visual queue when the user drags a field from the data presenter
                        and moves it over the field chooser by using the IsDragItemOver property.-->
                        <Trigger Property="IsDragItemOver" Value="true">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="BorderBrush" Value="#FF98AC26" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </igDP:XamDataGrid.Resources>
            <!-- #BEGIN SNIPPET# -->
            <igDP:XamDataGrid.FieldLayoutSettings>
                <igDP:FieldLayoutSettings AutoGenerateFields="true"
                                          HeaderPrefixAreaDisplayMode="FieldChooserButton" />
            </igDP:XamDataGrid.FieldLayoutSettings>
            <igDP:XamDataGrid.FieldLayouts>
                <igDP:FieldLayout IsDefault="true">
                    <igDP:FieldLayout.Fields>
                        <!-- Hide some fields for demonstration purposes. -->
                        <igDP:Field Name="EmployeeID" Visibility="Collapsed" />
                        <igDP:Field Name="OrderID" Visibility="Collapsed" />
                        <igDP:Field Name="ShipRegion" Visibility="Collapsed" />
                    </igDP:FieldLayout.Fields>
                </igDP:FieldLayout>
            </igDP:XamDataGrid.FieldLayouts>
            <!-- #END SNIPPET# -->
        </igDP:XamDataGrid>
    </Grid>
</igFramework:SampleContainer>
