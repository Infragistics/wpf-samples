<igFramework:SampleContainer x:Class="IGDataGrid.Samples.Style.FixedFieldStyling"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="FixedFieldStyling"
      xmlns:igDP="http://infragistics.com/DataPresenter"
      xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:igWindows="http://infragistics.com/Windows"
      xmlns:System="clr-namespace:System;assembly=mscorlib"
      xmlns:igThemes="http://infragistics.com/Themes">

    <igFramework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGDataGrid;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <XmlDataProvider x:Key="QuarterbackData" />
        </ResourceDictionary>
    </igFramework:SampleContainer.Resources>

    <Grid>
        <igDP:XamDataGrid x:Name="XamDataGrid1"
                          Theme="RoyalLight"
                          DataSource="{Binding Source={StaticResource QuarterbackData}, XPath=season}">
            <igDP:XamDataGrid.Resources>
                <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, SummaryCommandButtonsBorder}" Color="#AAAAAA" />
                <SolidColorBrush x:Key="{ComponentResourceKey {x:Type igDP:XamDataGrid}, SummaryButtonBackgroundHover}" Color="White" />

                <LinearGradientBrush x:Key="LabelBackground"
                                     StartPoint="0,0"
                                     EndPoint="0,1">
                    <GradientStop Offset="0"
                                  Color="#FF757575" />
                    <GradientStop Offset="0.93"
                                  Color="#FF505050" />
                    <GradientStop Offset="0.98"
                                  Color="#FF4f4f4f" />
                </LinearGradientBrush>
                <igDP:TextAlignmentToHorizontalAlignmentConverter x:Key="textAlignmentToHorizontalAlignmentConverter" />
                <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
                
                <!-- _________________________ LabelPresenter __________________________________________ -->
                <!-- #BEGIN SNIPPET# -->
                <Style TargetType="{x:Type igDP:LabelPresenter}" BasedOn="{x:Static igThemes:DataPresenterRoyalLight.LabelPresenter}">
                    <Style.Triggers>
                        <Trigger Property="IsFixed"
                                 Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                                         StartPoint="0.5,0">
                                        <GradientStop Color="#FF274072"
                                                      Offset="0" />
                                        <GradientStop Color="#FF274072"
                                                      Offset="0.35" />
                                        <GradientStop Color="#FF274072"
                                                      Offset="0.35" />
                                        <GradientStop Color="#FF012D83"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                    <!-- #END SNIPPET# -->
                    <Setter Property="Padding"
                            Value="7,4" />
                    <Setter Property="Height"
                            Value="26" />
                    <Setter Property="Background"
                            Value="{StaticResource LabelBackground}" />
                    <Setter Property="LabelHighlight">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1"
                                                 StartPoint="0,0">
                                <GradientStop Color="#FF6E787C"
                                              Offset="0" />
                                <GradientStop Color="#FF687378"
                                              Offset="0.35" />
                                <GradientStop Color="#FF516770"
                                              Offset="0.35" />
                                <GradientStop Color="#FF3F525A"
                                              Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness"
                            Value="0,1,1,1" />
                    <Setter Property="InnerBorderBrush"
                            Value="#7F999999" />
                    <Setter Property="OuterBorderBrush"
                            Value="#FF535353" />
                    <Setter Property="Margin"
                            Value="0" />
                    <Setter Property="Foreground"
                            Value="#FFFFFFFF" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="{Binding Path=Field.LabelTextAlignmentResolved, Converter={StaticResource textAlignmentToHorizontalAlignmentConverter}, RelativeSource={x:Static RelativeSource.Self}}" />
                    <Setter Property="ToolTip"
                            Value="{Binding Path=Field.ToolTip, RelativeSource={x:Static RelativeSource.Self}}" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type igDP:LabelPresenter}">
                                <Grid x:Name="labelCntr">
                                    <Border RenderTransformOrigin="0.5,0.5"
                                            CornerRadius="0"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="True"
                                            Background="{TemplateBinding Background}"
                                            x:Name="background">
                                        <Border BorderBrush="{TemplateBinding InnerBorderBrush}"
                                                BorderThickness="1,0,0,0"
                                                x:Name="lineInner"
                                                SnapsToDevicePixels="True" />
                                    </Border>
                                    <Border BorderBrush="{TemplateBinding OuterBorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            x:Name="lineOuter"
                                            SnapsToDevicePixels="True" />
                                    <Grid x:Name="sortIndicatorAndLabel"
                                          Margin="5,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="LabelContent"
                                                          Focusable="False"
                                                          Margin="{TemplateBinding Padding}"
                                                          Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        <igWindows:SortIndicator x:Name="SortIndicator"
                                                                 SortStatus="{TemplateBinding SortStatus}"
                                                                 Visibility="Collapsed"
                                                                 HorizontalAlignment="Right"
                                                                 VerticalAlignment="Center"
                                                                 Grid.Column="1"
                                                                 Margin="5,0,0,0" />
                                        <igDP:SummaryButton x:Name="SummaryButton"
                                                            Field="{TemplateBinding Field}"
                                                            Visibility="{Binding Path=Field.AllowSummariesResolved, Converter={StaticResource BoolToVisConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                            HorizontalAlignment="Right"
                                                            Grid.Column="2"
                                                            Margin="5,0,0,0" />
                                        <igDP:FilterButton x:Name="FilterButton"
                                                           Field="{TemplateBinding Field}"
                                                           Visibility="{TemplateBinding FilterButtonVisibility}"
                                                           HorizontalAlignment="Left"
                                                           Grid.Column="3"
                                                           Margin="5,0,0,0" />
                                        <igDP:FixedFieldButton x:Name="FixedButton"
                                                               Field="{TemplateBinding Field}"
                                                               Visibility="{TemplateBinding FixedButtonVisibility}"
                                                               HorizontalAlignment="Left"
                                                               Grid.Column="4"
                                                               Margin="2,0" />
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HighlightAsPrimary"
                                             Value="true">
                                        <Setter TargetName="background"
                                                Property="Background"
                                                Value="{Binding Path=LabelHighlight, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Trigger>
                                    <Trigger Property="HorizontalAlignment"
                                             Value="Center">
                                        <Setter Property="VerticalAlignment"
                                                TargetName="SortIndicator"
                                                Value="Top" />
                                        <Setter Property="HorizontalAlignment"
                                                TargetName="SortIndicator"
                                                Value="Center" />
                                        <Setter Property="Margin"
                                                TargetName="SortIndicator"
                                                Value="0,5,0,0" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter TargetName="background"
                                                Property="Background"
                                                Value="{Binding Path=LabelHighlight, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Trigger>
                                    <Trigger Property="SortStatus"
                                             Value="Ascending">
                                        <Setter TargetName="background"
                                                Property="Background"
                                                Value="{Binding Path=LabelHighlight, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter TargetName="SortIndicator"
                                                Property="Visibility"
                                                Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="SortStatus"
                                             Value="Descending">
                                        <Setter TargetName="background"
                                                Property="Background"
                                                Value="{Binding Path=LabelHighlight, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Setter TargetName="SortIndicator"
                                                Property="Visibility"
                                                Value="Visible" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Path=IsInGroupByArea, RelativeSource={RelativeSource Self}}"
                                                 Value="True">
                                        <Setter TargetName="FixedButton"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        <Setter TargetName="SummaryButton"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                    </DataTrigger>
                                    <Trigger Property="IsInFieldChooser"
                                             Value="true">
                                        <Setter TargetName="SortIndicator"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        <Setter TargetName="FilterButton"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        <Setter TargetName="FixedButton"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        <Setter TargetName="SummaryButton"
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        <Setter TargetName="labelCntr"
                                                Property="Margin"
                                                Value="0,0,0,0" />
                                    </Trigger>
                                    <Trigger Property="IsDragIndicator"
                                             Value="True">
                                        <Setter Property="Padding"
                                                Value="7,4" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type igDP:CellValuePresenter}" BasedOn="{x:Static igThemes:DataPresenterRoyalLight.CellValuePresenter}">
                    <Style.Triggers>
                        <Trigger Property="IsFixed"
                                 Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="1,0">
                                        <GradientStop Offset="0"
                                                      Color="#00000000" />
                                        <GradientStop Offset="1"
                                                      Color="#19000000" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Field.IsFixedStateChanging, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter Property="Background"
                                    Value="#BFFFD569" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type igDP:FixedFieldSplitter}" BasedOn="{x:Static igThemes:DataPresenterRoyalLight.FixedFieldSplitter}">
                    <Style.Triggers>
                        <Trigger Property="IsInHeader"
                                 Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="1,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                              Color="#FF666666" />
                                                <GradientStop Offset="0.499"
                                                              Color="#FFaaaaaa" />
                                                <GradientStop Offset="0.5"
                                                              Color="#FFeeeeee" />
                                                <GradientStop Offset="1"
                                                              Color="#FFcccccc" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </igDP:XamDataGrid.Resources>
            
            <igDP:XamDataGrid.FieldSettings>
                <!-- Enable fixing by default for all the fields -->
                <igDP:FieldSettings AllowFixing="NearOrFar" />
            </igDP:XamDataGrid.FieldSettings>
            
            <igDP:XamDataGrid.FieldLayouts>
                <igDP:FieldLayout>
                    <igDP:FieldLayout.Fields>
                        <!--
                        NOTE: Most of these fields have their EditAsType set because the data source is XML.
                        The XamDataGrid treats XML data as strings unless you specify otherwise.
                        -->
                        <igDP:Field Name="year"
                                    Label="Year">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="team"
                                    Label="Team" />
                        <igDP:Field Name="games"
                                    Label="Games">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="qbrate"
                                    Label="Rating">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="comp"
                                    Label="Completions">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="att"
                                    Label="Attempts">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="pct"
                                    Label="Passing %">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="passingyards"
                                    Label="Total Passing Yards">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="passingyardsperattempt"
                                    Label="Passing Yards/Attempt">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="passingyardspergame"
                                    Label="Passing Yards/Game">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="passingtd"
                                    Label="Passing Touchdowns">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="int"
                                    Label="Interceptions">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushs"
                                    Label="Rushes">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushyrds"
                                    Label="Rushing Yards">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushyardspergame"
                                    Label="Rushing Yard/Game">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushavg"
                                    Label="Rushing Average">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushtd"
                                    Label="Rushing Touchdowns">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="sack"
                                    Label="Sacks">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="yardslost"
                                    Label="Yards Lost">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type System:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="fum"
                                    Label="Fumbles"
                                    Visibility="Collapsed" />
                        <igDP:Field Name="fuml"
                                    Label="Fumbles Lost"
                                    Visibility="Collapsed" />
                    </igDP:FieldLayout.Fields>
                </igDP:FieldLayout>
            </igDP:XamDataGrid.FieldLayouts>
        </igDP:XamDataGrid>
    </Grid>
</igFramework:SampleContainer>
