<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igPivot="http://schemas.infragistics.com/xaml"
    xmlns:igPivotPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!-- *********************************  COLORS  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Theme.Colors.xaml" />
      <ResourceDictionary Source="Styles.WPF.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************** String Resources **********************************************-->
    <igPivot:PivotStringSettings x:Key="stringResources"/>

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="IconFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="InvalidFocusedStroke" Color="{StaticResource Color_028}"/>
    <SolidColorBrush x:Key="DisabledPanelBackgroundBrush" Color="{StaticResource Color_005}"/>

    <!-- Cell Brushes -->
    <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="HeaderCellHoverBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HeaderCellOptionsPaneBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HeaderCellGlyphFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="CellItemAlternateBackgroundBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="CellItemHoverFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="CellItemHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="CellItemActiveStrokeBrush" Color="{StaticResource Color_024}"/>

    <!-- DropDown Brushes -->
    <SolidColorBrush x:Key="DropDownBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="DropDownBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="DropDownHoverFillBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="DropDownHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="DropDownFocusedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="DropDownDisabledFillBrush" Color="{StaticResource Color_012}"/>

    <!-- TreeNode Brushes -->
    <SolidColorBrush x:Key="TreeNodeHoverBackgroundBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="TreeNodeHoverBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="TreeNodeSelectedBackgroundBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="TreeNodeSelectedBorderBrush" Color="{StaticResource Color_024}"/>

    <!-- Field Brushes -->
    <SolidColorBrush x:Key="FieldsDropAreaBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="FilterCellSortButtonBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="AdvancedFilterFieldStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="MeasureFilterFieldStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="FieldChooserGroupForegroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="FieldChooserFillBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="FieldsDropAreaControlBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="FieldsDropAreaControlBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="FieldItemBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="FieldItemHoverBackgroundBrush" Color="{StaticResource Color_023}"/>
    <SolidColorBrush x:Key="FieldChooserItemPressedBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="FieldChooserItemPressedBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="FieldChooserItemHoverBackgroundBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="FieldChooserItemHoverBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="FilterFieldPendingChangesBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="FilterFieldOutterBorderBrush" Color="{StaticResource Color_004}"/>

    <!-- Expander Brushes -->
    <SolidColorBrush x:Key="ExpanderBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ExpanderBorderBrush" Color="{StaticResource Color_003}"/>

    <!-- PivotDataSelector Brushes -->
    <SolidColorBrush x:Key="PivotDataSelectorBackgroundBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="PivotDataSelectorBorderBrush" Color="{StaticResource Color_016}"/>

    <!-- PivotGrid Brushes -->
    <SolidColorBrush x:Key="PivotGridBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="PivotGridBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="PivotDataSelectorListBoxBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="EditorBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ResizeIndicatorBackgroundBrush" Color="{StaticResource Color_020}"/>
    <SolidColorBrush x:Key="DropIndicatorFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="DropTargetMarkerBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="DragTemplateBackgroundBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="DragTemplateBorderBrush" Color="{StaticResource Color_024}"/>
    <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundBrush" EndPoint="-2,17" StartPoint="-7,12" SpreadMethod="Repeat" MappingMode="Absolute">
      <GradientStop Color="{StaticResource Color_003}" Offset="0.499"/>
      <GradientStop Color="{StaticResource Color_007}" Offset="0.500"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PeekIconFillBrush" EndPoint="0.85,0.857" StartPoint="0.15,0.143">
      <GradientStop Color="{StaticResource Color_003}" Offset="0.500"/>
      <GradientStop Color="{StaticResource Color_009}" Offset="0.502"/>
    </LinearGradientBrush>
    
    <!--*********************************** Icon Paths ****************************************************-->
    <Style x:Key="FilterIconPath" TargetType="ContentControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Path Data="M0,0 L12,0 L8,5.3479185 L8,10 L7.844697,10 L4.1553025,10.000001 L4,10 L4,5.3479195 z" 
                              Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}"
                              Width="12" Height="10" VerticalAlignment="Center" Stretch="Fill" 
                              UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnsIconPath" TargetType="ContentControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Path Data="M8,0 L11,0 L11,11 L8,11 z M4,0 L7,0 L7,11 L4,11 z M0,0 L3,0 L3,11 L0,11 z"
                              Fill="{StaticResource IconFillBrush}" 
                              Height="11" Width="11" Stretch="Fill" VerticalAlignment="Center" 
                              UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowsIconPath" TargetType="ContentControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Path Data="M0,7.9999995 L11,7.9999995 L11,11 L0,11 z M5.4091242E-06,4 L11.000006,4 L11.000006,7 L5.4091242E-06,7 z M5.4091242E-06,0 L11.000006,0 L11.000006,3 L5.4091242E-06,3 z"
                              Fill="{StaticResource IconFillBrush}" 
                              Width="11" Height="11" VerticalAlignment="Center" Stretch="Fill" 
                              UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MeasuresIconPath" TargetType="ContentControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Path Data="M10,10 L14,10 L14,12 L10,12 z M0,9 L4,9 L4,12 L0,12 z M5,7 L9,7 L9,12 L5,12 z M0,5 L4,5 L4,8 L0,8 z M10,3 L14,3 L14,9 L10,9 z M5,0 L9,0 L9,6 L5,6 z"
                              Fill="{StaticResource IconFillBrush}" 
                              Width="14" Height="12" VerticalAlignment="Center" Stretch="Fill" 
                              UseLayoutRounding="False" igPrim:XamlHelper.SnapsToDevicePixels="True" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ******************************************************** SL-WPF INLINE-CONTROLS SHARED RESOURCES ***********************************************************
    *********************************************************************************************************************************************************************    -->

    <!-- *********************************  TextBlock Style  ********************************* -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="26"/>
    </Style>

    <Style x:Key="FiltersAreaBackgroundText" TargetType="TextBlock">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="13.333"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- **************************************************************** WPF SPECIFIC RESOURCES *********************************************************************
    *********************************************************************************************************************************************************************    -->

    <!-- *********************************  Dropdown Style   ********************************* -->
    <Style TargetType="igPivot:Dropdown" x:Key="DropdownStyle">
      <Setter Property="Padding" Value="6,0"/>
      <Setter Property="MaxHeight" Value="30"/>
      <Setter Property="MinHeight" Value="30" />
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Background" Value="{StaticResource DropDownBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource DropDownBorderBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:Dropdown">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true" Height="{TemplateBinding MaxHeight}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownhover">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownDisabled">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Unfocused"/>
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="FocusedDropDown">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DropDownBorder">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DropDownFocused" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="EmptyState">
                  <VisualState x:Name="Empty">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Selected">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="ContentPresenterBorder">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="32"/>
                  </Grid.ColumnDefinitions>
                  <Rectangle x:Name="DropDownBackground" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Height="{TemplateBinding MaxHeight}" Grid.ColumnSpan="2" StrokeThickness="{TemplateBinding BorderThickness}"/>
                  <Rectangle x:Name="DropDownhover" Height="{TemplateBinding MaxHeight}" Fill="{StaticResource DropDownHoverFillBrush}" Stroke="{StaticResource DropDownHoverStrokeBrush}" StrokeThickness="1" Margin="0" Opacity="0" Grid.ColumnSpan="2"/>
                  <ToggleButton Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ColumnSpan="2"/>
                  <Rectangle x:Name="DropDownFocused" Stroke="{StaticResource DropDownFocusedStrokeBrush}" StrokeThickness="2" IsHitTestVisible="false" Opacity="0" Grid.ColumnSpan="2"/>
                  <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
          IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                  <TextBlock IsHitTestVisible="False" x:Name="itemText" Text="{TemplateBinding EmptyString}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <Rectangle x:Name="DropDownDisabled" Fill="{StaticResource DropDownDisabledFillBrush}" IsHitTestVisible="false" d:LayoutOverrides="GridBox" Grid.Column="1" Opacity="0"/>
                </Grid>
              </Border>
              <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                <Border x:Name="DropDownBorder" HorizontalAlignment="Stretch" BorderBrush="{StaticResource PopupBorderBrush}" Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" >
                  <ScrollViewer CanContentScroll="true" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}" Margin="0">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style BasedOn="{StaticResource DropdownStyle}" TargetType="igPivot:Dropdown"/>

    <!-- **************************************************************** SL-WPF SHARED RESOURCES *******************************************************************
    *********************************************************************************************************************************************************************    -->

    <!-- ********************************** Converters **********************************-->
    <igPivotPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    <igPrim:InverseBooleanConverter x:Key="inverseBooleanConverter" />
    <igPrim:DoubleToStringConverter x:Key="doubleToStringConverter" />

    <!-- ********************************** Data Templates **********************************-->
    <DataTemplate x:Key="SummaryValueTemplateKey">
      <StackPanel Orientation="Horizontal">
        <TextBlock Text="{Binding}"/>
      </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FieldItemTemplateKey">
      <Border Background="{StaticResource TransparentBrush}">
        <TextBlock Text="{Binding Caption}" VerticalAlignment="Center"/>
      </Border>
    </DataTemplate>

    <DataTemplate x:Key="AxisChooserTemplateKey">
      <TextBlock Text="{Binding Path=HeaderText}"/>
    </DataTemplate>

    <!-- *********************************  DragTemplate  ********************************* -->
    <DataTemplate x:Key="DragTemplate">
      <Grid>
        <Border Opacity="0.65" Background="{StaticResource DragTemplateBackgroundBrush}" BorderBrush="{StaticResource DragTemplateBorderBrush}" BorderThickness="1">
          <TextBlock Text="{Binding Path=Data.Caption}" Margin="3,1"/>
        </Border>
      </Grid>
    </DataTemplate>

    <!-- *********************************  IconsPath Template  ********************************* -->
    <Style x:Key="IconsPathStyle" TargetType="Path">
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
      <Setter Property="Stretch" Value="Fill"/>
      <Setter Property="UseLayoutRounding" Value="False"/>
    </Style>

    <DataTemplate x:Key="CubeDataTemplate">
      <Grid>
        <Grid Background="{StaticResource TransparentBrush}">
          <StackPanel Orientation="Horizontal">
            <Canvas x:Name="CubeIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="2,2,0,0">
              <Path Data="M16.127712,3.4409983 C16.127712,3.4409983 16.186995,13.00624 16.186995,13.00624 C16.186995,13.00624 9.724494,15.999998 9.724494,15.999998 C9.724494,15.999998 9.6849957,5.9475532 9.6849957,5.9475532 C9.6849957,5.9475532 16.127712,3.4409983 16.127712,3.4409983 z M0.060999546,2.5609941 C0.060999565,2.5609941 8.4989996,5.9665947 8.4989996,5.9665947 C8.4989996,5.9665947 8.4989996,15.999994 8.4989996,15.999994 C8.4989996,15.999994 0.060999565,11.986634 0.060999546,11.986634 C0.060999565,11.986634 0.060999565,2.5609941 0.060999546,2.5609941 z M6.0630565,1.0580152E-08 C6.0630565,-3.5265657E-09 9.0633278,-3.5265657E-09 9.0633278,1.0580152E-08 C9.0633278,-3.5265657E-09 16.063999,2.2500081 16.063999,2.2500081 C16.063999,2.2500081 9.1257038,4.8749995 9.1257038,4.8749995 C9.1257038,4.8749995 0,1.3125302 0,1.3125302 C0,1.3125302 6.0630565,-3.5265657E-09 6.0630565,1.0580152E-08 z" Fill="{StaticResource IconFillBrush}" Height="16" Style="{StaticResource IconsPathStyle}" Stretch="Fill" StrokeThickness="3" Width="16"/>
            </Canvas>
            <TextBlock Text="{Binding Caption}"/>
          </StackPanel>
        </Grid>
      </Grid>
    </DataTemplate>

    <!-- *********************************  FilterDropdownToggleButton Style  ********************************* -->
    <Style x:Key="FilterDropdownToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked"/>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="0.7"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FilterCellSortButton Style  ********************************* -->
    <Style x:Key="FilterCellSortButtonStyle" TargetType="CheckBox">
      <Setter Property="BorderBrush" Value="{StaticResource LightForegroundBrush}"/>
      <Setter Property="Background" Value="{StaticResource FilterCellSortButtonBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <Grid Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>
                              Visible
                            </Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Indeterminate">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Indeterminate1">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid VerticalAlignment="Center" >
                <Rectangle Fill="{StaticResource TransparentBrush}"/>
                <Rectangle x:Name="Indeterminate1" VerticalAlignment="Center" Height="3" Width="10" Fill="{StaticResource GlyphNormalFillBrush}" HorizontalAlignment="Center" Visibility="Collapsed"/>
                <Path x:Name="SortedDescending" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Data="M68,41 C68,41 62,36 62,36 C62,36 74,36 74,36 C74,36 68,41 68,41 z" Fill="{StaticResource GlyphNormalFillBrush}" Width="10" Height="6" Visibility="Collapsed"/>
                <Path x:Name="SortedAscending" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Width="10" Height="6" Data="M68,31 C68,31 62,36 62,36 C62,36 74,36 74,36 C74,36 68,31 68,31 z" UseLayoutRounding="False" Fill="{StaticResource GlyphNormalFillBrush}" Visibility="Collapsed"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  HeaderCellSortButton Style  ********************************* -->
    <Style x:Key="HeaderCellSortButtonStyle" TargetType="ToggleButton">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Path x:Name="arrowLeft" Data="M6,0 L6,10 L0,4.7111111 z M10,0 L16,4.7111111 L10,10 z" Fill="{StaticResource GlyphNormalFillBrush}" HorizontalAlignment="Center" Height="10" IsHitTestVisible="False" Margin="1,1,0,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="16"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  HeaderCellControlExpansionIndicator Style  ********************************* -->
    <Style x:Key="HeaderCellControlExpansionIndicatorStyle" TargetType="ToggleButton">
      <Setter Property="Background" Value="{StaticResource GlyphNormalFillBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="ExpandSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapseSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="ExpandSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapseSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="ExpandSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CollapseSymbol">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CollapseSymbol" d:IsOptimized="True"/>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandSymbol" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Path x:Name="ExpandSymbol" Height="8" Width="8" Stretch="Fill" Opacity="1" Data="M3,0 L5,0 L5,3 L8,3 L8,5 L5,5 L5,8 L3,8 L3,5 L0,5 L0,3 L3,3 z" Fill="{TemplateBinding Background}" UseLayoutRounding="False"/>
              <Path x:Name="CollapseSymbol" Stretch="Fill" Opacity="0" Data="M0,0 L8,0 L8,2 L0,2 z" Fill="{TemplateBinding Background}" UseLayoutRounding="False" Margin="1,4" Width="8" Height="2"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FilterCellRemoveButton Style   ********************************* -->
    <Style x:Key="FilterCellRemoveButtonStyle" TargetType="Button">
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="0.7"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  HierarchicalItem Style  ********************************* -->
    <Style x:Key="HierarchicalItemStyle" TargetType="igPivot:XamHierarchicalItem">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:XamHierarchicalItem">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemTypeStates">
                  <VisualState x:Name="Cube">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CubeIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Measure" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MeasureIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Dimension" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DimensionIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="UserDefinedHierarchy">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchyMultipleIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SystemEnabledHierarchy">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchySingleIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="ParentChildHierarchy">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HierarchyDirectIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Level1" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level1Icon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Level2" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level2Icon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Level3" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level3Icon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Level4" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level4Icon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Level5" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Level5Icon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Group" >
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FolderIcon">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid Background="{StaticResource TransparentBrush}">
                <StackPanel Orientation="Horizontal">
                  <Grid Margin="-5, 0, 5, 0">
                    <Image x:Name="Icon" HorizontalAlignment="Left"/>
                    <Canvas x:Name="KPIIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                      <Path Data="M0,12 L11,12 L11,16 L0,16 z M5,6 L16,6 L16,10 L5,10 z M3,0 L14,0 L14,4 L3,4 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="MeasureIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                      <Path Data="M12.000001,13.000001 L16,13.000001 L16,16 L12.000001,16 z M0,12 L4,12 L4,16 L0,16 z M6.0000005,10 L10,10 L10,16 L6.0000005,16 z M0,6.0000005 L4,6.0000005 L4,10 L0,10 z M11.999999,5 L15.999999,5 L15.999999,11 L11.999999,11 z M6.0000005,0 L10,0 L10,8 L6.0000005,8 z" Fill="{StaticResource IconFillBrush}" Height="16" Style="{StaticResource IconsPathStyle}" Stretch="Fill" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="CubeIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                      <Path Data="M16.127712,3.4409983 C16.127712,3.4409983 16.186995,13.00624 16.186995,13.00624 C16.186995,13.00624 9.724494,15.999998 9.724494,15.999998 C9.724494,15.999998 9.6849957,5.9475532 9.6849957,5.9475532 C9.6849957,5.9475532 16.127712,3.4409983 16.127712,3.4409983 z M0.060999546,2.5609941 C0.060999565,2.5609941 8.4989996,5.9665947 8.4989996,5.9665947 C8.4989996,5.9665947 8.4989996,15.999994 8.4989996,15.999994 C8.4989996,15.999994 0.060999565,11.986634 0.060999546,11.986634 C0.060999565,11.986634 0.060999565,2.5609941 0.060999546,2.5609941 z M6.0630565,1.0580152E-08 C6.0630565,-3.5265657E-09 9.0633278,-3.5265657E-09 9.0633278,1.0580152E-08 C9.0633278,-3.5265657E-09 16.063999,2.2500081 16.063999,2.2500081 C16.063999,2.2500081 9.1257038,4.8749995 9.1257038,4.8749995 C9.1257038,4.8749995 0,1.3125302 0,1.3125302 C0,1.3125302 6.0630565,-3.5265657E-09 6.0630565,1.0580152E-08 z" Fill="{StaticResource IconFillBrush}" Height="16" Style="{StaticResource IconsPathStyle}" Stretch="Fill" StrokeThickness="3" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="MemberIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Margin="0,2,0,0" Visibility="Collapsed">
                      <Path Data="M3.9632826,6.6000004 L4.0201349,6.6364017 C4.5974321,6.9867358 5.2751274,7.1884785 6.0000005,7.1884785 C6.7248745,7.1884785 7.4025693,6.9867358 7.979867,6.6364017 L8.0367184,6.6000009 L8.0630302,6.6128964 C10.360462,7.7813449 12,10.435488 12,13.070442 C12,16.443186 -1.0962257E-08,16.443186 0,13.070442 C-1.0962257E-08,10.435488 1.6395376,7.7813449 3.9369695,6.6128964 z M6.0000005,0 C7.6568546,0 9,1.3431458 9,3 C9,4.6568546 7.6568546,6 6.0000005,6 C4.3431463,6 3.0000002,4.6568546 3.0000002,3 C3.0000002,1.3431458 4.3431463,0 6.0000005,0 z" Fill="{StaticResource IconFillBrush}" Height="15" Canvas.Left="2" Style="{StaticResource IconsPathStyle}" Stretch="Fill" Width="12" Canvas.Top="1"/>
                    </Canvas>
                    <Canvas x:Name="MembersIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="15" Margin="0,2,0,0" Visibility="Collapsed">
                      <Path Data="M8.9724617,9.0769234 L9.0151014,9.1049242 C9.4480743,9.3744116 9.9563456,9.5295982 10.5,9.5295982 C11.043655,9.5295982 11.551927,9.3744116 11.9849,9.1049242 L12.027538,9.0769234 L12.047273,9.0868435 C13.770347,9.9856491 15,12.027298 15,14.054186 C15,16.648603 6,16.648603 6,14.054186 C6,12.027298 7.2296534,9.9856491 8.9527273,9.0868435 z M4.0201349,6.1728501 C4.5974321,6.5097113 5.2751274,6.7036948 6.0000005,6.7036948 C6.5714989,6.7036948 6.8636708,6.6560326 7.3504362,6.4399214 C7.375,7.458333 7.8798251,8.1123714 8.2929163,8.486351 C7.4479618,8.9895821 6.529355,10.138728 6.0143547,10.942856 C5.4304953,11.854502 5.2760611,12.977291 5.2760611,14.054246 C5.2555151,14.357152 5.3164873,14.585921 5.2895904,14.983 C2.5601537,14.858558 5.1258866E-08,14.053486 0,12.567787 C4.8642331E-08,10.034165 1.6187042,7.3154297 3.9161363,6.1919165 z M10.5,4 C11.742641,4 12.75,5.0331888 12.75,6.3076921 C12.75,7.5821958 11.742641,8.6153841 10.5,8.6153841 C9.2573595,8.6153841 8.25,7.5821958 8.25,6.3076921 C8.25,5.0331888 9.2573595,4 10.5,4 z M6.0000005,0 C7.6568546,0 9,1.2914919 9,2.8846278 C9,4.4777637 7.6568546,5.7692556 6.0000005,5.7692556 C4.3431463,5.7692556 3.0000002,4.4777637 3.0000002,2.8846278 C3.0000002,1.2914919 4.3431463,0 6.0000005,0 z" Fill="{StaticResource IconFillBrush}" Height="16" Style="{StaticResource IconsPathStyle}" Stretch="Fill" Width="15"/>
                    </Canvas>
                    <Canvas x:Name="HierarchySingleIcon" Height="16" Width="16" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,0,0">
                      <Path Data="M4,0 L12,0 L12,5 L9,5 L9,7 L11,7 L13,7 L13,11 L16,11 L16,16 L9,16 L9,11 L11,11 L11,9 L9,9 L7,9 L5,9 L5,11 L7,11 L7,16 L0,16 L0,11 L3,11 L3,9 L3,7 L5,7 L7,7 L7,5 L4,5 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="HierarchyMultipleIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M7,10 L9,10 L9,12 L10,12 L10,16 L6,16 L6,12 L7,12 z M4,0 L12,0 L12,4 L11,4 L11,6 L13,6 L13,9 L13,10 L13,12 L16,12 L16,16 L12,16 L12,13 L12,12 L12,10 L9,10 L9,6 L10,6 L10,4 L6,4 L6,6 L7,6 L7,10 L4,10 L4,12 L4,13 L4,16 L0,16 L0,12 L3,12 L3,10 L3,9 L3,6 L5,6 L5,4 L4,4 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="HierarchyDirectIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M9,11 L16,11 L16,16 L9,16 z M0,11 L7,11 L7,16 L0,16 z M9,0 L12,0 L12,5 L7.984375,5 L11,2.0003765 L9,2.0003765 z M4,0 L7,0 L7,2.0003765 L5,2.0003765 L7.984375,5 L4,5 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                      <Path Data="M4.0000005,0 L6.0000005,0 L6.0000005,2 L8.000001,2 L10.000001,1.9999998 L10.000001,5.9999995 L8.000001,5.9999995 L8.000001,4 L6.0000005,4 L4.0000005,4 L2,4 L2,6 L0,6 L0,4 L0,2 L2,2 L4.0000005,2 z" Fill="{StaticResource IconFillBrush}" Height="6" Canvas.Left="3" Stretch="Fill" Canvas.Top="5" UseLayoutRounding="False" Width="10"/>
                    </Canvas>
                    <Canvas x:Name="HierarchyKeyIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M13.479159,11 L16,11 L16,16 L9,16 L9.0187016,12.885415 C9.0187016,12.885415 10.028671,12.905535 10.078125,12.90104 C10.564883,12.856801 10.703124,12.281249 10.703124,12.281249 C10.703124,12.281249 11.337922,12.339394 11.552082,12.114582 C11.686955,11.973002 11.984372,11.734371 11.859372,11.328121 C12.604164,11.708329 13.479159,11 13.479159,11 z M11.78051,6.0711384 C11.239517,6.0636845 10.880634,6.5677514 10.880634,6.5677514 C10.880634,6.5677514 10.053135,7.5307074 10.84739,8.1603069 C11.581553,8.7422705 12.416214,7.7667713 12.416214,7.7667713 C12.416214,7.7667713 13.117094,6.9612236 12.549855,6.4305925 C12.269812,6.1686225 12.008928,6.074286 11.78051,6.0711384 z M12.252403,5.0001354 C12.762135,4.9943309 13.426781,5.1736541 14.153109,5.8488731 C15.086847,6.7169094 15.48805,8.383276 14.086661,9.7365303 C12.264684,11.495928 11.461937,10.430841 11.131319,10.527728 C10.780709,10.630472 11.414442,11.208761 11.080528,11.568368 C10.881701,11.782496 10.173897,11.554623 10.173897,11.554623 C10.173897,11.554623 10.263147,12.152434 9.8112364,12.194571 C9.4439325,12.228819 9.0569038,12.164806 9.0569038,12.164806 L7.5828662,13.797047 C7.5828662,13.797047 6.8843789,14.228495 6.4654541,13.833264 C6.0465288,13.438035 5.747354,12.882977 6.3059025,12.236212 C6.8644514,11.589447 9.5614824,8.8456278 9.5614824,8.8456278 C9.5614824,8.8456278 9.1076527,7.7131634 9.5614824,7.0304675 C10.015312,6.3477716 11.247663,5.283803 11.247663,5.283803 C11.247663,5.283803 11.637209,5.0071406 12.252403,5.0001354 z M4,0 L12,0 C12,1.3379855 12,3.3195796 12,4.4306235 C11.333333,4.4375 10.9375,4.8125 10.692326,4.9813595 C10,4.9813595 9.5641088,4.9937863 9,5 L9,6.6738582 C9,6.6738582 8.9056911,6.8091063 8.8926439,6.8314724 C8.4691629,7.5574365 8.8507805,8.7548141 8.8507805,8.7548141 C8.8507805,8.7548141 8.8142529,8.7903395 8.6181841,8.9854584 L8.6035748,9 L5,9 L5,11 L6.6104774,11 C6.6104774,11 5.6154966,12.019021 5.4274907,12.231218 C4.8258719,12.91025 5.1424961,13.454233 5.5368452,13.923571 C6.296875,14.828125 7,14.69887 7,14.69887 L7,16 L0,16 L0,11 L3,11 L3,7 L4.875,7 L5,7 L7,7 L7,5 L4,5 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" StrokeThickness="0.5" UseLayoutRounding="False" Width="16" d:LayoutRounding="Auto"/>
                    </Canvas>
                    <Canvas x:Name="DimensionIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M4,13 L5,13 L5,14 L4,14 z M1.9999999,13 L3,13 L3,14 L1.9999999,14 z M1.9999999,11 L3,11 L3,12 L1.9999999,12 z M12.000001,8 L13.000001,8 L13.000001,9.000001 L14.000001,9.000001 L14.000001,10.000001 L15.000001,10.000001 L15.000001,11 L16,11 L16,13 L15.000001,13 L15.000001,14 L14.000001,14 L14.000001,15 L13.000001,15 L13.000001,16 L12.000001,16 L12.000001,15 L12.000001,14 L7.0000005,14 L6.0000005,14 L6.0000005,13 L7.0000005,13 L7.0000005,10.000001 L12.000001,10.000001 L12.000001,9.000001 z M3,0 L5,0 L5,1.0000005 L6,1.0000005 L6,2.0000005 L7,2.0000005 L7,3.0000005 L8,3.0000005 L8,4.0000005 L7,4.0000005 L6,4.0000005 L6,9 L2.9999969,9 L2.9999969,10 L1.9999968,10 L1.9999968,9 L1.9999999,4.0000005 L1,4.0000005 L0,4.0000005 L0,3.0000005 L1,3.0000005 L1,2.0000005 L1.9999999,2.0000005 L1.9999999,1.0000005 L3,1.0000005 z" Fill="{StaticResource IconFillBrush}" Height="16" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="Level5Icon" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M5,6.5 L5,7.9000001 L5,9.3000002 L5,10.7 L6.5,10.7 L9.5,10.7 L9.5,12.099999 L5,12.099999 L5,13.5 L9.5,13.5 L11,13.5 L11,12.099999 L11,10.7 L11,9.3000002 L9.5,9.3000002 L6.5,9.3000002 L6.5,7.9000001 L11,7.9000001 L11,6.5 L6.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z" Fill="{StaticResource IconFillBrush}" Height="16" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="Level4Icon" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M5.0000029,6.5000005 L5.0000029,10.700001 L6.5000024,10.700001 L8.0000019,10.700001 L8.0000019,13.5 L9.5000019,13.5 L9.5000019,10.700001 L11.000003,10.700001 L11.000003,9.3000002 L9.5000019,9.3000002 L9.5000019,6.5000005 L8.0000019,6.5000005 L8.0000019,9.3000002 L6.5000024,9.3000002 L6.5000024,6.5000005 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z" Fill="{StaticResource IconFillBrush}" Height="16" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="Level3Icon" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M5,6.5 L5,7.9000001 L9.5,7.9000001 L9.5,9.3000002 L6.5,9.3000002 L6.5,10.7 L9.5,10.7 L9.5,12.099999 L5,12.099999 L5,13.5 L9.5,13.5 L11,13.5 L11,12.099999 L11,7.9000001 L11,6.5 L9.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z" Fill="{StaticResource IconFillBrush}" Height="16" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="Level2Icon" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M5,6.5 L5,7.9000001 L9.5,7.9000001 L9.5,9.3000002 L6.5,9.3000002 L5,9.3000002 L5,10.7 L5,13.5 L6.5,13.5 L11,13.5 L11,12.099999 L6.5,12.099999 L6.5,10.7 L9.5,10.7 L11,10.7 L11,9.3000002 L11,7.9000001 L11,6.5 L9.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z" Fill="{StaticResource IconFillBrush}" Height="16" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="Level1Icon" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M7,6.5 L7,7.9000001 L5,7.9000001 L5,9.3000002 L7,9.3000002 L7,12.099999 L5,12.099999 L5,13.5 L7,13.5 L9,13.5 L11,13.5 L11,12.099999 L9,12.099999 L9,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z" Fill="{StaticResource IconFillBrush}" Height="16" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Width="16"/>
                    </Canvas>
                    <Canvas x:Name="FolderIcon" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="16" Visibility="Collapsed" Margin="0,2,0,0">
                      <Path Data="M2,2 L2,12 L4,12 L4,6 L14,6 L14,4 L7,4 L7,2 z M0,0 L2,0 L9,0 L9,2 L14,2 L16,2 L16,4 L16,6 L16,11 L16,12 L16,14 L4,14 L2,14 L0,14 L0,12 L0,2 z" Fill="{StaticResource IconFillBrush}" Height="14" Stretch="Fill" UseLayoutRounding="False" Width="16" Canvas.Top="1"/>
                    </Canvas>
                  </Grid>
                  <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HierarchicalItem.Caption}" Foreground="{StaticResource ForegroundBrush}"/>
                </StackPanel>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivot:XamHierarchicalItem" BasedOn="{StaticResource HierarchicalItemStyle}"/>

    <!-- *********************************  PivotHeaderCellControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotHeaderCellControl" x:Key="HeaderCellKey">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}"/>
      <Setter Property="BorderThickness" Value="0,0,1,1"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="Padding" Value="8,4"/>
      <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource HeaderCellControlExpansionIndicatorStyle}"/>
    </Style>

    <!-- *********************************  PivotColumnHeaderCellControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotColumnHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:PivotColumnHeaderCellControl">
            <Border BorderBrush="{TemplateBinding BorderBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SortedStates">
                  <VisualState x:Name="NotSorted">
                  </VisualState>
                  <VisualState x:Name="Ascending">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Descending">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpantionIndicatorStates">
                  <VisualState x:Name="IndicatorCollapsed">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="IndicatorVisible">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SummaryStates">
                  <VisualState x:Name="SummaryValue">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SummaryTotal">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowHeaderSorting">
                  <VisualState x:Name="EnabledHeaderSortIndicator">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHeaderSortIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowColumnHiding">
                  <VisualState x:Name="EnabledHidingIndicator">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHidingIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowColumnSorting">
                  <VisualState x:Name="EnabledSortingIndicator">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledSortingIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected" />
                  <VisualState x:Name="Selected">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                  <Grid  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}"
            BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3"/>
                    <ToggleButton Grid.Column="0" x:Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Visibility="Collapsed" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Padding="0" Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                    <Grid Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn"/>
                        <ColumnDefinition Width="Auto"/>
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}"/>
                      <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{StaticResource ForegroundBrush}"/>
                    </Grid>
                    <Grid Grid.Column="2" Margin="0,0,5,0">
                      <Path IsHitTestVisible="False" x:Name="SortedDescending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphFillBrush}" Visibility="Collapsed"/>
                      <Path IsHitTestVisible="False" x:Name="SortedAscending" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphFillBrush}" Visibility="Collapsed"/>
                    </Grid>
                    <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" Grid.ColumnSpan="4" HorizontalAlignment="Right" Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortButtonStyle}" IsThreeState="False" Margin="5,0" Visibility="Collapsed" >
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                          </ig:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortButtonStyle}" IsThreeState="True" Margin="5,0" Visibility="Collapsed" >
                          <ig:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                          </ig:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="30" Grid.Column="1" Cursor="Hand" Margin="0" Visibility="Collapsed">
                          <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphFillBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                          <ig:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                          </ig:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  PivotRowHeaderCellControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotRowHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Padding" Value="8"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:PivotRowHeaderCellControl">
            <Border BorderBrush="{TemplateBinding BorderBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowHeaderSorting">
                  <VisualState x:Name="EnabledHeaderSortIndicator">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHeaderSortIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowRowHiding">
                  <VisualState x:Name="EnabledHidingIndicator">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHidingIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpantionIndicatorStates">
                  <VisualState x:Name="IndicatorCollapsed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="IndicatorVisible">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SummaryStates">
                  <VisualState x:Name="SummaryValue">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SummaryTotal">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CompactLayout">
                  <VisualState x:Name="OutlineLeftRightBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Center</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Bottom</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottomAlignBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Bottom</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottomAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineAllAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,-1,0,0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineAll">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,-1,0,0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="NormalOutline">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Center</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected" />
                  <VisualState x:Name="Selected">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="fill">
                  <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="2"/>
                    <ToggleButton Grid.Column="0" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="Collapsed" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" Style="{TemplateBinding ExpansionIndicatorStyle}"/>

                    <Grid x:Name="headerGrid" Grid.Column="1">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,0" Foreground="{StaticResource ForegroundBrush}"/>
                      </Grid>
                      <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed" >
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortButtonStyle}" IsThreeState="False" Margin="5,0" Visibility="Collapsed" >
                            <ig:Commanding.Command>
                              <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                            </ig:Commanding.Command>
                          </ToggleButton>
                          <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortButtonStyle}" IsThreeState="True" Margin="5,0" Visibility="Collapsed" >
                            <ig:Commanding.Command>
                              <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                            </ig:Commanding.Command>
                          </CheckBox>
                          <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="30" Grid.Column="1" Cursor="Hand" Margin="0" Visibility="Collapsed">
                            <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphFillBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                            <ig:Commanding.Command>
                              <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                            </ig:Commanding.Command>
                          </Grid>
                        </Grid>
                      </Border>
                    </Grid>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  PivotSuperCompactHeaderCellControl Style  ********************************* -->
    <Style TargetType="igPivot:PivotSuperCompactHeaderCellControl" BasedOn="{StaticResource HeaderCellKey}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:PivotSuperCompactHeaderCellControl">
            <Border BorderBrush="{TemplateBinding BorderBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpantionIndicatorStates">
                  <VisualState x:Name="IndicatorCollapsed">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="IndicatorVisible">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SummaryStates">
                  <VisualState x:Name="SummaryValue">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SummaryTotal">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CompactLayout">
                  <VisualState x:Name="OutlineLeftRightBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Center</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Bottom</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottomAlignBottom">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Bottom</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineRightBottomAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineAllAlignTop">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,-1,0,0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Top</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="OutlineAll">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,-1,0,0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="NormalOutline">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,0,1,1</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <VerticalAlignment>Center</VerticalAlignment>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowHeaderSorting">
                  <VisualState x:Name="EnabledHeaderSortIndicator">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHeaderSortIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="AllowRowHiding">
                  <VisualState x:Name="EnabledHidingIndicator">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DisabledHidingIndicator">
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected" />
                  <VisualState x:Name="Selected">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid igPrim:XamlHelper.SnapsToDevicePixels="True">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  x:Name="fill">
                  <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Width="{TemplateBinding Indent}" Grid.Column="0"/>
                    <Border x:Name="SelectedRect" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}"
        BorderBrush="{StaticResource CellItemSelectedBorderBrush}" Visibility="Collapsed" Margin="0,0,-1,-1" Grid.ColumnSpan="3"/>
                    <ToggleButton Grid.Column="1" Name="ExpansionIndicator" Width="15" Height="15" Margin="3" VerticalAlignment="Center" Padding="0" Visibility="Collapsed"
                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
          Style="{TemplateBinding ExpansionIndicatorStyle}"/>
                    <Grid x:Name="headerGrid" Grid.Column="2">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" x:Name="HeaderPresenterColumn"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
          Margin="{TemplateBinding Padding}"
          HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Visibility="Collapsed" x:Name="TotalText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0, 0, 5, 0"/>
                      </Grid>
                      <Border x:Name="optionsPane" Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}" Margin="5,0,0,0" HorizontalAlignment="Right" Opacity="1" Visibility="Collapsed" >
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                          </Grid.ColumnDefinitions>
                          <ToggleButton x:Name="HeaderSortBtn" Grid.Column="0" Style="{StaticResource HeaderCellSortButtonStyle}" IsThreeState="False" Margin="5" Visibility="Collapsed" >
                            <ig:Commanding.Command>
                              <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click"/>
                            </ig:Commanding.Command>
                          </ToggleButton>
                          <CheckBox x:Name="SortToggle" Grid.Column="2" Style="{StaticResource FilterCellSortButtonStyle}" IsThreeState="True" Margin="5" Visibility="Collapsed" >
                            <ig:Commanding.Command>
                              <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click"/>
                            </ig:Commanding.Command>
                          </CheckBox>
                          <Grid x:Name="columnHidingVisual" Background="{StaticResource TransparentBrush}" Width="20" Grid.Column="1" Cursor="Hand" Margin="0,5" Visibility="Collapsed">
                            <Path Data="M9.8222179,1.1322494E-06 L12.663995,1.1322494E-06 L8.6729612,5.0000014 L12.663995,10.000002 L9.8222179,10.000002 L5.8309941,4.9573879 z M3.9912238,0 L6.8330007,0 L2.8419673,5 L6.8330007,10 L3.9912238,10 L0,4.9573865 z" Fill="{StaticResource HeaderCellGlyphFillBrush}" VerticalAlignment="Center" Height="8" UseLayoutRounding="False" Width="12" HorizontalAlignment="Center" Stretch="Fill"/>
                            <ig:Commanding.Command>
                              <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown"/>
                            </ig:Commanding.Command>
                          </Grid>
                        </Grid>
                      </Border>
                    </Grid>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  VerticalTextBlock Style  ********************************* -->
    <Style x:Key="VerticalTextBlockStyle" TargetType="igPivotPrim:VerticalTextBlock">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:VerticalTextBlock">
            <Border  Margin="{TemplateBinding Margin}">
              <igPivotPrim:SingleSpinPanel Angle="{TemplateBinding Angle}">
                <ContentControl Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" FontSize="{TemplateBinding FontSize}"/>
              </igPivotPrim:SingleSpinPanel>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  PivotCellControl Style  ********************************* -->
    <Style x:Key="PivotCellControlStyle" TargetType="igPivot:PivotCellControl">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}"/>
      <Setter Property="BorderThickness" Value="0,0,1,1"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Padding" Value="5"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:PivotCellControl">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition/>
                  </VisualStateGroup.Transitions>
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOver1" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Alternate" >
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedBackground" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveStates">
                  <VisualState x:Name="InActive"/>
                  <VisualState x:Name="Active">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
              <Border x:Name="AltElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAlternateBackgroundBrush}" Visibility="Collapsed"/>
              <Rectangle x:Name="SelectedBackground" Fill="{StaticResource CellItemSelectedBackgroundBrush}"  Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" Opacity="0" Margin="{TemplateBinding BorderThickness}"/>
              <Rectangle x:Name="MouseOver1" Fill="{StaticResource CellItemHoverFillBrush}" Margin="0" Stroke="{StaticResource CellItemHoverStrokeBrush}" Opacity="0"/>
              <Rectangle x:Name="ActiveRect" Visibility="Collapsed" Stroke="{StaticResource CellItemActiveStrokeBrush}" StrokeThickness="2"/>
              <ContentControl x:Name="HeaderPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
          Margin="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" Foreground="{TemplateBinding Foreground}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivot:PivotCellControl" BasedOn="{StaticResource PivotCellControlStyle}"/>

    <!-- *********************************  ExpansionIndicator Style  ********************************* -->
    <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrim:ExpansionIndicator">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrim:ExpansionIndicator">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Selected"/>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpansionStates">
                  <VisualState x:Name="Expanded">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpansionIndicatorExpanded">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpansionIndicatorCollapsed">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid x:Name="ExpansionIndicator" Background="{StaticResource TransparentBrush}" Grid.ColumnSpan="2" Grid.RowSpan="2">
                <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-3,0"/>
                <Path Data="M0,0 L6,5 L0,10 z" Width="6" Height="10" x:Name="ExpansionIndicatorCollapsed" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphNormalFillBrush}" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Stretch="Fill"/>
                <Path Data="M0,0 L10,0 L5,6 z" Width="10" Height="6" x:Name="ExpansionIndicatorExpanded" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphPressedFillBrush}" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Stretch="Fill" Visibility="Collapsed"/>
              </Grid>
              <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** ActiveNodeIndicator Style **********************************-->
    <Style TargetType="igPrim:ActiveNodeIndicator" x:Key="ActiveNodeIndicatorStyle">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TreeNodeSelectedBorderBrush}"/>
      <Setter Property="BorderThickness" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrim:ActiveNodeIndicator">
            <Rectangle StrokeDashCap="Round" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrim:ActiveNodeIndicator" BasedOn="{StaticResource ActiveNodeIndicatorStyle}" />

    <!-- ********************************** XamDataTreeNodeControl Style **********************************-->
    <Style TargetType="ig:XamDataTreeNodeControl" x:Key="DataTreeNodeControlStyle">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="8,0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="CheckBoxStyle" Value="{StaticResource CheckBoxStyle}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ig:XamDataTreeNodeControl">
            <Grid Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandedIconStates">
                  <VisualState x:Name="HideIcons"/>
                  <VisualState x:Name="ShowCollapsedIcon">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="ShowExpandedIcon">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveStates">
                  <VisualState x:Name="Inactive"/>
                  <VisualState x:Name="Active">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                  <VisualState x:Name="NotSelected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="EndLines">
                  <VisualState x:Name="None">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <ig:NodeLineTemination>None</ig:NodeLineTemination>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="TShape">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <ig:NodeLineTemination>TShape</ig:NodeLineTemination>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="LShape">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <ig:NodeLineTemination>LShape</ig:NodeLineTemination>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DropStates">
                  <VisualState x:Name="NoDrop"/>
                  <VisualState x:Name="DropOnto">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DropBefore">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="DropAfter">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="main">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="28"/>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition/>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <igPrim:NodeLineControl Node="{Binding Node}" x:Name="lineControl"/>
                <igPrim:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}"/>
                <igPrim:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.Data.HasChildren, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" IsExpanded="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpansionIndicatorStyle}"/>
                <CheckBox x:Name="Checkbox" Grid.Column="2" IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}" IsTabStop="False" Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}" IsChecked="{Binding Node.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource CheckBoxStyle}"/>
                <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                <Border x:Name="hoverBorder" Background="{StaticResource TreeNodeHoverBackgroundBrush}" BorderBrush="{StaticResource TreeNodeHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5"/>
                <igPrim:ActiveNodeIndicator x:Name="ActiveBorder" Visibility="Collapsed" Grid.Column="5" IsTabStop="false" Style="{StaticResource ActiveNodeIndicatorStyle}"/>
                <Border x:Name="SelectedBorder" Background="{StaticResource TreeNodeSelectedBackgroundBrush}" BorderBrush="{StaticResource TreeNodeSelectedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5"/>
                <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>
                <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False"/>
                <ContentControl x:Name="contentControl" Margin="{TemplateBinding Padding}"  Grid.Column="5" Foreground="{TemplateBinding Foreground}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                  <ContentPresenter x:Name="ContentPresenter" />
                </ContentControl>
              </Grid>
              <Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform Y="-3"/>
                  </TransformGroup>
                </Grid.RenderTransform>
                <Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorFillBrush}" Height="1" StrokeThickness="0"/>
                <Path x:Name="arrowLeft" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorFillBrush}" HorizontalAlignment="Left"/>
                <Path x:Name="arrowRight" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorFillBrush}"/>
              </Grid>
              <Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform Y="4"/>
                  </TransformGroup>
                </Grid.RenderTransform>
                <Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorFillBrush}" Height="1" StrokeThickness="0"/>
                <Path x:Name="arrowLeft1" Height="7" Width="6" Stretch="Fill" Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z" Fill="{StaticResource DropIndicatorFillBrush}" HorizontalAlignment="Left"/>
                <Path x:Name="arrowRight1" HorizontalAlignment="Right" Height="7" Width="6" Stretch="Fill" Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z" Fill="{StaticResource DropIndicatorFillBrush}"/>
              </Grid>
              <Rectangle x:Name="DropOntoElem" Opacity="0" Stroke="{StaticResource TreeNodeSelectedBorderBrush}" StrokeThickness="2" RadiusX="2" RadiusY="2"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** XamDataTree Style **********************************-->
    <Style TargetType="ig:XamDataTree" x:Key="DataTreeStyle">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="NodeStyle" Value="{StaticResource DataTreeNodeControlStyle}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ig:XamDataTree">
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <igPrim:NodesPanel x:Name="NodesPanel"/>
                <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Row="0" Grid.Column="1" Style="{StaticResource ScrollBarStyle}"/>
                <ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Row="2" Style="{StaticResource ScrollBarStyle}"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="ig:XamDataTree" BasedOn="{StaticResource DataTreeStyle}" />

    <!-- *********************************  FieldsDropAreaScrollviewerButtons Style  ********************************* -->
    <Style x:Key="FieldsDropAreaScrollViewerButtonsStyle" TargetType="RepeatButton">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="Width" Value="30"/>
      <Setter Property="Height" Value="30"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="RepeatButton">
            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="normal" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Path x:Name="normal" Data="M9,0 L9,9 L0,4.5 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="9" Fill="{StaticResource GlyphNormalFillBrush}" VerticalAlignment="Center"/>
              <Path x:Name="hover" Data="M9,0 L9,9 L0,4.5 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="9" Fill="{StaticResource GlyphHoverFillBrush}" Opacity="0" VerticalAlignment="Center"/>
              <Path x:Name="pressed" Data="M9,0 L9,9 L0,4.5 z" HorizontalAlignment="Center" Stretch="Fill" UseLayoutRounding="False" Width="6" Height="9" Fill="{StaticResource GlyphPressedFillBrush}" Opacity="0" VerticalAlignment="Center"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldsDropAreaScrollViewer Style  ********************************* -->
    <Style x:Key="FieldsDropAreaScrollViewerStyle" TargetType="ScrollViewer">
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
      <Setter Property="Padding" Value="0,4,0,4"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ScrollViewer">
            <Border>
              <Grid Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-1,-1" Minimum="0"
                Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}"
                ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-1"
                Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldsDropAreaControl Style  ********************************* -->
    <Style x:Key="FieldsDropAreaControl" TargetType="igPivotPrim:FieldsDropAreaControl">
      <Setter Property="Background" Value="{StaticResource FieldsDropAreaControlBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}"/>
      <Setter Property="BorderThickness" Value="0,0,1,1"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:FieldsDropAreaControl">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                          <DiscreteObjectKeyFrame KeyTime="00:00:00">
                            <DiscreteObjectKeyFrame.Value>
                              <Visibility>Visible</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                          </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
                <ItemsPresenter/>
              </ScrollViewer>
              <Grid x:Name="disabledPanel" Opacity="0.6" Visibility="Collapsed" Background="{StaticResource DisabledPanelBackgroundBrush}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:FieldsDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControl}"/>

    <!-- *********************************  ExpandableFieldItemControl Style   ********************************* -->
    <Style x:Key="ExpandableFieldItemControlStyle" TargetType="igPivotPrim:ExpandableFieldItemControl">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Margin" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:ExpandableFieldItemControl">
            <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="closeButton" d:IsOptimized="True"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="TransparencyStates">
                  <VisualState x:Name="NormalTransparency">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <System:Double>1</System:Double>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="PeekTransparency">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <System:Double>0.5</System:Double>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid>
                    <ToggleButton x:Name="DropDownToggle" Style="{StaticResource FilterDropdownToggleButtonStyle}" Cursor="Hand" 
                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}" HorizontalAlignment="Stretch" Margin="0" 
                                  BorderBrush="{TemplateBinding BorderBrush}" VerticalContentAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Center"
                                  Visibility="{Binding Path=IsExpandable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">                             
                        <ContentControl x:Name="clearFilterGlyphStroke" Margin="2,0,5,0" Background="{StaticResource LightForegroundBrush}" Style="{StaticResource FilterIconPath}" 
                                        HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </ToggleButton>
                  </Grid>
                  <Border BorderThickness="0" Background="{StaticResource TransparentBrush}" Grid.Column="1">
                    <igPivot:DragDropManager.DragSource>
                      <igPivot:DragSource IsDraggable="True" DragTemplate="{StaticResource DragTemplate}" DataObject="{Binding}">
                        <igPivot:XamTriggers.EventTriggers>
                          <igPivot:XamEventTrigger EventName="DragStart">
                            <igPivot:DragStartTriggerAction IsEnabled="True"/>
                          </igPivot:XamEventTrigger>
                        </igPivot:XamTriggers.EventTriggers>
                      </igPivot:DragSource>
                    </igPivot:DragDropManager.DragSource>
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </Border>
                  <Button x:Name="closeButton" Style="{StaticResource FilterCellRemoveButtonStyle}" Grid.Column="2" VerticalAlignment="Center" Opacity="0">
                    <igPivot:Commanding.Command>
                      <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell"/>
                    </igPivot:Commanding.Command>
                    <Path Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="12" Height="12" Fill="{StaticResource LightForegroundBrush}" Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"/>
                  </Button>
                  <Popup x:Name="Popup" Grid.Row="1" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                         igPrim:XamlHelper.StaysOpen="False" igPrim:XamlHelper.AllowsTransparency="True">
                    <Grid x:Name="OriginalPopupChild" Width="Auto">
                      <Border x:Name="PopupBorder" Background="{StaticResource PopupBackgroundBrush}" VerticalAlignment="Top" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" MinWidth="250" MaxWidth="320">
                        <Grid Margin="8">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>
                          <ContentPresenter ContentTemplate="{TemplateBinding ExpansionAreaContentTemplate}"/>
                          <Border VerticalAlignment="Top" Grid.Row="1" Margin="0,8,0,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                              <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeOkButtonText}"  x:Name="OKButton" Width="70" Cursor="Hand" Style="{StaticResource ButtonStyle}" Margin="0,0,8,0">
                                <ig:Commanding.Command>
                                  <igPivotPrim:ExpandableFieldItemCommandSource EventName="Click" CommandType="OK"/>
                                </ig:Commanding.Command>
                              </Button>
                              <Button Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeCancelButtonText}"
                 x:Name="CancelButton" MinWidth="70" Cursor="Hand" Style="{StaticResource ButtonStyle}">
                                <ig:Commanding.Command>
                                  <igPivotPrim:ExpandableFieldItemCommandSource EventName="Click" CommandType="Cancel"/>
                                </ig:Commanding.Command>
                              </Button>
                            </StackPanel>
                          </Border>
                        </Grid>
                      </Border>
                    </Grid>
                  </Popup>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** CalculatedFieldItemControl Style **********************************-->
    <Style TargetType="igPivotPrim:CalculatedFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlStyle}">
      <Setter Property="ExpansionAreaContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <TextBlock Text="Caption" Grid.Row="0" Grid.Column="0" Margin="3 2 2 1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource ForegroundBrush}"/>
              <igPivotPrim:XamInput Grid.Row="0" Grid.Column="1" Margin="0 4 3 1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
              Text="{Binding Path=Caption, Mode=TwoWay}" IsReadOnly="{Binding IsReadOnly}"/>
              <igPivotPrim:XamInput Grid.Row="1" Grid.ColumnSpan="2" Width="300" Margin="3 4 3 3" Height="140" AcceptsReturn="True"
                                    HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                    Text="{Binding Path=Expression, Mode=TwoWay}" IsReadOnly="{Binding IsReadOnly}"/>
            </Grid>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** FilterFieldItemControl Style **********************************-->
    <Style TargetType="igPivotPrim:FilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlStyle}">
      <Setter Property="ExpansionAreaContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid Opacity="0.5" Grid.ColumnSpan="2"/>
              <CheckBox IsThreeState="False" Margin="7 4 0 2" Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}" IsChecked="{Binding IsAllSelected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}"/>
              <TextBlock Text="*" Grid.Column="1" Foreground="{StaticResource ForegroundBrush}" Margin="0 6 0 0" Visibility="{Binding HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}"/>
              <ig:XamDataTree Grid.Row="1" Grid.ColumnSpan="2"
                                  ItemsSource="{Binding Path=FilterMembers}" DisplayMemberPath="Caption"
                                   NodeStyle="{StaticResource DataTreeNodeControlStyle}" Style="{StaticResource DataTreeStyle}"
                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                      EnsureNodeExpansion="True"
                                      IsExpandedMemberPath="IsExpanded"
                                      CheckBoxMemberPath="IsSelected"
                                      x:Name="FilterTree">
                <ig:XamDataTree.CheckBoxSettings>
                  <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" CheckBoxStyle="{StaticResource CheckBoxStyle}"/>
                </ig:XamDataTree.CheckBoxSettings>
                <ig:XamDataTree.GlobalNodeLayouts>
                  <ig:NodeLayout x:Name="NL"
                                  IsExpandedMemberPath="IsExpanded"
                                  CheckBoxMemberPath="IsSelected"
                                  Key="FilterMembers"
                                  DisplayMemberPath="Caption"
                                  TargetTypeName="FilterMember"
                                                    >
                  </ig:NodeLayout>
                </ig:XamDataTree.GlobalNodeLayouts>
              </ig:XamDataTree>
            </Grid>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  AdvancedFilterFieldItemControl Style  ********************************* -->
    <Style TargetType="igPivotPrim:AdvancedFilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlStyle}">
      <Setter Property="ExpansionAreaMaxHeight" Value="400" />
      <Setter Property="ExpansionAreaContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <igPivotPrim:AdvancedFilterFieldControl
                DataContext="{Binding AdvancedFilterViewModel}"
                ViewModel="{Binding}"/>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  AdvancedFilterFieldControl Style  ********************************* -->
    <Style TargetType="igPivotPrim:AdvancedFilterFieldControl">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:AdvancedFilterFieldControl">
            <ScrollViewer Style="{StaticResource ScrollViewerStyle}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="0" Padding="0">
              <Border Padding="3" Width="270">
                <Grid>
                  <StackPanel Orientation="Vertical">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="3" Height="18" Width="18">
                        <Rectangle Stroke="{StaticResource AdvancedFilterFieldStrokeBrush}" Fill="{StaticResource PeekIconFillBrush}" />
                        <ig:Commanding.Commands>
                          <ig:CommandSourceCollection>
                            <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek"/>
                            <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek"/>
                          </ig:CommandSourceCollection>
                        </ig:Commanding.Commands>
                      </Grid>
                    </Grid>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                      </Grid.RowDefinitions>
                      <TextBox Margin="0,7,0,0" x:Name="searchBox" Grid.ColumnSpan="2" Grid.Row="1" Style="{StaticResource TextBoxStyle}">
                        <ig:Commanding.Command>
                          <igPivotPrim:AdvancedFilterFieldCommandSource
                              EventName="TextChanged"
                              CommandType="SelectHierarchySubTree"/>
                        </ig:Commanding.Command>
                      </TextBox>
                      <CheckBox IsThreeState="False" Margin="7" Grid.Row="2"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}"
                          IsChecked="{Binding FilterViewModel.IsAllSelected, Mode=TwoWay}"
            Style="{StaticResource CheckBoxStyle}"/>
                      <!-- Has pending changes star indicator -->
                      <TextBlock Text="*" Grid.Column="1" Grid.Row="2" Foreground="Black" Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Center"
                      Visibility="{Binding FilterViewModel.HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}" Style="{StaticResource TextBlockStyle}"/>
                      <ig:XamDataTree Grid.Row="3" Grid.ColumnSpan="2" Background="Transparent" Height="200"
                                      ItemsSource="{Binding Path=FilterViewModel.FilterMembers}" DisplayMemberPath="Caption"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                                          EnsureNodeExpansion="True"
                                          IsExpandedMemberPath="IsExpanded"
                                          CheckBoxMemberPath="IsSelected"
                                          x:Name="FilterTree"
                    NodeStyle="{StaticResource DataTreeNodeControlStyle}"
                    BorderThickness="0">
                        <ig:XamDataTree.CheckBoxSettings>
                          <ig:CheckBoxSettings CheckBoxVisibility="Visible" CheckBoxMode="Manual" IsCheckBoxThreeState="False" />
                        </ig:XamDataTree.CheckBoxSettings>
                        <ig:XamDataTree.GlobalNodeLayouts>
                          <ig:NodeLayout x:Name="NL"
                                      IsExpandedMemberPath="IsExpanded"
                                      CheckBoxMemberPath="IsSelected"
                                      Key="FilterMembers"
                                      DisplayMemberPath="Caption"
                                      TargetTypeName="FilterMember"
                                                >
                          </ig:NodeLayout>
                        </ig:XamDataTree.GlobalNodeLayouts>
                      </ig:XamDataTree>
                    </Grid>
                    <StackPanel Orientation="Vertical" Margin="0,4">
                      <Border Grid.ColumnSpan="3" BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"  Margin="0 7 0 0" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}"/>
                      <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAllText}" GroupName="values" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" Style="{StaticResource RadioButtonStyle}"/>
                        <RadioButton x:Name="rbFilterByAny" Margin="10,0,0,0" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAnyText}" GroupName="values" Style="{StaticResource RadioButtonStyle}"/>
                      </StackPanel>
                      <ItemsControl x:Name="icLabelConditionViewModels"
                                    ItemsSource="{Binding Path=LabelConditionViewModels, Mode=OneWay}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Grid Margin="0,0,0,10">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                              </Grid.ColumnDefinitions>
                              <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="30" />
                              </Grid.RowDefinitions>
                              <igPivot:Dropdown x:Name="ddLevel" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Foreground="Black" Margin="0,0,7,0"
    ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}"
    EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectFieldText}"
    ItemsSource="{Binding Path=Levels, Mode=OneWay}"
    SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=Caption}"/>
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <igPivot:Dropdown x:Name="ddCondition" Grid.Column="0" Grid.Row="2" Foreground="Black" Margin="0,0,7,0"
    ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}"
    EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectConditionText}"
    ItemsSource="{Binding Path=LabelFilterConditions, Mode=OneWay}"
    SelectedItem="{Binding Path=SelectedLabelFilterCondition, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=DisplayName}"/>
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Margin="0,0,7,0"
    Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}"/>
                              <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveButtonStyle}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="13" Margin="2,0">
                                <Path Width="12" Height="12" Fill="{StaticResource GlyphNormalFillBrush}" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                                <ig:Commanding.Command>
                                  <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="RemoveLabelCondition"/>
                                </ig:Commanding.Command>
                              </Button>
                            </Grid>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="56" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnAdd" Grid.Column="0" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAddButtonText}" Style="{StaticResource ButtonStyle}"
      IsEnabled="{Binding Path=LastLabelConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                          <ig:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="AddLabelCondition"/>
                          </ig:Commanding.Command>
                        </Button>
                        <Button x:Name="btnClear" Grid.Column="1" Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterClearAllButtonText}" Style="{StaticResource ButtonStyle}"
                                HorizontalAlignment="Right"
      Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                          <ig:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource EventName="Click" CommandType="ClearLabelConditions"/>
                          </ig:Commanding.Command>
                        </Button>
                      </Grid>
                      <Border Grid.ColumnSpan="3" BorderBrush="{StaticResource FilterFieldOutterBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"  Margin="0 7 0 0"/>
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Border>
            </ScrollViewer>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldsDropAreaControl Style  ********************************* -->
    <Style x:Key="FieldsDropAreaControlKey" TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource FieldsDropAreaControlBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}"/>
      <Setter Property="BorderThickness" Value="0,0,1,1"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
            <Border x:Name="panelContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                          <DiscreteObjectKeyFrame KeyTime="00:00:00">
                            <DiscreteObjectKeyFrame.Value>
                              <Visibility>Visible</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                          </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DisplayStates">
                  <VisualState x:Name="Empty" >
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="NonEmpty">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                  <Rectangle x:Name="fill" Fill="{TemplateBinding Background}"/>
                  <Grid MinHeight="30" Margin="20,0,0,0" >
                      <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="6,0" RenderTransformOrigin="0.5 0.5">
                    <ContentControl.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                      </TransformGroup>
                    </ContentControl.RenderTransform>
                  </ContentControl>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <RepeatButton Margin="3" Name="leftRepeat" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{StaticResource FieldsDropAreaScrollViewerButtonsStyle}"/>
                    <ScrollViewer Name="scrollViewer" Grid.Column="1" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" Style="{StaticResource FieldsDropAreaScrollViewerStyle}">
                      <ItemsPresenter/>
                    </ScrollViewer>
                    <RepeatButton Margin="3" Name="rightRepeat" Grid.Column="2" RenderTransformOrigin="0.5,0.5" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Style="{StaticResource FieldsDropAreaScrollViewerButtonsStyle}">
                      <RepeatButton.RenderTransform>
                        <TransformGroup>
                          <ScaleTransform ScaleY="1" ScaleX="-1"/>
                          <SkewTransform AngleY="0" AngleX="0"/>
                          <RotateTransform Angle="0"/>
                          <TranslateTransform/>
                        </TransformGroup>
                      </RepeatButton.RenderTransform>
                    </RepeatButton>
                  </Grid>
                </Grid>
                <Grid x:Name="disabledPanel" Opacity="0.6" Visibility="Collapsed" Background="{StaticResource DisabledPanelBackgroundBrush}"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  MeasureFieldItemControl Style  ********************************* -->
    <Style x:Key="MeasureFieldItemControlStyle" TargetType="igPivotPrim:MeasureFieldItemControl">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Padding" Value="8,0"/>
      <Setter Property="Margin" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:MeasureFieldItemControl">
            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="0" Margin="2,0,0,0">
                  <igPivot:DragDropManager.DragSource>
                    <igPivot:DragSource IsDraggable="True" DragTemplate="{StaticResource DragTemplate}" DataObject="{Binding}" DragChannels="Measures">
                      <igPivot:XamTriggers.EventTriggers>
                        <igPivot:XamEventTrigger EventName="DragStart">
                          <igPivot:DragStartTriggerAction IsEnabled="True"/>
                        </igPivot:XamEventTrigger>
                      </igPivot:XamTriggers.EventTriggers>
                    </igPivot:DragSource>
                  </igPivot:DragDropManager.DragSource>
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0"/>
                </Border>
                <Button Opacity="0" Grid.Column="1" Style="{StaticResource FilterCellRemoveButtonStyle}" x:Name="closeButton" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="3,0,5,0">
                  <igPivot:Commanding.Command>
                    <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell"/>
                  </igPivot:Commanding.Command>
                  <Path Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="12" Height="12" Fill="{StaticResource LightForegroundBrush}" Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"/>
                </Button>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:MeasureFieldItemControl" BasedOn="{StaticResource MeasureFieldItemControlStyle}"/>

    <!-- ********************************** MeasureFilterFieldItemControl Style **********************************-->
    <Style TargetType="igPivotPrim:MeasureFilterFieldItemControl" BasedOn="{StaticResource ExpandableFieldItemControlStyle}">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="Padding" Value="8,0"/>
      <Setter Property="Margin" Value="2"/>
      <Setter Property="ExpansionAreaMaxHeight" Value="400" />
      <Setter Property="ExpansionAreaContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <igPivotPrim:MeasureFilterFieldControl
                DataContext="{Binding FilterableMeasureViewModel}"
                ViewModel="{Binding}"/>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  RowsFieldDropAreaControl Style  ********************************* -->
    <Style x:Key="RowsFieldDropAreaControlStyle" TargetType="igPivotPrim:RowsFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Margin="5" x:Name="Panel" Orientation="Horizontal" Background="Transparent"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            igPivot:XamPivotGrid.PivotPartType="Rows">
              <ig:DragDropManager.DropTarget>
                <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters, MeasureList"/>
              </ig:DragDropManager.DropTarget>
              <igPivot:ItemsSeparatorProvider.Separator>
                <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
              </igPivot:ItemsSeparatorProvider.Separator>
            </StackPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:RowsFieldDropAreaControl" BasedOn="{StaticResource RowsFieldDropAreaControlStyle}"/>

    <!-- *********************************  ColumnsFieldDropAreaControl Style  ********************************* -->
    <Style x:Key="ColumnsFieldDropAreaControlStyle" TargetType="igPivotPrim:ColumnsFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
      <Setter Property="ItemTemplate" Value="{StaticResource FieldItemTemplateKey}"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Margin="5" x:Name="Panel1" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Columns">
              <igPivot:DragDropManager.DropTarget>
                <igPivot:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters, MeasureList"/>
              </igPivot:DragDropManager.DropTarget>
              <igPivot:ItemsSeparatorProvider.Separator>
                <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
              </igPivot:ItemsSeparatorProvider.Separator>
            </StackPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:ColumnsFieldDropAreaControl" BasedOn="{StaticResource ColumnsFieldDropAreaControlStyle}"/>

    <!-- *********************************  FiltersFieldDropAreaControl Style  ********************************* -->
    <Style x:Key="FiltersFieldDropAreaControlStyle" TargetType="igPivotPrim:FiltersFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Margin="5" x:Name="Panel2" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Filters">
              <igPivot:DragDropManager.DropTarget>
                <igPivot:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters"/>
              </igPivot:DragDropManager.DropTarget>
              <igPivot:ItemsSeparatorProvider.Separator>
                <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
              </igPivot:ItemsSeparatorProvider.Separator>
            </StackPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:FiltersFieldDropAreaControl" BasedOn="{StaticResource FiltersFieldDropAreaControlStyle}"/>

    <!-- *********************************  MeasuresFieldDropAreaControl Style  ********************************* -->
    <Style x:Key="MeasuresFieldDropAreaControlStyle" TargetType="igPivotPrim:MeasuresFieldDropAreaControl" BasedOn="{StaticResource FieldsDropAreaControlKey}">
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Margin="5" x:Name="Panel3" Orientation="Horizontal" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Measures">
              <igPivot:DragDropManager.DropTarget>
                <igPivot:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Measures"/>
              </igPivot:DragDropManager.DropTarget>
              <igPivot:ItemsSeparatorProvider.Separator>
                <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
              </igPivot:ItemsSeparatorProvider.Separator>
            </StackPanel>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:MeasuresFieldDropAreaControl" BasedOn="{StaticResource MeasuresFieldDropAreaControlStyle}"/>

    <!-- ********************************** FieldMeasuresItemControl Style **********************************-->
    <Style x:Key="FieldMeasuresItemControlStyle" TargetType="igPivotPrim:FieldMeasuresItemControl">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldItemBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Padding" Value="8,0"/>
      <Setter Property="Margin" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:FieldMeasuresItemControl">
            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="0">
                  <ig:DragDropManager.DragSource>
                    <ig:DragSource IsDraggable="True" DragTemplate="{StaticResource DragTemplate}" DataObject="{Binding}">
                      <igPivot:XamTriggers.EventTriggers>
                        <igPivot:XamEventTrigger EventName="DragStart">
                          <igPivot:DragStartTriggerAction IsEnabled="True"/>
                        </igPivot:XamEventTrigger>
                      </igPivot:XamTriggers.EventTriggers>
                    </ig:DragSource>
                  </ig:DragDropManager.DragSource>
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <Button Grid.Column="1" x:Name="closeButton" Style="{StaticResource FilterCellRemoveButtonStyle}" VerticalAlignment="Center" Margin="0,0,5,0" Opacity="0">
                  <Path Stretch="Fill" UseLayoutRounding="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="12" Height="12" Fill="{StaticResource LightForegroundBrush}" Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"/>
                  <ig:Commanding.Command>
                    <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RemoveFilterCell"/>
                  </ig:Commanding.Command>
                </Button>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:FieldMeasuresItemControl" BasedOn="{StaticResource FieldMeasuresItemControlStyle}"/>

    <!-- *********************************  ExpanderButton Style  ********************************* -->
    <Style x:Key="ExpanderButtonStyle" TargetType="Button">
      <Setter Property="Background" Value="{StaticResource ButtonFillBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ButtonStrokeBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="BorderThickness" Value="1,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed"/>
                  <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
              <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  Expander Style  ********************************* -->
    <Style x:Key="ExpanderStyle" TargetType="igPivot:Expander">
      <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="BorderBrush" Value="{StaticResource ExpanderBorderBrush}"/>
      <Setter Property="HeaderBackground" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="HeaderBorderBrush" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="HeaderBorderThickness" Value="1"/>
      <Setter Property="Padding" Value="12"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:Expander">
            <Grid x:Name="Root">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpansionStates">
                  <VisualState x:Name="Collapsed"/>
                  <VisualState x:Name="Expanded">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.RowSpan)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <System:Int32>1</System:Int32>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <System:Int32>2</System:Int32>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapseGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Background="{TemplateBinding Background}" BorderThickness="0,1,1,1" BorderBrush="{TemplateBinding BorderBrush}">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Border Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" MinHeight="12" x:Name="HeaderBorder" Background="{TemplateBinding HeaderBackground}" BorderBrush="{TemplateBinding HeaderBorderBrush}" BorderThickness="{TemplateBinding HeaderBorderThickness}" Visibility="Collapsed">
                    <StackPanel Orientation="Horizontal">
                      <ContentPresenter x:Name="Header" Visibility="Collapsed" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                    </StackPanel>
                  </Border>
                  <Border x:Name="ContentBorder" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed">
                    <ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                  </Border>
                  <Button x:Name="ExpansionButton" Style="{StaticResource ExpanderButtonStyle}" Width="12" Grid.RowSpan="3" VerticalContentAlignment="Center">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                      <Grid x:Name="ExpandGlyph">
                        <Path Data="M566.8764,1436.906 L572.19147,1442.2482 L573.91058,1440.78 L569.90887,1436.9374 L573.91083,1433.001 L572.19153,1431.5951 z" HorizontalAlignment="Left" Margin="0" Stretch="Fill" UseLayoutRounding="False" Width="6" Fill="{StaticResource GlyphNormalFillBrush}" Height="10"/>
                      </Grid>
                      <Grid x:Name="CollapseGlyph" Visibility="Collapsed">
                        <Path Data="M566.8764,1436.906 L562.83246,1440.7722 L564.55157,1442.2482 L569.90887,1436.9374 L564.52722,1431.6173 L562.83252,1432.9825 z" HorizontalAlignment="Left" Margin="0" Stretch="Fill" UseLayoutRounding="False" Width="6" Fill="{StaticResource GlyphNormalFillBrush}" Height="10"/>
                      </Grid>
                    </Grid>
                  </Button>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivot:Expander" BasedOn="{StaticResource ExpanderStyle}"/>

    <!-- *********************************  Editor Style  ********************************* -->
    <Style x:Key="EditorStyle" TargetType="TextBox">
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource EditorBorderBrush}"/>
      <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
    </Style>

    <!-- *********************************  ResizingIndicator Style  ********************************* -->
    <Style x:Key="PivotResizingIndicatorStyle" TargetType="igPivotPrim:PivotResizingIndicator">
      <Setter Property="Background" Value="{StaticResource ResizeIndicatorBackgroundBrush}"/>
      <Setter Property="Width" Value="4"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:PivotResizingIndicator">
            <Canvas>
              <Rectangle x:Name="FillIndicator" Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}"/>
            </Canvas>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivotPrim:PivotResizingIndicator" BasedOn="{StaticResource PivotResizingIndicatorStyle}"/>

    <!-- *********************************  FieldsDropAreaControl Style  ********************************* -->
    <Style x:Key="FieldsDropAreaControlStyle" TargetType="igPivotPrim:FieldsDropAreaControl">
      <Setter Property="Background" Value="{StaticResource FieldsDropAreaControlBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaBorderBrush}"/>
      <Setter Property="BorderThickness" Value="0,0,1,1"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:FieldsDropAreaControl">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                          <DiscreteObjectKeyFrame KeyTime="00:00:00">
                            <DiscreteObjectKeyFrame.Value>
                              <Visibility>Visible</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                          </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
                <ItemsPresenter Margin="{TemplateBinding Padding}"/>
              </ScrollViewer>
              <Grid x:Name="disabledPanel" Opacity="0.6" Visibility="Collapsed" Background="{StaticResource DisabledPanelBackgroundBrush}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  PivotDataSelector Style  ********************************* -->
    <Style x:Key="PivotDataSelectorStyle" TargetType="igPivot:XamPivotDataSelector">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="Background" Value="{StaticResource PivotDataSelectorBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource PivotDataSelectorBorderBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:XamPivotDataSelector">
            <Grid x:Name="LayoutRoot" igPivot:XamPivotGrid.PivotPartType="DeleteArea" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DataSourceTypeVisualParts">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="FlatDataSource">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DropDownsPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ig:DragDropManager.DropTarget>
                <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList"/>
              </ig:DragDropManager.DropTarget>
              <Grid Margin="12,0,12,12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" MinHeight="240"/>
                  <RowDefinition Height="300"/>
                </Grid.RowDefinitions>
                <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*" MinHeight="80"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" x:Name="DropDownsPanel" Margin="0,0,0,12">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <!--Databases drop-down-->
                      <Grid Grid.Row="0" Margin="0,0,0,12">
                        <igPivot:Dropdown x:Name="DatabasesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DatabasesDropDownInitialText}"
                                          ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="8,0"/>
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                      <!--Cubes drop-down-->
                      <Grid Grid.Row="1" Margin="0,0,0,12">
                        <igPivot:Dropdown x:Name="CubesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.CubesDropDownInitialText}"
                                          ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding Path=Caption}" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="8,0"/>
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                      <!--Measure groups drop-down-->
                      <Grid Grid.Row="2">
                        <igPivot:Dropdown x:Name="MeasureGroupsDropDown"  EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasureGroupsDropDownInitialText}"
                                          ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" HorizontalAlignment="Left" Padding="8,0"/>
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                    </Grid>
                    <!--Metadata Tree -->
                    <Border x:Name="DimensionsTreeBd" Grid.Row="3" BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <TextBlock Text="{Binding StringSetting.DimensionsAreaBackgroundText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource FiltersAreaBackgroundText}" Opacity="0.2"/>
                        <ig:XamDataTree x:Name="DimensionsTree" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Metadata}" Style="{StaticResource DataTreeStyle}" IsTouchSupportEnabled="false">
                          <ig:XamDataTree.ItemTemplate>
                            <DataTemplate>
                              <igPivot:XamHierarchicalItem HierarchicalItem="{Binding Path=Data}">
                              </igPivot:XamHierarchicalItem>
                            </DataTemplate>
                          </ig:XamDataTree.ItemTemplate>
                          <igPivot:XamTriggers.EventTriggers>
                            <igPivot:XamEventTrigger EventName="NodeDraggingStart">
                              <igPivot:DragStartXamDataTreeTriggerAction IsEnabled="True"/>
                            </igPivot:XamEventTrigger>
                          </igPivot:XamTriggers.EventTriggers>
                          <ig:XamDataTree.GlobalNodeLayouts>
                            <ig:NodeLayout x:Name="NL"  IsExpandedMemberPath="ExpandWhenInitialized" Key="Items" TargetTypeName="HierarchicalItem" IsDraggable="True">
                            </ig:NodeLayout>
                          </ig:XamDataTree.GlobalNodeLayouts>
                        </ig:XamDataTree>
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
                <!-- View Model Collections -->
                <Border Grid.Row="1" Margin="0" x:Name="ViewModelsBd" Background="{TemplateBinding Background}" Padding="0,20,0,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="12"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="12"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="12"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <!-- Header Labels -->
                    <TextBlock Grid.ColumnSpan="3" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.PanelCollectionsAreaLabel}" Margin="0,0,0,5" Style="{StaticResource TextBlockStyle}"/>
                    <!-- Filters ListBox -->
                    <Grid Grid.Row="1">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" >
                            <ContentControl Margin="2,0,5,0"  Style="{StaticResource FilterIconPath}" VerticalAlignment="Center" Background="{StaticResource IconFillBrush}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.FiltersAreaBackgroundText}"                                                    
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                      <Border Grid.Row="1"  Background="{StaticResource LightForegroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea" igPivot:XamPivotGrid.PivotPartType="Filters"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Filters">
                                  <ig:DragDropManager.DropTarget>
                                    <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters"/>
                                  </ig:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!-- Columns ListBox -->
                    <Grid Grid.Row="1" Grid.Column="2">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,0"  Style="{StaticResource ColumnsIconPath}" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.ColumnsAreaBackgroundText}"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource LightForegroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="ColumnsDropArea" igPivot:XamPivotGrid.PivotPartType="Columns"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Columns">
                                  <ig:DragDropManager.DropTarget>
                                    <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters, MeasureList"/>
                                  </ig:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!-- Rows ListBox -->
                    <Grid Grid.Row="3">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <ContentControl Margin="2,0,5,0"  Style="{StaticResource RowsIconPath}" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.RowsAreaBackgroundText}"
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource LightForegroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="RowsDropArea" igPivot:XamPivotGrid.PivotPartType="Rows"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Rows">
                                  <ig:DragDropManager.DropTarget>
                                    <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows, Columns, Filters, MeasureList"/>
                                  </ig:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!-- Measures ListBox -->
                    <Grid Grid.Row="3" Grid.Column="2">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22"/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" >
                            <ContentControl Margin="2,0,5,1"  Style="{StaticResource MeasuresIconPath}" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasuresAreaBackgroundText}" 
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                                        <Border Grid.Row="1" Background="{StaticResource LightForegroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource PivotDataSelectorListBoxBorderBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl Grid.ColumnSpan="2" x:Name="MeasuresDropArea"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Background="{StaticResource TransparentBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" igPivot:XamPivotGrid.PivotPartType="Measures">
                                  <ig:DragDropManager.DropTarget>
                                    <ig:DropTarget IsDropTarget="True" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Measures"/>
                                  </ig:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_024}"/>
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!-- Layout Update Controlers -->
                    <CheckBox x:Name="DeferredUpdateLayout" Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DeferredUpdateLayoutCheckBoxLabel}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.DeferredLayoutUpdate, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}"/>
                    <Button x:Name="UpdateLayoutButton" Grid.Row="5" Grid.Column="2" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.UpdateLayoutButtonText}" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" IsEnabled="{Binding ElementName=DeferredUpdateLayout, Path=IsChecked}" Style="{StaticResource ButtonStyle}">
                      <igPivot:Commanding.Command>
                        <igPivot:XamPivotGridCommandSource EventName="Click" CommandType="RefreshGridImmediately"/>
                      </igPivot:Commanding.Command>
                    </Button>
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivot:XamPivotDataSelector" BasedOn="{StaticResource PivotDataSelectorStyle}"/>

    <!-- *********************************  FieldChooserItem Style  ********************************* -->
    <Style TargetType="igPivot:FieldChooserItem">
      <Setter Property="Margin" Value="1 1 1 0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:FieldChooserItem">
            <Border Background="{TemplateBinding Background}" HorizontalAlignment="Stretch">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverBackground">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedBackground">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="22"/>
                  <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border x:Name="MouseOverBackground" Grid.ColumnSpan="2" BorderBrush="{StaticResource FieldChooserItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource FieldChooserItemHoverBackgroundBrush}" Visibility="Collapsed"/>
                <Border x:Name="disabledPanel" Grid.ColumnSpan="2" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1"
                     Background="{StaticResource DisabledPanelBackgroundBrush}"  Visibility="Collapsed" CornerRadius="3"/>
                <Border x:Name="SelectedBackground" Grid.ColumnSpan="2" BorderBrush="{StaticResource FieldChooserItemPressedBorderBrush}" BorderThickness="1" Background="{StaticResource FieldChooserItemPressedBackgroundBrush}" Visibility="Collapsed"/>
                <Path Visibility="Collapsed" x:Name="checked" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{StaticResource LightForegroundBrush}" Stretch="Fill" UseLayoutRounding="False" Height="10" Width="12" Margin="4,0,0,0" />
                <ContentControl x:Name="contentControl" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0" Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter />
                </ContentControl>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldChooserGroup Style   ********************************* -->
    <Style TargetType="igPivot:FieldChooserGroup">
      <Setter Property="Foreground" Value="{StaticResource FieldChooserGroupForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:FieldChooserGroup">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Grid>
                <ContentControl Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="Segoe UI Semibold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="8,0">
                  <ContentPresenter  x:Name="HeaderPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                </ContentControl>
              </Grid>
              <ItemsPresenter Grid.Row="1" x:Name="ItemsPresenter"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldItemChooserToggleButton Style   ********************************* -->
    <Style x:Key="FieldItemChooserToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Bd" Background="{StaticResource ButtonFillBrush}" BorderBrush="{StaticResource ButtonStrokeBrush}" BorderThickness="0,0,1,1"/>
              <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter x:Name="contentPresenter" />
              </ContentControl>
              <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedStrokeBrush}" Visibility="Collapsed" StrokeThickness="2"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  FieldChooser Style  ********************************* -->
    <Style TargetType="igPivot:FieldChooser">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:FieldChooser">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="Opened">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="closedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="openedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ToggleButton x:Name="DropDownToggle" IsThreeState="False"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen, Mode=TwoWay}" Style="{StaticResource FieldItemChooserToggleButtonStyle}">
                <Grid>
                  <Path x:Name="closedPath" Data="M1,10 10,1 10,10Z" Fill="{StaticResource GlyphNormalFillBrush}" StrokeThickness="1" Stretch="Fill" UseLayoutRounding="False" Width="10" Height="10" Margin="-2,-2,0,0"/>
                  <Path x:Name="openedPath" Data="M1,10 10,1 1,1Z" Fill="{StaticResource GlyphNormalFillBrush}" StrokeThickness="1" Stretch="Fill" UseLayoutRounding="False" Width="10" Height="10" Margin="2,2,0,0" Visibility="Collapsed"/>
                </Grid>
              </ToggleButton>
              <Popup x:Name="DropDown" Grid.Row="1" igPrim:XamlHelper.StaysOpen="False"  IsOpen="{Binding ElementName=DropDownToggle, Path=IsChecked, Mode=TwoWay}">
                <Border x:Name="PopupBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" VerticalAlignment="Top" BorderThickness="1">
                  <ScrollViewer VerticalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                      </Grid.RowDefinitions>
                      <Grid x:Name="RowsGroupPanel"/>
                      <Grid x:Name="RowsGroupsGroupPanel" Grid.Row="1"/>
                      <Grid x:Name="ColumnsGroupPanel" Grid.Row="2"/>
                      <Grid x:Name="FiltersGroupPanel" Grid.Row="3"/>
                      <Grid x:Name="MeasuresGroupPanel" Grid.Row="4"/>
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Popup>
              <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource FieldChooserFillBrush}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  PivotGrid Style  ********************************* -->
    <Style x:Key="XamPivotGridStyle" TargetType="igPivot:XamPivotGrid">
      <Setter Property="FontSize" Value="13.333"/>
      <Setter Property="EditorStyle" Value="{StaticResource EditorStyle}"/>
      <Setter Property="Background" Value="{StaticResource PivotGridBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource PivotGridBorderBrush}"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1,1,0,1"/>
      <Setter Property="Padding" Value="5"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:XamPivotGrid">
            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Grid x:Name="LayoutRoot" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" igPivot:XamPivotGrid.PivotPartType="DeleteArea" Background="{StaticResource TransparentBrush}">
                <ig:DragDropManager.DropTarget>
                  <ig:DropTarget IsDropTarget="True" DropChannels="Measures, Rows, Columns, Filters, MeasureList"/>
                </ig:DragDropManager.DropTarget>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" x:Name="LeftColumn"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <igPivotPrim:ColumnsFieldDropAreaControl Grid.Column="1" Grid.Row="1" x:Name="ColumnsDropArea"
                                                           ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}"
                                                           ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                           IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"/>
                  <igPivotPrim:FiltersFieldDropAreaControl Grid.ColumnSpan="2" x:Name="FiltersDropArea"
                                                           ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}"
                                                           ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                           IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"/>
                  <igPivotPrim:MeasuresFieldDropAreaControl AllowResizing="Right" Grid.Row="1" x:Name="MeasuresDropArea"
                                                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}"
                                                            ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"/>
                    <ContentControl Margin="8,0,0,0" Style="{StaticResource FilterIconPath}" VerticalAlignment="Center" HorizontalAlignment="Left" Background="{StaticResource IconFillBrush}" />
                    <ContentControl Margin="8,0,0,0" Style="{StaticResource ColumnsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"/>
                    <ContentControl Margin="7,1,5,0" Style="{StaticResource MeasuresIconPath}" VerticalAlignment="Center" Grid.Row="1" HorizontalAlignment="Left" />
                </Grid>
                <Grid Grid.Row="1" Grid.ColumnSpan="1" x:Name="GridControlLayout">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <igPivot:PivotGridPanel x:Name="MainLayout" SharedSizeColumn="{Binding ElementName=LeftColumn}">
                    <igPivot:PivotDataRowsPanel x:Name="DataRowsPanel" Canvas.ZIndex="-2">
                      <ig:DragDropManager.DropTarget>
                        <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Measures"/>
                      </ig:DragDropManager.DropTarget>
                    </igPivot:PivotDataRowsPanel>
                    <igPivot:PivotRowsPanel x:Name="RowsHeaderPanel" Canvas.ZIndex="-1">
                      <ig:DragDropManager.DropTarget>
                        <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Rows"/>
                      </ig:DragDropManager.DropTarget>
                    </igPivot:PivotRowsPanel>
                    <igPivot:PivotColumnsPanel x:Name="ColumnsHeaderPanel" Canvas.ZIndex="-1">
                      <ig:DragDropManager.DropTarget>
                        <ig:DropTarget DropTargetMarkerBrush="{StaticResource DropTargetMarkerBrush}" DropChannels="Columns"/>
                      </ig:DragDropManager.DropTarget>
                    </igPivot:PivotColumnsPanel>
                    <Grid igPivot:PivotGridPanel.IsTopLeftCornerControl ="True">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                      </Grid.ColumnDefinitions>
                      <Grid x:Name="FieldChooserPanel"/>
                      <igPivotPrim:RowsFieldDropAreaControl Grid.Column="1" AllowResizing="Right" x:Name="RowsDropArea" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}" ItemTemplate="{StaticResource FieldItemTemplateKey}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"/>  
                        <ContentControl Margin="8,0,0,0"  Style="{StaticResource RowsIconPath}" VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Left"/>
                    </Grid>
                    <igPivot:HiddenAxisChooser x:Name="ColumnChooser" ItemTemplate="{StaticResource AxisChooserTemplateKey}" Width="10"/>
                    <igPivot:HiddenAxisChooser x:Name="RowChooser" ItemTemplate="{StaticResource AxisChooserTemplateKey}" Height="10"/>
                  </igPivot:PivotGridPanel>
                  <ScrollBar x:Name="VerticalScrollBar" Width="17" Grid.Column="1" Style="{StaticResource ScrollBarStyle}"/>
                  <ScrollBar x:Name="HorizontalScrollBar" Height="17" Grid.Row="1" Style="{StaticResource ScrollBarStyle}"/>
                </Grid>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPivot:XamPivotGrid" BasedOn="{StaticResource XamPivotGridStyle}"/>

    <!-- **************************************************************** WPF SPECIFIC RESOURCES ********************************************************************
    ********************************************************************************************************************************************************************    -->

    <!-- *********************************  HiddenAxisChooser Chooser  ********************************* -->
    <Style x:Key="HiddenAxisChooserStyle" TargetType="igPivot:HiddenAxisChooser">
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Background" Value="{StaticResource HiddenColumnIndicatorBackgroundBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivot:HiddenAxisChooser">
            <Grid>
              <Border x:Name="ContentPresenterBorder" Padding="0" Background="{TemplateBinding Background}">
                <Grid>
                  <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-10"/>
                  <ToggleButton x:Name="DropDownToggle" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource FilterDropdownToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  </ToggleButton>
                </Grid>
              </Border>
              <Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
              Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border x:Name="PopupBorder" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                  <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}">
                    <ItemsPresenter>
                      <ItemsPresenter.Resources>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ComboBoxItemStyle}"/>
                      </ItemsPresenter.Resources>
                    </ItemsPresenter>
                  </ScrollViewer>
                </Border>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  MeasureFilterFieldControl Style  ********************************* -->
    <Style TargetType="igPivotPrim:MeasureFilterFieldControl">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPivotPrim:MeasureFilterFieldControl">
            <ScrollViewer Style="{StaticResource ScrollViewerStyle}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
              <Border Padding="0" Width="300">
                <StackPanel Orientation="Vertical">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterText}" Style="{StaticResource TextBlockStyle}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Path=Measure.Caption}" Style="{StaticResource TextBlockStyle}"/>
                    <Grid Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="3" Height="18" Width="18">
                      <Rectangle Stroke="{StaticResource MeasureFilterFieldStrokeBrush}" Fill="{StaticResource PeekIconFillBrush}" />
                      <ig:Commanding.Commands>
                        <ig:CommandSourceCollection>
                          <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseEnter" CommandType="StartPeek"/>
                          <igPivotPrim:ExpandableFieldItemCommandSource EventName="MouseLeave" CommandType="StopPeek"/>
                        </ig:CommandSourceCollection>
                      </ig:Commanding.Commands>
                    </Grid>
                  </Grid>
                  <StackPanel Orientation="Vertical">
                    <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                      <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" Style="{StaticResource RadioButtonStyle}"/>
                      <RadioButton x:Name="rbFilterByAny" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAnyText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}" Style="{StaticResource RadioButtonStyle}" Margin="10,0"/>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding Path=ValueConditionViewModels, Mode=OneWay}">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="30" />
                              <RowDefinition Height="5" />
                              <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <ComboBox x:Name="cbHierarchy" Grid.Column="0" Grid.Row="0" Margin="0,0,7,0"
      ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComboBoxStyle}"
      ItemsSource="{Binding Path=Hierarchies, Mode=OneWay}"
      SelectedItem="{Binding Path=SelectedHierarchy, Mode=TwoWay}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=Caption}"/>
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </ComboBox>
                            <ComboBox x:Name="cbLevel" Grid.Column="1" Grid.Row="0" Margin="0,0,7,0"
      ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource ComboBoxStyle}"
      ItemsSource="{Binding Path=Levels, Mode=OneWay}"
      SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=Caption}"/>
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </ComboBox>
                            <igPivot:Dropdown x:Name="cbCondition" Margin="0,0,7,0" Grid.Column="0" Grid.Row="2"
                                EmptyString="{Binding Source={StaticResource stringResources}, Path=MeasureFilterDropdownMatchingText}"
                                DisplayMemberPath="DisplayName"
                                ItemsSource="{Binding Path=ValueFilterConditions, Mode=OneWay}"
                                SelectedItem="{Binding Path=SelectedValueFilterCondition, Mode=TwoWay}"
    ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                              <ComboBox.ItemTemplate>
                                <DataTemplate>
                                  <TextBlock Text="{Binding Path=DisplayName}"/>
                                </DataTemplate>
                              </ComboBox.ItemTemplate>
                            </igPivot:Dropdown>
                            <TextBox x:Name="tbValue" Grid.Column="1" Grid.Row="2" Text="{Binding Path=TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="0,0,7,0"  Style="{StaticResource TextBoxStyle}"/>
                            <Button x:Name="btnRemoveCondition" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Style="{StaticResource FilterCellRemoveButtonStyle}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="13" Margin="2 0">
                              <Path Width="12" Height="12" Fill="{StaticResource GlyphNormalFillBrush}" Data="M1.0606846,0 L2.8518269,1.7912511 4.6429692,0 5.7036535,1.0607488 3.9125112,2.852 5.7036536,4.6432512 4.6429692,5.704 2.8518269,3.9127488 1.0606846,5.704 0,4.6432512 1.7911423,2.852 0,1.0607488 z" Stretch="Fill" />
                              <ig:Commanding.Command>
                                <igPivotPrim:MeasureFilterFieldCommandSource x:Name="closeCommandSource" EventName="Click" CommandType="RemoveValueCondition"/>
                              </ig:Commanding.Command>
                            </Button>
                          </Grid>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="56" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Button  x:Name="btnAdd" Grid.Column="0" Style="{StaticResource ButtonStyle}"
                          Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAddButtonText}"
                          IsEnabled="{Binding Path=LastValueConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}">
                        <ig:Commanding.Command>
                          <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="AddValueCondition"/>
                        </ig:Commanding.Command>
                      </Button>
                      <Button x:Name="btnClear" Grid.Column="1" Style="{StaticResource ButtonStyle}"
                              HorizontalAlignment="Right"
                          Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterClearAllButtonText}"
                          Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <ig:Commanding.Command>
                          <igPivotPrim:MeasureFilterFieldCommandSource EventName="Click" CommandType="ClearValueConditions"/>
                        </ig:Commanding.Command>
                      </Button>
                    </Grid>
                    <Border Grid.ColumnSpan="3" BorderBrush="{StaticResource FilterFieldOutterBorderBrush}" BorderThickness="0,0,0,1" Height="2" VerticalAlignment="Bottom"  Margin="0 7 0 0"/>
                  </StackPanel>
                </StackPanel>
              </Border>
            </ScrollViewer>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
</ResourceDictionary>