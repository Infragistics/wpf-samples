<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	  xmlns:igMenu="http://schemas.infragistics.com/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- *********************************  COLORS  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Theme.Colors.xaml" />
      <ResourceDictionary Source="Styles.WPF.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- ********************************** BRUSHES **********************************-->
    <!-- Menu Brushes -->
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="MenuPopupOuterBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="MenuSeparatorBackgroundBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ContextMenuBorderBrush" Color="{StaticResource Color_004}"/>

    <!-- MenuItem Brushes -->
    <SolidColorBrush x:Key="MenuItemMouseOverFillBrush" Color="{StaticResource Color_026}"/>
    <SolidColorBrush x:Key="MenuItemMouseOverBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="MenuItemHighlightedFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="MenuItemHeaderMaskBackgroundBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="MenuItemPopupBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="MenuItemVerticalBackgroundBrush" Color="{StaticResource Color_016}" />
    <SolidColorBrush x:Key="MenuItemVerticalLineFillBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="MenuItemArrowFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="MenuItemArrowHoverFillBrush" Color="{StaticResource Color_002}"/>

    <!-- ********************************* SL-WPF SHARED RESOURCES ********************************* -->
    <!-- ******************************************************************************************* -->

    <!-- *********************************  XamHeaderedItemsControl Style  ********************************* -->
    <Style x:Key="XamHeaderedItemsControlStyle" TargetType="igPrim:XamHeaderedItemsControl">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igPrim:XamHeaderedItemsControl">
            <Grid x:Name="Root">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <ContentControl
                x:Name="HeaderContent"
                Content="{TemplateBinding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}" />
              <ItemsPresenter
                x:Name="Items"
                Grid.Row="1" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igPrim:XamHeaderedItemsControl" BasedOn="{StaticResource XamHeaderedItemsControlStyle}"/>

    <!-- *********************************  XamMenuSeparator Style  ********************************* -->
    <Style x:Key="XamMenuSeparatorStyle" TargetType="igMenu:XamMenuSeparator">
      <Setter Property="Background" Value="{StaticResource MenuSeparatorBackgroundBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate  TargetType="igMenu:XamMenuSeparator">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationState">
                  <VisualState x:Name="Horizontal"/>
                  <VisualState x:Name="Vertical">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="33,2,2,2" Height="1"/>
              <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igMenu:XamMenuSeparator" BasedOn="{StaticResource XamMenuSeparatorStyle}"/>

    <!-- *********************************  XamMenu Style  ********************************* -->
    <Style x:Key="XamMenuStyle" TargetType="igMenu:XamMenu">
      <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Foreground" Value="{StaticResource MenuForegroundBrush}"/>
      <Setter Property="MinHeight" Value="36"/>
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igMenu:XamMenu">
            <Grid Width="{TemplateBinding Width}" MinHeight="{TemplateBinding MinHeight}" Height="{TemplateBinding Height}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
              <Border Grid.Column="0" Background="{TemplateBinding Background}"/>
              <ItemsPresenter />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igMenu:XamMenu" BasedOn="{StaticResource XamMenuStyle}"/>

    <!-- *********************************  XamContextMenu Style  ********************************* -->
    <Style x:Key="XamContextMenuStyle" TargetType="igMenu:XamContextMenu">
      <Setter Property="Padding" Value="2"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ContextMenuBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igMenu:XamContextMenu">
            <Border x:Name="PopupBorder"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="33"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource MenuItemVerticalBackgroundBrush}"/>
                <ItemsPresenter Grid.ColumnSpan="2"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igMenu:XamContextMenu" BasedOn="{StaticResource XamContextMenuStyle}"/>

    <!-- ********************************* WPF SPECIFIC RESOURCES ********************************* -->
    <!-- ******************************************************************************************* -->

    <!-- *********************************  XamMenuItem Style  ********************************* -->
    <Style x:Key="XamMenuItemStyle" TargetType="igMenu:XamMenuItem">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="IsTabStop" Value="True"/>
      <Setter Property="IsEnabled" Value="True"/>
      <Setter Property="MinHeight" Value="32" />
      <Setter Property="ItemsPanel">
        <Setter.Value>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Vertical"/>
          </ItemsPanelTemplate>
        </Setter.Value>
      </Setter>

      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="igMenu:XamMenuItem">
            <Grid Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>

                <VisualStateGroup x:Name="CommonStates">

                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderMask" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="MouseOver">
                    <Storyboard x:Name="MouseOverStoryboard" >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowPanelPath" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemArrowHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inputGestureText" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderMask" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="Highlighted">
                    <Storyboard >
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowPanelPath" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource MenuItemArrowHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="inputGestureText" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderMask" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="Disabled" >
                    <Storyboard >
                      <DoubleAnimation From="1" To=".3" Duration="0"
                    Storyboard.TargetName="MenuItemPresenter"
                    Storyboard.TargetProperty="Opacity" />
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderMask" d:IsOptimized="True"/>
                    </Storyboard>
                  </VisualState>

                </VisualStateGroup>

                <VisualStateGroup x:Name="SubmenuState">

                  <VisualState x:Name="SubmenuOpen">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                       Storyboard.TargetProperty="Opacity" To="1.0"
                                       BeginTime="0:0:0" Duration="0:0:0.15"/>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="SubmenuOpenImmediately">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                       Storyboard.TargetProperty="Opacity" To="1.0"
                                       BeginTime="0:0:0" Duration="0:0:0.15"/>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="SubmenuClose">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                       Storyboard.TargetProperty="Opacity" To="0.01"
                                       BeginTime="0:0:0" Duration="0:0:0.1"/>

                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="SubmenuCloseImmediately">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                       Storyboard.TargetProperty="Opacity" To="0.01"
                                       BeginTime="0:0:0" Duration="0:0:0.1"/>

                    </Storyboard>
                  </VisualState>

                </VisualStateGroup>

                <VisualStateGroup x:Name="MenuItemRole">
                  <VisualState x:Name="TopLevelHeader">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames  Duration="0"
                    Storyboard.TargetName="IconPlace"
                    Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames Duration="0"
                    Storyboard.TargetName="ChildIndicatorPlace"
                    Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>0</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                    Storyboard.TargetName="HeaderPresenter"
                    Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>10,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                    Storyboard.TargetName="HeaderCheckboxPresenter"
                    Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>4,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True"/>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderMask">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="MenuItemPresenterContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="TopLevelHeaderWithIcon">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames  Duration="0"
                          Storyboard.TargetName="IconPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames Duration="0"
                          Storyboard.TargetName="ChildIndicatorPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>0</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderCheckboxPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>4,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderMask">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True"/>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True"/>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="MenuItemPresenterContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="TopLevelItem">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0"
                          Storyboard.TargetName="IconPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames Duration="0"
                          Storyboard.TargetName="ChildIndicatorPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>0</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>10,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True"/>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderMask">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderCheckboxPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>4,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="MenuItemPresenterContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="TopLevelItemWithIcon">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0"
                          Storyboard.TargetName="IconPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>Auto</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames Duration="0"
                          Storyboard.TargetName="ChildIndicatorPlace"
                          Storyboard.TargetProperty="Width">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <GridLength>0</GridLength>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>0,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedIndicator" d:IsOptimized="True"/>
                      <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightedIndicator" d:IsOptimized="True"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderMask">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                     Storyboard.TargetName="HeaderCheckboxPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>4,3,0,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="MenuItemPresenterContainer">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="SubmenuHeader">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0"
                                                     Storyboard.TargetName="ArrowPanel"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>

                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                     Storyboard.TargetName="HeaderPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>5,3,25,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                  <VisualState x:Name="SubmenuItem">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                     Storyboard.TargetName="HeaderPresenter"
                                                     Storyboard.TargetProperty="(FrameworkElement.Margin)">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>5,3,25,3</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>

                </VisualStateGroup>

              </VisualStateManager.VisualStateGroups>
              <Grid>
                <Rectangle x:Name="SelectedIndicator"
                                Fill="{StaticResource MenuItemMouseOverFillBrush}"
                                Stroke="{StaticResource MenuItemMouseOverBorderBrush}"
                                Visibility="Collapsed"
                                Grid.ColumnSpan="3"
                                HorizontalAlignment="Stretch"
                Margin="1"/>
                <Rectangle x:Name="HighlightedIndicator"
                       Fill="{StaticResource MenuItemHighlightedFillBrush}"
                       Stroke="{StaticResource MenuItemHighlightedBorderBrush}"
                       Visibility="Collapsed"
                       Grid.ColumnSpan="3"
                       HorizontalAlignment="Stretch"
                 Margin="1"/>

                <!-- MenuItemPresenter - presentes the content of the menu item. -->
                <ContentControl x:Name="MenuItemPresenterContainer" Foreground="{StaticResource ForegroundBrush}" Focusable="False">
                  <ContentControl.Content>
                    <ContentPresenter x:Name="MenuItemPresenter"
                                Visibility="Visible"
                                Opacity="1"
        Focusable="False">
                      <ContentPresenter.Content>
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="IconPlace" Width="33" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                          </Grid.ColumnDefinitions>
                          <igPrim:IconContentControl x:Name="HeaderIconPresenter"
                                    Height="16"
                                    Width="16"
                                    Visibility="{TemplateBinding IconVisibilityResolved}"
                                    Margin="0"
        Focusable="False"/>

                          <!-- Checkbox presenter-->
                          <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                    Margin="7,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                            <ContentPresenter.Content>
                              <CheckBox IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}"/>
                            </ContentPresenter.Content>
                          </ContentPresenter>

                          <!-- Header presenter-->
                          <Grid Grid.Column="1" >
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="*"/>
                              <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="contentControl" Focusable="False">
                              <ContentControl.Content>
                                <ContentPresenter x:Name="HeaderPresenter"
          Margin="5,3,5,3"
          Content="{TemplateBinding Header}"
          ContentTemplate="{TemplateBinding HeaderTemplate}"
    Grid.Column="0"
          VerticalAlignment="Center"
    HorizontalAlignment="Left"
    Focusable="False"
														      />
                              </ContentControl.Content>
                            </ContentControl>

                            <TextBlock x:Name="inputGestureText" Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="8,3,2,3"/>
                          </Grid>

                          <!-- Arrow indicator presenter-->
                          <Grid Grid.Column="2"
        x:Name="ArrowPanel"
        VerticalAlignment="Center"
        HorizontalAlignment="Center"
        Visibility="Collapsed">
                            <Path
        Fill="{StaticResource MenuItemArrowFillBrush}"
        x:Name="ArrowPanelPath"
        VerticalAlignment="Center"
        Width="6" Height="10"
   Stretch="fill"
        Data="M0,0 L0,8 L4,4 z"/>
                          </Grid>

                        </Grid>
                      </ContentPresenter.Content>
                    </ContentPresenter>
                  </ContentControl.Content>
                </ContentControl>
                <Rectangle x:Name="HeaderMask" Fill="{StaticResource MenuItemHeaderMaskBackgroundBrush}" Visibility="Collapsed" IsHitTestVisible="False" />
              </Grid>
              <Popup x:Name="Popup" >
                <Grid Background="{StaticResource MenuItemPopupBackgroundBrush}">
                  <Border x:Name="PopupBorder" Opacity="0.01"
                          Background="{StaticResource MenuItemPopupBackgroundBrush}"
                          BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
                                  SnapsToDevicePixels="True"
                          BorderThickness="1"
      Focusable="False">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBackgroundBrush}"
                              Width="33"  HorizontalAlignment="Left">
                        <Rectangle Width="1" Fill="{StaticResource MenuItemVerticalLineFillBrush}" HorizontalAlignment="Right"/>
                      </Border>
                      <ScrollViewer x:Name="ScrollViewer" Style="{StaticResource ScrollViewerStyle}"
                                MaxHeight="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxHeight}"
                                MaxWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MaxWidth}"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2">
                        <ContentControl Foreground="{StaticResource ForegroundBrush}" Focusable="False">
                          <ContentControl.Content>
                            <ItemsPresenter/>
                          </ContentControl.Content>
                        </ContentControl>
                      </ScrollViewer>
                    </Grid>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="igMenu:XamMenuItem" BasedOn="{StaticResource XamMenuItemStyle}"/>
</ResourceDictionary>