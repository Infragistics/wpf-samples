<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:System="clr-namespace:System;assembly=mscorlib"
	  mc:Ignorable="d">

    <!-- *********************************  COLORS  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Theme.Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_016}"/>
    <SolidColorBrush x:Key="DisabledVisualElement" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="ValidationErrorElement" Color="{StaticResource Color_028}"/>

    <!-- Scrollbar Brushes -->
    <SolidColorBrush x:Key="HScrollbarThumbNormalFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="VScrollbarThumbNormalFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowHoverFillBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="VScrollbarThumbHoverFillBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="HScrollbarThumbHoverFillBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="VScrollbarThumbPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="HScrollbarThumbPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="VScrollbarThumbDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="HScrollbarThumbDisabledFillBrush" Color="{StaticResource Color_005}"/>
    <SolidColorBrush x:Key="ScrollbarDisabledFillBrush" Color="{StaticResource Color_005}" />

    <!-- ComboBox Brushes -->
    <SolidColorBrush x:Key="ComboBoxFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ComboBoxStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ComboBoxReadOnlyStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ComboBoxHoverFillBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="ComboBoxHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ComboBoxFocusedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboBoxDisabledFillBrush" Color="{StaticResource Color_012}"/>
    <SolidColorBrush x:Key="ComboBoxReadOnlyFillBrush" Color="{StaticResource Color_064}"/>
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource Color_004}"/>

    <!-- TextBox Brushes -->
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="TextBoxHoverBackgroundBrush" Color="{StaticResource Color_008}"/>
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush" Color="{StaticResource Color_064}"/>

    <!-- Button Brushes -->
    <SolidColorBrush x:Key="ButtonFillBrush" Color="{StaticResource Color_008}"/>
    <SolidColorBrush x:Key="ButtonStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ButtonHoverFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ButtonHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ButtonPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ButtonPressedStrokeBrush" Color="{StaticResource Color_024}"/>

    <!-- ComboBoxItem Brushes -->
    <SolidColorBrush x:Key="ComboBoxItemHoverFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ComboBoxItemHoverBorderBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ComboBoxItemPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboBoxItemPressedBorderBrush" Color="{StaticResource Color_024}"/>

    <!-- ComboBoxToggleButton Brushes -->
    <SolidColorBrush x:Key="ComboBoxToggleButtonFillBrush" Color="{StaticResource Color_008}"/>
    <SolidColorBrush x:Key="ComboBoxToggleButtonStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboToggleButtonDropDownSeparatorFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ComboBoxToggleButtonPressedStrokeBrush" Color="{StaticResource Color_024}"/>

    <!-- ListBox Brushes -->
    <SolidColorBrush x:Key="ListBoxBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ListBoxBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ListBoxItemHoverFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ListBoxItemHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ListBoxItemPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ListBoxItemPressedStrokeBrush" Color="{StaticResource Color_024}"/>

    <!-- CheckBox Brushes -->
    <SolidColorBrush x:Key="CheckBoxNormalFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxHoverFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxPressedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxFocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxInvalidFocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="CheckBoxNormalStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="CheckBoxHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="CheckBoxPressedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="CheckBoxFocusedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="CheckBoxInvalidUnfocuedStrokeBrush" Color="{StaticResource Color_029}"/>
    <SolidColorBrush x:Key="CheckBoxInvalidFocusedStrokeBrush" Color="{StaticResource Color_028}"/>
    <SolidColorBrush x:Key="CheckBoxIndeterminateCheckFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="CheckBoxCheckFillBrush" Color="{StaticResource Color_024}"/>

    <!-- RadioButton Brushes -->
    <SolidColorBrush x:Key="RadioButtonNormalFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonHoverFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonPressedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonFocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonInvalidUnfocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonInvalidFocusedFillBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="RadioButtonNormalStrokeBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="RadioButtonHoverStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="RadioButtonPressedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="RadioButtonFocusedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="RadioButtonInvalidUnfocuedStrokeBrush" Color="{StaticResource Color_029}"/>
    <SolidColorBrush x:Key="RadioButtonInvalidFocusedStrokeBrush" Color="{StaticResource Color_028}"/>
    <SolidColorBrush x:Key="RadioButtonIndeterminateCheckFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="RadioButtonCheckFillBrush" Color="{StaticResource Color_024}"/>

    <!-- Visual Glyphs brushes -->
    <SolidColorBrush x:Key="GlyphNormalFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="GlyphHoverFillBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="GlyphPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="GlyphDisabledFillBrush" Color="{StaticResource Color_005}"/>

    <!-- ValidationToolTip Brushes -->
    <SolidColorBrush x:Key="ValidationToolTipTemplateShadowBrush" Color="{StaticResource Color_003}"/>

    <!-- ******************************************************** SL-WPF SHARED INLINE CONTROLS RESOURCES ***********************************************************
          ***********************************************************************************************************************************************************************    -->

    <!-- *********************************  ValidationToolTip Template  ********************************* -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
      <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
        <Grid.RenderTransform>
          <TranslateTransform x:Name="xform" X="-25"/>
        </Grid.RenderTransform>
        <VisualStateManager.VisualStateGroups>
          <VisualStateGroup x:Name="OpenStates">
            <VisualStateGroup.Transitions>
              <VisualTransition GeneratedDuration="0"/>
              <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                <Storyboard>
                  <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                    <DoubleAnimation.EasingFunction>
                      <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                  </DoubleAnimation>
                  <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                </Storyboard>
              </VisualTransition>
            </VisualStateGroup.Transitions>
            <VisualState x:Name="Closed">
              <Storyboard>
                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
              </Storyboard>
            </VisualState>
            <VisualState x:Name="Open">
              <Storyboard>
                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
              </Storyboard>
            </VisualState>
          </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="5" Margin="4,4,-4,-4" Opacity="0.02"/>
        <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="4" Margin="3,3,-3,-3" Opacity="0.08"/>
        <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="3" Margin="2,2,-2,-2" Opacity="0.15"/>
        <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}" CornerRadius="2" Margin="1,1,-1,-1" Opacity="0.21"/>
        <Border Background="{StaticResource ValidationErrorElement}" CornerRadius="2"/>
        <Border CornerRadius="2">
          <TextBlock Foreground="{StaticResource LightForegroundBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
        </Border>
      </Grid>
    </ControlTemplate>

    <!-- *********************************  ComboBoxToggleButton Style   ********************************* -->
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ArrowSelected">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused"/>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30"/>
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="Bd" Fill="{StaticResource TransparentBrush}" Grid.ColumnSpan="2" />
              <Grid Grid.Column="1">
                <Rectangle Width="1" Fill="{StaticResource ComboToggleButtonDropDownSeparatorFillBrush}" HorizontalAlignment="Left" Margin="-1,5,0,5"/>
                <Path x:Name="Arrow" Width="10" Height="6" Fill="{StaticResource GlyphNormalFillBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
                <Path x:Name="ArrowSelected" Width="10" Height="6" Visibility="Collapsed" Fill="{StaticResource GlyphPressedFillBrush}" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Stretch="Fill" />
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  ComboBoxItem Style  ********************************* -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30" />
      <Setter Property="Padding" Value="6,0"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <Grid Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBd">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SelectedUnfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="LayoutStates">
                  <VisualState x:Name="AfterLoaded"/>
                  <VisualState x:Name="BeforeLoaded"/>
                  <VisualState x:Name="BeforeUnloaded"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Rectangle x:Name="fillColor" Fill="{StaticResource ComboBoxItemHoverFillBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboBoxItemHoverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
              <Rectangle x:Name="CheckedBd" Fill="{StaticResource ComboBoxItemPressedFillBrush}" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{StaticResource ComboBoxItemPressedBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
              <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                <ContentPresenter x:Name="contentPresenter"/>
              </ContentControl>
              <ContentControl x:Name="contentControl1" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{StaticResource LightForegroundBrush}">
                <ContentPresenter x:Name="contentPresenter1"/>
              </ContentControl>
              <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource ComboBoxItemPressedFillBrush}" Visibility="Collapsed" StrokeThickness="2"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  ListBoxItem Style  ********************************* -->
    <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="13.333"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30" />
      <Setter Property="Padding" Value="6,2"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemHoverStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BgSelected">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="SelectedUnfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}"/>
              <Rectangle x:Name="BgSelected" Fill="{StaticResource ListBoxItemPressedFillBrush}" Stroke="{StaticResource ListBoxItemPressedStrokeBrush}" Visibility="Collapsed"/>
              <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
              </ContentControl>
              <Rectangle x:Name="FocusedVisualElement" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{StaticResource ListBoxItemPressedStrokeBrush}" StrokeThickness="2"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** CheckBoxStyle **********************************-->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="6,0,0,0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                  <VisualState x:Name="Valid"/>
                  <VisualState x:Name="InvalidUnfocused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="InvalidFocused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Fill="{StaticResource TransparentBrush}"/>
              <Rectangle x:Name="normal" Opacity="1" Stroke="{StaticResource CheckBoxNormalStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxNormalFillBrush}" Width="18" Height="18"/>
              <Rectangle x:Name="hover" Stroke="{StaticResource CheckBoxHoverStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxHoverFillBrush}" Opacity="0" Width="18" Height="18"/>
              <Rectangle x:Name="pressed" Opacity="0" Stroke="{StaticResource CheckBoxPressedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxPressedFillBrush}" Width="18" Height="18"/>
              <Rectangle x:Name="focused" Opacity="0" Stroke="{StaticResource CheckBoxFocusedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxFocusedFillBrush}" Width="18" Height="18"/>
              <Rectangle x:Name="invalidUnfocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidUnfocuedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidUnfocusedFillBrush}" Width="18" Height="18"/>
              <Rectangle x:Name="invalidFocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidFocusedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidFocusedFillBrush}" Width="18" Height="18"/>
              <Path x:Name="checkBox" Height="10" Width="12" Stretch="Fill" Opacity="0" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{StaticResource CheckBoxCheckFillBrush}" UseLayoutRounding="False"/>
              <Rectangle x:Name="IndeterminateCheck" Fill="{StaticResource CheckBoxIndeterminateCheckFillBrush}" Height="3" Width="8" Opacity="0"/>
              <Rectangle x:Name="disabled" Opacity="0" StrokeThickness="1" Fill="{StaticResource DisabledVisualElement}" Width="18" Height="18"/>
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- ********************************** RadioButton Style **********************************-->
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="6,0,0,0"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="20"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="RadioButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Checked1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                  <VisualState x:Name="Valid"/>
                  <VisualState x:Name="InvalidUnfocused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="InvalidFocused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Rectangle Fill="{StaticResource TransparentBrush}" Margin="-6,0"/>
              <Ellipse x:Name="normal" Opacity="1" Stroke="{StaticResource RadioButtonNormalStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonNormalFillBrush}" Width="18" Height="18"/>
              <Ellipse x:Name="hover" Stroke="{StaticResource RadioButtonHoverStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonHoverFillBrush}" Opacity="0" Width="18" Height="18"/>
              <Ellipse x:Name="pressed" Opacity="0" Stroke="{StaticResource RadioButtonPressedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonPressedFillBrush}" Width="18" Height="18"/>
              <Ellipse x:Name="focused" Opacity="0" Stroke="{StaticResource RadioButtonFocusedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonFocusedFillBrush}" Width="18" Height="18"/>
              <Ellipse x:Name="invalidUnfocused" Opacity="0" Stroke="{StaticResource RadioButtonInvalidUnfocuedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonInvalidUnfocusedFillBrush}" Width="18" Height="18"/>
              <Ellipse x:Name="invalidFocused" Opacity="0" Stroke="{StaticResource RadioButtonInvalidFocusedStrokeBrush}" StrokeThickness="1" Fill="{StaticResource RadioButtonInvalidFocusedFillBrush}" Width="18" Height="18"/>
              <Ellipse x:Name="Checked1" Fill="{StaticResource RadioButtonCheckFillBrush}" Opacity="0" Width="10" Height="10"/>
              <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              <Ellipse x:Name="disabled" Opacity="0" StrokeThickness="1" Fill="{StaticResource DisabledVisualElement}" Width="18" Height="18"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  ButtonStyle  ********************************* -->
    <Style x:Key="ButtonStyle" TargetType="Button">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="Padding" Value="10,0,10,2"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="MinWidth" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="Bd" Fill="{StaticResource ButtonFillBrush}" Stroke="{StaticResource ButtonStrokeBrush}" StrokeThickness="1"/>
              <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter x:Name="contentPresenter" />
              </ContentControl>
              <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedStrokeBrush}" Visibility="Collapsed" StrokeThickness="2"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
</ResourceDictionary>