<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AverageHourlyPostFrequency" xml:space="preserve">
    <value>1 時間の投稿頻度</value>
  </data>
  <data name="CauseException" xml:space="preserve">
    <value>例外を発生する</value>
  </data>
  <data name="ConnectNodes" xml:space="preserve">
    <value>ノードを接続する</value>
  </data>
  <data name="DisconnectNodes" xml:space="preserve">
    <value>ノードを切断する</value>
  </data>
  <data name="DragOverANode" xml:space="preserve">
    <value>ノードの上にドラッグする</value>
  </data>
  <data name="Events_Clear" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="Events_Loaded" xml:space="preserve">
    <value>ネットワーク ノードを読み込みました。</value>
  </data>
  <data name="Events_NodeAttached" xml:space="preserve">
    <value>ノードをアタッチしました:</value>
  </data>
  <data name="Events_NodeDetached" xml:space="preserve">
    <value>ノードをデタッチしました。</value>
  </data>
  <data name="Events_RaisedEvents" xml:space="preserve">
    <value>発生したイベント</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>ファイル:</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>項目</value>
  </data>
  <data name="LoadData" xml:space="preserve">
    <value>データの読み込み</value>
  </data>
  <data name="NodeSelection_Extended" xml:space="preserve">
    <value>拡張選択</value>
  </data>
  <data name="NodeSelection_Multiple" xml:space="preserve">
    <value>複数</value>
  </data>
  <data name="NodeSelection_None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="NodeSelection_Single" xml:space="preserve">
    <value>単一</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Titles" xml:space="preserve">
    <value>Software Engineer;Application Developer;Systems Programmer;Visual Designer;Product Manager;Technology Evangelist</value>
  </data>
  <data name="Tooltips_Lat" xml:space="preserve">
    <value>緯度:</value>
  </data>
  <data name="Tooltips_Long" xml:space="preserve">
    <value>経度:</value>
  </data>
  <data name="UpdateLayoutString" xml:space="preserve">
    <value>レイアウトの更新</value>
  </data>
  <data name="WorldLocation" xml:space="preserve">
    <value>各国の開催地</value>
  </data>
  <data name="XNN_AllowPan" xml:space="preserve">
    <value>パニングを許可する</value>
  </data>
  <data name="XNN_AllowZoom" xml:space="preserve">
    <value>ズームを許可する</value>
  </data>
  <data name="XNN_ArrowKeys" xml:space="preserve">
    <value>矢印キー</value>
  </data>
  <data name="XNN_CannotGetFocus" xml:space="preserve">
    <value>無効なノードはフォーカスを持つことができません</value>
  </data>
  <data name="XNN_Cannot_Remove_Node" xml:space="preserve">
    <value>接続のあるノードを削除できません</value>
  </data>
  <data name="XNN_ChildNodeNotFound" xml:space="preserve">
    <value>選択されたノードの子がありません。</value>
  </data>
  <data name="XNN_ClearSelection" xml:space="preserve">
    <value>選択のクリア</value>
  </data>
  <data name="XNN_ClearStyle" xml:space="preserve">
    <value>スタイルをクリア</value>
  </data>
  <data name="XNN_Ctrl_Key" xml:space="preserve">
    <value> Ctrl </value>
  </data>
  <data name="XNN_DesktopPC" xml:space="preserve">
    <value>デスクトップ PC</value>
  </data>
  <data name="XNN_EditState" xml:space="preserve">
    <value>編集状態の切り替え</value>
  </data>
  <data name="XNN_EnableExpansionIndicators" xml:space="preserve">
    <value>展開インジケーターを有効にする</value>
  </data>
  <data name="XNN_EnableMultiNodeZooming" xml:space="preserve">
    <value>複数ノードのズームを有効にする</value>
  </data>
  <data name="XNN_EnableSingleNodeZooming" xml:space="preserve">
    <value>単一ノードのズームを有効にする</value>
  </data>
  <data name="XNN_FocusState" xml:space="preserve">
    <value>フォーカス状態の切り替え</value>
  </data>
  <data name="XNN_HistoryItem_Resumed" xml:space="preserve">
    <value>{0}: {1} の操作を再開しました</value>
    <comment>Example: "{2012 06 06 17:28} {DeviceName} resumed operation"</comment>
  </data>
  <data name="XNN_HistoryItem_Stopped" xml:space="preserve">
    <value>{0}: {1} の操作を中止しました</value>
    <comment>Example: "{2012 06 06 17:28} {DeviceName} stopped working"</comment>
  </data>
  <data name="XNN_Laptop" xml:space="preserve">
    <value>ノート PC</value>
    <comment>To translate</comment>
  </data>
  <data name="XNN_LineCapSize" xml:space="preserve">
    <value>線のキャップ サイズ</value>
  </data>
  <data name="XNN_LineCapStyle" xml:space="preserve">
    <value>線のキャップ スタイル</value>
  </data>
  <data name="XNN_LineEndCap" xml:space="preserve">
    <value>線の終了キャップ</value>
  </data>
  <data name="XNN_LineEndCapStyle" xml:space="preserve">
    <value>線の終了キャップ スタイル</value>
  </data>
  <data name="XNN_LineStartCap" xml:space="preserve">
    <value>線の開始キャップ</value>
  </data>
  <data name="XNN_LineStartCapStyle" xml:space="preserve">
    <value>線の開始キャップ スタイル</value>
  </data>
  <data name="XNN_MaximumZoomLevel" xml:space="preserve">
    <value>最大ズーム レベル</value>
  </data>
  <data name="XNN_MinimumZoomLevel" xml:space="preserve">
    <value>最小ズーム レベル</value>
  </data>
  <data name="XNN_MouseWheel" xml:space="preserve">
    <value>マウス ホイール</value>
  </data>
  <data name="XNN_Msg_ForEntringCharacters" xml:space="preserve">
    <value>ズームするには、ノード テキストの開始文字を入力してください。</value>
  </data>
  <data name="XNN_Msg_ForSelectingNodes" xml:space="preserve">
    <value>ズームするノードを選択してください。</value>
  </data>
  <data name="XNN_Msg_NodeNotFound" xml:space="preserve">
    <value>ノードは存在しません。</value>
  </data>
  <data name="XNN_NavigationSettings" xml:space="preserve">
    <value>ナビゲーション設定</value>
  </data>
  <data name="XNN_NormalState" xml:space="preserve">
    <value>有効状態の切り替え</value>
  </data>
  <data name="XNN_OPDP_Horizontal" xml:space="preserve">
    <value>水平方向に配置</value>
  </data>
  <data name="XNN_OPDP_Settings" xml:space="preserve">
    <value>概要と詳細ペインの設定</value>
  </data>
  <data name="XNN_OPDP_Vertical" xml:space="preserve">
    <value>垂直方向に配置</value>
  </data>
  <data name="XNN_OPDP_Visibility" xml:space="preserve">
    <value>概要と詳細ペインの表示/非表示</value>
  </data>
  <data name="XNN_Pan" xml:space="preserve">
    <value>パニング</value>
  </data>
  <data name="XNN_Pause_Updates" xml:space="preserve">
    <value>更新の一時停止</value>
  </data>
  <data name="XNN_Printer" xml:space="preserve">
    <value>プリンター</value>
  </data>
  <data name="XNN_RemoveNodeFromSource" xml:space="preserve">
    <value>ソースからノードを削除する</value>
  </data>
  <data name="XNN_RemoveNodeFromView" xml:space="preserve">
    <value>ビューからノードを削除する</value>
  </data>
  <data name="XNN_RestoreNodeIntoView" xml:space="preserve">
    <value>ビューにノードを復元する</value>
  </data>
  <data name="XNN_Resume_Updates" xml:space="preserve">
    <value>更新の再開</value>
  </data>
  <data name="XNN_Router" xml:space="preserve">
    <value>ルーター</value>
  </data>
  <data name="XNN_ScaleToFit" xml:space="preserve">
    <value>サイズを画面に合わせる</value>
  </data>
  <data name="XNN_SearchNode" xml:space="preserve">
    <value>ノードの検索</value>
  </data>
  <data name="XNN_SelectAll" xml:space="preserve">
    <value>すべて選択</value>
  </data>
  <data name="XNN_SelectNode" xml:space="preserve">
    <value>表示状態を切り替えるノードを選択してください。</value>
  </data>
  <data name="XNN_SelectState" xml:space="preserve">
    <value>選択状態の切り替え</value>
  </data>
  <data name="XNN_Server" xml:space="preserve">
    <value>サーバー</value>
  </data>
  <data name="XNN_Set_EditingAll" xml:space="preserve">
    <value>すべて編集モードに設定</value>
  </data>
  <data name="XNN_ShowHide" xml:space="preserve">
    <value>表示状態の切り替え</value>
  </data>
  <data name="XNN_Switch" xml:space="preserve">
    <value>スイッチ</value>
  </data>
  <data name="XNN_WAN" xml:space="preserve">
    <value>WAN</value>
  </data>
  <data name="XNN_WirelessRouter" xml:space="preserve">
    <value>ワイヤレス ルーター</value>
  </data>
  <data name="XNN_ZoomIn" xml:space="preserve">
    <value>ズームイン</value>
  </data>
  <data name="XNN_ZoomInOut" xml:space="preserve">
    <value>ズーム モード</value>
  </data>
  <data name="XNN_ZoomLevel" xml:space="preserve">
    <value>ズーム レベル</value>
  </data>
  <data name="XNN_ZoomOut" xml:space="preserve">
    <value>ズームアウト</value>
  </data>
  <data name="XNN_ZoomSelection" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="XNN_ZoomTo100" xml:space="preserve">
    <value>100% にズーム</value>
  </data>
  <data name="XNN_ZoomToSpecificNode" xml:space="preserve">
    <value>特定のノードにズーム</value>
  </data>
</root>