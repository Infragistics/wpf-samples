<framework:SampleContainer x:Class="IGNetworkNode.Samples.Styling.CustomNodeStyle" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared" 
    xmlns:common="clr-namespace:Infragistics.Samples.Shared.Resources;assembly=Infragistics.Samples.Shared" 
    xmlns:models="clr-namespace:Infragistics.Samples.Shared.Models;assembly=Infragistics.Samples.Shared" 
    xmlns:res="clr-namespace:IGNetworkNode.Resources"                         
    mc:Ignorable="d" d:DesignHeight="400" d:DesignWidth="700">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGNetworkNode;component/Assets/Global.xaml" />
                
                
            </ResourceDictionary.MergedDictionaries>
            <common:CommonStrings x:Key="CommonStrings"/>
            <res:NetworkNodeStrings x:Key="Strings"/>
            <models:NetworkNodeAttendanceData x:Key="SampleData" />
            <!--Brushes-->
            <LinearGradientBrush x:Key="NodeBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFDFDFD"/>
                <GradientStop Color="#FFE3E3E3" Offset="0.864"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="NodeBgBrushSelected" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                <GradientStop Color="#FF252525"/>
                <GradientStop Color="#FF393939" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="NodeStroke" Color="#FF4B4B52"/>
            <SolidColorBrush x:Key="ForegroundBrush2" Color="#FF383741"/>
            <SolidColorBrush x:Key="NodeStrokeOver" Color="#FF552E68"/>
            <SolidColorBrush x:Key="NodeStrokePress" Color="#FF3C194E"/>
            <SolidColorBrush x:Key="ItemSelectedOuterBorderFill" Color="#FFD07302"/>
            <SolidColorBrush x:Key="ItemSelectedCenterFill" Color="White"/>
            <SolidColorBrush x:Key="NodeStrokeFocus" Color="#FF657E35" />
            <!--Node Style-->
            <Style x:Key="NodeStyle" TargetType="ig:NetworkNodeNodeControl">
                <Setter Property="Padding" Value="4,4,4,2"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="MinWidth" Value="60"/>
                <Setter Property="Background" Value="{StaticResource NodeBgBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource NodeStroke}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush2}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ig:NetworkNodeNodeControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="5"/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over1" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="press" d:IsOptimized="True"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="press1" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="ReadOnly"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focus" d:IsOptimized="True"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focus1" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectedStates">
                                        <VisualState x:Name="Unselected"/>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="select" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="overlay" BorderBrush="{StaticResource NodeStroke}" Background="{TemplateBinding Background}" Margin="1,1,1,0"/>
                                <Border x:Name="normal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Grid.RowSpan="2"/>
                                <Border x:Name="normal1" Background="{TemplateBinding BorderBrush}" Grid.Row="1"/>
                                <Border x:Name="over" BorderBrush="{StaticResource NodeStrokeOver}" BorderThickness="2" Opacity="0" Grid.RowSpan="2"/>
                                <Border x:Name="over1" Background="{StaticResource NodeStrokeOver}" Opacity="0" Grid.Row="1"/>
                                <Border x:Name="press" BorderBrush="{StaticResource NodeStrokePress}" BorderThickness="2" Opacity="0" Grid.RowSpan="2"/>
                                <Border x:Name="press1" Background="{StaticResource NodeBgBrushSelected}" Opacity="0" Grid.Row="1"/>
                                <Border x:Name="focus" BorderBrush="{StaticResource NodeStrokeFocus}" BorderThickness="2" Opacity="0" Grid.RowSpan="2">
                                    <Border.Background>
                                        <ImageBrush Stretch="Fill"/>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="focus1" Background="{StaticResource NodeStrokeFocus}" Opacity="0" Grid.Row="1"/>
                                <Border x:Name="select" BorderBrush="{StaticResource ItemSelectedOuterBorderFill}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ItemSelectedCenterFill}" Margin="1" Opacity="0" Grid.RowSpan="2"/>
                                <ContentPresenter x:Name="NodePresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </framework:SampleContainer.Resources>

    <Grid x:Name="LayoutRoot" Width="Auto">
        <!-- #BEGIN SNIPPET# -->
        <ig:XamNetworkNode x:Name="xnn" ItemsSource="{Binding Nodes}">
            <ig:XamNetworkNode.DataContext>
                <models:NetworkNodeCompanyData />
            </ig:XamNetworkNode.DataContext>
            <ig:XamNetworkNode.GlobalNodeLayouts>
                <ig:NetworkNodeNodeLayout
                        TargetTypeName="NodeModel"
                        DisplayMemberPath="Label"
                        ConnectionsMemberPath="Connections"
                        ConnectionTargetMemberPath="Target"
                        ConnectionWeightMemberPath="Weight"
                        NodeStyle="{StaticResource NodeStyle}"/>
            </ig:XamNetworkNode.GlobalNodeLayouts>
        </ig:XamNetworkNode>
        <!-- #END SNIPPET# -->
    </Grid>
</framework:SampleContainer>
