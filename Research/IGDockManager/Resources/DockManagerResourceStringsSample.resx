<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloseAllButThisPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Close All But This</value>
  </data>
  <data name="CloseButtonToolTip" xml:space="preserve">
    <value>[Localizable]Close</value>
  </data>
  <data name="ClosePaneMenuItem" xml:space="preserve">
    <value>[Localizable]Close</value>
  </data>
  <data name="DockablePaneMenuItem" xml:space="preserve">
    <value>[Localizable]Dockable</value>
  </data>
  <data name="DocumentFilesMenuToolTip" xml:space="preserve">
    <value>[Localizable]Active Files</value>
  </data>
  <data name="DocumentPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Tabbed Document</value>
  </data>
  <data name="DocumentShowNavigatorToolTip" xml:space="preserve">
    <value>[Localizable]Show Pane Navigator</value>
  </data>
  <data name="FloatingPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Floating</value>
  </data>
  <data name="HidePaneMenuItem" xml:space="preserve">
    <value>[Localizable]Hide</value>
  </data>
  <data name="LE_CannotChangeInitialLocation" xml:space="preserve">
    <value>[Localizable]The 'InitialLocation' cannot be changed once a SplitPane is associated with a 'XamDockManager'.</value>
  </data>
  <data name="LE_CannotNestContentPanes" xml:space="preserve">
    <value>[Localizable]ContentPane '{0}' cannot be nested within another ContentPane ('{1}').</value>
  </data>
  <data name="LE_CannotPerformAutomationOperation" xml:space="preserve">
    <value>[Localizable]Operation cannot be performed.</value>
  </data>
  <data name="LE_ElementNotInDockManager" xml:space="preserve">
    <value>[Localizable]The specified element must be within a 'XamDockManager'.</value>
  </data>
  <data name="LE_InitialLocationForSplitOnly" xml:space="preserve">
    <value>[Localizable]The 'InitialLocation' property is only intended for SplitPane instances in the Panes collection of the XamDockManager.</value>
  </data>
  <data name="LE_InvalidAddToGroupElement" xml:space="preserve">
    <value>[Localizable]The group must be a 'SplitPane' or 'TabGroupPane'.</value>
  </data>
  <data name="LE_InvalidateNavigatorSelectedPane" xml:space="preserve">
    <value>[Localizable]The specified pane does not exist with the 'AllPanes' collection.</value>
  </data>
  <data name="LE_InvalidDocumentContentHostChild" xml:space="preserve">
    <value>[Localizable]Only SplitPane instances can be added to the 'DocumentContentHost'.</value>
  </data>
  <data name="LE_InvalidDocumentSplitPaneChild" xml:space="preserve">
    <value>[Localizable]A SplitPane within the 'DocumentContentHost' can only contain 'TabGroupPane' and 'SplitPane' instances.</value>
  </data>
  <data name="LE_InvalidNewSplitPaneElement" xml:space="preserve">
    <value>[Localizable]The pane must be a 'TabGroupPane' or 'ContentPane' instance.</value>
  </data>
  <data name="LE_InvalidNewTabGroupActionPane" xml:space="preserve">
    <value>[Localizable]The specified pane is already within a 'TabGroupPane'.</value>
  </data>
  <data name="LE_InvalidPaneToolWindowContent" xml:space="preserve">
    <value>[Localizable]PaneToolWindow Content can only contain a SplitPane.</value>
  </data>
  <data name="LE_InvalidRootDragElement" xml:space="preserve">
    <value>[Localizable]An invalid root element has been specified. The element must be a pane container such as a TabGroupPane or SplitPane.</value>
  </data>
  <data name="LE_InvalidSplitPaneChild" xml:space="preserve">
    <value>[Localizable]Invalid element type. Only 'ContentPane', 'TabGroupPane', 'ContentPanePlaceholder' and 'SplitPane' instances can be added to the collection.</value>
  </data>
  <data name="LE_InvalidTabGroupPaneChild" xml:space="preserve">
    <value>[Localizable]A TabGroupPane can only contain 'ContentPane' and 'ContentPanePlaceholder' instances. If this occurs at design time it may be because the designer added 1 or more TabItem instances by default. To work around that issue, switch to the XAML view and remove the TabItems that were added and then return to the design surface.</value>
  </data>
  <data name="LE_InvalidUnpinnedTabAreaChild" xml:space="preserve">
    <value>[Localizable]A TabGroupPane can only contain 'ContentPane' instances.</value>
  </data>
  <data name="LE_LoadLayoutInProgress" xml:space="preserve">
    <value>[Localizable]Cannot load a layout while a layout is being loaded.</value>
  </data>
  <data name="LE_LoadLayoutInvalidPaneLocation" xml:space="preserve">
    <value>[Localizable]Invalid pane location for ContentPane '{0}'.</value>
  </data>
  <data name="LE_LoadLayoutInvalidRootElement" xml:space="preserve">
    <value>[Localizable]Invalid layout file - root element must be '{0}'.</value>
  </data>
  <data name="LE_LoadLayoutMissingName" xml:space="preserve">
    <value>[Localizable]ContentPane must include Name attribute.</value>
  </data>
  <data name="LE_LoadLayoutNoDocumentContentHost" xml:space="preserve">
    <value>[Localizable]The ContentPane '{0}' is supposed to be positioned within the DocumentContentHost but the XamDockManager does not have a DocumentContentHost.</value>
  </data>
  <data name="LE_LoadLayoutPanePositionNotFound" xml:space="preserve">
    <value>[Localizable]The ContentPane '{0}' is supposed to be positioned as '{1}' but information for that position was not in the layout.</value>
  </data>
  <data name="LE_LoadLayoutUndefinedContentPane" xml:space="preserve">
    <value>[Localizable]Layout contains a reference to a ContentPane with name '{0}' that isn't defined in the ContentPanes section of the layout file.</value>
  </data>
  <data name="LE_MultipleContainersWithSameName" xml:space="preserve">
    <value>[Localizable]There are multiple '{0}' instances defined with a name of '{1}'.</value>
  </data>
  <data name="LE_NeedDocumentContentHost" xml:space="preserve">
    <value>[Localizable]The 'Content' property must be set to a 'DocumentContentHost'.</value>
  </data>
  <data name="LE_NewPaneCannotHaveParent" xml:space="preserve">
    <value>[Localizable]The NewPane for the InitializePaneContent event cannot have a logical or visual parent.</value>
  </data>
  <data name="LE_PaneAlreadyReferencedInLayout" xml:space="preserve">
    <value>[Localizable]The ContentPane '{0}' has already been referenced in the loaded layout. This would happen if you provided an existing pane in the InitializePaneContent event.</value>
  </data>
  <data name="LE_SaveLayoutPaneNameMissing" xml:space="preserve">
    <value>[Localizable]All panes being serialized must have a specific unique name.</value>
  </data>
  <data name="MoveToNewHorizontalGroupPaneMenuItem" xml:space="preserve">
    <value>[Localizable]New Horizontal Tab Group</value>
  </data>
  <data name="MoveToNewVerticalGroupPaneMenuItem" xml:space="preserve">
    <value>[Localizable]New Vertical Tab Group</value>
  </data>
  <data name="MoveToNextGroupPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Move To Next Tab Group</value>
  </data>
  <data name="MoveToPreviousGroupPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Move To Previous Tab Group</value>
  </data>
  <data name="PaneHeaderContentValidationError" xml:space="preserve">
    <value>[Localizable][Error: The Header of the ContentPane is set to an element. The Header is used as the default TabHeader and in the PaneNavigator. An element cannot be shown in multiple locations. Set the HeaderTemplate to the element that should be displayed in the pane caption and navigator and set the TabHeader or TabHeaderTemplate as needed.]</value>
  </data>
  <data name="PaneNavigatorActiveFilesLabel" xml:space="preserve">
    <value>[Localizable]Active Files</value>
  </data>
  <data name="PaneNavigatorActiveToolWindowsLabel" xml:space="preserve">
    <value>[Localizable]Active Tool Windows</value>
  </data>
  <data name="PinButtonToolTip" xml:space="preserve">
    <value>[Localizable]Auto Hide</value>
  </data>
  <data name="PinPaneMenuItem" xml:space="preserve">
    <value>[Localizable]Auto Hide</value>
  </data>
  <data name="PositionMenuToolTip" xml:space="preserve">
    <value>[Localizable]Window Position</value>
  </data>
  <data name="AutoHideCommandString" xml:space="preserve">
    <value>[Localized] Auto Hide</value>
  </data>
  <data name="CloseAllButThisString" xml:space="preserve">
    <value>[Localized] Close All But This</value>
  </data>
  <data name="CloseCommandString" xml:space="preserve">
    <value>[Localized] Close</value>
  </data>
  <data name="CloseString" xml:space="preserve">
    <value>[Localized] Close</value>
  </data>
  <data name="DockAsTabbedDocumentString" xml:space="preserve">
    <value>[Localized] Dock as Tabbed Document</value>
  </data>
  <data name="DockCommandString" xml:space="preserve">
    <value>[Localized] Dock</value>
  </data>
  <data name="FloatCommandString" xml:space="preserve">
    <value>[Localized] Float</value>
  </data>
  <data name="HideCommandString" xml:space="preserve">
    <value>[Localized] Hide</value>
  </data>
  <data name="HueCaption" xml:space="preserve">
    <value>[Localized] Hue</value>
  </data>
  <data name="IgnoreAllButtonString" xml:space="preserve">
    <value>[Localized] Ignore All</value>
  </data>
  <data name="IgnoreButtonString" xml:space="preserve">
    <value>[Localized] Ignore</value>
  </data>
  <data name="LE_ActivationActionDelayLessThanZero" xml:space="preserve">
    <value>[Localized] ActivationActionDelay cannot be less than zero.</value>
  </data>
  <data name="LE_ActivationInitialActionDelayLessThanZero" xml:space="preserve">
    <value>[Localized] ActivationInitialActionDelay cannot be less than zero.</value>
  </data>
  <data name="LE_ButtonGroupOutsideOfGroupControl" xml:space="preserve">
    <value>[Localized] A ButtonGroup can only be placed inside of a RibbonGroup.</value>
  </data>
  <data name="LE_CannotModifyBoundGroups" xml:space="preserve">
    <value>[Localized] Can't modify Groups of a XamOutlookBar that is bound to a GroupsSource</value>
  </data>
  <data name="LE_CannotSetGroupSource" xml:space="preserve">
    <value>[Localized] The Groups collection must be empty before using the GroupsSource</value>
  </data>
  <data name="LE_GalleryToolAlreadyExistInMenu" xml:space="preserve">
    <value>[Localized] A GalleryTool already exists in this Menu, only one GalleryTool per menu is allowed.</value>
  </data>
  <data name="LE_GalleryToolOutsideOfMenu" xml:space="preserve">
    <value>[Localized] You cannot use a GalleryTool outside of a MenuTool.</value>
  </data>
  <data name="LE_GroupRegisteredWithSameId" xml:space="preserve">
    <value>[Localized] Group with Id '{0}' already exists. Cannot add multiple group instances with the same Id.</value>
  </data>
  <data name="LE_KeyTipArgumentException" xml:space="preserve">
    <value>[Localized] Object is not a Keytip</value>
  </data>
  <data name="LE_ToolRegisteredWithSameId" xml:space="preserve">
    <value>[Localized] Tool with Id '{0}' already exists. Cannot add multiple tool instances with the same Id.</value>
  </data>
  <data name="MoveToNextTabGroupString" xml:space="preserve">
    <value>[Localized] Move to Next Tab Group</value>
  </data>
  <data name="MoveToPreviousTabGroupString" xml:space="preserve">
    <value>[Localized] Move to Previous Tab Group</value>
  </data>
  <data name="NavigationAreaOptionsMenuItemHeader" xml:space="preserve">
    <value>[Localized] Navigation Pane Options...</value>
  </data>
  <data name="NavigationPaneMinimizedText" xml:space="preserve">
    <value>[Localized] Navigation Pane</value>
  </data>
  <data name="NavigationPaneMinimizedTooltip" xml:space="preserve">
    <value>[Localized] Click to expand Navigation Pane</value>
  </data>
  <data name="NavigationPaneOptionsControlCancelButton" xml:space="preserve">
    <value>[Localized] Cancel</value>
  </data>
  <data name="NavigationPaneOptionsControlMoveDownButton" xml:space="preserve">
    <value>[Localized] Move Down</value>
  </data>
  <data name="NavigationPaneOptionsControlMoveUpButton" xml:space="preserve">
    <value>[Localized] Move Up</value>
  </data>
  <data name="NavigationPaneOptionsControlOkButton" xml:space="preserve">
    <value>[Localized] OK</value>
  </data>
  <data name="NavigationPaneOptionsControlOrderLabel" xml:space="preserve">
    <value>[Localized] Display buttons in this order</value>
  </data>
  <data name="NavigationPaneOptionsControlResetButton" xml:space="preserve">
    <value>[Localized] Reset</value>
  </data>
  <data name="NavigationPaneOptionsDialogTitle" xml:space="preserve">
    <value>[Localized] Navigation Pane Options</value>
  </data>
  <data name="NewHorizontalTabGroupString" xml:space="preserve">
    <value>[Localized] New Horizontal Tab Group</value>
  </data>
  <data name="NewVerticalTabGroupString" xml:space="preserve">
    <value>[Localized] New Vertical Tab Group</value>
  </data>
  <data name="WindowPositionCommandString" xml:space="preserve">
    <value>[Localized] Window Position</value>
  </data>
  <data name="ActiveFilesString" xml:space="preserve">
    <value>[Localized] Active Files</value>
  </data>
  <data name="ActiveToolWindowsString" xml:space="preserve">
    <value>[Localized] Active Tool Windows</value>
  </data>
</root>