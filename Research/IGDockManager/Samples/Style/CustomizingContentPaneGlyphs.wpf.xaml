<framework:SampleContainer x:Class="IGDockManager.Samples.Style.CustomizingContentPaneGlyphs"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="CustomizeContentPaneGlyphs"
      xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:igDock="http://infragistics.com/DockManager"
      xmlns:igWindows="http://infragistics.com/Windows"
      xmlns:locCtls="clr-namespace:IGDockManager.CustomControls"
      xmlns:res="clr-namespace:IGDockManager.Resources">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGDockManager;component/Assets/Global.xaml" />
                <ResourceDictionary Source="/IGDockManager;component/CustomControls/themes/generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <res:DockManagerStrings x:Key="Strings" />
        </ResourceDictionary>
    </framework:SampleContainer.Resources>

    <!-- #BEGIN SNIPPET# -->
    <!-- Create a XamDockManager control -->
    <igDock:XamDockManager Theme="RoyalLight">
        <igDock:XamDockManager.Resources>
            <!-- ========== CaptionButtonStyleBase ========== -->
            <!-- Base style for the buttons in the ContentPane Headers -->
            <Style x:Key="CaptionButtonStyleBase" TargetType="{x:Type Button}">
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FF434E54"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Style.Triggers>
                    <!-- Setting the foreground property when a Pane is active -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiDataTrigger>
                    <!-- HotTracked Button in an Active ContentPane -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="#FF3399FF"/>
                        <Setter Property="Background" Value="#FFB6E4F7"/>
                    </MultiDataTrigger>
                    <!-- HotTracked Button in an Non-Active ContentPane -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=Pane.IsActivePane, RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneHeaderPresenter}}}" Value="False"/>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="#FF3399FF"/>
                        <Setter Property="Background" Value="#FFB6E4F7"/>
                    </MultiDataTrigger>
                    <!-- IsPressed Button -->
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                        <Setter Property="Background" Value="#FFCEEDFA"/>
                    </Trigger>
                    <!-- IsEnabled Button -->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}" TargetType="{x:Type MenuItem}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Width" Value="14"/>
                <Setter Property="Height" Value="13"/>
                <Setter Property="Foreground" Value="#FF434E54"/>
                <Setter Property="Margin" Value="0,3,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <igWindows:CardPanel>
                                <Border
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Path
                                            x:Name="AllItemsInViewGlyph"
                                            Margin="1,1,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Height="8"
                                            Width="9"
                                            Stretch="Fill"
                                            Opacity="1"
                                            Data="M3,7 L9,7 9,8 3,8 3,7 z M0,6 L2,6 2,8 0,8 0,6 z M3,4 L9,4 9,5 3,5 3,4 z M0,3 L2,3 2,5 0,5 0,3 z M3,1 L9,1 9,2 3,2 3,1 z M0,0 L2,0 2,2 0,2 0,0 z"
                                            Fill="{TemplateBinding Foreground}"/>
                                        <Path
                                            x:Name="HasItemsOutOfViewGlyph"
                                            Visibility="Collapsed"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"
                                            Height="10"
                                            Width="12"
                                            Stretch="Fill"
                                            Opacity="1"
                                            Data="M7,7 L12,7 9.5,10 7,7 z M3,7 L6,7 6,8 3,8 3,7 z M0,6 L2,6 2,8 0,8 0,6 z M3,4 L9,4 9,5 3,5 3,4 z M0,3 L2,3 2,5 0,5 0,3 z M3,1 L9,1 9,2 3,2 3,1 z M0,0 L2,0 2,2 0,2 0,0 z"
                                            Fill="{TemplateBinding Foreground}"/>
                                    </Grid>
                                </Border>
                                <Popup
                                    x:Name="PART_Popup"
                                    AllowsTransparency="true"
                                    Placement="Bottom"
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                    <Grid Height="Auto" Width="Auto" x:Name="MenuItem">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle
                                            Grid.ColumnSpan="2"
                                            Opacity="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Margin="0,0,0,0"
                                            Stroke="#FFA0A0A0"
                                            StrokeThickness="1"
                                            Fill="#FFF0F0F0"
                                            SnapsToDevicePixels="True"/>
                                        <ScrollViewer
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="True"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                            Margin="3">
                                            <ItemsPresenter KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </igWindows:CardPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=(igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
                                    <Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!-- Hottracked State -->
                    <DataTrigger Binding="{Binding Path=IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                        <Setter Property="BorderBrush" Value="#FF3399FF"/>
                        <Setter Property="Background" Value="#FFB6E4F7"/>
                    </DataTrigger>
                    <!-- IsSubmenuOpen State -->
                    <DataTrigger Binding="{Binding Path=IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                        <Setter Property="BorderBrush" Value="#FF3C7FB1"/>
                        <Setter Property="Background" Value="#FFCEEDFA"/>
                    </DataTrigger>
                    <!-- Disabled State -->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- ========== PaneHeaderPresenter.PinButtonStyleKey ========== -->
            <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleBase}">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="Padding" Value="1.5"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Path
                                        x:Name="PinnedGlyph"
                                        Visibility="Visible"
                                        Margin="4,3,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="8.5"
                                        Width="7"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M3,1 C2,1 1.5,2 1.5,3.5 L4.5,3.5 C4.5,2 3.5,1 3,1 z M3,0 C4.5,0 5.5,1.5 5.5,3.5 L6,3.5 6,8.5 0,8.5 0,3.5 0.5,3.5 C0.5,1.5 1.5,0 3,0 z"
                                        Fill="{TemplateBinding Foreground}"/>
                                    <Path
                                        x:Name="UnpinnedGlyph"
                                        Visibility="Collapsed"
                                        Margin="3,3,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="8.5"
                                        Width="9"
                                        Stretch="Fill"
                                        Opacity="1"
                                        Data="M6.5,0 C8,1.5E-08 9,1.5 9,3.5 L8,3.5 C8,2 7,1 6.5,1 5.6715729,1 5,2 5,3.5 L6,3.5 6,8.5 0,8.5 0,3.5 4,3.5 C4,1.5670034 5,1.5E-08 6.5,0 z"
                                        Fill="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                                    <Setter TargetName="UnpinnedGlyph" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PinnedGlyph" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </igDock:XamDockManager.Resources>
        <!-- Document Content ======================================================================== -->
        <!-- Add a DocumentContentHost here which will assign the DocumentContentHost as the Content of the
        XamDockManager.  XamDockManager displays its content inside the dock areas.  Then add a SplitPane
        containing a TabGroupPane with several ContentPanes that represent document content. -->
        <igDock:DocumentContentHost>
            <igDock:SplitPane>
                <igDock:TabGroupPane>
                    <igDock:ContentPane x:Name="document1"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_Page1_Header}">
                        <locCtls:XdmStartPage Header="{Binding Source={StaticResource Strings}, Path=ThemesAndCustomStyles_CustomizeContentPaneGlyphs_XdmStartPage_Header}">
                            <Grid>
                                <Image
                                    Source="{Binding Source={StaticResource Strings}, Path=ThemesAndCustomStyles_CustomizeContentPaneGlyphs_XdmStartPage_Image}"
                                    Width="141"
                                    Height="67"
                                    HorizontalAlignment="Left"/>
                            </Grid>
                        </locCtls:XdmStartPage>
                    </igDock:ContentPane>
                    <igDock:ContentPane x:Name="document2"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_Page2_Header}">
                        <locCtls:XdmSampleDocumentContent Content=" "/>
                    </igDock:ContentPane>
                    <igDock:ContentPane x:Name="document3"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_Page3_Header}">
                        <locCtls:XdmSampleDocumentContent Content=" "/>
                    </igDock:ContentPane>
                    <igDock:ContentPane x:Name="document4"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_Page4_Header}">
                        <locCtls:XdmSampleDocumentContent Content=" "/>
                    </igDock:ContentPane>
                </igDock:TabGroupPane>
            </igDock:SplitPane>
        </igDock:DocumentContentHost>
        <!-- Add panes to the XamDockManager's Panes collection -->
        <igDock:XamDockManager.Panes>
            <!-- Right Dock Area ====================================================================== -->
            <!-- Add a SplitPane with a single ContentPane and set its initial location to DockedRight
            The ContentPane will show up as 'pinned' since we have not set its IsPinned property which
            defaults to true. -->
            <igDock:SplitPane igDock:XamDockManager.InitialLocation="DockedRight"
                              SplitterOrientation="Horizontal" Width="220">
                <igDock:TabGroupPane>
                    <igDock:ContentPane x:Name="rightEdgeDock"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Header1}"
                                        Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Image1}">
                        <locCtls:XdmSamplePaneContent Content=" "/>
                    </igDock:ContentPane>
                    <igDock:ContentPane x:Name="rightEdgeTeamDock"
                                        Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Header2}"
                                        Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Image2}">
                        <locCtls:XdmSamplePaneContent Content=" "/>
                    </igDock:ContentPane>
                </igDock:TabGroupPane>
                <igDock:ContentPane x:Name="rightEdgePropertiesDock"
                                    Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Header3}"
                                    Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_RightEdge_Image3}">
                    <locCtls:XdmSamplePaneContent Content=" "/>
                </igDock:ContentPane>
            </igDock:SplitPane>
            <!-- Bottom Dock Area ===================================================================== -->
            <!-- Add a SplitPane with a single TabGroupPane that contains multiple ContentPanes. -->
            <igDock:SplitPane igDock:XamDockManager.InitialLocation="DockedBottom">
                <!-- TabGroupPane containing 5 ContentPanes -->
                <igDock:TabGroupPane>
                    <igDock:ContentPane Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Header1}"
                                        Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Image1}">
                        <locCtls:XdmSamplePaneContent Content=" "/>
                    </igDock:ContentPane>
                    <igDock:ContentPane Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Header2}"
                                        Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Image2}">
                        <locCtls:XdmSamplePaneContent Content=" "/>
                    </igDock:ContentPane>
                    <igDock:ContentPane Header="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Header3}"
                                        Image="{Binding Source={StaticResource Strings}, Path=XamDockManager_Root_VS08_BottomEdge_Image3}">
                        <locCtls:XdmSamplePaneContent Content=" "/>
                    </igDock:ContentPane>
                </igDock:TabGroupPane>
            </igDock:SplitPane>
        </igDock:XamDockManager.Panes>
    </igDock:XamDockManager>
    <!-- #END SNIPPET# -->

</framework:SampleContainer>
