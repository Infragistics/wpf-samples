<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Animation" xml:space="preserve">
    <value>Animation</value>
  </data>
  <data name="AnimationSize" xml:space="preserve">
    <value>Animation Size</value>
  </data>
  <data name="Animations_ComboLabel" xml:space="preserve">
    <value>Choose Animation</value>
  </data>
  <data name="ApplyCustomTemplate" xml:space="preserve">
    <value>Apply Custom Template</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>Background</value>
  </data>
  <data name="BackgroundBrush" xml:space="preserve">
    <value>Background Brush</value>
  </data>
  <data name="Border" xml:space="preserve">
    <value>Border</value>
  </data>
  <data name="BorderBrush" xml:space="preserve">
    <value>Border Brush</value>
  </data>
  <data name="BorderThickness" xml:space="preserve">
    <value>Border Thickness</value>
  </data>
  <data name="BugFixingTask" xml:space="preserve">
    <value>Bug fixing</value>
  </data>
  <data name="BusyContent" xml:space="preserve">
    <value>Busy Content</value>
  </data>
  <data name="BusyIndicator_BusyContent" xml:space="preserve">
    <value>Busy Content Text</value>
  </data>
  <data name="BusyIndicator_BusyContentStyle" xml:space="preserve">
    <value>Apply Custom Template to the Busy Content</value>
  </data>
  <data name="BusyIndicator_DisplayAfter" xml:space="preserve">
    <value>Display After in sec(s)</value>
  </data>
  <data name="BusyIndicator_FocusTargetElement" xml:space="preserve">
    <value>Focus Target</value>
  </data>
  <data name="BusyIndicator_IsBusy" xml:space="preserve">
    <value>IsBusy</value>
  </data>
  <data name="BusyIndicator_IsIndeterminate" xml:space="preserve">
    <value>IsIndeterminate</value>
  </data>
  <data name="BusyIndicator_IsIndicatorVisible" xml:space="preserve">
    <value>Is Indicator Visible</value>
  </data>
  <data name="BusyIndicator_OverlayStyle" xml:space="preserve">
    <value>Overlay Brush</value>
  </data>
  <data name="BusyText1" xml:space="preserve">
    <value>Please, wait ...</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CollectFeedbackNote" xml:space="preserve">
    <value>Meetings with the customers</value>
  </data>
  <data name="CollectFeedbackTask" xml:space="preserve">
    <value>Collect feedback</value>
  </data>
  <data name="CreateApplicationTask" xml:space="preserve">
    <value>Create a demo application</value>
  </data>
  <data name="DemoNotes" xml:space="preserve">
    <value>Creating a demo application showing the base functionality and UI</value>
  </data>
  <data name="DesignNote" xml:space="preserve">
    <value>Designing the core API and UI</value>
  </data>
  <data name="DesignTask" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="DevelopmentNote" xml:space="preserve">
    <value>Implementing all main features</value>
  </data>
  <data name="DevelopmentTask" xml:space="preserve">
    <value>Development</value>
  </data>
  <data name="DocumentingNote" xml:space="preserve">
    <value>Summarizing project requirements and specification</value>
  </data>
  <data name="DocumentTask" xml:space="preserve">
    <value>Write a specification</value>
  </data>
  <data name="FixingNote" xml:space="preserve">
    <value>Bug fixing and improvements</value>
  </data>
  <data name="FontFamilies" xml:space="preserve">
    <value>Font Families</value>
  </data>
  <data name="FontSize" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="FontStyles" xml:space="preserve">
    <value>Font Styles</value>
  </data>
  <data name="FontWeight" xml:space="preserve">
    <value>Font Weight</value>
  </data>
  <data name="Foreground" xml:space="preserve">
    <value>Foreground</value>
  </data>
  <data name="FreeText_NotDefinedYet" xml:space="preserve">
    <value>Not defined yet</value>
  </data>
  <data name="FreeText_StillInDiscussion" xml:space="preserve">
    <value>Still in discussion</value>
  </data>
  <data name="LargeResultSet_ConfigHeader" xml:space="preserve">
    <value>Binding a Large Result Set</value>
  </data>
  <data name="LargeResultSet_Generate" xml:space="preserve">
    <value>Generate Data</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading ...</value>
  </data>
  <data name="LoadingCompleted" xml:space="preserve">
    <value>Loading completed.</value>
  </data>
  <data name="LoadingInterrupted" xml:space="preserve">
    <value>Loading interrupted by the user.</value>
  </data>
  <data name="LoadingOrdersDataPercent" xml:space="preserve">
    <value>Loading Orders Data ... {0} %</value>
  </data>
  <data name="MainSummaryTask" xml:space="preserve">
    <value>Project Plan</value>
  </data>
  <data name="Mask_BorderThickness" xml:space="preserve">
    <value>{number:0-100}</value>
  </data>
  <data name="Mask_DoubleNumber" xml:space="preserve">
    <value>{double:2.3}</value>
  </data>
  <data name="Mask_FontSize" xml:space="preserve">
    <value>{number:8-72}</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Order Number</value>
  </data>
  <data name="Overlay" xml:space="preserve">
    <value>Overlay</value>
  </data>
  <data name="Padding" xml:space="preserve">
    <value>Padding</value>
  </data>
  <data name="PlanningNote" xml:space="preserve">
    <value>Calculating required budget and resources</value>
  </data>
  <data name="PlanningTask" xml:space="preserve">
    <value>Planning</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProjectComplete" xml:space="preserve">
    <value>Project Complete</value>
  </data>
  <data name="ProjectSummaryTask" xml:space="preserve">
    <value>Project Summary Task</value>
  </data>
  <data name="Quanity" xml:space="preserve">
    <value>Quanity</value>
  </data>
  <data name="RowsLoaded" xml:space="preserve">
    <value>Number of rows loaded:</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>sec(s)</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="TestingNote" xml:space="preserve">
    <value>Testing the features and user experience</value>
  </data>
  <data name="TestingTask" xml:space="preserve">
    <value>Testing</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Mask_Number" xml:space="preserve">
    <value>{number}</value>
  </data>
  <data name="ProgressValue" xml:space="preserve">
    <value>Progress Value:</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="CustomerDetails" xml:space="preserve">
    <value>Customer Details</value>
  </data>
  <data name="CustomersOverview" xml:space="preserve">
    <value>Customers Overview</value>
  </data>
  <data name="DeliveryDate" xml:space="preserve">
    <value>Delivery Date</value>
  </data>
  <data name="DeliveryQuantity" xml:space="preserve">
    <value>Delivery Quantity</value>
  </data>
  <data name="EnterCompanyName" xml:space="preserve">
    <value>Enter Company Name...</value>
  </data>
  <data name="EnterContactName" xml:space="preserve">
    <value>Enter Contact Name...</value>
  </data>
  <data name="MaskPhone" xml:space="preserve">
    <value>(###) ###-####</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="UIElement_Focus" xml:space="preserve">
    <value>UIElement to Focus</value>
  </data>
  <data name="LoadingOrdersData" xml:space="preserve">
    <value>Loading Orders Data ...</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ElapsedTime" xml:space="preserve">
    <value>Elapsed Time</value>
  </data>
  <data name="ShowIndicator" xml:space="preserve">
    <value>Show Busy Indicator</value>
  </data>
  <data name="TotalSeconds" xml:space="preserve">
    <value>{0} secs</value>
  </data>
  <data name="BusyIndicator_GenerateStyleText" xml:space="preserve">
    <value>Copy Style to Clipboard</value>
  </data>
  <data name="BusyIndicator_GeneratedStyle_MesageBox" xml:space="preserve">
    <value>А XAML Style was generated and copied to the clipboard.</value>
  </data>
  <data name="Mask_Secs" xml:space="preserve">
    <value>{number:1-40}</value>
  </data>
</root>