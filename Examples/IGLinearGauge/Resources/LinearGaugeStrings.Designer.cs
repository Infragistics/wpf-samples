//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IGLinearGauge.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LinearGaugeStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public LinearGaugeStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IGLinearGauge.Resources.LinearGaugeStrings", typeof(LinearGaugeStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absolute Zero.
        /// </summary>
        public static string AbsoluteZero {
            get {
                return ResourceManager.GetString("AbsoluteZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By international agreement, absolute zero is defined as 0K on the Kelvin scale and as −273.15° on the Celsius scale..
        /// </summary>
        public static string AbsoluteZero_Description {
            get {
                return ResourceManager.GetString("AbsoluteZero_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date.
        /// </summary>
        public static string Date {
            get {
                return ResourceManager.GetString("Date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting one.
        /// </summary>
        public static string Gauge_Settings1 {
            get {
                return ResourceManager.GetString("Gauge_Settings1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting two.
        /// </summary>
        public static string Gauge_Settings2 {
            get {
                return ResourceManager.GetString("Gauge_Settings2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting three.
        /// </summary>
        public static string Gauge_Settings3 {
            get {
                return ResourceManager.GetString("Gauge_Settings3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OPTIONS.
        /// </summary>
        public static string LinearGauge_options {
            get {
                return ResourceManager.GetString("LinearGauge_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Month.
        /// </summary>
        public static string Month {
            get {
                return ResourceManager.GetString("Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High.
        /// </summary>
        public static string NeedleDragging_High {
            get {
                return ResourceManager.GetString("NeedleDragging_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low.
        /// </summary>
        public static string NeedleDragging_Low {
            get {
                return ResourceManager.GetString("NeedleDragging_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium.
        /// </summary>
        public static string NeedleDragging_Medium {
            get {
                return ResourceManager.GetString("NeedleDragging_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Carbohydrates.
        /// </summary>
        public static string NutritionCarbohydrates {
            get {
                return ResourceManager.GetString("NutritionCarbohydrates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total calories intake ratio between fat, carbohydrates and protein, where middle ranges are healthy ratios and the needles show common practice..
        /// </summary>
        public static string NutritionDescription {
            get {
                return ResourceManager.GetString("NutritionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fat.
        /// </summary>
        public static string NutritionFat {
            get {
                return ResourceManager.GetString("NutritionFat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protein.
        /// </summary>
        public static string NutritionProtein {
            get {
                return ResourceManager.GetString("NutritionProtein", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Healthy Eating.
        /// </summary>
        public static string NutritionTitle {
            get {
                return ResourceManager.GetString("NutritionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OPTIONS.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Orientation.
        /// </summary>
        public static string Orientation {
            get {
                return ResourceManager.GetString("Orientation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sahara Desert.
        /// </summary>
        public static string SaharaDesert {
            get {
                return ResourceManager.GetString("SaharaDesert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cold.
        /// </summary>
        public static string SaharaDesert_Cold {
            get {
                return ResourceManager.GetString("SaharaDesert_Cold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sahara summer temperatures can show a daily range of more than 50 ºC - reaching that temperature during the day then plunging below freezing at night. The highest recorded temperature was 58 ºC (136.4 ºF), in Libya..
        /// </summary>
        public static string SaharaDesert_Description {
            get {
                return ResourceManager.GetString("SaharaDesert_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hot.
        /// </summary>
        public static string SaharaDesert_Hot {
            get {
                return ResourceManager.GetString("SaharaDesert_Hot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mild.
        /// </summary>
        public static string SaharaDesert_Mild {
            get {
                return ResourceManager.GetString("SaharaDesert_Mild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warm.
        /// </summary>
        public static string SaharaDesert_Warm {
            get {
                return ResourceManager.GetString("SaharaDesert_Warm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Avg Order.
        /// </summary>
        public static string SunkostSalesAvgOrder {
            get {
                return ResourceManager.GetString("SunkostSalesAvgOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sales totals to date for 2013, clearly exceed the total sales for all of 2012 (the begginning of the middle range). The 2013 sales numbers suggest that our new marketing campaign is successful, resulting in increased product penetration and a significant sales boost, working our way up to the targeted goals for the whole year (the begginning of the rightmost range)..
        /// </summary>
        public static string SunkostSalesDescription {
            get {
                return ResourceManager.GetString("SunkostSalesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sunkost: Sales Target of 2013.
        /// </summary>
        public static string SunkostSalesHeader {
            get {
                return ResourceManager.GetString("SunkostSalesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Customers.
        /// </summary>
        public static string SunkostSalesNewCustomers {
            get {
                return ResourceManager.GetString("SunkostSalesNewCustomers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profit.
        /// </summary>
        public static string SunkostSalesProfit {
            get {
                return ResourceManager.GetString("SunkostSalesProfit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to YTD Revenue.
        /// </summary>
        public static string SunkostSalesRevenue {
            get {
                return ResourceManager.GetString("SunkostSalesRevenue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team Events’ Budget Utilization.
        /// </summary>
        public static string TeamBudget {
            get {
                return ResourceManager.GetString("TeamBudget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target value shows the allocated budget, the progress bar shows the amount spent until now and the growing ranges indicates the team’s happiness on company organized activities..
        /// </summary>
        public static string TeamBudgetDescription {
            get {
                return ResourceManager.GetString("TeamBudgetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transition Duration.
        /// </summary>
        public static string Transition_Duration {
            get {
                return ResourceManager.GetString("Transition_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wind Speed (mph).
        /// </summary>
        public static string WindSpeed {
            get {
                return ResourceManager.GetString("WindSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raw Data from NOAA. Wind information from Los Angeles (07\16\2013) weather station..
        /// </summary>
        public static string WindSpeedDescription {
            get {
                return ResourceManager.GetString("WindSpeedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wind Speed Gauge (mph).
        /// </summary>
        public static string WindSpeedGauge {
            get {
                return ResourceManager.GetString("WindSpeedGauge", resourceCulture);
            }
        }
    }
}
