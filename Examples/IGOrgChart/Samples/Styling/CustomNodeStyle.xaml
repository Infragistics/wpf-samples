<framework:SampleContainer x:Class="IGOrgChart.Samples.Styling.CustomNodeStyle" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared" 
    xmlns:model="clr-namespace:IGOrgChart.Model"
    mc:Ignorable="d" d:DesignHeight="500" d:DesignWidth="700">
    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGOrgChart;component/Assets/Global.xaml" />
                
                
                
            </ResourceDictionary.MergedDictionaries>

            <!--Brushes-->
            <SolidColorBrush x:Key="NodeForegroundBrush" Color="{StaticResource Color_002}"/>
            <SolidColorBrush x:Key="BaseBrush" Color="#FFD0D0D0" />
            <SolidColorBrush x:Key="NodeBgBrush" Color="{StaticResource Color_002}" />
            <SolidColorBrush x:Key="NodeStroke" Color="{StaticResource Color_004}"/>
            <SolidColorBrush x:Key="ForegroundBrush2" Color="{StaticResource Color_014}"/>
            <SolidColorBrush x:Key="NodeStrokeOver" Color="{StaticResource Color_021}"/>
            <SolidColorBrush x:Key="NodeStrokePress" Color="{StaticResource Color_021}"/>
            <SolidColorBrush x:Key="ItemSelectedOuterBorderFill" Color="{StaticResource Color_022}"/>
            <SolidColorBrush x:Key="ItemSelectedCenterFill" Color="{StaticResource Color_002}"/>
            <SolidColorBrush x:Key="NodeStrokeFocus" Color="{StaticResource Color_021}" />
            
            <!--Expansion Indicator Style-->
            <Style x:Key="NodeToggleButtonStyle" TargetType="ToggleButton">
        	    <Setter Property="Background" Value="{StaticResource NodeStroke}"/>
        	    <Setter Property="Foreground" Value="{StaticResource NodeForegroundBrush}"/>
        	    <Setter Property="Padding" Value="3"/>
        	    <Setter Property="BorderThickness" Value="0"/>
        	    <Setter Property="BorderBrush" Value="{StaticResource NodeBgBrush}"/>
        	    <Setter Property="Template">
        		    <Setter.Value>
        			    <ControlTemplate TargetType="ToggleButton">
        				    <Grid>
        					    <VisualStateManager.VisualStateGroups>
        						    <VisualStateGroup x:Name="CommonStates">
        							    <VisualState x:Name="Normal"/>
        							    <VisualState x:Name="MouseOver">
        								    <Storyboard>
        									    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
        								    </Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Pressed">
        								    <Storyboard>
        									    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
        								    </Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Disabled">
        								    <Storyboard>
        									    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
        									    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
        								    </Storyboard>
        							    </VisualState>
        						    </VisualStateGroup>
        						    <VisualStateGroup x:Name="CheckStates">
        							    <VisualState x:Name="Checked">
        								    <Storyboard>
        									    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="expand">
        										    <DiscreteObjectKeyFrame KeyTime="0">
        											    <DiscreteObjectKeyFrame.Value>
        												    <Visibility>Visible</Visibility>
        											    </DiscreteObjectKeyFrame.Value>
        										    </DiscreteObjectKeyFrame>
        									    </ObjectAnimationUsingKeyFrames>
        								    </Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Unchecked"/>
        							    <VisualState x:Name="Indeterminate"/>
        						    </VisualStateGroup>
        						    <VisualStateGroup x:Name="FocusStates">
        							    <VisualState x:Name="Focused">
        								    <Storyboard>
        									    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
        								    </Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Unfocused"/>
        						    </VisualStateGroup>
        					    </VisualStateManager.VisualStateGroups>
        					    <Border x:Name="Background" CornerRadius="3">
        						    <Grid>
        							    <Border x:Name="normal" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2"/>
        							    <Border x:Name="over" Background="{StaticResource NodeStrokeOver}" CornerRadius="2" Opacity="0"/>
        							    <Border x:Name="pressed" Background="{StaticResource NodeStrokePress}" CornerRadius="2" Opacity="0"/>
        							    <Border x:Name="focused" Background="{StaticResource NodeStrokeFocus}" CornerRadius="2" Opacity="0"/>
        						    </Grid>
        					    </Border>
        					    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					    <Path x:Name="expand" Data="M 10,10 C10,10 10,13 10,13 10,13 7,13 7,13 7,13 7,15 7,15 7,15 10,15 10,15 10,15 10,18 10,18 10,18 12,18 12,18 12,18 12,15 12,15 12,15 15,15 15,15 15,15 15,13 15,13 15,13 12,13 12,13 12,13 12,10 12,10 12,10 10,10 10,10 z" Fill="{StaticResource NodeForegroundBrush}" HorizontalAlignment="Center" Height="7" Opacity="1" Stretch="Fill" UseLayoutRounding="False" Visibility="Collapsed" VerticalAlignment="Center" Width="7"/>
        					    <Path x:Name="collapse" Data="M7,13 C7,13 7,15 7,15 C7,15 15,15 15,15 C15,15 15,13 15,13 C15,13 7,13 7,13 z" Fill="{StaticResource NodeForegroundBrush}" HorizontalAlignment="Center" Height="2" Opacity="1" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Center" Width="7"/>
        					    <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
        				    </Grid>
        			    </ControlTemplate>
        		    </Setter.Value>
        	    </Setter>
            </Style>
            
            <!--Node Style-->
            <Style x:Key="NodeStyle" TargetType="ig:OrgChartNodeControl">
        	    <Setter Property="Padding" Value="4,4,4,2"/>
        	    <Setter Property="Margin" Value="0"/>
        	    <Setter Property="MinHeight" Value="20"/>
        	    <Setter Property="MinWidth" Value="60"/>
        	    <Setter Property="Background" Value="{StaticResource NodeBgBrush}"/>
        	    <Setter Property="BorderBrush" Value="{StaticResource NodeStroke}"/>
        	    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush2}"/>
        	    <Setter Property="BorderThickness" Value="2"/>
        	    <Setter Property="Template">
        		    <Setter.Value>
        			    <ControlTemplate TargetType="ig:OrgChartNodeControl">
        				    <Grid>
        					    <Grid.RowDefinitions>
        						    <RowDefinition Height="*"/>
        						    <RowDefinition Height="5"/>
        					    </Grid.RowDefinitions>
        					    <VisualStateManager.VisualStateGroups>
        						    <VisualStateGroup x:Name="CommonStates">
        							    <VisualState x:Name="Normal"/>
        							    <VisualState x:Name="MouseOver">
        								    <Storyboard>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" d:IsOptimized="True"/>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over1" d:IsOptimized="True"/>
        							    	</Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Disabled"/>
        							    <VisualState x:Name="Pressed">
        								    <Storyboard>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="press" d:IsOptimized="True"/>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="press1" d:IsOptimized="True"/>
        							    	</Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="ReadOnly"/>
        						    </VisualStateGroup>
        						    <VisualStateGroup x:Name="FocusStates">
        							    <VisualState x:Name="Focused">
        								    <Storyboard>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focus" d:IsOptimized="True"/>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focus1" d:IsOptimized="True"/>
        							    	</Storyboard>
        							    </VisualState>
        							    <VisualState x:Name="Unfocused"/>
        						    </VisualStateGroup>
        						    <VisualStateGroup x:Name="SelectedStates">
        							    <VisualState x:Name="Unselected"/>
        							    <VisualState x:Name="Selected">
        								    <Storyboard>
        							    		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="select" d:IsOptimized="True"/>
        							    	</Storyboard>
        							    </VisualState>
        						    </VisualStateGroup>
        					    </VisualStateManager.VisualStateGroups>
        					    <Border x:Name="overlay" BorderBrush="{StaticResource NodeStroke}" Background="{TemplateBinding Background}" Margin="1,1,1,0"/>
        					    <Border x:Name="normal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Grid.RowSpan="2"/>
        					    <Border x:Name="normal1" Background="{TemplateBinding BorderBrush}" Grid.Row="1"/>
        					    <Border x:Name="over" BorderBrush="{StaticResource NodeStrokeOver}" BorderThickness="2" Opacity="0" Grid.RowSpan="2"/>
        					    <Border x:Name="over1" Background="{StaticResource NodeStrokeOver}" Opacity="0" Grid.Row="1"/>
        					    <Border x:Name="press" BorderBrush="{StaticResource NodeStrokePress}" BorderThickness="2" Opacity="0" Grid.RowSpan="2"/>
        					    <Border x:Name="press1" Background="{StaticResource BaseBrush}" Opacity="0" Grid.Row="1"/>
        					    <Border x:Name="focus" BorderBrush="{StaticResource NodeStrokeFocus}" BorderThickness="2" Opacity="0" Grid.RowSpan="2">
        						    <Border.Background>
        							    <ImageBrush Stretch="Fill"/>
        						    </Border.Background>
        					    </Border>
        					    <Border x:Name="focus1" Background="{StaticResource NodeStrokeFocus}" Opacity="0" Grid.Row="1"/>
        					    <Border x:Name="select" BorderBrush="{StaticResource ItemSelectedOuterBorderFill}"  Background="{StaticResource ItemSelectedCenterFill}" Margin="1" Opacity="0" Grid.RowSpan="2" BorderThickness="2,2,2,4"/>
        					    <ContentPresenter x:Name="NodePresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					    <ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Left" Height="12" Margin="-5,-5,0,0" Style="{StaticResource NodeToggleButtonStyle}" VerticalAlignment="Top" Width="12"/>
        				    </Grid>
        			    </ControlTemplate>
        		    </Setter.Value>
        	    </Setter>
            </Style>
        </ResourceDictionary>
    </framework:SampleContainer.Resources>
    
    <Grid x:Name="LayoutRoot"
          Width="Auto">

        <ig:XamOrgChart ItemsSource="{Binding DepartmentGroups}"
                        ZoomLevel="1">
            
            <!--Set the data context of the OrgChart-->
            <ig:XamOrgChart.DataContext>
                <model:DepartmentModel />
            </ig:XamOrgChart.DataContext>

            <ig:XamOrgChart.GlobalNodeLayouts>
                <!-- #BEGIN SNIPPET# -->
                
                <!--Applying the Custom Node Styles-->
                <ig:OrgChartNodeLayout TargetTypeName="DepartmentGroup"
                                       DisplayMemberPath="GroupName"
                                       NodeStyle="{StaticResource NodeStyle}" />

                <ig:OrgChartNodeLayout TargetTypeName="Department"
                                       DisplayMemberPath="DepartmentName"
                                       NodeStyle="{StaticResource NodeStyle}" />

                <ig:OrgChartNodeLayout TargetTypeName="EmployeePosition"
                                       DisplayMemberPath="PositionName"
                                       NodeStyle="{StaticResource NodeStyle}" />

                <ig:OrgChartNodeLayout TargetTypeName="Employee"
                                       DisplayMemberPath="FullName"
                                       NodeStyle="{StaticResource NodeStyle}" />
                
                <!-- #END SNIPPET# -->
            </ig:XamOrgChart.GlobalNodeLayouts>  
        </ig:XamOrgChart>
    </Grid>
</framework:SampleContainer>
