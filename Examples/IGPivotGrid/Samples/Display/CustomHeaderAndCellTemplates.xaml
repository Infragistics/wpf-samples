<framework:SampleContainer x:Class="IGPivotGrid.Samples.Display.CustomHeaderAndCellTemplates"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="CustomHeaderAndCellTemplates Page"
      xmlns:controls="clr-namespace:Infragistics.Samples.Shared.Controls;assembly=Infragistics.Samples.Shared"
      xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:ig="http://schemas.infragistics.com/xaml"
      xmlns:localControls="clr-namespace:IGPivotGrid.Samples.Controls"
      xmlns:res="clr-namespace:IGPivotGrid.Resources"
      xmlns:tools="clr-namespace:Infragistics.Samples.Shared.Tools;assembly=Infragistics.Samples.Shared">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                
                <ResourceDictionary Source="/IGPivotGrid;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <res:PivotGridStrings x:Key="Strings" />
            <localControls:SampleFlatDataSourceCityVsProduct x:Key="FlatDataSource"/>

            <Style x:Key="CircleButton" TargetType="Button">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0 0 4 0" />
                <Setter Property="FontFamily" Value="/Infragistics.Samples.Shared;component/fonts/#Segoe UI" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="MaxWidth" Value="15"/>
                <Setter Property="MaxHeight" Value="15"/>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="layoutRoot" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="layoutRoot" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse x:Name="hover"
                     Height="14"
                     Width="14"
                     Fill="{StaticResource TransparentBrush}"
                     Stroke="{StaticResource ButtonHoverBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}"
                     Opacity="0" />
            <Ellipse x:Name="pressed"
                     Height="14"
                     Width="14"
                     Fill="{StaticResource ButtonPressedBackgroundBrush}"
                     Stroke="{StaticResource ButtonPressedBorderBrush}"
                     StrokeThickness="{StaticResource DefaultStrokeThickness}"
                     Opacity="0" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}" />
               <TextBlock Text="i" HorizontalAlignment="Center" VerticalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True" />
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True" />
                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Ellipse x:Name="normal" Opacity="1" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource Gray4}" Fill="{StaticResource Button_NormalState}" />
                                <Ellipse x:Name="hover" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource Cyan2}" Fill="{StaticResource Button_Hover}" />
                                <Ellipse x:Name="pressed" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource Cyan2}" Fill="{StaticResource Button_Pressed}" />
                                <Path x:Name="path" Height="17" Stretch="Fill" Opacity="0" Data="M 680,187 C680,187 759,187 759,187 759,187 759,204 759,204 759,204 680,204 680,204 680,204 680,187 680,187 z" Margin="1,1,1,0" UseLayoutRounding="False" VerticalAlignment="Top" Fill="{StaticResource ButtonPressed_InnerGlow}" />
                                <Ellipse x:Name="focused" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource LightBrush1}" Fill="{StaticResource Button_Focused}" />
                                <Ellipse x:Name="disabled" Opacity="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource DisabledColor}" Fill="{StaticResource Button_Disabled}" />
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <TextBlock Text="i" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!-- #BEGIN SNIPPET# -->
            <!-- DataTemplates for column headers -->
            <DataTemplate x:Key="ColumnHeaderDataTemplate1">
                <Border Background="{StaticResource ChartSeriesBrush1}" BorderBrush="{StaticResource ChartSeriesBrush1}"  BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}"/>
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="ColumnHeaderDataTemplate2">
                <Border Background="{StaticResource ChartSeriesBrush2}" BorderBrush="{StaticResource ChartSeriesBrush2}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}"/>
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="ColumnHeaderDataTemplate3">
                <Border Background="{StaticResource ChartSeriesBrush7}" BorderBrush="{StaticResource ChartSeriesBrush7}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>

            <!-- DataTemplates for row headers -->
            <DataTemplate x:Key="RowHeaderDataTemplate1">
                <Border Background="{StaticResource ChartSeriesBrush4}" BorderBrush="{StaticResource ChartSeriesBrush4}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="RowHeaderDataTemplate2">
                <Border Background="{StaticResource ChartSeriesBrush8}" BorderBrush="{StaticResource ChartSeriesBrush8}"  BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="RowHeaderDataTemplate3">
                <Border Background="{StaticResource ChartSeriesBrush6}" BorderBrush="{StaticResource ChartSeriesBrush6}"  BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="HeaderTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>

            <!-- DataTemplates for data cells -->
            <DataTemplate x:Key="DataCellDataTemplate1">
                <Border Background="{StaticResource ChartSeriesBrush3}" BorderBrush="{StaticResource ChartSeriesBrush3}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="DataCellTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="DataCellDataTemplate2">
                <Border Background="{StaticResource ChartSeriesBrush5}" BorderBrush="{StaticResource ChartSeriesBrush5}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="DataCellTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="DataCellDataTemplate3">
                <Border Background="{StaticResource ChartSeriesBrush9}" BorderBrush="{StaticResource ChartSeriesBrush9}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="DataCellTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="DataCellDataTemplate4">
                <Border Background="{StaticResource ChartSeriesBrush10}" BorderBrush="{StaticResource ChartSeriesBrush10}" BorderThickness="1" Padding="2">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource CircleButton}" Click="DataCellTemplate_Click" />
                        <TextBlock Text="{Binding}" Foreground="{StaticResource LightForegroundBrush}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <!-- #END SNIPPET# -->
        </ResourceDictionary>
    </framework:SampleContainer.Resources>

    <Grid x:Name="LayoutRoot" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- #BEGIN SNIPPET# -->
        <ig:XamPivotGrid x:Name="pivotGrid" DataSource="{StaticResource FlatDataSource}" AllowCompactLayout="True">
            <ig:XamPivotGrid.ColumnHeaderTemplates>
                <ig:HeaderTemplate Template="{StaticResource ColumnHeaderDataTemplate1}"
                                   Hierarchy="{tools:ObjectValue DefaultValue=Product, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_Product}"
                                   Level="2"/>
                <ig:HeaderTemplate Template="{StaticResource ColumnHeaderDataTemplate2}"
                                   Hierarchy="{tools:ObjectValue DefaultValue=Product, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_Product}"
                                   Level="2"
                                   Label="{tools:ObjectValue DefaultValue=Clothing, DataObject={StaticResource Strings}, PropertyName=XPG_Clothing}"/>
            </ig:XamPivotGrid.ColumnHeaderTemplates>
            <ig:XamPivotGrid.RowHeaderTemplates>
                <ig:HeaderTemplate Template="{StaticResource RowHeaderDataTemplate1}"
                                   Hierarchy="{tools:ObjectValue DefaultValue=City, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_City}"
                                   Level="2"/>
                <ig:HeaderTemplate Template="{StaticResource RowHeaderDataTemplate2}"
                                   Hierarchy="{tools:ObjectValue DefaultValue=City, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_City}"
                                   Level="2"
                                   Label="{tools:ObjectValue DefaultValue=Sofia, DataObject={StaticResource Strings}, PropertyName=XPG_Sofia}"/>
            </ig:XamPivotGrid.RowHeaderTemplates>
            <ig:XamPivotGrid.DataCellTemplates>
                <ig:DataCellTemplate Template="{StaticResource DataCellDataTemplate1}"
                                     ColumnHierarchy="{tools:ObjectValue DefaultValue=Product, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_Product}"
                                     ColumnLabel="{tools:ObjectValue DefaultValue=Bikes, DataObject={StaticResource Strings}, PropertyName=XPG_Bikes}"/>
                <ig:DataCellTemplate Template="{StaticResource DataCellDataTemplate2}"
                                     RowHierarchy="{tools:ObjectValue DefaultValue=City, DataObject={StaticResource Strings}, PropertyName=XPG_Data_PropertyNames_City}"
                                     RowLabel="{tools:ObjectValue DefaultValue=London, DataObject={StaticResource Strings}, PropertyName=XPG_London}"/>
                <ig:DataCellTemplate Template="{StaticResource DataCellDataTemplate3}"
                                     ColumnLabel="{tools:ObjectValue DefaultValue='All Products', DataObject={StaticResource Strings}, PropertyName=XPG_Data_HierarchyDescriptors_Product_All}"
                                     RowLabel="{tools:ObjectValue DefaultValue=Berlin, DataObject={StaticResource Strings}, PropertyName=XPG_Berlin}"/>
            </ig:XamPivotGrid.DataCellTemplates>
        </ig:XamPivotGrid>
        <!-- #END SNIPPET# -->
        <ig:Expander Grid.Column="1" IsExpanded="False">
            <ig:XamPivotDataSelector x:Name="dataSelector" DataSource="{StaticResource FlatDataSource}" />
        </ig:Expander>

        <controls:OptionsPanel Margin="300 300 0 0" HeaderText="{Binding Source={StaticResource CommonStrings}, Path=XW_Options}">
            <Button x:Name="ApplyFromCodeButton" Content="{Binding XPG_ApplyTemplatesFromCode, Source={StaticResource Strings}}"
                    Click="ApplyFromCode_Click"/>
        </controls:OptionsPanel>
    </Grid>
</framework:SampleContainer>
