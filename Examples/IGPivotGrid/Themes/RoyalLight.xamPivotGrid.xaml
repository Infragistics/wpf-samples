<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:igPivot="http://schemas.infragistics.com/xaml"
                    xmlns:igPivotPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">

  <!--  *********************************  RESOURCES  *********************************  -->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="RoyalLight.Styles.xaml" />
    <ResourceDictionary Source="RoyalLight.xamDataTree.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <!--  *********************************** String Resources **********************************************  -->
  <igPivot:PivotStringSettings x:Key="stringResources" />

  <!--  *********************************  COMMON GLYPHS  *********************************  -->
  <Geometry x:Key="SortIcon">M 1838 567 L 1842 572 L 1846 567 L 1838 567 Z</Geometry>
  <Geometry x:Key="ColumnVisibilityToggleIcon">M 687 729.7106 L 684.3186 726.9803 L 686.9437 724.1912 L 685.8187 723 L 682 727 L 685.8187 731 L 687 729.7106 ZM 682 729.7106 L 679.3186 726.9803 L 681.9437 724.1912 L 680.8187 723 L 677 727 L 680.8187 731 L 682 729.7106 Z</Geometry>
  <Geometry x:Key="RowSortIcon">M6,0 L6,10 L0,4.7111111 z M10,0 L16,4.7111111 L10,10 z</Geometry>

  <!--  *********************************  BRUSHES  *********************************  -->
  <!--  PivotGrid Brushes  -->
  <SolidColorBrush x:Key="PivotGridBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="PivotGridBorderBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DropTargetMarkerBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="ResizeIndicatorBackgroundBrush" Color="{StaticResource Color_021}" />
  <LinearGradientBrush x:Key="HiddenColumnIndicatorBackgroundBrush" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="-7,12" EndPoint="-2,17">
    <GradientStop Offset="0.499" Color="{StaticResource Color_005}" />
    <GradientStop Offset="0.500" Color="{StaticResource Color_014}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DragTemplateBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="DragTemplateBorderBrush" Color="{StaticResource Color_011}" />

  <!--  PivotDataSelector Brushes  -->
  <SolidColorBrush x:Key="PivotDataSelectorBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="PivotDataSelectorBorderBrush" Color="{StaticResource Color_009}" />

  <!--  HeaderCell Brushes  -->
  <SolidColorBrush x:Key="HeaderCellBackgroundBrush" Color="{StaticResource Color_015}" />
  <SolidColorBrush x:Key="HeaderCellBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="HeaderCellHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="HeaderCellHoverForegroundBrush" Color="{StaticResource Color_013}" />
  <SolidColorBrush x:Key="HeaderCellOptionsPaneBackgroundBrush" Color="{StaticResource Color_010}" />

  <!--  Cell Brushes  -->
  <SolidColorBrush x:Key="CellItemBackgroundBrush" Color="{StaticResource Color_002}" />
  <SolidColorBrush x:Key="CellItemBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="CellItemAltBackgroundBrush" Color="{StaticResource Color_003}" Opacity="0.2"/>
  <SolidColorBrush x:Key="CellItemHoverBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="CellItemHoverBorderBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="CellItemForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="CellItemActiveBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="FilterCellSortButtonBackgroundBrush" Color="{StaticResource Color_005}" />

  <!--  DropDown Brushes  -->
  <SolidColorBrush x:Key="DropDownBackgroundBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="DropDownBorderBrush" Color="{StaticResource Color_005}" />
  <SolidColorBrush x:Key="DropDownHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="DropDownHoverBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="DropDownFocusedBorderBrush" Color="{StaticResource Color_011}" />

  <!--  Field Brushes  -->
  <SolidColorBrush x:Key="FieldsDropAreaControlBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="FieldsDropAreaControlBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="FieldsDropAreaWatermarkForegroundBrush" Color="{StaticResource Color_053}" />
  <SolidColorBrush x:Key="FieldItemBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="FieldItemBorderBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="FieldItemHoverBackgroundBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="FieldItemHoverBorderBrush" Color="{StaticResource Color_010}" />
  <SolidColorBrush x:Key="FieldItemPresedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="PeekIconBorderBrush" Color="{StaticResource Color_003}" />
  <LinearGradientBrush x:Key="PeekIconBackgroundBrush" StartPoint="0.15,0.143" EndPoint="0.85,0.857">
    <GradientStop Offset="0.500" Color="{StaticResource Color_005}" />
    <GradientStop Offset="0.502" Color="{StaticResource Color_009}" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="FieldDisabledBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="FieldChooserGroupForegroundBrush" Color="{StaticResource Color_001}" />
  <SolidColorBrush x:Key="FieldChooserBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="FieldChooserItemHoverBackgroundBrush" Color="{StaticResource Color_008}" />
  <SolidColorBrush x:Key="FieldChooserItemHoverBorderBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="FieldChooserItemPressedBackgroundBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="FieldChooserItemPressedBorderBrush" Color="{StaticResource Color_011}" />
  <SolidColorBrush x:Key="FilterFieldPendingChangesBorderBrush" Color="{StaticResource Color_014}" />

  <!--  Expander Brushes  -->
  <SolidColorBrush x:Key="ExpanderBackgroundBrush" Color="{StaticResource Color_007}" />
  <SolidColorBrush x:Key="ExpanderBorderBrush" Color="{StaticResource Color_009}" />
  <SolidColorBrush x:Key="ExpanderButtonBackgroundBrush" Color="{StaticResource Color_003}" />
  <SolidColorBrush x:Key="ExpanderButtonBorderBrush" Color="{StaticResource Color_008}" />

  <!--  ExpansionIndicator Brushes  -->
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBackgroundBrush" Color="{StaticResource Color_018}" />
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphBorderBrush" Color="{StaticResource Color_004}" />
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphHoverBackgroundBrush" Color="{StaticResource Color_006}" />
  <SolidColorBrush x:Key="ExpansionIndicatorGlyphSelectedBackgroundBrush" Color="{StaticResource Color_002}" />

  <!--  *********************************** Icon Paths ****************************************************  -->
  <Style x:Key="SmallFilterIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Width="10"
                  Height="8"
                  VerticalAlignment="Center"
                  igPivotPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="M 524 723 L 534 723 L 530 728 L 530 731 L 528 731 L 528 728 L 524 723 Z"
                  Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="FilterIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Width="13"
                  Height="11"
                  VerticalAlignment="Center"
                  igPivotPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="M 0 0 L 13 0 L 8 6 L 8 11 L 5 11 L 5 6 L 0 0 Z"
                  Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl, AncestorLevel=1}, Path=Background}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ColumnsIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Width="13"
                  Height="13"
                  VerticalAlignment="Center"
                  igPivotPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="M 3 5 L 0 5 L 0 13 L 3 13 L 3 5 ZM 8 5 L 5 5 L 5 13 L 8 13 L 8 5 ZM 13 5 L 10 5 L 10 13 L 13 13 L 13 5 ZM 3 0 L 0 0 L 0 3 L 3 3 L 3 0 ZM 8 0 L 5 0 L 5 3 L 8 3 L 8 0 ZM 13 0 L 10 0 L 10 3 L 13 3 L 13 0 Z"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RowsIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Width="13"
                  Height="13"
                  VerticalAlignment="Center"
                  igPivotPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="M 5 10 L 5 13 L 13 13 L 13 10 L 5 10 ZM 5 5 L 5 8 L 13 8 L 13 5 L 5 5 ZM 5 0 L 5 3 L 13 3 L 13 0 L 5 0 ZM 0 10 L 0 13 L 3 13 L 3 10 L 0 10 ZM 0 5 L 0 8 L 3 8 L 3 5 L 0 5 ZM 0 0 L 0 3 L 3 3 L 3 0 L 0 0 Z"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MeasuresIconPath" TargetType="ContentControl">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Path Width="13"
                  Height="13"
                  VerticalAlignment="Center"
                  igPivotPrim:XamlHelper.SnapsToDevicePixels="True"
                  Data="M 3 8 L 0 8 L 0 13 L 3 13 L 3 8 ZM 8 4 L 5 4 L 5 13 L 8 13 L 8 4 ZM 13 6 L 10 6 L 10 13 L 13 13 L 13 6 ZM 3 0 L 0 0 L 0 6 L 3 6 L 3 0 ZM 8 0 L 5 0 L 5 2 L 8 2 L 8 0 ZM 13 0 L 10 0 L 10 4 L 13 4 L 13 0 Z"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill"
                  UseLayoutRounding="True" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  TextBlock Style  *********************************  -->
  <Style x:Key="TextBlockStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
  </Style>

  <Style x:Key="FiltersAreaBackgroundText" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
  </Style>

  <Style x:Key="FiltersAreaTitleText" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FieldsDropAreaWatermarkForegroundBrush}" />
  </Style>

  <!--  *********************************  TransparentButton Style  *********************************  -->
  <Style x:Key="TransparentButtonStyle" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinWidth" Value="24" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                      <SplineDoubleKeyFrame KeyTime="0" Value=".3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  Dropdown Style  *********************************  -->
  <Style x:Key="DropdownStyle" TargetType="igPivot:Dropdown">
    <Setter Property="Background" Value="{StaticResource DropDownBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource DropDownBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="6,0" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:Dropdown">
          <Grid x:Name="MainGrid" Height="{TemplateBinding MaxHeight}" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownhover" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                    <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames  Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                       <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames >
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation  Duration="0" Storyboard.TargetName="MainGrid" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused" />
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="DropDownFocused" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="EmptyState">
                <VisualState x:Name="Empty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="itemText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="32" />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="DropDownBackground"
                           Grid.ColumnSpan="2"
                           Height="{TemplateBinding MaxHeight}"
                           Fill="{TemplateBinding Background}"
                           Stroke="{TemplateBinding BorderBrush}"
                           StrokeThickness="{TemplateBinding BorderThickness}" />
                <Rectangle x:Name="DropDownhover"
                           Grid.ColumnSpan="2"
                           Height="{TemplateBinding MaxHeight}"
                           Margin="0"
                           Fill="{StaticResource DropDownHoverBackgroundBrush}"
                           Opacity="0"
                           Stroke="{StaticResource DropDownHoverBorderBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                <ToggleButton x:Name="PART_Button" 
                              Grid.ColumnSpan="2"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButtonStyle}" />
                <Rectangle x:Name="DropDownFocused"
                           Grid.ColumnSpan="2"
                           IsHitTestVisible="false"
                           Opacity="0"
                           Stroke="{StaticResource DropDownFocusedBorderBrush}"
                           StrokeThickness="{StaticResource DefaultStrokeThickness}" />
                <ContentPresenter x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="false"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextElement.Foreground="{StaticResource ForegroundBrush}">
                  <ContentPresenter.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                      <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"/>
                      <Setter Property="Padding" Value="4 2 6 3"/>
                    </Style>
                  </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="itemText"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                           IsHitTestVisible="False"
                           Text="{TemplateBinding EmptyString}"
                           Visibility="Collapsed"
                           Foreground="{StaticResource ForegroundBrush}"/>
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <Border x:Name="DropDownBorder"
                      MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      HorizontalAlignment="Stretch"
                      Background="{StaticResource PopupBackgroundBrush}"
                      BorderBrush="{StaticResource PopupBorderBrush}"
                      BorderThickness="{StaticResource DefaultBorderThickness}">
                <ScrollViewer Margin="0"
                              BorderThickness="0"
                              CanContentScroll="true"
                              Padding="1"
                              Style="{StaticResource ScrollViewerStyle}">
                  <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDropDownOpen" Value="True">
                    <Setter TargetName="DropDownhover" Property="Fill" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                    <Setter TargetName="DropDownhover" Property="Stroke" Value="{StaticResource ButtonPressedBorderBrush}"/>
                    <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DropdownStyle}" TargetType="igPivot:Dropdown" />

  <!--  ********************************** Converters **********************************  -->
  <igPivotPrim:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <igPivotPrim:InverseBooleanConverter x:Key="inverseBooleanConverter" />

  <!--  ********************************** Data Templates **********************************  -->
  <DataTemplate x:Key="FieldItemTemplateKey">
    <Border Background="{StaticResource TransparentBrush}">
      <TextBlock VerticalAlignment="Center" Text="{Binding Caption}" />
    </Border>
  </DataTemplate>

  <DataTemplate x:Key="AxisChooserTemplateKey">
    <TextBlock Text="{Binding Path=HeaderText}" />
  </DataTemplate>

  <!--  *********************************  DragTemplate  *********************************  -->
  <DataTemplate x:Key="DragTemplate">
    <Grid>
      <Border Background="{StaticResource DragTemplateBackgroundBrush}" BorderBrush="{StaticResource DragTemplateBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}" Opacity="0.65">
        <TextBlock Margin="3,1" Text="{Binding Path=Data.Caption}" />
      </Border>
    </Grid>
  </DataTemplate>

  <!--  *********************************  IconsPath Template  *********************************  -->
  <Style x:Key="IconsPathStyle" TargetType="Path">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Stretch" Value="Fill" />
    <Setter Property="UseLayoutRounding" Value="False" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
  </Style>

  <!--  *********************************  FilterDropdownToggleButton Style  *********************************  -->
  <Style x:Key="FilterDropdownToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked" />
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Opacity="0.7" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterCellSortButton Style  *********************************  -->
  <Style x:Key="FilterCellSortButtonStyle" TargetType="CheckBox">
    <Setter Property="Background" Value="{StaticResource FilterCellSortButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Indeterminate1" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>
                            Visible
                          </Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Indeterminate1" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid VerticalAlignment="Center">
              <Rectangle Fill="{StaticResource TransparentBrush}" />
              <Rectangle x:Name="Indeterminate1"
                         Width="10"
                         Height="3"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Fill="{StaticResource GlyphBackgroundBrush}"
                         Visibility="Collapsed" />
              <Path x:Name="SortedDescending"
                    Width="8"
                    Height="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{StaticResource SortIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Fill"
                    UseLayoutRounding="False"
                    Visibility="Collapsed">
                <Path.RenderTransform>
                  <RotateTransform Angle="180"/>
                </Path.RenderTransform>
              </Path>
              <Path x:Name="SortedAscending"
                    Width="8"
                    Height="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{StaticResource SortIcon}"
                    Fill="{StaticResource GlyphBackgroundBrush}"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Fill"
                    UseLayoutRounding="False"
                    Visibility="Collapsed" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  HeaderCellSortButton Style  *********************************  -->
  <Style x:Key="HeaderCellSortButtonStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="arrowLeft"
                  Width="16"
                  Height="10"
                  Margin="1,1,0,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource RowSortIcon}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  IsHitTestVisible="False"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="arrowLeft" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
    
  
  <!--  *********************************  HeaderCellControlExpansionIndicator Style  *********************************  -->
  <Style x:Key="HeaderCellControlExpansionIndicatorStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource GlyphBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <!--Do no add any animations here hover and pressed states are handled by the pivotgrid cells-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                   <!--Do no add any animations here hover and pressed states are handled by the pivotgrid cells-->
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSymbol" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CollapseSymbol" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphDisabledBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="CollapseSymbol" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="ExpandSymbol" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="ExpandSymbol"
                  Width="8"
                  Height="8"
                  Data="{StaticResource PlusIcon}"
                  Fill="{TemplateBinding Background}"
                  Opacity="1"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
            <Path x:Name="CollapseSymbol"
                  Width="8"
                  Height="2"
                  Margin="1,4"
                  Data="{StaticResource MinusIcon}"
                  Fill="{TemplateBinding Background}"
                  Opacity="0"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </ControlTemplate>
            
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FilterCellRemoveButton Style   *********************************  -->
  <Style x:Key="FilterCellRemoveButtonStyle" TargetType="Button">
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="Foreground" Value="{StaticResource GlyphBackgroundBrush}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  HierarchicalItem Style  *********************************  -->
  <Style x:Key="HierarchicalItemStyle" TargetType="igPivot:XamHierarchicalItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamHierarchicalItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ItemTypeStates">
                <VisualState x:Name="Cube">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="CubeIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Measure">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="MeasureIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Dimension">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DimensionIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="UserDefinedHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="HierarchyMultipleIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SystemEnabledHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="HierarchySingleIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ParentChildHierarchy">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="HierarchyDirectIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level1">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Level1Icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level2">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Level2Icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level3">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Level3Icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level4">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Level4Icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Level5">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Level5Icon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Group">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="FolderIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Kpi">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="KPIIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{StaticResource TransparentBrush}">
              <StackPanel Orientation="Horizontal">
                <Grid Margin="-5, 0, 5, 0">
                  <Image x:Name="Icon" HorizontalAlignment="Left" />
                  <Canvas x:Name="KPIIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M0,12 L11,12 L11,16 L0,16 z M5,6 L16,6 L16,10 L5,10 z M3,0 L14,0 L14,4 L3,4 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="MeasureIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="10"
                          Height="12"
                          Data="M0.046875,0 L10.014448,0 10.014448,3.0231249 7.0187297,3.0231249 7.0187297,2.0106053 1.9194527,2.0106053 6.0396447,5.5228353 6.0396447,6.6063342 1.9194527,10.028915 7.0300731,10.028915 7.0300731,9.0179996 10.014448,9.0179996 10.014448,12 0.041666667,12 0.041666667,9.5565596 4.0018779,6.0263 0.046875,2.4886882 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="CubeIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M16.127712,3.4409983 C16.127712,3.4409983 16.186995,13.00624 16.186995,13.00624 C16.186995,13.00624 9.724494,15.999998 9.724494,15.999998 C9.724494,15.999998 9.6849957,5.9475532 9.6849957,5.9475532 C9.6849957,5.9475532 16.127712,3.4409983 16.127712,3.4409983 z M0.060999546,2.5609941 C0.060999565,2.5609941 8.4989996,5.9665947 8.4989996,5.9665947 C8.4989996,5.9665947 8.4989996,15.999994 8.4989996,15.999994 C8.4989996,15.999994 0.060999565,11.986634 0.060999546,11.986634 C0.060999565,11.986634 0.060999565,2.5609941 0.060999546,2.5609941 z M6.0630565,1.0580152E-08 C6.0630565,-3.5265657E-09 9.0633278,-3.5265657E-09 9.0633278,1.0580152E-08 C9.0633278,-3.5265657E-09 16.063999,2.2500081 16.063999,2.2500081 C16.063999,2.2500081 9.1257038,4.8749995 9.1257038,4.8749995 C9.1257038,4.8749995 0,1.3125302 0,1.3125302 C0,1.3125302 6.0630565,-3.5265657E-09 6.0630565,1.0580152E-08 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          StrokeThickness="3"
                          Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="MemberIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Canvas.Left="2"
                          Canvas.Top="1"
                          Width="12"
                          Height="15"
                          Data="M3.9632826,6.6000004 L4.0201349,6.6364017 C4.5974321,6.9867358 5.2751274,7.1884785 6.0000005,7.1884785 C6.7248745,7.1884785 7.4025693,6.9867358 7.979867,6.6364017 L8.0367184,6.6000009 L8.0630302,6.6128964 C10.360462,7.7813449 12,10.435488 12,13.070442 C12,16.443186 -1.0962257E-08,16.443186 0,13.070442 C-1.0962257E-08,10.435488 1.6395376,7.7813449 3.9369695,6.6128964 z M6.0000005,0 C7.6568546,0 9,1.3431458 9,3 C9,4.6568546 7.6568546,6 6.0000005,6 C4.3431463,6 3.0000002,4.6568546 3.0000002,3 C3.0000002,1.3431458 4.3431463,0 6.0000005,0 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="MembersIcon"
                          Width="15"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="15"
                          Height="16"
                          Data="M8.9724617,9.0769234 L9.0151014,9.1049242 C9.4480743,9.3744116 9.9563456,9.5295982 10.5,9.5295982 C11.043655,9.5295982 11.551927,9.3744116 11.9849,9.1049242 L12.027538,9.0769234 L12.047273,9.0868435 C13.770347,9.9856491 15,12.027298 15,14.054186 C15,16.648603 6,16.648603 6,14.054186 C6,12.027298 7.2296534,9.9856491 8.9527273,9.0868435 z M4.0201349,6.1728501 C4.5974321,6.5097113 5.2751274,6.7036948 6.0000005,6.7036948 C6.5714989,6.7036948 6.8636708,6.6560326 7.3504362,6.4399214 C7.375,7.458333 7.8798251,8.1123714 8.2929163,8.486351 C7.4479618,8.9895821 6.529355,10.138728 6.0143547,10.942856 C5.4304953,11.854502 5.2760611,12.977291 5.2760611,14.054246 C5.2555151,14.357152 5.3164873,14.585921 5.2895904,14.983 C2.5601537,14.858558 5.1258866E-08,14.053486 0,12.567787 C4.8642331E-08,10.034165 1.6187042,7.3154297 3.9161363,6.1919165 z M10.5,4 C11.742641,4 12.75,5.0331888 12.75,6.3076921 C12.75,7.5821958 11.742641,8.6153841 10.5,8.6153841 C9.2573595,8.6153841 8.25,7.5821958 8.25,6.3076921 C8.25,5.0331888 9.2573595,4 10.5,4 z M6.0000005,0 C7.6568546,0 9,1.2914919 9,2.8846278 C9,4.4777637 7.6568546,5.7692556 6.0000005,5.7692556 C4.3431463,5.7692556 3.0000002,4.4777637 3.0000002,2.8846278 C3.0000002,1.2914919 4.3431463,0 6.0000005,0 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Style="{StaticResource IconsPathStyle}" />
                  </Canvas>
                  <Canvas x:Name="HierarchySingleIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M4,0 L12,0 L12,5 L9,5 L9,7 L11,7 L13,7 L13,11 L16,11 L16,16 L9,16 L9,11 L11,11 L11,9 L9,9 L7,9 L5,9 L5,11 L7,11 L7,16 L0,16 L0,11 L3,11 L3,9 L3,7 L5,7 L7,7 L7,5 L4,5 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="HierarchyMultipleIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M7,10 L9,10 L9,12 L10,12 L10,16 L6,16 L6,12 L7,12 z M4,0 L12,0 L12,4 L11,4 L11,6 L13,6 L13,9 L13,10 L13,12 L16,12 L16,16 L12,16 L12,13 L12,12 L12,10 L9,10 L9,6 L10,6 L10,4 L6,4 L6,6 L7,6 L7,10 L4,10 L4,12 L4,13 L4,16 L0,16 L0,12 L3,12 L3,10 L3,9 L3,6 L5,6 L5,4 L4,4 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="HierarchyDirectIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M9,11 L16,11 L16,16 L9,16 z M0,11 L7,11 L7,16 L0,16 z M9,0 L12,0 L12,5 L7.984375,5 L11,2.0003765 L9,2.0003765 z M4,0 L7,0 L7,2.0003765 L5,2.0003765 L7.984375,5 L4,5 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                    <Path Canvas.Left="3"
                          Canvas.Top="5"
                          Width="10"
                          Height="6"
                          Data="M4.0000005,0 L6.0000005,0 L6.0000005,2 L8.000001,2 L10.000001,1.9999998 L10.000001,5.9999995 L8.000001,5.9999995 L8.000001,4 L6.0000005,4 L4.0000005,4 L2,4 L2,6 L0,6 L0,4 L0,2 L2,2 L4.0000005,2 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="HierarchyKeyIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M13.479159,11 L16,11 L16,16 L9,16 L9.0187016,12.885415 C9.0187016,12.885415 10.028671,12.905535 10.078125,12.90104 C10.564883,12.856801 10.703124,12.281249 10.703124,12.281249 C10.703124,12.281249 11.337922,12.339394 11.552082,12.114582 C11.686955,11.973002 11.984372,11.734371 11.859372,11.328121 C12.604164,11.708329 13.479159,11 13.479159,11 z M11.78051,6.0711384 C11.239517,6.0636845 10.880634,6.5677514 10.880634,6.5677514 C10.880634,6.5677514 10.053135,7.5307074 10.84739,8.1603069 C11.581553,8.7422705 12.416214,7.7667713 12.416214,7.7667713 C12.416214,7.7667713 13.117094,6.9612236 12.549855,6.4305925 C12.269812,6.1686225 12.008928,6.074286 11.78051,6.0711384 z M12.252403,5.0001354 C12.762135,4.9943309 13.426781,5.1736541 14.153109,5.8488731 C15.086847,6.7169094 15.48805,8.383276 14.086661,9.7365303 C12.264684,11.495928 11.461937,10.430841 11.131319,10.527728 C10.780709,10.630472 11.414442,11.208761 11.080528,11.568368 C10.881701,11.782496 10.173897,11.554623 10.173897,11.554623 C10.173897,11.554623 10.263147,12.152434 9.8112364,12.194571 C9.4439325,12.228819 9.0569038,12.164806 9.0569038,12.164806 L7.5828662,13.797047 C7.5828662,13.797047 6.8843789,14.228495 6.4654541,13.833264 C6.0465288,13.438035 5.747354,12.882977 6.3059025,12.236212 C6.8644514,11.589447 9.5614824,8.8456278 9.5614824,8.8456278 C9.5614824,8.8456278 9.1076527,7.7131634 9.5614824,7.0304675 C10.015312,6.3477716 11.247663,5.283803 11.247663,5.283803 C11.247663,5.283803 11.637209,5.0071406 12.252403,5.0001354 z M4,0 L12,0 C12,1.3379855 12,3.3195796 12,4.4306235 C11.333333,4.4375 10.9375,4.8125 10.692326,4.9813595 C10,4.9813595 9.5641088,4.9937863 9,5 L9,6.6738582 C9,6.6738582 8.9056911,6.8091063 8.8926439,6.8314724 C8.4691629,7.5574365 8.8507805,8.7548141 8.8507805,8.7548141 C8.8507805,8.7548141 8.8142529,8.7903395 8.6181841,8.9854584 L8.6035748,9 L5,9 L5,11 L6.6104774,11 C6.6104774,11 5.6154966,12.019021 5.4274907,12.231218 C4.8258719,12.91025 5.1424961,13.454233 5.5368452,13.923571 C6.296875,14.828125 7,14.69887 7,14.69887 L7,16 L0,16 L0,11 L3,11 L3,7 L4.875,7 L5,7 L7,7 L7,5 L4,5 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          StrokeThickness="0.5"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="DimensionIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M4,13 L5,13 L5,14 L4,14 z M1.9999999,13 L3,13 L3,14 L1.9999999,14 z M1.9999999,11 L3,11 L3,12 L1.9999999,12 z M12.000001,8 L13.000001,8 L13.000001,9.000001 L14.000001,9.000001 L14.000001,10.000001 L15.000001,10.000001 L15.000001,11 L16,11 L16,13 L15.000001,13 L15.000001,14 L14.000001,14 L14.000001,15 L13.000001,15 L13.000001,16 L12.000001,16 L12.000001,15 L12.000001,14 L7.0000005,14 L6.0000005,14 L6.0000005,13 L7.0000005,13 L7.0000005,10.000001 L12.000001,10.000001 L12.000001,9.000001 z M3,0 L5,0 L5,1.0000005 L6,1.0000005 L6,2.0000005 L7,2.0000005 L7,3.0000005 L8,3.0000005 L8,4.0000005 L7,4.0000005 L6,4.0000005 L6,9 L2.9999969,9 L2.9999969,10 L1.9999968,10 L1.9999968,9 L1.9999999,4.0000005 L1,4.0000005 L0,4.0000005 L0,3.0000005 L1,3.0000005 L1,2.0000005 L1.9999999,2.0000005 L1.9999999,1.0000005 L3,1.0000005 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="Level5Icon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M5,6.5 L5,7.9000001 L5,9.3000002 L5,10.7 L6.5,10.7 L9.5,10.7 L9.5,12.099999 L5,12.099999 L5,13.5 L9.5,13.5 L11,13.5 L11,12.099999 L11,10.7 L11,9.3000002 L9.5,9.3000002 L6.5,9.3000002 L6.5,7.9000001 L11,7.9000001 L11,6.5 L6.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Opacity="1"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="Level4Icon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M5.0000029,6.5000005 L5.0000029,10.700001 L6.5000024,10.700001 L8.0000019,10.700001 L8.0000019,13.5 L9.5000019,13.5 L9.5000019,10.700001 L11.000003,10.700001 L11.000003,9.3000002 L9.5000019,9.3000002 L9.5000019,6.5000005 L8.0000019,6.5000005 L8.0000019,9.3000002 L6.5000024,9.3000002 L6.5000024,6.5000005 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Opacity="1"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="Level3Icon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M5,6.5 L5,7.9000001 L9.5,7.9000001 L9.5,9.3000002 L6.5,9.3000002 L6.5,10.7 L9.5,10.7 L9.5,12.099999 L5,12.099999 L5,13.5 L9.5,13.5 L11,13.5 L11,12.099999 L11,7.9000001 L11,6.5 L9.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Opacity="1"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="Level2Icon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M5,6.5 L5,7.9000001 L9.5,7.9000001 L9.5,9.3000002 L6.5,9.3000002 L5,9.3000002 L5,10.7 L5,13.5 L6.5,13.5 L11,13.5 L11,12.099999 L6.5,12.099999 L6.5,10.7 L9.5,10.7 L11,10.7 L11,9.3000002 L11,7.9000001 L11,6.5 L9.5,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Opacity="1"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="Level1Icon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Width="16"
                          Height="16"
                          Data="M7,6.5 L7,7.9000001 L5,7.9000001 L5,9.3000002 L7,9.3000002 L7,12.099999 L5,12.099999 L5,13.5 L7,13.5 L9,13.5 L11,13.5 L11,12.099999 L9,12.099999 L9,6.5 z M0,2 L2,2 L2,4 L6,4 L6,2 L10,2 L10,4 L14,4 L14,2 L16,2 L16,16 L0,16 z M11,0 L13,0 L13,3 L11,3 z M3,0 L5,0 L5,3 L3,3 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Opacity="1"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                  <Canvas x:Name="FolderIcon"
                          Width="16"
                          Height="16"
                          Margin="0,2,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Visibility="Collapsed">
                    <Path Canvas.Top="1"
                          Width="16"
                          Height="14"
                          Data="M2,2 L2,12 L4,12 L4,6 L14,6 L14,4 L7,4 L7,2 z M0,0 L2,0 L9,0 L9,2 L14,2 L16,2 L16,4 L16,6 L16,11 L16,12 L16,14 L4,14 L2,14 L0,14 L0,12 L0,2 z"
                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                          Stretch="Fill"
                          UseLayoutRounding="False" />
                  </Canvas>
                </Grid>
                <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HierarchicalItem.Caption}" />
              </StackPanel>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource HierarchicalItemStyle}" TargetType="igPivot:XamHierarchicalItem" />

  <!--  *********************************  PivotHeaderCellControl Style  *********************************  -->
  <Style x:Key="HeaderCellKey" TargetType="igPivot:PivotHeaderCellControl">
    <Setter Property="Background" Value="{StaticResource HeaderCellBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource HeaderCellBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="ExpansionIndicatorStyle" Value="{StaticResource HeaderCellControlExpansionIndicatorStyle}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="7,2" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>

  <!--  *********************************  PivotColumnHeaderCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource HeaderCellKey}" TargetType="igPivot:PivotColumnHeaderCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotColumnHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ExpansionIndicatorGlyphSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted" />
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnSorting">
                <VisualState x:Name="EnabledSortingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledSortingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                   <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                     <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ExpansionIndicatorGlyphSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPivotPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect"
                          Grid.ColumnSpan="3"
                          Margin="0,0,-1,-1"
                          Background="{StaticResource CellItemSelectedBackgroundBrush}"
                          BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Visibility="Collapsed" />
                  <ToggleButton x:Name="ExpansionIndicator"
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="6 2 0 2"
                                VerticalAlignment="Center"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Padding="0"
                                Style="{TemplateBinding ExpansionIndicatorStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="HeaderPresenterColumn" Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="HeaderPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalContentAlignment="Stretch"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Foreground="{TemplateBinding Foreground}" />
                    <TextBlock x:Name="TotalText"
                               Grid.Column="1"
                               Margin="5,0"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="Center"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}"
                               Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsTotalVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
                  </Grid>
                  <Grid Grid.Column="2" Margin="0,0,5,0">
                    <Path x:Name="SortedDescending"
                          Width="8"
                          Height="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource SortIcon}"
                          Fill="{StaticResource GlyphBackgroundBrush}"
                          Stretch="Fill"
                          IsHitTestVisible="False"
                          Visibility="Collapsed"
                          RenderTransformOrigin="0.5,0.5">
                      <Path.RenderTransform>
                        <RotateTransform Angle="180"/>
                      </Path.RenderTransform>
                    </Path>
                    <Path x:Name="SortedAscending"
                          Width="8"
                          Height="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource SortIcon}"
                          Fill="{StaticResource GlyphBackgroundBrush}"
                          Stretch="Fill"
                          IsHitTestVisible="False"
                          Visibility="Collapsed" />
                  </Grid>
                  <Border x:Name="optionsPane"
                          Grid.ColumnSpan="4"
                          Margin="5,0,0,0"
                          HorizontalAlignment="Right"
                          Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}"
                          Visibility="Collapsed">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ToggleButton x:Name="HeaderSortBtn"
                                    Grid.Column="0"
                                    Margin="5,0"
                                    IsThreeState="False"
                                    Style="{StaticResource HeaderCellSortButtonStyle}"
                                    Visibility="Collapsed">
                        <igPivot:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                        </igPivot:Commanding.Command>
                      </ToggleButton>
                      <CheckBox x:Name="SortToggle"
                                Grid.Column="2"
                                Margin="5,0"
                                IsThreeState="True"
                                Style="{StaticResource FilterCellSortButtonStyle}"
                                Visibility="Collapsed">
                        <igPivot:Commanding.Command>
                          <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                        </igPivot:Commanding.Command>
                      </CheckBox>
                      <Grid x:Name="columnHidingVisual"
                            Grid.Column="1"
                            Width="30"
                            Margin="0"
                            Background="{StaticResource TransparentBrush}"
                            Cursor="Hand"
                            Visibility="Collapsed">
                        <Path x:Name="VisibilityToggleIcon"
                              Width="10"
                              Height="8"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource ColumnVisibilityToggleIcon}"
                              Fill="{StaticResource GlyphBackgroundBrush}"
                              Stretch="Fill"
                              UseLayoutRounding="False"/>
                        <igPivot:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                        </igPivot:Commanding.Command>
                      </Grid>
                    </Grid>
                  </Border>
                </Grid>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=columnHidingVisual,Path=IsMouseOver}" Value="True">
              <Setter TargetName="VisibilityToggleIcon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotRowHeaderCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource HeaderCellKey}" TargetType="igPivot:PivotRowHeaderCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotRowHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ExpansionIndicatorGlyphSelectedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect"
                          Grid.ColumnSpan="2"
                          Margin="0,0,-1,-1"
                          Background="{StaticResource CellItemSelectedBackgroundBrush}"
                          BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Visibility="Collapsed" />
                  <ToggleButton Name="ExpansionIndicator"
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="3"
                                VerticalAlignment="Center"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Padding="0"
                                Style="{TemplateBinding ExpansionIndicatorStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />

                  <Grid x:Name="headerGrid" Grid.Column="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="HeaderPresenterColumn" Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      HorizontalContentAlignment="Stretch"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Foreground="{TemplateBinding Foreground}" />
                      <TextBlock x:Name="TotalText"
                                 Grid.Column="1"
                                 Margin="5,0"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}"
                                 Visibility="Collapsed" />
                    </Grid>
                    <Border x:Name="optionsPane"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Right"
                            Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}"
                            Opacity="1"
                            Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn"
                                      Grid.Column="0"
                                      Margin="5,0"
                                      IsThreeState="False"
                                      Style="{StaticResource HeaderCellSortButtonStyle}"
                                      Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle"
                                  Grid.Column="2"
                                  Margin="5,0"
                                  IsThreeState="True"
                                  Style="{StaticResource FilterCellSortButtonStyle}"
                                  Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual"
                              Grid.Column="1"
                              Width="30"
                              Margin="0"
                              Background="{StaticResource TransparentBrush}"
                              Cursor="Hand"
                              Visibility="Collapsed">
                          <Path x:Name="VisibilityToggleIcon"
                                Width="10"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ColumnVisibilityToggleIcon}"
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                Stretch="Fill"
                                UseLayoutRounding="False"/>
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </igPivot:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=columnHidingVisual,Path=IsMouseOver}" Value="True">
              <Setter TargetName="VisibilityToggleIcon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </DataTrigger>
             </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotSuperCompactHeaderCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource HeaderCellKey}" TargetType="igPivot:PivotSuperCompactHeaderCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotSuperCompactHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="fill" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderCellHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="optionsPane" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpantionIndicatorStates">
                <VisualState x:Name="IndicatorCollapsed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPivotPrim:XamlHelper.SnapsToDevicePixels="True">
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Rectangle Grid.Column="0" Width="{TemplateBinding Indent}" />
                  <Border x:Name="SelectedRect"
                          Grid.ColumnSpan="3"
                          Margin="0,0,-1,-1"
                          Background="{StaticResource CellItemSelectedBackgroundBrush}"
                          BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Visibility="Collapsed" />
                  <ToggleButton Name="ExpansionIndicator"
                                Grid.Column="1"
                                Width="15"
                                Height="15"
                                Margin="3"
                                VerticalAlignment="Center"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Padding="0"
                                Style="{TemplateBinding ExpansionIndicatorStyle}"
                                Visibility="Collapsed" />
                  <Grid x:Name="headerGrid" Grid.Column="2">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="HeaderPresenterColumn" Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                      <TextBlock x:Name="TotalText"
                                 Grid.Column="1"
                                 Margin="0, 0, 5, 0"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}"
                                 Visibility="Collapsed" />
                    </Grid>
                    <Border x:Name="optionsPane"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Right"
                            Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}"
                            Opacity="1"
                            Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn"
                                      Grid.Column="0"
                                      Margin="5"
                                      IsThreeState="False"
                                      Style="{StaticResource HeaderCellSortButtonStyle}"
                                      Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle"
                                  Grid.Column="2"
                                  Margin="5"
                                  IsThreeState="True"
                                  Style="{StaticResource FilterCellSortButtonStyle}"
                                  Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual"
                              Grid.Column="1"
                              Width="20"
                              Margin="0,5"
                              Background="{StaticResource TransparentBrush}"
                              Cursor="Hand"
                              Visibility="Collapsed">
                          <Path x:Name="VisibilityToggleIcon"
                                Width="10"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ColumnVisibilityToggleIcon}"
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                Stretch="Fill"
                                UseLayoutRounding="False"/>
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </igPivot:Commanding.Command>
                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=columnHidingVisual,Path=IsMouseOver}" Value="True">
              <Setter TargetName="VisibilityToggleIcon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotCellControl Style  *********************************  -->
  <Style x:Key="PivotCellControlStyle" TargetType="igPivot:PivotCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotCellControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Alternate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" >
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ActiveStates">
                <VisualState x:Name="InActive"/>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderPresenter" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="AltElem"
                    Background="{StaticResource CellItemAltBackgroundBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Visibility="Collapsed" />
            <Rectangle x:Name="MouseOver1"
                     Margin="0"
                     Fill="{StaticResource CellItemHoverBackgroundBrush}"
                     Opacity="0"
                     Stroke="{StaticResource CellItemHoverBorderBrush}" />
            <Rectangle x:Name="SelectedBackground"
                       Margin="{TemplateBinding BorderThickness}"
                       Fill="{StaticResource CellItemSelectedBackgroundBrush}"
                       Opacity="0" />
            <Rectangle x:Name="ActiveRect"
                       Fill="{StaticResource CellItemActiveBackgroundBrush}"
                       Margin="{TemplateBinding BorderThickness}"
                       Visibility="Collapsed" />
            <ContentControl x:Name="HeaderPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="Stretch"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Opacity, ElementName=SelectedBackground}" Value="1">
              <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PivotCellControlStyle}" TargetType="igPivot:PivotCellControl" />

  <!--  *********************************  ExpansionIndicator Style  *********************************  -->
  <Style x:Key="ExpansionIndicatorStyle" TargetType="igPrim:ExpansionIndicator">
    <Setter Property="Foreground" Value="{StaticResource ExpansionIndicatorGlyphBackgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ExpansionIndicator">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.67" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0.67" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Selected" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorExpanded" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorCollapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="20" />
              <ColumnDefinition Width="5" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid x:Name="ExpansionIndicator" Background="{StaticResource TransparentBrush}">
              <Path x:Name="ExpansionIndicatorCollapsed"
                    Width="5"
                    Height="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M60,40L60,20 70,30z"
                    Fill="{TemplateBinding Background}" Opacity="0.54"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
              <Path x:Name="ExpansionIndicatorExpanded"
                    Width="6"
                    Height="6"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0.5,6.4997156 L3.3283137,3.6714226 3.6714667,3.6714429 3.6714465,3.3282926 6.4997594,0.50000001 6.500113,6.5000692 z"
                    Fill="{TemplateBinding Background}" Opacity="0.54"
                    RenderTransformOrigin="0.5,0.5"
                    Stretch="Fill"
                    UseLayoutRounding="False"
                    Visibility="Collapsed" />
            </Grid>
            <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** ActiveNodeIndicator Style **********************************  -->
  <Style x:Key="ActiveNodeIndicatorStyle" TargetType="igPrim:ActiveNodeIndicator">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TreeNodeActiveBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPrim:ActiveNodeIndicator">
          <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeDashCap="Round" StrokeThickness="{StaticResource DefaultStrokeThickness}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ActiveNodeIndicatorStyle}" TargetType="igPrim:ActiveNodeIndicator" />



  <!--  *********************************  FieldsDropAreaScrollviewerButtons Style  *********************************  -->
  <Style x:Key="FieldsDropAreaScrollViewerButtonsStyle" TargetType="RepeatButton">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Height" Value="24" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="Width" Value="24" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="RepeatButton">
          <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="pressed" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation d:IsOptimized="True" Duration="0" Storyboard.TargetName="normal" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{StaticResource TransparentBrush}" />
            <Path x:Name="normal"
                  Width="6"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource VArrowLeft}"
                  Fill="{StaticResource GlyphBackgroundBrush}"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
            <Path x:Name="hover"
                  Width="6"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource VArrowLeft}"
                  Fill="{StaticResource GlyphHoverBackgroundBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
            <Path x:Name="pressed"
                  Width="6"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="{StaticResource VArrowLeft}"
                  Fill="{StaticResource GlyphPressedBackgroundBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldsDropAreaScrollViewer Style  *********************************  -->
  <Style x:Key="FieldsDropAreaScrollViewerStyle" TargetType="ScrollViewer">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="0,2" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Border>
            <Grid Background="{TemplateBinding Background}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollContentPresenter x:Name="ScrollContentPresenter" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" />
              <ScrollBar x:Name="VerticalScrollBar"
                         Grid.Row="0"
                         Grid.Column="1"
                         Margin="0,-1,-1,-1"
                         IsTabStop="False"
                         Maximum="{TemplateBinding ScrollableHeight}"
                         Minimum="0"
                         Orientation="Vertical"
                         ViewportSize="{TemplateBinding ViewportHeight}"
                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                         Value="{TemplateBinding VerticalOffset}" />
              <ScrollBar x:Name="HorizontalScrollBar"
                         Grid.Row="1"
                         Grid.Column="0"
                         Margin="-1,0,-1,-1"
                         IsTabStop="False"
                         Maximum="{TemplateBinding ScrollableWidth}"
                         Minimum="0"
                         Orientation="Horizontal"
                         ViewportSize="{TemplateBinding ViewportWidth}"
                         Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                         Value="{TemplateBinding HorizontalOffset}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldsDropAreaControl Style  *********************************  -->
  <Style x:Key="FieldsDropAreaControl" TargetType="igPivotPrim:FieldsDropAreaControl">
    <Setter Property="Background" Value="{StaticResource FieldsDropAreaControlBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:FieldsDropAreaControl">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ScrollViewer x:Name="scrollViewer" HorizontalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
              <ItemsPresenter />
            </ScrollViewer>
            <Grid x:Name="disabledPanel" Background="{StaticResource FieldDisabledBackgroundBrush}" Opacity="0.6" Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FieldsDropAreaControl}" TargetType="igPivotPrim:FieldsDropAreaControl" />

  <!--  *********************************  ExpandableFieldItemControl Style   *********************************  -->
  <Style x:Key="ExpandableFieldItemControlStyle" TargetType="igPivotPrim:ExpandableFieldItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="6 2 6 3" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:ExpandableFieldItemControl">
          <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TransparencyStates">
                <VisualState x:Name="NormalTransparency">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Double>1</System:Double>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PeekTransparency">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OriginalPopupChild" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Double>0.5</System:Double>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid>
                  <ToggleButton x:Name="DropDownToggle"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Cursor="Hand"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Style="{StaticResource FilterDropdownToggleButtonStyle}"
                                Visibility="{Binding Path=IsExpandable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <ContentControl x:Name="clearFilterGlyphStroke"
                                    Margin="5,0,5,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{StaticResource ForegroundBrush}"
                                    Style="{StaticResource SmallFilterIconPath}" />
                  </ToggleButton>
                </Grid>
                <Border Grid.Column="1" Background="{StaticResource TransparentBrush}" BorderThickness="0">
                  <igPivot:DragDropManager.DragSource>
                    <igPivot:DragSource  DragTemplate="{StaticResource DragTemplate}" IsDraggable="True">
                      <igPivot:XamTriggers.EventTriggers>
                        <igPivot:XamEventTrigger EventName="DragStart">
                          <igPivot:DragStartTriggerAction IsEnabled="True" />
                        </igPivot:XamEventTrigger>
                      </igPivot:XamTriggers.EventTriggers>
                    </igPivot:DragSource>
                  </igPivot:DragDropManager.DragSource>
                  <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <Button x:Name="closeButton"
                        Grid.Column="2"
                        Margin="6 0"
                        VerticalAlignment="Center"
                        Style="{StaticResource FilterCellRemoveButtonStyle}">
                  <igPivot:Commanding.Command>
                    <igPivot:XamPivotGridCommandSource CommandType="RemoveFilterCell" EventName="Click" />
                  </igPivot:Commanding.Command>
                  <Path Width="8"
                        Height="8"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Data="{StaticResource ClearFilterIcon}"
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </Button>
                <Popup x:Name="Popup"
                       Grid.Row="1"
                       igPivotPrim:XamlHelper.AllowsTransparency="True"
                       igPivotPrim:XamlHelper.StaysOpen="False"
                       IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}">
                  <Grid x:Name="OriginalPopupChild" Width="Auto">
                    <Border x:Name="PopupBorder"
                            Width="{Binding ActualWidth,ElementName=FilterTree}"
                            Margin="5 0"
                            VerticalAlignment="Top"
                            igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{StaticResource PopupBackgroundBrush}"
                            BorderBrush="{StaticResource PopupBorderBrush}"
                            BorderThickness="{StaticResource DefaultBorderThickness}">
                      <Grid Margin="8">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*" />
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentTemplate="{TemplateBinding ExpansionAreaContentTemplate}" />
                        <Border Grid.Row="1" Margin="0,8,0,0" VerticalAlignment="Top">
                          <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button x:Name="OKButton"
                                    Width="70"
                                    Margin="0,0,8,0"
                                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeOkButtonText}"
                                    Cursor="Hand"
                                    Style="{StaticResource ButtonStyle}">
                              <igPivot:Commanding.Command>
                                <igPivotPrim:ExpandableFieldItemCommandSource CommandType="OK" EventName="Click" />
                              </igPivot:Commanding.Command>
                            </Button>
                            <Button x:Name="CancelButton"
                                    MinWidth="70"
                                    Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSource.FilterTreeCancelButtonText}"
                                    Cursor="Hand"
                                    Style="{StaticResource ButtonStyle}">
                              <igPivot:Commanding.Command>
                                <igPivotPrim:ExpandableFieldItemCommandSource CommandType="Cancel" EventName="Click" />
                              </igPivot:Commanding.Command>
                            </Button>
                          </StackPanel>
                        </Border>
                      </Grid>
                    </Border>
                  </Grid>
                </Popup>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

  </Style>

  <!--  ********************************** CalculatedFieldItemControl Style **********************************  -->
  <Style BasedOn="{StaticResource ExpandableFieldItemControlStyle}" TargetType="igPivotPrim:CalculatedFieldItemControl">
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       Margin="3 2 2 1"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Foreground="{StaticResource ForegroundBrush}"
                       Text="Caption" />
            <igPivotPrim:XamInput Grid.Row="0"
                                  Grid.Column="1"
                                  Margin="0 4 3 1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  IsReadOnly="{Binding IsReadOnly}"
                                  Text="{Binding Path=Caption, Mode=TwoWay}" />
            <igPivotPrim:XamInput Grid.Row="1"
                                  Grid.ColumnSpan="2"
                                  Width="300"
                                  Height="140"
                                  Margin="3 4 3 3"
                                  AcceptsReturn="True"
                                  HorizontalScrollBarVisibility="Auto"
                                  IsReadOnly="{Binding IsReadOnly}"
                                  Text="{Binding Path=Expression, Mode=TwoWay}"
                                  VerticalScrollBarVisibility="Auto" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  ********************************** FilterFieldItemControl Style **********************************  -->
  <Style BasedOn="{StaticResource ExpandableFieldItemControlStyle}" TargetType="igPivotPrim:FilterFieldItemControl">
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Opacity="0.5" />
            <CheckBox Margin="7 4 0 2"
                      Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}"
                      IsChecked="{Binding IsAllSelected, Mode=TwoWay}"
                      IsThreeState="False"
                      Style="{StaticResource CheckBoxStyle}" />
            <TextBlock Grid.Column="1"
                       Margin="0 6 0 0"
                       Foreground="{StaticResource ForegroundBrush}"
                       Text="*"
                       Visibility="{Binding HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}" />
            <igPivot:XamDataTree x:Name="FilterTree"
                                 Grid.Row="1"
                                 Grid.ColumnSpan="2"
                                 CheckBoxMemberPath="IsSelected"
                                 DisplayMemberPath="Caption"
                                 EnsureNodeExpansion="True"
                                 IsExpandedMemberPath="IsExpanded"
                                 ItemsSource="{Binding Path=FilterMembers}"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 Background="{StaticResource TransparentBrush}">
              <igPivot:XamDataTree.CheckBoxSettings>
                <igPivot:CheckBoxSettings CheckBoxMode="Manual" CheckBoxStyle="{StaticResource CheckBoxStyle}" CheckBoxVisibility="Visible" IsCheckBoxThreeState="False" />
              </igPivot:XamDataTree.CheckBoxSettings>
              <igPivot:XamDataTree.GlobalNodeLayouts>
                <igPivot:NodeLayout Key="FilterMembers"
                                    x:Name="NL"
                                    CheckBoxMemberPath="IsSelected"
                                    DisplayMemberPath="Caption"
                                    IsExpandedMemberPath="IsExpanded"
                                    TargetTypeName="FilterMember" />
              </igPivot:XamDataTree.GlobalNodeLayouts>
            </igPivot:XamDataTree>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  AdvancedFilterFieldItemControl Style  *********************************  -->
  <Style BasedOn="{StaticResource ExpandableFieldItemControlStyle}" TargetType="igPivotPrim:AdvancedFilterFieldItemControl">
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <igPivotPrim:AdvancedFilterFieldControl DataContext="{Binding AdvancedFilterViewModel}" ViewModel="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ExpansionAreaMaxHeight" Value="400" />
  </Style>

  <!--  *********************************  AdvancedFilterFieldControl Style  *********************************  -->
  <Style TargetType="igPivotPrim:AdvancedFilterFieldControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:AdvancedFilterFieldControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Width="18"
                  Height="18"
                  Margin="5"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  Background="Transparent">
              <Rectangle Fill="{StaticResource PeekIconBackgroundBrush}" Stroke="{StaticResource PeekIconBorderBrush}" />
              <igPivot:Commanding.Commands>
                <igPivot:CommandSourceCollection>
                  <igPivotPrim:ExpandableFieldItemCommandSource CommandType="StartPeek" EventName="MouseEnter" />
                  <igPivotPrim:ExpandableFieldItemCommandSource CommandType="StopPeek" EventName="MouseLeave" />
                </igPivot:CommandSourceCollection>
              </igPivot:Commanding.Commands>
            </Grid>
            <ScrollViewer Grid.Row="1"
                          BorderThickness="0"
                          HorizontalScrollBarVisibility="Auto"
                          Padding="0"
                          Style="{StaticResource ScrollViewerStyle}"
                          VerticalScrollBarVisibility="Auto">
              <Border Width="270" Padding="3">
                <Grid>
                  <StackPanel Orientation="Vertical">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <TextBox x:Name="searchBox"
                               Grid.Row="1"
                               Grid.ColumnSpan="2"
                               Margin="0,7,0,0"
                               Style="{StaticResource TextBoxStyle}">
                        <igPivot:Commanding.Command>
                          <igPivotPrim:AdvancedFilterFieldCommandSource CommandType="SelectHierarchySubTree" EventName="TextChanged" />
                        </igPivot:Commanding.Command>
                      </TextBox>
                      <CheckBox Grid.Row="2"
                                Margin="7"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                VerticalContentAlignment="Center"
                                Content="{Binding Source={StaticResource stringResources}, Path=SelectAll}"
                                IsChecked="{Binding FilterViewModel.IsAllSelected, Mode=TwoWay}"
                                IsThreeState="False"
                                Style="{StaticResource CheckBoxStyle}" />
                      <!--  Has pending changes star indicator  -->
                      <TextBlock Grid.Row="2"
                                 Grid.Column="1"
                                 Margin="0 0 5 0"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Center"
                                 Foreground="Black"
                                 Style="{StaticResource TextBlockStyle}"
                                 Text="*"
                                 Visibility="{Binding FilterViewModel.HasPendingChanges, Converter={StaticResource boolToVisibilityConverter}}" />
                      <igPivot:XamDataTree x:Name="FilterTree"
                                           Grid.Row="3"
                                           Grid.ColumnSpan="2"
                                           Height="200"
                                           Background="{StaticResource TransparentBrush}"
                                           BorderThickness="0"
                                           CheckBoxMemberPath="IsSelected"
                                           DisplayMemberPath="Caption"
                                           EnsureNodeExpansion="True"
                                           IsExpandedMemberPath="IsExpanded"
                                           ItemsSource="{Binding Path=FilterViewModel.FilterMembers}"
                                           ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <igPivot:XamDataTree.CheckBoxSettings>
                          <igPivot:CheckBoxSettings CheckBoxMode="Manual" CheckBoxVisibility="Visible" IsCheckBoxThreeState="False" />
                        </igPivot:XamDataTree.CheckBoxSettings>
                        <igPivot:XamDataTree.GlobalNodeLayouts>
                          <igPivot:NodeLayout Key="FilterMembers"
                                              x:Name="NL"
                                              CheckBoxMemberPath="IsSelected"
                                              DisplayMemberPath="Caption"
                                              IsExpandedMemberPath="IsExpanded"
                                              TargetTypeName="FilterMember" />
                        </igPivot:XamDataTree.GlobalNodeLayouts>
                      </igPivot:XamDataTree>
                    </Grid>
                    <StackPanel Margin="0,4" Orientation="Vertical">
                      <Border Height="2"
                              Margin="0 10"
                              VerticalAlignment="Bottom"
                              BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}"
                              BorderThickness="0,0,0,1"
                              Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}" />
                      <StackPanel Margin="0 0 0 10" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <RadioButton x:Name="rbFilterByAll"
                                     Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAllText}"
                                     GroupName="values"
                                     IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}"
                                     Style="{StaticResource RadioButtonStyle}" />
                        <RadioButton x:Name="rbFilterByAny"
                                     Margin="10,0,0,0"
                                     Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAnyText}"
                                     GroupName="values"
                                     Style="{StaticResource RadioButtonStyle}" />
                      </StackPanel>
                      <ItemsControl x:Name="icLabelConditionViewModels" ItemsSource="{Binding Path=LabelConditionViewModels, Mode=OneWay}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <Grid Margin="0,0,0,10">
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                              </Grid.ColumnDefinitions>
                              <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="10" />
                                <RowDefinition Height="24" />
                              </Grid.RowDefinitions>
                              <igPivot:Dropdown x:Name="ddLevel"
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Margin="0,0,7,0"
                                                EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectFieldText}"
                                                Foreground="Black"
                                                ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                                                ItemsSource="{Binding Path=Levels, Mode=OneWay}"
                                                SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}"
                                                Style="{StaticResource DropdownStyle}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=Caption}" />
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <igPivot:Dropdown x:Name="ddCondition"
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Margin="0,0,7,0"
                                                EmptyString="{Binding Source={StaticResource stringResources}, Path=LabelFilterDropdownSelectConditionText}"
                                                Foreground="Black"
                                                ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                                                ItemsSource="{Binding Path=LabelFilterConditions, Mode=OneWay}"
                                                SelectedItem="{Binding Path=SelectedLabelFilterCondition, Mode=TwoWay}"
                                                Style="{StaticResource DropdownStyle}">
                                <ComboBox.ItemTemplate>
                                  <DataTemplate>
                                    <TextBlock Text="{Binding Path=DisplayName}" />
                                  </DataTemplate>
                                </ComboBox.ItemTemplate>
                              </igPivot:Dropdown>
                              <TextBox x:Name="tbValue"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       Margin="0,0,7,0"
                                       Style="{StaticResource TextBoxStyle}"
                                       Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                              <Button x:Name="btnRemoveCondition"
                                      Grid.Row="0"
                                      Grid.RowSpan="3"
                                      Grid.Column="2"
                                      Width="14"
                                      Height="14"
                                      Margin="2,0"
                                      Style="{StaticResource FilterCellRemoveButtonStyle}">
                                <Path Width="8"
                                      Height="8"
                                      Data="{StaticResource ClearFilterIcon}"
                                      Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                      Stretch="Fill" />
                                <igPivot:Commanding.Command>
                                  <igPivotPrim:AdvancedFilterFieldCommandSource CommandType="RemoveLabelCondition" EventName="Click" />
                                </igPivot:Commanding.Command>
                              </Button>
                            </Grid>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="56" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnAdd"
                                Grid.Column="0"
                                Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterAddButtonText}"
                                IsEnabled="{Binding Path=LastLabelConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}"
                                Style="{StaticResource ButtonStyle}">
                          <igPivot:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource CommandType="AddLabelCondition" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </Button>
                        <Button x:Name="btnClear"
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                Content="{Binding Source={StaticResource stringResources}, Path=LabelFilterClearAllButtonText}"
                                Style="{StaticResource ButtonStyle}"
                                Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                          <igPivot:Commanding.Command>
                            <igPivotPrim:AdvancedFilterFieldCommandSource CommandType="ClearLabelConditions" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </Button>
                      </Grid>
                      <Border Height="2"
                              Margin="0 10 0 0"
                              VerticalAlignment="Bottom"
                              BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}"
                              BorderThickness="0,0,0,1" />
                    </StackPanel>
                  </StackPanel>
                </Grid>
              </Border>
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldsDropAreaControl Style  *********************************  -->
  <Style x:Key="FieldsDropAreaControlKey" TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
    <Setter Property="Background" Value="{StaticResource FieldsDropAreaControlBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldsDropAreaControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FieldsDropAreaWatermarkForegroundBrush}" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:PivotGridFieldsDropAreaControl">
          <Border x:Name="panelContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabledPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisplayStates">
                <VisualState x:Name="Empty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NonEmpty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Rectangle x:Name="fill" Fill="{TemplateBinding Background}" />
              <Grid MinHeight="30" Margin="20,0,0,0">
                <ContentControl x:Name="EmptyContentControl"
                                Margin="6,0"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding EmptyContent}"
                                Foreground="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5 0.5">
                  <ContentControl.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform />
                      <TranslateTransform />
                    </TransformGroup>
                  </ContentControl.RenderTransform>
                </ContentControl>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <RepeatButton Name="leftRepeat" Margin="1" Style="{StaticResource FieldsDropAreaScrollViewerButtonsStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                  <ScrollViewer Name="scrollViewer"
                                Grid.Column="1"
                                HorizontalScrollBarVisibility="Hidden"
                                Style="{StaticResource FieldsDropAreaScrollViewerStyle}"
                                VerticalScrollBarVisibility="Hidden">
                    <ItemsPresenter />
                  </ScrollViewer>
                  <RepeatButton Name="rightRepeat"
                                Grid.Column="2"
                                Margin="1"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource FieldsDropAreaScrollViewerButtonsStyle}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                    <RepeatButton.RenderTransform>
                      <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="1" />
                        <SkewTransform AngleX="0" AngleY="0" />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                      </TransformGroup>
                    </RepeatButton.RenderTransform>
                  </RepeatButton>
                </Grid>
              </Grid>
              <Grid x:Name="disabledPanel" Background="{StaticResource FieldDisabledBackgroundBrush}" Opacity="0.6" Visibility="Collapsed" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  MeasureFieldItemControl Style  *********************************  -->
  <Style x:Key="MeasureFieldItemControlStyle" TargetType="igPivotPrim:MeasureFieldItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:MeasureFieldItemControl">
          <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border Margin="2,0,0,0" BorderThickness="0">
                <igPivot:DragDropManager.DragSource>
                  <igPivot:DragSource  DragChannels="Measures" DragTemplate="{StaticResource DragTemplate}" IsDraggable="True">
                    <igPivot:XamTriggers.EventTriggers>
                      <igPivot:XamEventTrigger EventName="DragStart">
                        <igPivot:DragStartTriggerAction IsEnabled="True" />
                      </igPivot:XamEventTrigger>
                    </igPivot:XamTriggers.EventTriggers>
                  </igPivot:DragSource>
                </igPivot:DragDropManager.DragSource>
                <ContentPresenter Grid.Column="0" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Button x:Name="closeButton"
                      Grid.Column="1"
                      Margin="3,0,5,0"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Style="{StaticResource FilterCellRemoveButtonStyle}">
                <igPivot:Commanding.Command>
                  <igPivot:XamPivotGridCommandSource CommandType="RemoveFilterCell" EventName="Click" />
                </igPivot:Commanding.Command>
                <Path Width="8"
                      Height="8"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Data="{StaticResource ClearFilterIcon}"
                      Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                      Stretch="Fill"
                      UseLayoutRounding="False" />
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource MeasureFieldItemControlStyle}" TargetType="igPivotPrim:MeasureFieldItemControl" />

  <!--  ********************************** MeasureFilterFieldItemControl Style **********************************  -->
  <Style BasedOn="{StaticResource ExpandableFieldItemControlStyle}" TargetType="igPivotPrim:MeasureFilterFieldItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="ExpansionAreaContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <igPivotPrim:MeasureFilterFieldControl DataContext="{Binding FilterableMeasureViewModel}" ViewModel="{Binding}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ExpansionAreaMaxHeight" Value="400" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
  </Style>

  <!--  *********************************  RowsFieldDropAreaControl Style  *********************************  -->
  <Style x:Key="RowsFieldDropAreaControlStyle" BasedOn="{StaticResource FieldsDropAreaControlKey}" TargetType="igPivotPrim:RowsFieldDropAreaControl">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="Panel"
                      Margin="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      igPivot:XamPivotGrid.PivotPartType="Rows"
                      Background="{StaticResource TransparentBrush}"
                      Orientation="Horizontal">
            <igPivot:DragDropManager.DropTarget>
              <igPivot:DropTarget DropChannels="Rows, Columns, Filters, MeasureList" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
            </igPivot:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource RowsFieldDropAreaControlStyle}" TargetType="igPivotPrim:RowsFieldDropAreaControl" />

  <!--  *********************************  ColumnsFieldDropAreaControl Style  *********************************  -->
  <Style x:Key="ColumnsFieldDropAreaControlStyle" BasedOn="{StaticResource FieldsDropAreaControlKey}" TargetType="igPivotPrim:ColumnsFieldDropAreaControl">
    <Setter Property="ItemTemplate" Value="{StaticResource FieldItemTemplateKey}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="Panel1"
                      Margin="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      igPivot:XamPivotGrid.PivotPartType="Columns"
                      Background="{StaticResource TransparentBrush}"
                      Orientation="Horizontal">
            <igPivot:DragDropManager.DropTarget>
              <igPivot:DropTarget DropChannels="Rows, Columns, Filters, MeasureList" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
            </igPivot:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ColumnsFieldDropAreaControlStyle}" TargetType="igPivotPrim:ColumnsFieldDropAreaControl" />

  <!--  *********************************  FiltersFieldDropAreaControl Style  *********************************  -->
  <Style x:Key="FiltersFieldDropAreaControlStyle" BasedOn="{StaticResource FieldsDropAreaControlKey}" TargetType="igPivotPrim:FiltersFieldDropAreaControl">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="Panel2"
                      Margin="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      igPivot:XamPivotGrid.PivotPartType="Filters"
                      Background="{StaticResource TransparentBrush}"
                      Orientation="Horizontal">
            <igPivot:DragDropManager.DropTarget>
              <igPivot:DropTarget DropChannels="Rows, Columns, Filters" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
            </igPivot:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FiltersFieldDropAreaControlStyle}" TargetType="igPivotPrim:FiltersFieldDropAreaControl" />

  <!--  *********************************  MeasuresFieldDropAreaControl Style  *********************************  -->
  <Style x:Key="MeasuresFieldDropAreaControlStyle" BasedOn="{StaticResource FieldsDropAreaControlKey}" TargetType="igPivotPrim:MeasuresFieldDropAreaControl">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="Panel3"
                      Margin="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      igPivot:XamPivotGrid.PivotPartType="Measures"
                      Background="{StaticResource TransparentBrush}"
                      Orientation="Horizontal">
            <igPivot:DragDropManager.DropTarget>
              <igPivot:DropTarget DropChannels="Measures" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
            </igPivot:DragDropManager.DropTarget>
            <igPivot:ItemsSeparatorProvider.Separator>
              <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
            </igPivot:ItemsSeparatorProvider.Separator>
          </StackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource MeasuresFieldDropAreaControlStyle}" TargetType="igPivotPrim:MeasuresFieldDropAreaControl" />

  <!--  ********************************** FieldMeasuresItemControl Style **********************************  -->
  <Style x:Key="FieldMeasuresItemControlStyle" TargetType="igPivotPrim:FieldMeasuresItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:FieldMeasuresItemControl">
          <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource FieldItemHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="Root" Background="{StaticResource TransparentBrush}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Border BorderThickness="0">
                <igPivot:DragDropManager.DragSource>
                  <igPivot:DragSource  DragTemplate="{StaticResource DragTemplate}" IsDraggable="True">
                    <igPivot:XamTriggers.EventTriggers>
                      <igPivot:XamEventTrigger EventName="DragStart">
                        <igPivot:DragStartTriggerAction IsEnabled="True" />
                      </igPivot:XamEventTrigger>
                    </igPivot:XamTriggers.EventTriggers>
                  </igPivot:DragSource>
                </igPivot:DragDropManager.DragSource>
                <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Button x:Name="closeButton"
                      Grid.Column="1"
                      Margin="0,0,5,0"
                      VerticalAlignment="Center"
                      Style="{StaticResource FilterCellRemoveButtonStyle}">
                <Path Width="8"
                      Height="8"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Data="{StaticResource ClearFilterIcon}"
                      Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                      Stretch="Fill"
                      UseLayoutRounding="False" />
                <igPivot:Commanding.Command>
                  <igPivot:XamPivotGridCommandSource CommandType="RemoveFilterCell" EventName="Click" />
                </igPivot:Commanding.Command>
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource FieldMeasuresItemControlStyle}" TargetType="igPivotPrim:FieldMeasuresItemControl" />

  <!--  *********************************  ExpanderButton Style  *********************************  -->
  <Style x:Key="ExpanderButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource ExpanderButtonBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpanderButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="MinWidth" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentControl x:Name="contentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  Expander Style  *********************************  -->
  <Style x:Key="ExpanderStyle" TargetType="igPivot:Expander">
    <Setter Property="Background" Value="{StaticResource ExpanderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ExpanderBorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HeaderBackground" Value="{StaticResource TransparentBrush}" />
    <Setter Property="HeaderBorderBrush" Value="{StaticResource TransparentBrush}" />
    <Setter Property="HeaderBorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="12" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:Expander">
          <Grid x:Name="Root" igPrim:XamlHelper.SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.RowSpan)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>1</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Int32>2</System:Int32>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Header" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapseGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="HeaderBorder"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        MinHeight="12"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding HeaderBackground}"
                        BorderBrush="{TemplateBinding HeaderBorderBrush}"
                        BorderThickness="{TemplateBinding HeaderBorderThickness}"
                        Visibility="Collapsed">
                  <StackPanel Orientation="Horizontal">
                    <ContentPresenter x:Name="Header"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      Cursor="{TemplateBinding Cursor}"
                                      Visibility="Collapsed" />
                  </StackPanel>
                </Border>
                <Border x:Name="ContentBorder"
                        Grid.Row="1"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Visibility="Collapsed">
                  <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Cursor="{TemplateBinding Cursor}" />
                </Border>
                <Button x:Name="ExpansionButton"
                         Grid.RowSpan="3"
                         Width="12"
                         VerticalContentAlignment="Center"
                         Style="{StaticResource ExpanderButtonStyle}">
                  <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid x:Name="ExpandGlyph">
                      <Path Width="6"
                            Height="10"
                            Margin="0"
                            HorizontalAlignment="Left"
                            Data="{StaticResource VArrowLeft}"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                    </Grid>
                    <Grid x:Name="CollapseGlyph" Visibility="Collapsed">
                      <Path Width="6"
                            Height="10"
                            Margin="0"
                            HorizontalAlignment="Left"
                            Data="{StaticResource VArrowRight}"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                    </Grid>
                  </Grid>
                </Button>
              </Grid>
            </Border>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="igPivot:Expander" />

  <!--  *********************************  Editor Style  *********************************  -->
  <Style x:Key="EditorStyle" TargetType="TextBox">
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="2" />
  </Style>

  <!--  *********************************  ResizingIndicator Style  *********************************  -->
  <Style x:Key="PivotResizingIndicatorStyle" TargetType="igPivotPrim:PivotResizingIndicator">
    <Setter Property="Background" Value="{StaticResource ResizeIndicatorBackgroundBrush}" />
    <Setter Property="Width" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:PivotResizingIndicator">
          <Canvas>
            <Rectangle x:Name="FillIndicator" Width="{TemplateBinding Width}" Height="{Binding Path=Height, RelativeSource={RelativeSource TemplatedParent}}" Fill="{TemplateBinding Background}" />
          </Canvas>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PivotResizingIndicatorStyle}" TargetType="igPivotPrim:PivotResizingIndicator" />

  <!--  *********************************  PivotDataSelector Style  *********************************  -->
  <Style x:Key="PivotDataSelectorStyle" TargetType="igPivot:XamPivotDataSelector">
    <Setter Property="Background" Value="{StaticResource PivotDataSelectorBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PivotDataSelectorBorderBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamPivotDataSelector">
          <Grid x:Name="LayoutRoot" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" igPivot:XamPivotGrid.PivotPartType="DeleteArea" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DataSourceTypeVisualParts">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="FlatDataSource">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DropDownsPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <igPivot:DragDropManager.DropTarget>
              <igPivot:DropTarget DropChannels="Measures, Rows, Columns, Filters, MeasureList" IsDropTarget="True" />
            </igPivot:DragDropManager.DropTarget>
            <Border BorderThickness="1 0 0 0 "
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}">
              <Grid Margin="12,0,12,12">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" MinHeight="240" />
                  <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        Padding="0">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" MinHeight="80" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="DropDownsPanel" Grid.Row="0" Margin="0,0,0,12">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <!--  Databases drop-down  -->
                      <Grid Grid.Row="0" Margin="0,0,0,12">
                        <igPivot:Dropdown x:Name="DatabasesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DatabasesDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Padding="8,0" Text="{Binding Path=Name}" />
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                      <!--  Cubes drop-down  -->
                      <Grid Grid.Row="1" Margin="0,0,0,12">
                        <igPivot:Dropdown x:Name="CubesDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.CubesDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Padding="8,0" Text="{Binding Path=Caption}" />
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                      <!--  Measure groups drop-down  -->
                      <Grid Grid.Row="2">
                        <igPivot:Dropdown x:Name="MeasureGroupsDropDown" EmptyString="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasureGroupsDropDownInitialText}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}" Style="{StaticResource DropdownStyle}">
                          <ComboBox.ItemTemplate>
                            <DataTemplate>
                              <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Padding="8,0" Text="{Binding Path=Name}" />
                            </DataTemplate>
                          </ComboBox.ItemTemplate>
                        </igPivot:Dropdown>
                      </Grid>
                    </Grid>
                    <!--  Metadata Tree  -->
                    <Border x:Name="DimensionsTreeBd"  Grid.Row="1"  BorderThickness="{TemplateBinding BorderThickness}" Padding="0 5" >
                      <Grid>
                        <!--<TextBlock HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Opacity="0.2"
                                                       Style="{StaticResource FiltersAreaBackgroundText}"
                                                       Text="{Binding StringSetting.DimensionsAreaBackgroundText, RelativeSource={RelativeSource TemplatedParent}}" />-->
                        <igPivot:XamDataTree x:Name="DimensionsTree" IsTouchSupportEnabled="false" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Metadata}" Background="{StaticResource TransparentBrush}">
                          <igPivot:XamDataTree.ItemTemplate>
                            <DataTemplate>
                              <igPivot:XamHierarchicalItem HierarchicalItem="{Binding Path=Data}" />
                            </DataTemplate>
                          </igPivot:XamDataTree.ItemTemplate>
                          <igPivot:XamTriggers.EventTriggers>
                            <igPivot:XamEventTrigger EventName="NodeDraggingStart">
                              <igPivot:DragStartXamDataTreeTriggerAction IsEnabled="True" />
                            </igPivot:XamEventTrigger>
                          </igPivot:XamTriggers.EventTriggers>
                          <igPivot:XamDataTree.GlobalNodeLayouts>
                            <igPivot:NodeLayout Key="Items"
                                                x:Name="NL"
                                                IsDraggable="True"
                                                IsExpandedMemberPath="ExpandWhenInitialized"
                                                TargetTypeName="HierarchicalItem" />
                          </igPivot:XamDataTree.GlobalNodeLayouts>
                        </igPivot:XamDataTree>
                      </Grid>
                    </Border>
                  </Grid>
                </Border>
                <!--  View Model Collections  -->
                <Border x:Name="ViewModelsBd"
                        Grid.Row="1"
                        Margin="0"
                        BorderThickness="0 1 0 0 "
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="0,10,0,0">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="12" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="12" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="12" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--<Rectangle Grid.Row="2"
                                               Grid.ColumnSpan="3"
                                               Height="1"
                                               VerticalAlignment="Center"
                                               Fill="{StaticResource CellItemBorderBrush}" />
                                    <Rectangle Grid.RowSpan="6"
                                               Grid.Column="1"
                                               Width="1"
                                               Margin="0 25"
                                               HorizontalAlignment="Center"
                                               Fill="{StaticResource CellItemBorderBrush}" />-->
                    <!--  Header Labels  -->
                    <TextBlock Grid.ColumnSpan="3" Margin="0,0,0,5" Style="{StaticResource TextBlockStyle}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.PanelCollectionsAreaLabel}" />
                    <!--  Filters ListBox  -->
                    <Grid Grid.Row="1">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <StackPanel Orientation="Horizontal">
                        <ContentControl Margin="2,0,5,0" VerticalAlignment="Center" Background="{StaticResource GlyphBackgroundBrush}" Style="{StaticResource FilterIconPath}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.FiltersAreaBackgroundText}" Style="{StaticResource FiltersAreaTitleText}" />
                      </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource FieldChooserBackgroundBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl x:Name="FiltersDropArea"
                                                             Grid.ColumnSpan="2"
                                                             igPivot:XamPivotGrid.PivotPartType="Filters"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            igPivot:XamPivotGrid.PivotPartType="Filters"
                                            Background="{StaticResource TransparentBrush}"
                                            Orientation="Vertical">
                                  <igPivot:DragDropManager.DropTarget>
                                    <igPivot:DropTarget DropChannels="Rows, Columns, Filters" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
                                  </igPivot:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!--  Columns ListBox  -->
                    <Grid Grid.Row="1" Grid.Column="2">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <StackPanel Orientation="Horizontal">
                        <ContentControl Margin="2,0,5,0" VerticalAlignment="Center" Style="{StaticResource ColumnsIconPath}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.ColumnsAreaBackgroundText}"  Style="{StaticResource FiltersAreaTitleText}"/>
                      </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource FieldChooserBackgroundBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl x:Name="ColumnsDropArea"
                                                             Grid.ColumnSpan="2"
                                                             igPivot:XamPivotGrid.PivotPartType="Columns"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            igPivot:XamPivotGrid.PivotPartType="Columns"
                                            Background="{StaticResource TransparentBrush}"
                                            Orientation="Vertical">
                                  <igPivot:DragDropManager.DropTarget>
                                    <igPivot:DropTarget DropChannels="Rows, Columns, Filters, MeasureList" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
                                  </igPivot:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!--  Rows ListBox  -->
                    <Grid Grid.Row="3">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <StackPanel Orientation="Horizontal">
                        <ContentControl Margin="2,0,5,0" VerticalAlignment="Center" Style="{StaticResource RowsIconPath}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.RowsAreaBackgroundText}"  Style="{StaticResource FiltersAreaTitleText}"/>
                      </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource FieldChooserBackgroundBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl x:Name="RowsDropArea"
                                                             Grid.ColumnSpan="2"
                                                             igPivot:XamPivotGrid.PivotPartType="Rows"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            igPivot:XamPivotGrid.PivotPartType="Rows"
                                            Background="{StaticResource TransparentBrush}"
                                            Orientation="Vertical">
                                  <igPivot:DragDropManager.DropTarget>
                                    <igPivot:DropTarget DropChannels="Rows, Columns, Filters, MeasureList" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
                                  </igPivot:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!--  Measures ListBox  -->
                    <Grid Grid.Row="3" Grid.Column="2">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22" />
                        <RowDefinition />
                      </Grid.RowDefinitions>
                      <StackPanel Orientation="Horizontal">
                        <ContentControl Margin="2,0,5,1" VerticalAlignment="Center" Style="{StaticResource MeasuresIconPath}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.MeasuresAreaBackgroundText}"  Style="{StaticResource FiltersAreaTitleText}"/>
                      </StackPanel>
                      <Border Grid.Row="1" Background="{StaticResource FieldChooserBackgroundBrush}">
                        <Grid>
                          <igPivotPrim:FieldsDropAreaControl x:Name="MeasuresDropArea"
                                                             Grid.ColumnSpan="2"
                                                             IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"
                                                             ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                             ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}">
                            <igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            igPivot:XamPivotGrid.PivotPartType="Measures"
                                            Background="{StaticResource TransparentBrush}"
                                            Orientation="Vertical">
                                  <igPivot:DragDropManager.DropTarget>
                                    <igPivot:DropTarget DropChannels="Measures" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" IsDropTarget="True" />
                                  </igPivot:DragDropManager.DropTarget>
                                  <igPivot:ItemsSeparatorProvider.Separator>
                                    <igPivot:PanelItemsSeparator SeparatorColor="{StaticResource Color_013}" />
                                  </igPivot:ItemsSeparatorProvider.Separator>
                                </StackPanel>
                              </ItemsPanelTemplate>
                            </igPivotPrim:FieldsDropAreaControl.ItemsPanel>
                          </igPivotPrim:FieldsDropAreaControl>
                        </Grid>
                      </Border>
                    </Grid>
                    <!--  Layout Update Controlers  -->
                    <CheckBox x:Name="DeferredUpdateLayout"
                              Grid.Row="5"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.DeferredUpdateLayoutCheckBoxLabel}"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.DeferredLayoutUpdate, Mode=TwoWay}"
                              Style="{StaticResource CheckBoxStyle}" />
                    <Button x:Name="UpdateLayoutButton"
                            Grid.Row="5"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StringSetting.UpdateLayoutButtonText}"
                            IsEnabled="{Binding ElementName=DeferredUpdateLayout, Path=IsChecked}"
                            Style="{StaticResource ButtonStyle}">
                      <igPivot:Commanding.Command>
                        <igPivot:XamPivotGridCommandSource CommandType="RefreshGridImmediately" EventName="Click" />
                      </igPivot:Commanding.Command>
                    </Button>
                  </Grid>
                </Border>
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PivotDataSelectorStyle}" TargetType="igPivot:XamPivotDataSelector" />

  <!--  *********************************  FieldChooserItem Style  *********************************  -->
  <Style TargetType="igPivot:FieldChooserItem">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Margin" Value="1 2" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooserItem">
          <Border HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="checked" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="22" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Border x:Name="MouseOverBackground"
                      Grid.ColumnSpan="2"
                      Background="{StaticResource FieldChooserItemHoverBackgroundBrush}"
                      BorderBrush="{StaticResource FieldChooserItemHoverBorderBrush}"
                      BorderThickness="{StaticResource DefaultBorderThickness}"
                      Visibility="Collapsed" />
              <Border x:Name="disabledPanel"
                      Grid.ColumnSpan="2"
                      Background="{StaticResource FieldDisabledBackgroundBrush}"
                      BorderBrush="{StaticResource PopupBorderBrush}"
                      BorderThickness="{StaticResource DefaultBorderThickness}"
                      CornerRadius="3"
                      Visibility="Collapsed" />
              <Border x:Name="SelectedBackground"
                      Grid.ColumnSpan="2"
                      Background="{StaticResource FieldChooserItemPressedBackgroundBrush}"
                      BorderBrush="{StaticResource FieldChooserItemPressedBorderBrush}"
                      BorderThickness="{StaticResource DefaultBorderThickness}"
                      Visibility="Collapsed" />
              <Path x:Name="checked"
                    Width="12"
                    Height="10"
                    Margin="4,0,0,0"
                    Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                    Fill="{StaticResource ActiveForegroundBrush}"
                    Stretch="Fill"
                    UseLayoutRounding="False"
                    Visibility="Collapsed" />
              <ContentControl x:Name="contentControl"
                              Grid.Column="1"
                              Margin="5,0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Foreground="{TemplateBinding Foreground}">
                <ContentPresenter />
              </ContentControl>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldChooserGroup Style   *********************************  -->
  <Style TargetType="igPivot:FieldChooserGroup">
    <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource FieldChooserGroupForegroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooserGroup">
          <Grid Background="{StaticResource TransparentBrush}">
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
              <Border >
                <ContentControl Margin="8,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter x:Name="HeaderPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                </ContentControl>
              </Border>
            </Grid>
            <ItemsPresenter x:Name="ItemsPresenter" Grid.Row="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldItemChooserToggleButton Style   *********************************  -->
  <Style x:Key="FieldItemChooserToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="MinWidth" Value="24" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="maingrid">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="miangrid" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveForegroundBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Bd" Background="{StaticResource ButtonBackgroundBrush}" />
            <Rectangle x:Name="FocusedVisualElement" Fill="{StaticResource ButtonPressedBackgroundBrush}" Visibility="Collapsed" />
            <ContentControl x:Name="ContentControl"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}">
              <ContentPresenter x:Name="contentPresenter" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  FieldChooser Style  *********************************  -->
  <Style TargetType="igPivot:FieldChooser">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:FieldChooser">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Opened">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="closedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="openedPath" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="DropDownToggle"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOpen, Mode=TwoWay}"
                          IsThreeState="False"
                          Style="{StaticResource FieldItemChooserToggleButtonStyle}">
              <Grid>
                <Path x:Name="closedPath"
                      Width="8"
                      Height="8"
                      Margin="-2,-2,0,0"
                      Data="M1,10 10,1 10,10Z"
                      Fill="{StaticResource GlyphBackgroundBrush}"
                      Stretch="Fill"
                      StrokeThickness="{StaticResource DefaultStrokeThickness}"
                      UseLayoutRounding="False" />
                <Path x:Name="openedPath"
                      Width="8"
                      Height="8"
                      Margin="2,2,0,0"
                      Data="M1,10 10,1 1,1Z"
                      Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ContentControl}}"
                      Stretch="Fill"
                      StrokeThickness="{StaticResource DefaultStrokeThickness}"
                      UseLayoutRounding="False"
                      Visibility="Collapsed" />
              </Grid>
            </ToggleButton>
            <Popup x:Name="DropDown" Grid.Row="1" igPivotPrim:XamlHelper.StaysOpen="False" IsOpen="{Binding ElementName=DropDownToggle, Path=IsChecked, Mode=TwoWay}">
              <Border x:Name="PopupBorder"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      VerticalAlignment="Top"
                      Background="{StaticResource PopupBackgroundBrush}"
                      BorderBrush="{StaticResource PopupBorderBrush}"
                      BorderThickness="{StaticResource DefaultBorderThickness}"
                      Padding="1 0 1 1">
                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid x:Name="RowsGroupPanel" />
                    <Grid x:Name="RowsGroupsGroupPanel" Grid.Row="1" />
                    <Grid x:Name="ColumnsGroupPanel" Grid.Row="2" />
                    <Grid x:Name="FiltersGroupPanel" Grid.Row="3" />
                    <Grid x:Name="MeasuresGroupPanel" Grid.Row="4" />
                  </Grid>
                </ScrollViewer>
              </Border>
            </Popup>
            <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource FieldChooserBackgroundBrush}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotGrid Style  *********************************  -->
  <Style x:Key="XamPivotGridStyle" TargetType="igPivot:XamPivotGrid">
    <Setter Property="Background" Value="{StaticResource PivotGridBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PivotGridBorderBrush}" />
    <Setter Property="BorderThickness" Value="1,1,0,1" />
    <Setter Property="EditorStyle" Value="{StaticResource EditorStyle}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:XamPivotGrid">
          <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" igPrim:XamlHelper.SnapsToDevicePixels="True" >
            <Grid x:Name="LayoutRoot" igPivot:TemplatedParentHelper.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" igPivot:XamPivotGrid.PivotPartType="DeleteArea">
              <igPivot:DragDropManager.DropTarget>
                <igPivot:DropTarget DropChannels="Measures, Rows, Columns, Filters, MeasureList" IsDropTarget="True" />
              </igPivot:DragDropManager.DropTarget>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition x:Name="LeftColumn" Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <igPivotPrim:ColumnsFieldDropAreaControl x:Name="ColumnsDropArea"
                                                         Grid.Row="1"
                                                         Grid.Column="1"
                                                         IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns.IsEditable}"
                                                         ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                         ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Columns, Mode=TwoWay}" />
                <igPivotPrim:FiltersFieldDropAreaControl x:Name="FiltersDropArea"
                                                         Grid.ColumnSpan="2"
                                                         IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters.IsEditable}"
                                                         ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                         ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Filters, Mode=TwoWay}" />
                <igPivotPrim:MeasuresFieldDropAreaControl x:Name="MeasuresDropArea"
                                                          Grid.Row="1"
                                                          AllowResizing="Right"
                                                          IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures.IsEditable}"
                                                          ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                          ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Measures, Mode=TwoWay}" />
                <ContentControl x:Name="FilterIconPath"
                                Margin="8,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{StaticResource GlyphBackgroundBrush}"
                                Style="{StaticResource FilterIconPath}" />
                <ContentControl x:Name="ColumnsIconPath"
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="8,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Style="{StaticResource ColumnsIconPath}" />
                <ContentControl x:Name="MeasuresIconPath"
                                Grid.Row="1"
                                Margin="7,1,5,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Style="{StaticResource MeasuresIconPath}" />
              </Grid>
              <Grid x:Name="GridControlLayout" Grid.Row="1" Grid.ColumnSpan="1">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <igPivot:PivotGridPanel x:Name="MainLayout" SharedSizeColumn="{Binding ElementName=LeftColumn}">
                  <igPivot:PivotDataRowsPanel x:Name="DataRowsPanel" Canvas.ZIndex="-2">
                    <igPivot:DragDropManager.DropTarget>
                      <igPivot:DropTarget DropChannels="Measures" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" />
                    </igPivot:DragDropManager.DropTarget>
                  </igPivot:PivotDataRowsPanel>
                  <igPivot:PivotRowsPanel x:Name="RowsHeaderPanel" Canvas.ZIndex="-1">
                    <igPivot:DragDropManager.DropTarget>
                      <igPivot:DropTarget DropChannels="Rows" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" />
                    </igPivot:DragDropManager.DropTarget>
                  </igPivot:PivotRowsPanel>
                  <igPivot:PivotColumnsPanel x:Name="ColumnsHeaderPanel" Canvas.ZIndex="-1">
                    <igPivot:DragDropManager.DropTarget>
                      <igPivot:DropTarget DropChannels="Columns" DropTargetMarkerBrush="{StaticResource DropTargetMarkerBackgroundBrush}" />
                    </igPivot:DragDropManager.DropTarget>
                  </igPivot:PivotColumnsPanel>
                  <Grid igPivot:PivotGridPanel.IsTopLeftCornerControl="True">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="28" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Background="{StaticResource FieldsDropAreaControlBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="0,0,1,1">
                      <Grid x:Name="FieldChooserPanel" />
                    </Border>
                    <igPivotPrim:RowsFieldDropAreaControl x:Name="RowsDropArea"
                                                          Grid.Column="1"
                                                          Grid.ColumnSpan="2"
                                                          AllowResizing="Right"
                                                          IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows.IsEditable}"
                                                          ItemTemplate="{StaticResource FieldItemTemplateKey}"
                                                          ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataSource.Rows, Mode=TwoWay}" />
                    <ContentControl x:Name="RowsIconPath"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="8,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource RowsIconPath}" />
                  </Grid>
                  <igPivot:HiddenAxisChooser x:Name="ColumnChooser" Width="6" ItemTemplate="{StaticResource AxisChooserTemplateKey}" />
                  <igPivot:HiddenAxisChooser x:Name="RowChooser" Height="6" ItemTemplate="{StaticResource AxisChooserTemplateKey}" />
                </igPivot:PivotGridPanel>
                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" Style="{StaticResource ScrollBarStyle}" />
                <ScrollBar x:Name="HorizontalScrollBar" Grid.Row="1" Style="{StaticResource ScrollBarStyle}" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource XamPivotGridStyle}" TargetType="igPivot:XamPivotGrid" />

  <!--**************************************************************** RESOURCES ********************************************************************-->

  <!--  *********************************  HiddenAxisChooser Chooser  *********************************  -->
  <Style x:Key="HiddenAxisChooserStyle" TargetType="igPivot:HiddenAxisChooser">
    <Setter Property="Background" Value="{StaticResource HiddenColumnIndicatorBackgroundBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:HiddenAxisChooser">
          <Grid>
            <Border x:Name="ContentPresenterBorder" Background="{TemplateBinding Background}" Padding="0">
              <Grid>
                <Rectangle Margin="-2" Fill="{StaticResource TransparentBrush}" />
                <ToggleButton x:Name="DropDownToggle"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource FilterDropdownToggleButtonStyle}" />
              </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <Border x:Name="PopupBorder"
                      Height="Auto"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Background="{StaticResource PopupBackgroundBrush}"
                      BorderBrush="{StaticResource PopupBorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource ScrollViewerStyle}">
                  <ItemsPresenter>
                    <ItemsPresenter.Resources>
                      <Style BasedOn="{StaticResource ComboBoxItemStyle}" TargetType="ComboBoxItem" />
                    </ItemsPresenter.Resources>
                  </ItemsPresenter>
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource HiddenAxisChooserStyle}" TargetType="igPivot:HiddenAxisChooser" />

  <!--  *********************************  MeasureFilterFieldControl Style  *********************************  -->
  <Style TargetType="igPivotPrim:MeasureFilterFieldControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivotPrim:MeasureFilterFieldControl">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <TextBlock Grid.Column="0" Style="{StaticResource TextBlockStyle}" Text="{Binding Source={StaticResource stringResources}, Path=MeasureFilterText}" />
              <TextBlock Grid.Column="1" Style="{StaticResource TextBlockStyle}" Text="{Binding Path=Measure.Caption}" />
              <Grid Grid.Column="3"
                    Width="18"
                    Height="18"
                    Margin="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="{StaticResource TransparentBrush}">
                <Rectangle Fill="{StaticResource PeekIconBackgroundBrush}" Stroke="{StaticResource PeekIconBorderBrush}" />
                <igPivot:Commanding.Commands>
                  <igPivot:CommandSourceCollection>
                    <igPivotPrim:ExpandableFieldItemCommandSource CommandType="StartPeek" EventName="MouseEnter" />
                    <igPivotPrim:ExpandableFieldItemCommandSource CommandType="StopPeek" EventName="MouseLeave" />
                  </igPivot:CommandSourceCollection>
                </igPivot:Commanding.Commands>
              </Grid>
            </Grid>
            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" Style="{StaticResource ScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
              <Border Width="300" Padding="0">
                <StackPanel Orientation="Vertical">
                  <StackPanel Margin="0,0,0,5" Orientation="Horizontal" Visibility="{Binding Path=HasTwoOrMoreConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                    <RadioButton x:Name="rbFilterByAll" Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAllText}" IsChecked="{Binding Path=FilterByAll, Mode=TwoWay}" Style="{StaticResource RadioButtonStyle}" />
                    <RadioButton x:Name="rbFilterByAny"
                                 Margin="10,0"
                                 Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAnyText}"
                                 IsChecked="{Binding Path=FilterByAll, Mode=TwoWay, Converter={StaticResource inverseBooleanConverter}}"
                                 Style="{StaticResource RadioButtonStyle}" />
                  </StackPanel>
                  <ItemsControl ItemsSource="{Binding Path=ValueConditionViewModels, Mode=OneWay}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Grid Margin="0,0,0,10">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="22" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="22" />
                          </Grid.RowDefinitions>
                          <ComboBox x:Name="cbHierarchy"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="0,0,7,0"
                                    ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                                    ItemsSource="{Binding Path=Hierarchies, Mode=OneWay}"
                                    SelectedItem="{Binding Path=SelectedHierarchy, Mode=TwoWay}"
                                    Style="{StaticResource ComboBoxStyle}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=Caption}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </ComboBox>
                          <ComboBox x:Name="cbLevel"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="0,0,7,0"
                                    ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                                    ItemsSource="{Binding Path=Levels, Mode=OneWay}"
                                    SelectedItem="{Binding Path=SelectedLevel, Mode=TwoWay}"
                                    Style="{StaticResource ComboBoxStyle}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=Caption}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </ComboBox>
                          <igPivot:Dropdown x:Name="cbCondition"
                                            Grid.Row="2"
                                            Grid.Column="0"
                                            Margin="0,0,7,0"
                                            DisplayMemberPath="DisplayName"
                                            EmptyString="{Binding Source={StaticResource stringResources}, Path=MeasureFilterDropdownMatchingText}"
                                            ItemContainerStyle="{StaticResource ComboBoxItemStyle}"
                                            ItemsSource="{Binding Path=ValueFilterConditions, Mode=OneWay}"
                                            SelectedItem="{Binding Path=SelectedValueFilterCondition, Mode=TwoWay}"
                                            Style="{StaticResource DropdownStyle}">
                            <ComboBox.ItemTemplate>
                              <DataTemplate>
                                <TextBlock Text="{Binding Path=DisplayName}" />
                              </DataTemplate>
                            </ComboBox.ItemTemplate>
                          </igPivot:Dropdown>
                          <TextBox x:Name="tbValue"
                                   Grid.Row="2"
                                   Grid.Column="1"
                                   Margin="0,0,7,0"
                                   Style="{StaticResource TextBoxStyle}"
                                   Text="{Binding Path=TextValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                          <Button x:Name="btnRemoveCondition"
                                  Grid.Row="0"
                                  Grid.RowSpan="3"
                                  Grid.Column="2"
                                  Width="12"
                                  Height="13"
                                  Margin="2 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Style="{StaticResource FilterCellRemoveButtonStyle}">
                            <Path Width="8"
                                  Height="8"
                                  Data="{StaticResource ClearFilterIcon}"
                                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                  Stretch="Fill" />
                            <igPivot:Commanding.Command>
                              <igPivotPrim:MeasureFilterFieldCommandSource x:Name="closeCommandSource" CommandType="RemoveValueCondition" EventName="Click" />
                            </igPivot:Commanding.Command>
                          </Button>
                        </Grid>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="56" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnAdd"
                            Grid.Column="0"
                            Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterAddButtonText}"
                            IsEnabled="{Binding Path=LastValueConditionViewModel.IsComplete, FallbackValue=True, Mode=OneWay}"
                            Style="{StaticResource ButtonStyle}">
                      <igPivot:Commanding.Command>
                        <igPivotPrim:MeasureFilterFieldCommandSource CommandType="AddValueCondition" EventName="Click" />
                      </igPivot:Commanding.Command>
                    </Button>
                    <Button x:Name="btnClear"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            Content="{Binding Source={StaticResource stringResources}, Path=MeasureFilterClearAllButtonText}"
                            Style="{StaticResource ButtonStyle}"
                            Visibility="{Binding Path=HasConditions, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                      <igPivot:Commanding.Command>
                        <igPivotPrim:MeasureFilterFieldCommandSource CommandType="ClearValueConditions" EventName="Click" />
                      </igPivot:Commanding.Command>
                    </Button>
                  </Grid>
                  <Border Grid.ColumnSpan="3"
                          Height="2"
                          Margin="0 10 0 0"
                          VerticalAlignment="Bottom"
                          BorderBrush="{StaticResource FilterFieldPendingChangesBorderBrush}"
                          BorderThickness="0,0,0,1" />
                </StackPanel>
              </Border>
            </ScrollViewer>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
        **************************************************************** PRINTING RESOURCES ********************************************************************
        ********************************************************************************************************************************************************************
    -->

  <!--  *********************************  PivotGridReportControl Style  *********************************  -->
  <Style BasedOn="{StaticResource {x:Type igPivot:PivotGridReportControl}}" TargetType="igPivot:PivotGridReportControl">
    <Setter Property="ColumnFieldsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid>
            <Border Background="{StaticResource FieldsDropAreaControlBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="0,0,1,0">
              <WrapPanel x:Name="ColumnsPanel" Margin="5,5,0,5" />
            </Border>
          </Grid>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ColumnsIconGeometry">
      <Setter.Value>
        <PathGeometry Figures="M8,0 L11,0 L11,11 L8,11 z M4,0 L7,0 L7,11 L4,11 z M0,0 L3,0 L3,11 L0,11 z" />
      </Setter.Value>
    </Setter>
    <Setter Property="FilterFieldsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid>
            <Border Background="{StaticResource FieldsDropAreaControlBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="{StaticResource DefaultBorderThickness}">
              <WrapPanel x:Name="FiltersPanel" Margin="5,5,0,5" />
            </Border>
          </Grid>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FiltersIconGeometry">
      <Setter.Value>
        <PathGeometry Figures="M0,0 L12,0 L8,5.3479185 L8,10 L7.844697,10 L4.1553025,10.000001 L4,10 L4,5.3479195 z" />
      </Setter.Value>
    </Setter>
    <Setter Property="MeasureFieldsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid>
            <Border Background="{StaticResource FieldsDropAreaControlBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="1,0,1,0">
              <WrapPanel x:Name="MeasuresPanel" Margin="5,5,0,5" />
            </Border>
          </Grid>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="MeasuresIconGeometry">
      <Setter.Value>
        <PathGeometry Figures="M10,10 L14,10 L14,12 L10,12 z M0,9 L4,9 L4,12 L0,12 z M5,7 L9,7 L9,12 L5,12 z M0,5 L4,5 L4,8 L0,8 z M10,3 L14,3 L14,9 L10,9 z M5,0 L9,0 L9,6 L5,6 z" />
      </Setter.Value>
    </Setter>
    <Setter Property="RowFieldsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <Grid>
            <Border Background="{StaticResource FieldsDropAreaControlBackgroundBrush}" BorderBrush="{StaticResource FieldsDropAreaControlBorderBrush}" BorderThickness="1,1,1,1">
              <WrapPanel x:Name="RowsPanel" Margin="5,5,0,5" VerticalAlignment="Top" />
            </Border>
          </Grid>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="RowsIconGeometry">
      <Setter.Value>
        <PathGeometry Figures="M0,7.9999995 L11,7.9999995 L11,11 L0,11 z M5.4091242E-06,4 L11.000006,4 L11.000006,7 L5.4091242E-06,7 z M5.4091242E-06,0 L11.000006,0 L11.000006,3 L5.4091242E-06,3 z" />
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotReportFieldIconControl Style  *********************************  -->
  <Style BasedOn="{StaticResource {x:Type igPivot:PivotReportFieldIconControl}}" TargetType="igPivot:PivotReportFieldIconControl">
    <Setter Property="Background" Value="{StaticResource GlyphBackgroundBrush}" />
  </Style>

  <!--  *********************************  PivotReportColumnHeaderCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource {x:Type igPivot:PivotColumnHeaderCellControl}}" TargetType="igPivot:PivotReportColumnHeaderCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotReportColumnHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SortedStates">
                <VisualState x:Name="NotSorted" />
                <VisualState x:Name="Ascending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Descending">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowColumnSorting">
                <VisualState x:Name="EnabledSortingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortToggle" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledSortingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid igPivotPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect"
                          Grid.ColumnSpan="3"
                          Margin="0,0,-1,-1"
                          Background="{StaticResource CellItemSelectedBackgroundBrush}"
                          BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Visibility="Collapsed" />
                  <ToggleButton x:Name="ExpansionIndicator"
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="6 2 0 2"
                                VerticalAlignment="Center"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Padding="0"
                                Style="{TemplateBinding ExpansionIndicatorStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition x:Name="HeaderPresenterColumn" Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl x:Name="HeaderPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalContentAlignment="Stretch"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Foreground="{TemplateBinding Foreground}" />
                    <TextBlock x:Name="TotalText"
                               Grid.Column="1"
                               Margin="5,0"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="Center"
                               Foreground="{TemplateBinding Foreground}"
                               Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}"
                               Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsTotalVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
                  </Grid>
                  <Grid Grid.Column="2" Margin="0,0,5,0">
                    <Button x:Name="SortedDescending" Style="{StaticResource TransparentButtonStyle}"
                            Width="10"
                            Height="10">
                      <Path   Width="8"
                               Height="5"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Data="{StaticResource SortIcon}"
                               Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                               Stretch="Fill"
                               IsHitTestVisible="False"
                               Visibility="Collapsed"
                               RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                          <RotateTransform Angle="180"/>
                        </Path.RenderTransform>
                      </Path>
                    </Button>
                    <Path x:Name="SortedAscending"
                          Width="8"
                          Height="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{StaticResource SortIcon}"
                          Fill="{StaticResource GlyphBackgroundBrush}"
                          Stretch="Fill"
                          IsHitTestVisible="False"
                          Visibility="Collapsed" />
                  </Grid>
                  <Border x:Name="optionsPane"
                          Grid.ColumnSpan="4"
                          Margin="5,0,0,0"
                          HorizontalAlignment="Right"
                          Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}"
                          Visibility="Collapsed">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ToggleButton x:Name="HeaderSortBtn"
                                    Grid.Column="0"
                                    Margin="5,0"
                                    IsThreeState="False"
                                    Style="{StaticResource HeaderCellSortButtonStyle}"
                                    Visibility="Collapsed">
                        <igPivot:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                        </igPivot:Commanding.Command>
                      </ToggleButton>
                      <CheckBox x:Name="SortToggle"
                                Grid.Column="2"
                                Margin="5,0"
                                IsThreeState="True"
                                Style="{StaticResource FilterCellSortButtonStyle}"
                                Visibility="Collapsed">
                        <igPivot:Commanding.Command>
                          <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                        </igPivot:Commanding.Command>
                      </CheckBox>
                      <Grid x:Name="columnHidingVisual"
                            Grid.Column="1"
                            Width="30"
                            Margin="0"
                            Background="{StaticResource TransparentBrush}"
                            Cursor="Hand"
                            Visibility="Collapsed">
                        <Path x:Name="VisibilityToggleIcon"
                              Width="10"
                              Height="8"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource ColumnVisibilityToggleIcon}"
                              Fill="{StaticResource GlyphBackgroundBrush}"
                              Stretch="Fill"
                              UseLayoutRounding="False"/>
                        <igPivot:Commanding.Command>
                          <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                        </igPivot:Commanding.Command>
                      </Grid>
                    </Grid>
                  </Border>
                </Grid>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=columnHidingVisual,Path=IsMouseOver}" Value="True">
              <Setter TargetName="VisibilityToggleIcon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotReportRowHeaderCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource {x:Type igPivot:PivotRowHeaderCellControl}}" TargetType="igPivot:PivotReportRowHeaderCellControl">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Padding" Value="8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="igPivot:PivotReportRowHeaderCellControl">
          <Border BorderBrush="{TemplateBinding BorderBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowHeaderSorting">
                <VisualState x:Name="EnabledHeaderSortIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HeaderSortBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHeaderSortIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="AllowRowHiding">
                <VisualState x:Name="EnabledHidingIndicator">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="columnHidingVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledHidingIndicator" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SummaryStates">
                <VisualState x:Name="SummaryValue">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SummaryTotal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TotalText" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderPresenterColumn" Storyboard.TargetProperty="Width">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <GridLength>Auto</GridLength>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CompactLayout">
                <VisualState x:Name="OutlineLeftRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignBottom">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Bottom</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineLeftRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineRightBottomAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAllAlignTop">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Top</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="OutlineAll">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,-1,0,0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalOutline">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="BorderThickness">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0,0,1,1</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fill" Storyboard.TargetProperty="Margin">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Thickness>0</Thickness>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="headerGrid" Storyboard.TargetProperty="VerticalAlignment">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Center</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectedStates">
                <VisualState x:Name="NotSelected" />
                <VisualState x:Name="Selected" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Border x:Name="SelectedRect"
                          Grid.ColumnSpan="2"
                          Margin="0,0,-1,-1"
                          Background="{StaticResource CellItemSelectedBackgroundBrush}"
                          BorderBrush="{StaticResource CellItemSelectedBorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Visibility="Collapsed" />
                  <ToggleButton Name="ExpansionIndicator"
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="3"
                                VerticalAlignment="Center"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
                                Padding="0"
                                Style="{TemplateBinding ExpansionIndicatorStyle}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.IsReportToggleVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />

                  <Grid x:Name="headerGrid" Grid.Column="1">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="HeaderPresenterColumn" Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <ContentControl x:Name="HeaderPresenter"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      HorizontalContentAlignment="Stretch"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Foreground="{TemplateBinding Foreground}" />
                      <TextBlock x:Name="TotalText"
                                 Grid.Column="1"
                                 Margin="5,0"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Cell.Grid.StringSetting.CellTotal}"
                                 Visibility="Collapsed" />
                    </Grid>
                    <Border x:Name="optionsPane"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Right"
                            Background="{StaticResource HeaderCellOptionsPaneBackgroundBrush}"
                            Opacity="1"
                            Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="HeaderSortBtn"
                                      Grid.Column="0"
                                      Margin="5,0"
                                      IsThreeState="False"
                                      Style="{StaticResource HeaderCellSortButtonStyle}"
                                      Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="SortAxisMember" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </ToggleButton>
                        <CheckBox x:Name="SortToggle"
                                  Grid.Column="2"
                                  Margin="5,0"
                                  IsThreeState="True"
                                  Style="{StaticResource FilterCellSortButtonStyle}"
                                  Visibility="Collapsed">
                          <igPivot:Commanding.Command>
                            <igPivot:PivotColumnCommandSource CommandType="SortToggle" EventName="Click" />
                          </igPivot:Commanding.Command>
                        </CheckBox>
                        <Grid x:Name="columnHidingVisual"
                              Grid.Column="1"
                              Width="30"
                              Margin="0"
                              Background="{StaticResource TransparentBrush}"
                              Cursor="Hand"
                              Visibility="Collapsed">
                          <Path x:Name="VisibilityToggleIcon"
                                Width="10"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource ColumnVisibilityToggleIcon}"
                                Fill="{StaticResource GlyphBackgroundBrush}"
                                Stretch="Fill"
                                UseLayoutRounding="False"/>
                          <igPivot:Commanding.Command>
                            <igPivot:XamPivotGridCommandSource CommandType="HideAxis" EventName="MouseLeftButtonDown" />
                          </igPivot:Commanding.Command>

                        </Grid>
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=columnHidingVisual,Path=IsMouseOver}" Value="True">
              <Setter TargetName="VisibilityToggleIcon" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  PivotReportDataCellControl Style  *********************************  -->
  <Style BasedOn="{StaticResource {x:Type ig:PivotCellControl}}" TargetType="ig:PivotReportDataCellControl">
    <Setter Property="Background" Value="{StaticResource CellItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource CellItemBorderBrush}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
  </Style>

  <!--  *********************************  ReportFieldItemControl Style  *********************************  -->
  <Style TargetType="ig:PivotReportFieldItemControl">
    <Setter Property="BorderThickness" Value="{StaticResource DefaultBorderThickness}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ig:PivotReportFieldItemControl">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  *********************************  ReportMeasureFieldItemControl Style  *********************************  -->
  <Style BasedOn="{StaticResource ResourceKey={x:Type ig:PivotReportFieldItemControl}}" TargetType="ig:PivotReportMeasureFieldItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Margin" Value="0,0,2,2" />
  </Style>

  <!--  *********************************  ReportHierarchyFieldItemControl Style  *********************************  -->
  <Style BasedOn="{StaticResource ResourceKey={x:Type ig:PivotReportFieldItemControl}}" TargetType="ig:PivotReportHierarchyFieldItemControl">
    <Setter Property="Background" Value="{StaticResource FieldItemBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource FieldItemBorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    <Setter Property="Margin" Value="0,0,2,0" />
  </Style>

</ResourceDictionary>