//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IGFormulaEditor.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SampleCalculationManagerStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SampleCalculationManagerStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IGFormulaEditor.Resources.SampleCalculationManagerStrings", typeof(SampleCalculationManagerStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PropertyName not set or property could not be found on CalcSettings..
        /// </summary>
        public static string CalcSettingsPropertyName_Not_Set {
            get {
                return ResourceManager.GetString("CalcSettingsPropertyName_Not_Set", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t use the same {0} instance on multiple calculators..
        /// </summary>
        public static string CalculationUsedMoreThanOnce {
            get {
                return ResourceManager.GetString("CalculationUsedMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index &apos;{0}&apos; on &apos;{1}&apos; is out of range..
        /// </summary>
        public static string CellIndexOutOfRange {
            get {
                return ResourceManager.GetString("CellIndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReferneceId: &apos;{0}&apos; has already been used for another ItemCalculation or ListCalculation on &apos;{1}&apos;..
        /// </summary>
        public static string DuplicateReferenceId {
            get {
                return ResourceManager.GetString("DuplicateReferenceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference not found..
        /// </summary>
        public static string FindReferenceError {
            get {
                return ResourceManager.GetString("FindReferenceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Formula Circularity has been detected in the formula for [{0}]. The Formula is: {1}. No calculations can be performed by the CalcEngine while a Circularity exists..
        /// </summary>
        public static string FormulaCircularityError_Default_Message {
            get {
                return ResourceManager.GetString("FormulaCircularityError_Default_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circularity Error.
        /// </summary>
        public static string FormulaCircularityError_Message_Title {
            get {
                return ResourceManager.GetString("FormulaCircularityError_Message_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax error on Formula &apos;{0}&apos;, error: &apos;{1}&apos;.
        /// </summary>
        public static string FormulaSyntaxError {
            get {
                return ResourceManager.GetString("FormulaSyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A syntax error occured while compiling a formula for: {0}..
        /// </summary>
        public static string FormulaSyntaxError_Default_Message {
            get {
                return ResourceManager.GetString("FormulaSyntaxError_Default_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syntax Error.
        /// </summary>
        public static string FormulaSyntaxError_Message_Title {
            get {
                return ResourceManager.GetString("FormulaSyntaxError_Message_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ItemCalculation: ReferenceId = &apos;{0}&apos;, Formula = &apos;{1}&apos;, TargetProperty = &apos;{2}&apos;.
        /// </summary>
        public static string ItemCalculation_Desc {
            get {
                return ResourceManager.GetString("ItemCalculation_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t reference formula result since no ReferenceId or TargetProperty was specified for {0}..
        /// </summary>
        public static string ItemCalculation_RefID_Warning {
            get {
                return ResourceManager.GetString("ItemCalculation_RefID_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ItemCalculator: ReferenceId = &apos;{0}&apos;, Item = &apos;{1}&apos;.
        /// </summary>
        public static string ItemCalculator_Desc {
            get {
                return ResourceManager.GetString("ItemCalculator_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Behavior.
        /// </summary>
        public static string LC_Behavior {
            get {
                return ResourceManager.GetString("LC_Behavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Design.
        /// </summary>
        public static string LC_Design {
            get {
                return ResourceManager.GetString("LC_Design", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string LC_Error {
            get {
                return ResourceManager.GetString("LC_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property name specified does not exist on the control..
        /// </summary>
        public static string LE_Exception_0 {
            get {
                return ResourceManager.GetString("LE_Exception_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add a NamedReference that is already assigned to a NamedReferences collection..
        /// </summary>
        public static string LE_Exception_1 {
            get {
                return ResourceManager.GetString("LE_Exception_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Participant RootReference cannot be null..
        /// </summary>
        public static string LE_Exception_10 {
            get {
                return ResourceManager.GetString("LE_Exception_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to participant.
        /// </summary>
        public static string LE_Exception_11 {
            get {
                return ResourceManager.GetString("LE_Exception_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Participant not found..
        /// </summary>
        public static string LE_Exception_14 {
            get {
                return ResourceManager.GetString("LE_Exception_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to participant.RootReference.
        /// </summary>
        public static string LE_Exception_15 {
            get {
                return ResourceManager.GetString("LE_Exception_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to participant.RootReference is not a Root Reference.
        /// </summary>
        public static string LE_Exception_16 {
            get {
                return ResourceManager.GetString("LE_Exception_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AsynchronousCalcDuration.
        /// </summary>
        public static string LE_Exception_2 {
            get {
                return ResourceManager.GetString("LE_Exception_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to calcManager.
        /// </summary>
        public static string LE_Exception_20 {
            get {
                return ResourceManager.GetString("LE_Exception_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AsynchronousCalcDuration cannot be less than 0..
        /// </summary>
        public static string LE_Exception_3 {
            get {
                return ResourceManager.GetString("LE_Exception_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The millis argument to ReCalc() must be greater than or equal to -1..
        /// </summary>
        public static string LE_Exception_32 {
            get {
                return ResourceManager.GetString("LE_Exception_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The millis argument to ReCalc() must be convertible to clock ticks without overflowing the range of the Int64 data type; this value exceeds that upper bound..
        /// </summary>
        public static string LE_Exception_33 {
            get {
                return ResourceManager.GetString("LE_Exception_33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to column.
        /// </summary>
        public static string LE_Exception_34 {
            get {
                return ResourceManager.GetString("LE_Exception_34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dataGridView.
        /// </summary>
        public static string LE_Exception_35 {
            get {
                return ResourceManager.GetString("LE_Exception_35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AsynchronousCalcInterval.
        /// </summary>
        public static string LE_Exception_4 {
            get {
                return ResourceManager.GetString("LE_Exception_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CalcInterval cannot be less than 1..
        /// </summary>
        public static string LE_Exception_5 {
            get {
                return ResourceManager.GetString("LE_Exception_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to millis.
        /// </summary>
        public static string LE_Exception_6 {
            get {
                return ResourceManager.GetString("LE_Exception_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified control could not be found in the Calc Network..
        /// </summary>
        public static string LE_Exception_7 {
            get {
                return ResourceManager.GetString("LE_Exception_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to control.
        /// </summary>
        public static string LE_Exception_8 {
            get {
                return ResourceManager.GetString("LE_Exception_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t set the Value if there&apos;s a formula is assigned to the object..
        /// </summary>
        public static string LE_InvalidOperationException_1 {
            get {
                return ResourceManager.GetString("LE_InvalidOperationException_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A named reference with the ReferenceId {0} already exists in the collection.
        /// </summary>
        public static string LE_InvalidOperationException_2 {
            get {
                return ResourceManager.GetString("LE_InvalidOperationException_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add a NamedReference without a ReferenceId..
        /// </summary>
        public static string LE_InvalidOperationException_3 {
            get {
                return ResourceManager.GetString("LE_InvalidOperationException_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid reference name..
        /// </summary>
        public static string LE_InvalidReferenceName {
            get {
                return ResourceManager.GetString("LE_InvalidReferenceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary is read-only..
        /// </summary>
        public static string LE_NotSupported_1 {
            get {
                return ResourceManager.GetString("LE_NotSupported_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid reference: {0}..
        /// </summary>
        public static string LER_Calc_InvalidReference {
            get {
                return ResourceManager.GetString("LER_Calc_InvalidReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formula syntax error. Unable to compile the formula: {0}.
        /// </summary>
        public static string LER_Exception_34 {
            get {
                return ResourceManager.GetString("LER_Exception_34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListCalculation: ReferenceId = &apos;{0}&apos;, Formula = &apos;{1}&apos;.
        /// </summary>
        public static string ListCalculation_Desc {
            get {
                return ResourceManager.GetString("ListCalculation_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t reference formula result since no ReferenceId was specified for {0}..
        /// </summary>
        public static string ListCalculation_RefID_Warning {
            get {
                return ResourceManager.GetString("ListCalculation_RefID_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List Calculations.
        /// </summary>
        public static string ListCalculationsTreeNode {
            get {
                return ResourceManager.GetString("ListCalculationsTreeNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ListCalculator: ReferenceId = &apos;{0}&apos;.
        /// </summary>
        public static string ListCalculator_Desc {
            get {
                return ResourceManager.GetString("ListCalculator_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (All).
        /// </summary>
        public static string NamedReference_Category_All {
            get {
                return ResourceManager.GetString("NamedReference_Category_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Unassigned).
        /// </summary>
        public static string NamedReference_Category_Unassigned {
            get {
                return ResourceManager.GetString("NamedReference_Category_Unassigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t use the same NamedReferenceCollection instance with multiple XamCalculationManagers..
        /// </summary>
        public static string NamedReferencUsedMoreThanOnce {
            get {
                return ResourceManager.GetString("NamedReferencUsedMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls.
        /// </summary>
        public static string Operand_Category_Controls {
            get {
                return ResourceManager.GetString("Operand_Category_Controls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named References.
        /// </summary>
        public static string Operand_Category_NamedReferences {
            get {
                return ResourceManager.GetString("Operand_Category_NamedReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A participant named &apos;{0}&apos; already exists in the collection..
        /// </summary>
        public static string ParticipantUsedMoreThanOnce {
            get {
                return ResourceManager.GetString("ParticipantUsedMoreThanOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get Property {0} on {1}..
        /// </summary>
        public static string PropertyGetFailed {
            get {
                return ResourceManager.GetString("PropertyGetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set Property {0} on {1} with value: {2}..
        /// </summary>
        public static string PropertySetFailed {
            get {
                return ResourceManager.GetString("PropertySetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result key: &apos;{0}&apos; was not found..
        /// </summary>
        public static string ResultKeyNotFound {
            get {
                return ResourceManager.GetString("ResultKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source item not specified..
        /// </summary>
        public static string SourceItemNotSpecified {
            get {
                return ResourceManager.GetString("SourceItemNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The error is:.
        /// </summary>
        public static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}.
        /// </summary>
        public static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following characters are not valid in the name of a Reference:.
        /// </summary>
        public static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string String3 {
            get {
                return ResourceManager.GetString("String3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TargetProperty {0} was not found on {1}..
        /// </summary>
        public static string TargetPropertyNotFound {
            get {
                return ResourceManager.GetString("TargetPropertyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TargetProperty {0} was not found. Type &apos;{1}&apos; exposes a single read-only property named &apos;Value&apos; that returns the item itself..
        /// </summary>
        public static string TargetPropertyNotValue {
            get {
                return ResourceManager.GetString("TargetPropertyNotValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not resolve TreatAsTypeName &apos;{0}&apos; on {1}.
        /// </summary>
        public static string UnknownTypeName {
            get {
                return ResourceManager.GetString("UnknownTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; exposes a single read-only property named &apos;Value&apos; that returns the item itself. Therefore the &apos;Value&apos; property can&apos;t be the target of a formula..
        /// </summary>
        public static string ValuePropertyIsReadOnly {
            get {
                return ResourceManager.GetString("ValuePropertyIsReadOnly", resourceCulture);
            }
        }
    }
}
