<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CE_CustomFilter_Contains" xml:space="preserve">
    <value>Contains</value>
    <comment>Keep as is</comment>
  </data>
  <data name="CE_CustomFilter_DoesNotContain" xml:space="preserve">
    <value>DoesNotContain</value>
    <comment>Keep as is</comment>
  </data>
  <data name="CE_CustomFilter_EndsWith" xml:space="preserve">
    <value>EndsWith</value>
    <comment>Keep as is</comment>
  </data>
  <data name="CE_CustomFilter_Header" xml:space="preserve">
    <value>比較演算子</value>
  </data>
  <data name="CE_CustomFilter_StartsWith" xml:space="preserve">
    <value>StartsWith</value>
    <comment>Keep as is</comment>
  </data>
  <data name="CE_Items_Add" xml:space="preserve">
    <value>新しい顧客の追加</value>
  </data>
  <data name="CE_Items_Delete" xml:space="preserve">
    <value>選択した顧客の削除</value>
  </data>
  <data name="CE_Items_Disable" xml:space="preserve">
    <value>選択した顧客の選択を解除する</value>
  </data>
  <data name="CE_Items_PanelHeader" xml:space="preserve">
    <value>顧客名:</value>
  </data>
  <data name="CE_Items_SelectCustomer" xml:space="preserve">
    <value>顧客名を選択してください</value>
  </data>
  <data name="CE_ManyItems_Hint" xml:space="preserve">
    <value>5000 個の要素がある ComboBox を開くと、ユーザー インターフェイスがしばらく低下することがあります。</value>
  </data>
  <data name="CE_ManyItems_Note" xml:space="preserve">
    <value>注:</value>
  </data>
  <data name="CE_Selectable_EmptyText1" xml:space="preserve">
    <value>著者の選択</value>
  </data>
  <data name="CE_Selectable_EmptyText2" xml:space="preserve">
    <value>書名の選択</value>
  </data>
  <data name="CE_Selectable_MultiChbCombo" xml:space="preserve">
    <value>チェックボックス複数選択 ComboEditor:</value>
  </data>
  <data name="CE_Selectable_MultiChbComboTxt" xml:space="preserve">
    <value>チェックボックスで複数項目を選択</value>
  </data>
  <data name="CE_Selectable_MultiSelectEditable" xml:space="preserve">
    <value>複数選択 ComboEditor (編集可能):</value>
  </data>
  <data name="CE_Selectable_MultiSelectEditableTxt" xml:space="preserve">
    <value>カスタム セパレーター (";") で区切られた複数項目を選択</value>
  </data>
  <data name="CE_Selectable_MultiSelectReadOnly" xml:space="preserve">
    <value>複数選択 ComboEditor (読み取り専用) :</value>
  </data>
  <data name="CE_Selectable_MultiSelectReadOnlyTxt" xml:space="preserve">
    <value>Ctrl キーで複数の項目を選択し、リストの外をクリックしてください</value>
  </data>
  <data name="CE_SelectAddress" xml:space="preserve">
    <value>住所の選択</value>
  </data>
  <data name="CE_SelectCity" xml:space="preserve">
    <value>市の選択</value>
  </data>
  <data name="CE_SelectCompany" xml:space="preserve">
    <value>会社の選択</value>
  </data>
  <data name="CE_SelectContactName" xml:space="preserve">
    <value>担当者名の選択</value>
  </data>
  <data name="CE_SelectCountry" xml:space="preserve">
    <value>国の選択</value>
  </data>
  <data name="CE_SelectionChanged_Info" xml:space="preserve">
    <value>顧客情報</value>
  </data>
  <data name="CE_Settings" xml:space="preserve">
    <value>XamComboEditor 設定</value>
  </data>
  <data name="CE_Settings_EnableEdit" xml:space="preserve">
    <value>編集を有効にする</value>
  </data>
  <data name="CE_Standard_AutoComplete" xml:space="preserve">
    <value>オートコンプリート スタイル:</value>
  </data>
  <data name="CE_Standard_AutoCompleteTxt" xml:space="preserve">
    <value>xamComboEditor に入力するとオートコンプリート機能がオンになります。</value>
  </data>
  <data name="CE_Standard_GoogleStyleFiltered" xml:space="preserve">
    <value>Google の候補スタイル - フィルターされた項目リスト:</value>
  </data>
  <data name="CE_Standard_GoogleStyleFilteredTxt" xml:space="preserve">
    <value>住所のリストをフィルターするのに XamComboEditor に入力します。</value>
  </data>
  <data name="CE_Standard_GoogleStyleFullList" xml:space="preserve">
    <value>Google の候補スタイル - すべての項目リスト:</value>
  </data>
  <data name="CE_Standard_GoogleStyleFullListTxt" xml:space="preserve">
    <value>名前があるリストを開くには XamComboEditor をクリックし、入力します。</value>
  </data>
  <data name="CE_Standard_NoPopup" xml:space="preserve">
    <value>オートコンプリート スタイル - ポップアップなし:</value>
  </data>
  <data name="CE_Standard_NoPopupTxt" xml:space="preserve">
    <value>XamComboEditor に入力すると、オートコンプリートがポップアップ リストなしでオンになります。</value>
  </data>
  <data name="CE_Standard_ReadOnlyCombo" xml:space="preserve">
    <value>標準読み取り専用 Combobox:</value>
  </data>
  <data name="CE_Standard_ReadOnlyComboTxt" xml:space="preserve">
    <value>会社のリストを開くには XamComboEditor をクリックします。</value>
  </data>
  <data name="XWG_Grid_ProductCategory" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="XWG_Grid_ProductName" xml:space="preserve">
    <value>製品名</value>
  </data>
  <data name="XWG_Grid_ProductSKU" xml:space="preserve">
    <value>SKU</value>
  </data>
  <data name="XWG_Grid_UnitPrice" xml:space="preserve">
    <value>単価</value>
  </data>
  <data name="XWG_Grid_UnitsStock" xml:space="preserve">
    <value>在庫</value>
  </data>
  <data name="CE_Allergies" xml:space="preserve">
    <value>アレルギー</value>
  </data>
  <data name="CE_AllPatients" xml:space="preserve">
    <value>すべての患者:</value>
  </data>
  <data name="CE_ExtaMeds" xml:space="preserve">
    <value>追加の薬の必要</value>
  </data>
  <data name="CE_SelectAdmittanceId" xml:space="preserve">
    <value>入院番号の選択:</value>
  </data>
  <data name="CE_SelectPatientName" xml:space="preserve">
    <value>患者名の選択:</value>
  </data>
  <data name="CE_SpecialCase" xml:space="preserve">
    <value>特別ケースの選択:</value>
  </data>
  <data name="CE_SpecialCases" xml:space="preserve">
    <value>特別なケース:</value>
  </data>
  <data name="XWG_Patient_SpecialPatientInformation" xml:space="preserve">
    <value>特別な配慮が必要な患者</value>
  </data>
  <data name="CE_Allow_DropDown_Resizing" xml:space="preserve">
    <value>ドロップダウンのサイズ変更を可能にする</value>
  </data>
  <data name="CE_Max_DropDown_Height" xml:space="preserve">
    <value>ドロップダウンの最大の高さ</value>
  </data>
  <data name="CE_Max_DropDown_Width" xml:space="preserve">
    <value>ドロップダウンの最大幅</value>
  </data>
  <data name="CE_Min_DropDown_Width" xml:space="preserve">
    <value>ドロップダウンの最小幅</value>
  </data>
  <data name="CE_SelectionChanged_EventFired" xml:space="preserve">
    <value>{0}: SelectionChanged イベントが発生されました - AddedItems: {1}, RemovedItems: {2} 。</value>
  </data>
  <data name="CE_SelectionChanged_None" xml:space="preserve">
    <value>&lt;なし&gt;</value>
  </data>
  <data name="CE_ApplyFilter" xml:space="preserve">
    <value>フィルターの適用</value>
  </data>
  <data name="CE_ClearFilters" xml:space="preserve">
    <value>フィルターのクリア</value>
  </data>
  <data name="CE_SelectFieldName" xml:space="preserve">
    <value>データ フィールドの選択:</value>
  </data>
  <data name="CE_SelectOperator" xml:space="preserve">
    <value>演算子の選択:</value>
  </data>
  <data name="CE_Msg_SelectField" xml:space="preserve">
    <value>フィールドを選択してください。</value>
  </data>
  <data name="CE_Msg_SelectOperator" xml:space="preserve">
    <value>演算子を選択してください。</value>
  </data>
  <data name="CE_DropDownButtonDisplayMode" xml:space="preserve">
    <value>ドロップダウン ボタンの表示モード:</value>
  </data>
  <data name="CE_Min_DropDown_Height" xml:space="preserve">
    <value>ドロップダウンの最小の高さ</value>
  </data>
  <data name="CE_Data_Bool" xml:space="preserve">
    <value>Bool 値リスト</value>
  </data>
  <data name="CE_Data_Chars" xml:space="preserve">
    <value>Char 値リスト</value>
  </data>
  <data name="CE_Data_Dates" xml:space="preserve">
    <value>DateTime 値リスト</value>
  </data>
  <data name="CE_Data_Double" xml:space="preserve">
    <value>Double 値リスト</value>
  </data>
  <data name="CE_Data_Enum" xml:space="preserve">
    <value>Enum データ</value>
  </data>
  <data name="CE_Data_Int" xml:space="preserve">
    <value>Int 値リスト</value>
  </data>
</root>