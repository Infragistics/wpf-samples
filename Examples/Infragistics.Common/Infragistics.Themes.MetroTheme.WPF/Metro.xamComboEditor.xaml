<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  mc:Ignorable="d">

    <!-- *********************************  COLORS  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Theme.Colors.xaml" />
      <ResourceDictionary Source="Styles.WPF.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="DarkForegroundBrush" Color="{StaticResource Color_001}"/>

    <!-- ComboEditor Brushes -->
    <SolidColorBrush x:Key="ComboEditorPopupBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ComboEditorFocusedBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboEditorFocusVisualElementBorderBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboEditorBorderEditModeBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ComboEditorBorderEditModeBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ComboEditorItemHoverBackgroundFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ComboEditorItemHoverBackgroundStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ComboEditorItemPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ComboEditorItemPressedStrokeBrush" Color="{StaticResource Color_024}"/>

    <!-- ToggleButton Brushes -->
    <SolidColorBrush x:Key="ToggleButtonPressedStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToggleButtonBackgroundBrush" Color="{StaticResource Color_009}"/>
    <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{StaticResource Color_004}"/>
    <SolidColorBrush x:Key="ToggleButtonHoverBackgroundFillBrush" Color="{StaticResource Color_007}"/>
    <SolidColorBrush x:Key="ToggleButtonHoverBackgroundStrokeBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ToggleButtonCheckedElementStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToggleButtonFocusElementStrokeBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToggleButtonDropDownSeparatorFillBrush" Color="{StaticResource Color_006}"/>
    <SolidColorBrush x:Key="ToggleButtonArrowFillBrush" Color="{StaticResource Color_003}"/>
    <SolidColorBrush x:Key="ToggleButtonArrowHoverFillBrush" Color="{StaticResource Color_002}"/>
    <SolidColorBrush x:Key="ToggleButtonArrowPressedFillBrush" Color="{StaticResource Color_024}"/>
    <SolidColorBrush x:Key="ToggleButtonArrowDisabledFillBrush" Color="{StaticResource Color_005}"/>

    <!-- ******************************************************** SL-WPF SHARED RESOURCES ***********************************************************
    ********************************************************************************************************************************************************************    -->

    <!-- *********************************  ComboEditorItemControl Style  ********************************* -->
    <Style x:Key="ComboEditorItemControlStyle" TargetType="ig:ComboEditorItemControl">
      <Setter Property="FontFamily" Value="Segoe UI" />
      <Setter Property="FontSize" Value="13.333" />
      <Setter Property="Padding" Value="5 3" />
      <Setter Property="MinHeight" Value="30" />
      <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ig:ComboEditorItemControl">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboEditorItemHoverBackgroundFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboEditorItemHoverBackgroundStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                  <VisualState x:Name="Unselected"/>
                  <VisualState x:Name="Selected">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisualElement">
                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionModeStates">
                  <VisualState x:Name="CheckBox">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectedCheckbox">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Standard"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" />
              <Rectangle x:Name="selectedRectangle" Fill="{StaticResource ComboEditorItemPressedFillBrush}" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ComboEditorItemPressedStrokeBrush}"/>
              <StackPanel x:Name="content" Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                <CheckBox x:Name="SelectedCheckbox" VerticalAlignment="Center" IsHitTestVisible="False" Visibility="Collapsed" Style="{StaticResource CheckBoxStyle}"/>
                <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}">
                  <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </ContentControl>
              </StackPanel>
              <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ComboEditorItemPressedStrokeBrush}" StrokeThickness="2" Opacity="0"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="ig:ComboEditorItemControl" BasedOn="{StaticResource ComboEditorItemControlStyle}"/>

    <!-- *********************************  ToggleButton Style  ********************************* -->
    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="FontFamily" Value="Segoe UI" />
      <Setter Property="FontSize" Value="14.667" />
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ToggleButtonBorderBrush}"/>
      <Setter Property="Background" Value="{StaticResource ToggleButtonBackgroundBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonArrowHoverFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Bd">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonHoverBackgroundFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Bd">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonHoverBackgroundStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonArrowPressedFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Bd">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonPressedStrokeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="Arrow">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleButtonArrowDisabledFillBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                  <VisualState x:Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="ArrowSelected" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="checkedElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unchecked"/>
                  <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="focusElem" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="Bd" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
              <Rectangle x:Name="checkedElem" Opacity="0" Stroke="{StaticResource ToggleButtonCheckedElementStrokeBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
              <Grid HorizontalAlignment="Right" Width="32">
                <Rectangle Width="1" Fill="{StaticResource ToggleButtonDropDownSeparatorFillBrush}" HorizontalAlignment="Left" Margin="-1,5,0,5"/>
                <Path x:Name="Arrow" Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.72704 L541.53699,173.589 z" Stretch="Uniform" Fill="{StaticResource ToggleButtonArrowFillBrush}" UseLayoutRounding="False" Height="6" Width="10" />
                <Path x:Name="ArrowSelected" Opacity="0" Data="F1 M541.53699,173.589 L531.10699,173.589 L536.32202,179.72704 L541.53699,173.589 z" Stretch="Uniform" Fill="{StaticResource ToggleButtonArrowPressedFillBrush}" UseLayoutRounding="False" Height="6" Width="10" />
              </Grid>
              <Rectangle x:Name="DisabledElement" Opacity="0" Stroke="{StaticResource DisabledVisualElement}" />
              <Rectangle x:Name="focusElem" Opacity="0" Stroke="{StaticResource ToggleButtonFocusElementStrokeBrush}" StrokeThickness="2"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- *********************************  TextBlock Style  ********************************* -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
      <Setter Property="FontSize" Value="14.667"/>
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="MinHeight" Value="30"/>
    </Style>

    <!-- *********************************  XamComboEditor Style  ********************************* -->
    <Style x:Key="XamComboEditorStyle" TargetType="ig:XamComboEditor">
      <Setter Property="FontSize" Value="14.667" />
      <Setter Property="Padding" Value="4,3"/>
      <Setter Property="MinHeight" Value="32"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ig:XamComboEditor">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver"/>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55"/>
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboEditorFocusedBorderBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ModeStates">
                  <VisualState x:Name="Selectable">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Editable">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectConentPanel" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="borderEditMode" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="MultiSelectConentPanel">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>10,10,0,0</Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="TextBoxPresenter">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Thickness>
                              5,0,0,0
                            </Thickness>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="WaterMarkStates">
                  <VisualState x:Name="WaterMarkHidden"/>
                  <VisualState x:Name="WaterMarkVisible">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DropDownStates">
                  <VisualState x:Name="Closed"/>
                  <VisualState x:Name="Open">
                    <Storyboard>
                      <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                        <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                      </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="ContentPresenterBorder">
                <Grid x:Name="gridLayout" ShowGridLines="False">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="32"/>
                  </Grid.ColumnDefinitions>
                  <Popup x:Name="Popup" Grid.ColumnSpan="2" VerticalAlignment="Bottom" IsOpen="False">
                    <Border x:Name="RootPopupElement" Height="Auto" MaxHeight="{TemplateBinding MaxDropDownHeight}" HorizontalAlignment="Stretch" Background="{StaticResource LightForegroundBrush}" BorderBrush="{StaticResource ComboEditorPopupBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <igPrim:ItemsPanel x:Name="ItemsPanel"/>
                        <ScrollBar x:Name="VerticalScrollBar" Width="20" Grid.Column="1" Grid.Row="0" Style="{StaticResource ScrollBarStyle}"/>
                        <ScrollBar x:Name="HorizontalScrollBar" Height="20" Grid.Column="0" Grid.Row="1" Style="{StaticResource ScrollBarStyle}"/>
                      </Grid>
                    </Border>
                  </Popup>
                  <Border x:Name="borderEditMode" Grid.ColumnSpan="2" Background="{StaticResource ComboEditorBorderEditModeBackgroundBrush}" BorderBrush="{StaticResource ComboEditorBorderEditModeBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"/>
                  <ToggleButton x:Name="ToggleButton" Grid.ColumnSpan="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Style="{StaticResource ToggleButtonStyle}" />
                  <TextBlock 	x:Name="WaterMark" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="False" Padding="{TemplateBinding Padding}"
        Margin="3,1,0,1" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding EmptyText}" Visibility="Collapsed"/>
                  <igPrim:SpecializedTextBox x:Name="TextBoxPresenter" HorizontalAlignment="Stretch" Margin="5,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
      Background="{StaticResource TransparentBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" Style="{StaticResource TextBoxStyle}" Foreground="{StaticResource DarkForegroundBrush}"
      Visibility="Collapsed"/>
                  <ContentControl x:Name="contentControl" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <Grid>
                      <StackPanel x:Name="MultiSelectConentPanel" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Orientation="Horizontal" Margin="10,0,0,0"/>
                    </Grid>
                  </ContentControl>
                </Grid>
              </Border>
              <Border x:Name="FocusVisualElement" BorderBrush="{StaticResource ComboEditorFocusVisualElementBorderBrush}" BorderThickness="1" IsHitTestVisible="false" Opacity="0"/>
              <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" IsHitTestVisible="false" Opacity="0" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="ig:XamComboEditor" BasedOn="{StaticResource XamComboEditorStyle}"/>
</ResourceDictionary>