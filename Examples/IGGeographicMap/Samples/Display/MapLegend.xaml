<framework:SampleContainer x:Class="IGGeographicMap.Samples.MapLegend"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="MultipleSeries Page"
      xmlns:ig="http://schemas.infragistics.com/xaml"
      xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:models="clr-namespace:Infragistics.Samples.Shared.Models;assembly=Infragistics.Samples.Shared"
      xmlns:providers="clr-namespace:Infragistics.Samples.Shared.DataProviders;assembly=Infragistics.Samples.Shared"
      xmlns:resources="clr-namespace:Infragistics.Samples.Shared.Resources;assembly=Infragistics.Samples.Shared" xmlns:custom="clr-namespace:IGGeographicMap.Custom.StyleSelectors">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGGeographicMap;component/Assets/GlobalExtended.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <resources:ModelStrings x:Key="ModelStrings" />

            <models:WorldCitiesDataSample x:Key="cities" />

            <ig:ShapefileConverter x:Key="TemperatureFileSource"
                ShapefileSource="/Infragistics.Samples.Services;component/shapefiles/Weather/SeaSurfaceTemp/sst_20110814.shp"
                 DatabaseSource="/Infragistics.Samples.Services;component/shapefiles/Weather/SeaSurfaceTemp/sst_20110814.dbf" />

            <ig:ShapefileConverter x:Key="shapeWorldFileSource"
                ShapefileSource="/Infragistics.Samples.Services;component/shapefiles/world/world_countries_reg.shp"
                 DatabaseSource="/Infragistics.Samples.Services;component/shapefiles/world/world_countries_reg.dbf" />

            <LinearGradientBrush x:Key="TemperatureGradientBrush" StartPoint="0 0" EndPoint="1 1"  >
                <GradientStopCollection>
                    <GradientStop Color="#CE879922" Offset="0" />
                    <GradientStop Color="#CEF7AA1B" Offset=".5"  />
                    <GradientStop Color="#CEE3720C" Offset=".75" />
                    <GradientStop Color="#CEC62D36" Offset="1"    />
                </GradientStopCollection>
            </LinearGradientBrush>

            <SolidColorBrush Color="#6D14546F" x:Key="TemperatureFreezingBrush" />
            <SolidColorBrush Color="#6D2380A8" x:Key="TemperatureColdBrush" />
            <SolidColorBrush Color="#6D879922" x:Key="TemperatureCoolBrush" />
            <SolidColorBrush Color="#6DF7AA1B" x:Key="TemperatureNormalBrush" />
            <SolidColorBrush Color="#6DE3720C" x:Key="TemperatureWarmBrush" />
            <SolidColorBrush Color="#6DC62D36" x:Key="TemperatureHotBrush" />

            <Style TargetType="Path" x:Key="TemperatureFreezingStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureFreezingBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="TemperatureColdStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureColdBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="TemperatureCoolStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureCoolBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="TemperatureNormalStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureNormalBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="TemperatureWarmStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureWarmBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="TemperatureHotStyle">
                <Setter Property="Fill" Value="{StaticResource TemperatureHotBrush}" />
                <Setter Property="StrokeThickness" Value="0" />
            </Style>
            <Style TargetType="Path" x:Key="CountriesShapeStyle">
                <Setter Property="Fill" Value="#FFD9D7D7" />
                <Setter Property="Stroke" Value="DimGray" />
                <Setter Property="StrokeThickness" Value="1" />
            </Style>
            <DataTemplate x:Key="ShapeSeriesMarkerTemplate">
                <TextBlock Text="{Binding Path=Item.Fields[Contour]}" 
                              Foreground="Black" Margin="2" HorizontalAlignment="Center" />
            </DataTemplate>
            <DataTemplate x:Key="ShapeSeriesLegendTemplate">
                <Ellipse Margin="0 0 4 0" Height="12" Width="12"
                        Stroke="Black" StrokeThickness="1"
                        Fill="{StaticResource TemperatureGradientBrush}"  >
                </Ellipse>
            </DataTemplate>

            <DataTemplate x:Key="shapeCityMarkerTemplate">
                <Grid>
                    <Canvas Margin="-12,-12,0,0">
                        <Border Canvas.Left="12" Canvas.Top="1" BorderThickness="1" CornerRadius="4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1">
                                    <GradientStop Color="White" />
                                    <GradientStop Color="#77ffffff" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Rectangle RadiusX="3" RadiusY="3">
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <StackPanel Orientation="Horizontal">
                                    <Ellipse Width="10" Height="10" StrokeThickness="1" Margin="8 3 3 3">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="White" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <RadialGradientBrush RadiusY="0.582" RadiusX="0.582" Center="0.505,0.577" GradientOrigin="0.505,0.577">
                                                <GradientStop Color="#FF2D330B" Offset="1"/>
                                                <GradientStop Color="#FFA4BA29" Offset="0.695"/>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <TextBlock Text="{Binding Path=Item.Name}" VerticalAlignment="Center" Margin="3 3 8 3" />
                                </StackPanel>

                            </Grid>
                        </Border>
                    </Canvas>
                </Grid>
            </DataTemplate>

            <!-- StyleSelector with binding to data loaded from database file (DBF) -->
            <custom:RangeConditionalStyleSelector x:Key="ConditionalStyleSelector">
                <!-- custom style rules used for styling shape based on data values -->
                <custom:RangeConditionalStyleSelector.Rules>
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="-30" RangeMaxValue="0" StyleToApply="{StaticResource TemperatureHotStyle}" />
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="0" RangeMaxValue="6" StyleToApply="{StaticResource TemperatureColdStyle}" />
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="6" RangeMaxValue="12" StyleToApply="{StaticResource TemperatureCoolStyle}" />
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="12" RangeMaxValue="22" StyleToApply="{StaticResource TemperatureNormalStyle}" />
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="22" RangeMaxValue="30" StyleToApply="{StaticResource TemperatureWarmStyle}" />
                    <custom:RangeConditionalStyleRule ValueMemberPath="Fields[Contour]" RangeMinValue="30" RangeMaxValue="45" StyleToApply="{StaticResource TemperatureHotStyle}" />
                </custom:RangeConditionalStyleSelector.Rules>
            </custom:RangeConditionalStyleSelector>
        </ResourceDictionary>
    </framework:SampleContainer.Resources>

    <Grid x:Name="LayoutRoot">

        <ig:XamGeographicMap x:Name="GeoMap"                
                             BackgroundContent="{x:Null}"
                             OverviewPlusDetailPaneVisibility="Collapsed"
                             Zoomable="True">
            <ig:XamGeographicMap.Series>
                <!-- ShapeSeries with binding to a shape files (SHP) showing temperatures -->
                <ig:GeographicShapeSeries 
                     Title="{Binding Path=XWM_OceanTempratures, Source={StaticResource ModelStrings}}"
                     Legend="{Binding ElementName=Legend}"
                     LegendItemBadgeTemplate="{StaticResource ShapeSeriesLegendTemplate}"
                     MarkerCollisionAvoidance="Omit"
                     MarkerTemplate="{StaticResource ShapeSeriesMarkerTemplate}"
                     ItemsSource="{StaticResource TemperatureFileSource}"
                     ShapeMemberPath="Points"
                     ShapeStyleSelector="{StaticResource ConditionalStyleSelector}">
                    <ig:GeographicShapeSeries.ToolTip>
                        <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{Binding Path=XWM_Temperature, Source={StaticResource ModelStrings}}" FontWeight="Bold" Margin="2" />
                            <TextBlock Text="{Binding Path=Item.Fields[Contour]}" Margin="4,2,2,2" />
                        </StackPanel>
                    </ig:GeographicShapeSeries.ToolTip>
                </ig:GeographicShapeSeries>
                <!-- ShapeSeries with binding to a shape files (SHP) showing Country Boarders-->
                <ig:GeographicShapeSeries 
                    Title="{Binding Path=XWM_CountryBoarders, Source={StaticResource ModelStrings}}"
                    Legend="{Binding ElementName=Legend}"
                    MarkerCollisionAvoidance="None"
                    ItemsSource="{StaticResource shapeWorldFileSource}"
                    ShapeStyle="{StaticResource CountriesShapeStyle}"
                    ShapeMemberPath="Points">
                    <ig:GeographicShapeSeries.ToolTip>
                        <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{Binding Path=XWM_Country, Source={StaticResource ModelStrings}}" FontWeight="Bold" Margin="2" />
                            <TextBlock Text="{Binding Path=Item.Fields[NAME]}" Margin="4,2,2,2" />
                        </StackPanel>
                    </ig:GeographicShapeSeries.ToolTip>
                </ig:GeographicShapeSeries>
                <!-- SymbolSeries for displaying locations of cities -->
                <ig:GeographicSymbolSeries 
                    Title="{Binding Path=XWM_CityLocations, Source={StaticResource ModelStrings}}"  
                    Legend="{Binding ElementName=Legend}"
                    MarkerType="Circle"
                    MarkerCollisionAvoidance="None"
                    ItemsSource="{StaticResource cities}"
                    LatitudeMemberPath="Latitude"
                    LongitudeMemberPath="Longitude">
                    <ig:GeographicSymbolSeries.ToolTip>
                        <StackPanel Margin="4" Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{Binding Path=XWM_City, Source={StaticResource ModelStrings}}" FontWeight="Bold" Margin="2" />
                            <TextBlock Text="{Binding Path=Item.Name}" Margin="4,2,2,2" />
                        </StackPanel>
                    </ig:GeographicSymbolSeries.ToolTip>
                </ig:GeographicSymbolSeries>
            </ig:XamGeographicMap.Series>
        </ig:XamGeographicMap>

        <!-- #BEGIN SNIPPET# -->
        <!-- ========================================================================== -->
        <ig:Legend x:Name="Legend" Content="{Binding Path=XWGM_MapLegend, Source={StaticResource MapStrings}}" 
                   LegendItemMouseEnter="OnLegendItemMouseEnter"
                   LegendItemMouseLeave="OnLegendItemMouseLeave"                   
                   Background="{StaticResource LegendBackgroundBrush}" BorderBrush="{StaticResource LegendBorderBrush}" 
                   HorizontalAlignment="Right" VerticalAlignment="Top"
                   BorderThickness="1"
                   ItemsFontSize="10" 
                   TitleFontSize="10"/>
        <!-- ========================================================================== -->
        <!-- #END SNIPPET# --> 
        
        <TextBlock x:Name="MapDataSource" Text="{Binding Path=XW_Source_USNA, Source={StaticResource CommonStrings}}" Style="{StaticResource SourceDataTextBoxStyle}"  />
        <Grid x:Name="MapLoadingContainer" Margin="0" Background="White" Canvas.ZIndex="1" Visibility="Collapsed" VerticalAlignment="Stretch">
            <Border Background="Transparent" Opacity="0.7" CornerRadius="3" />
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                <TextBlock x:Name="MapLoadingStatus" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Text="..." />
            </StackPanel>
        </Grid>
    </Grid>
</framework:SampleContainer>
