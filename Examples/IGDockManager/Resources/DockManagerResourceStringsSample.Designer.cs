//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IGDockManager.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DockManagerResourceStringsSample {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public DockManagerResourceStringsSample()
        {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IGDockManager.Resources.DockManagerResourceStringsSample", typeof(DockManagerResourceStringsSample).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Active Files.
        /// </summary>
        public static string ActiveFilesString {
            get {
                return ResourceManager.GetString("ActiveFilesString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Active Tool Windows.
        /// </summary>
        public static string ActiveToolWindowsString {
            get {
                return ResourceManager.GetString("ActiveToolWindowsString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Auto Hide.
        /// </summary>
        public static string AutoHideCommandString {
            get {
                return ResourceManager.GetString("AutoHideCommandString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Close All But This.
        /// </summary>
        public static string CloseAllButThisPaneMenuItem {
            get {
                return ResourceManager.GetString("CloseAllButThisPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Close All But This.
        /// </summary>
        public static string CloseAllButThisString {
            get {
                return ResourceManager.GetString("CloseAllButThisString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Close.
        /// </summary>
        public static string CloseButtonToolTip {
            get {
                return ResourceManager.GetString("CloseButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Close.
        /// </summary>
        public static string CloseCommandString {
            get {
                return ResourceManager.GetString("CloseCommandString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Close.
        /// </summary>
        public static string ClosePaneMenuItem {
            get {
                return ResourceManager.GetString("ClosePaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Close.
        /// </summary>
        public static string CloseString {
            get {
                return ResourceManager.GetString("CloseString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Dockable.
        /// </summary>
        public static string DockablePaneMenuItem {
            get {
                return ResourceManager.GetString("DockablePaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Dock as Tabbed Document.
        /// </summary>
        public static string DockAsTabbedDocumentString {
            get {
                return ResourceManager.GetString("DockAsTabbedDocumentString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Dock.
        /// </summary>
        public static string DockCommandString {
            get {
                return ResourceManager.GetString("DockCommandString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Active Files.
        /// </summary>
        public static string DocumentFilesMenuToolTip {
            get {
                return ResourceManager.GetString("DocumentFilesMenuToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Tabbed Document.
        /// </summary>
        public static string DocumentPaneMenuItem {
            get {
                return ResourceManager.GetString("DocumentPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Show Pane Navigator.
        /// </summary>
        public static string DocumentShowNavigatorToolTip {
            get {
                return ResourceManager.GetString("DocumentShowNavigatorToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Float.
        /// </summary>
        public static string FloatCommandString {
            get {
                return ResourceManager.GetString("FloatCommandString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Floating.
        /// </summary>
        public static string FloatingPaneMenuItem {
            get {
                return ResourceManager.GetString("FloatingPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Hide.
        /// </summary>
        public static string HideCommandString {
            get {
                return ResourceManager.GetString("HideCommandString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Hide.
        /// </summary>
        public static string HidePaneMenuItem {
            get {
                return ResourceManager.GetString("HidePaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Hue.
        /// </summary>
        public static string HueCaption {
            get {
                return ResourceManager.GetString("HueCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Ignore All.
        /// </summary>
        public static string IgnoreAllButtonString {
            get {
                return ResourceManager.GetString("IgnoreAllButtonString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Ignore.
        /// </summary>
        public static string IgnoreButtonString {
            get {
                return ResourceManager.GetString("IgnoreButtonString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] ActivationActionDelay cannot be less than zero..
        /// </summary>
        public static string LE_ActivationActionDelayLessThanZero {
            get {
                return ResourceManager.GetString("LE_ActivationActionDelayLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] ActivationInitialActionDelay cannot be less than zero..
        /// </summary>
        public static string LE_ActivationInitialActionDelayLessThanZero {
            get {
                return ResourceManager.GetString("LE_ActivationInitialActionDelayLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] A ButtonGroup can only be placed inside of a RibbonGroup..
        /// </summary>
        public static string LE_ButtonGroupOutsideOfGroupControl {
            get {
                return ResourceManager.GetString("LE_ButtonGroupOutsideOfGroupControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The &apos;InitialLocation&apos; cannot be changed once a SplitPane is associated with a &apos;XamDockManager&apos;..
        /// </summary>
        public static string LE_CannotChangeInitialLocation {
            get {
                return ResourceManager.GetString("LE_CannotChangeInitialLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Can&apos;t modify Groups of a XamOutlookBar that is bound to a GroupsSource.
        /// </summary>
        public static string LE_CannotModifyBoundGroups {
            get {
                return ResourceManager.GetString("LE_CannotModifyBoundGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]ContentPane &apos;{0}&apos; cannot be nested within another ContentPane (&apos;{1}&apos;)..
        /// </summary>
        public static string LE_CannotNestContentPanes {
            get {
                return ResourceManager.GetString("LE_CannotNestContentPanes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Operation cannot be performed..
        /// </summary>
        public static string LE_CannotPerformAutomationOperation {
            get {
                return ResourceManager.GetString("LE_CannotPerformAutomationOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Operation cannot be performed..
        /// </summary>
        public static string LE_CannotPerformAutomationOperation1 {
            get {
                return ResourceManager.GetString("LE_CannotPerformAutomationOperation1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] The Groups collection must be empty before using the GroupsSource.
        /// </summary>
        public static string LE_CannotSetGroupSource {
            get {
                return ResourceManager.GetString("LE_CannotSetGroupSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The specified element must be within a &apos;XamDockManager&apos;..
        /// </summary>
        public static string LE_ElementNotInDockManager {
            get {
                return ResourceManager.GetString("LE_ElementNotInDockManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] A GalleryTool already exists in this Menu, only one GalleryTool per menu is allowed..
        /// </summary>
        public static string LE_GalleryToolAlreadyExistInMenu {
            get {
                return ResourceManager.GetString("LE_GalleryToolAlreadyExistInMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] You cannot use a GalleryTool outside of a MenuTool..
        /// </summary>
        public static string LE_GalleryToolOutsideOfMenu {
            get {
                return ResourceManager.GetString("LE_GalleryToolOutsideOfMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Group with Id &apos;{0}&apos; already exists. Cannot add multiple group instances with the same Id..
        /// </summary>
        public static string LE_GroupRegisteredWithSameId {
            get {
                return ResourceManager.GetString("LE_GroupRegisteredWithSameId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The &apos;InitialLocation&apos; property is only intended for SplitPane instances in the Panes collection of the XamDockManager..
        /// </summary>
        public static string LE_InitialLocationForSplitOnly {
            get {
                return ResourceManager.GetString("LE_InitialLocationForSplitOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The group must be a &apos;SplitPane&apos; or &apos;TabGroupPane&apos;..
        /// </summary>
        public static string LE_InvalidAddToGroupElement {
            get {
                return ResourceManager.GetString("LE_InvalidAddToGroupElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The specified pane does not exist with the &apos;AllPanes&apos; collection..
        /// </summary>
        public static string LE_InvalidateNavigatorSelectedPane {
            get {
                return ResourceManager.GetString("LE_InvalidateNavigatorSelectedPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Only SplitPane instances can be added to the &apos;DocumentContentHost&apos;..
        /// </summary>
        public static string LE_InvalidDocumentContentHostChild {
            get {
                return ResourceManager.GetString("LE_InvalidDocumentContentHostChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]A SplitPane within the &apos;DocumentContentHost&apos; can only contain &apos;TabGroupPane&apos; and &apos;SplitPane&apos; instances..
        /// </summary>
        public static string LE_InvalidDocumentSplitPaneChild {
            get {
                return ResourceManager.GetString("LE_InvalidDocumentSplitPaneChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The pane must be a &apos;TabGroupPane&apos; or &apos;ContentPane&apos; instance..
        /// </summary>
        public static string LE_InvalidNewSplitPaneElement {
            get {
                return ResourceManager.GetString("LE_InvalidNewSplitPaneElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The specified pane is already within a &apos;TabGroupPane&apos;..
        /// </summary>
        public static string LE_InvalidNewTabGroupActionPane {
            get {
                return ResourceManager.GetString("LE_InvalidNewTabGroupActionPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]PaneToolWindow Content can only contain a SplitPane..
        /// </summary>
        public static string LE_InvalidPaneToolWindowContent {
            get {
                return ResourceManager.GetString("LE_InvalidPaneToolWindowContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]An invalid root element has been specified. The element must be a pane container such as a TabGroupPane or SplitPane..
        /// </summary>
        public static string LE_InvalidRootDragElement {
            get {
                return ResourceManager.GetString("LE_InvalidRootDragElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Invalid element type. Only &apos;ContentPane&apos;, &apos;TabGroupPane&apos;, &apos;ContentPanePlaceholder&apos; and &apos;SplitPane&apos; instances can be added to the collection..
        /// </summary>
        public static string LE_InvalidSplitPaneChild {
            get {
                return ResourceManager.GetString("LE_InvalidSplitPaneChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]A TabGroupPane can only contain &apos;ContentPane&apos; and &apos;ContentPanePlaceholder&apos; instances. If this occurs at design time it may be because the designer added 1 or more TabItem instances by default. To work around that issue, switch to the XAML view and remove the TabItems that were added and then return to the design surface..
        /// </summary>
        public static string LE_InvalidTabGroupPaneChild {
            get {
                return ResourceManager.GetString("LE_InvalidTabGroupPaneChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]A TabGroupPane can only contain &apos;ContentPane&apos; instances..
        /// </summary>
        public static string LE_InvalidUnpinnedTabAreaChild {
            get {
                return ResourceManager.GetString("LE_InvalidUnpinnedTabAreaChild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Object is not a Keytip.
        /// </summary>
        public static string LE_KeyTipArgumentException {
            get {
                return ResourceManager.GetString("LE_KeyTipArgumentException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Cannot load a layout while a layout is being loaded..
        /// </summary>
        public static string LE_LoadLayoutInProgress {
            get {
                return ResourceManager.GetString("LE_LoadLayoutInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Invalid pane location for ContentPane &apos;{0}&apos;..
        /// </summary>
        public static string LE_LoadLayoutInvalidPaneLocation {
            get {
                return ResourceManager.GetString("LE_LoadLayoutInvalidPaneLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Invalid layout file - root element must be &apos;{0}&apos;..
        /// </summary>
        public static string LE_LoadLayoutInvalidRootElement {
            get {
                return ResourceManager.GetString("LE_LoadLayoutInvalidRootElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]ContentPane must include Name attribute..
        /// </summary>
        public static string LE_LoadLayoutMissingName {
            get {
                return ResourceManager.GetString("LE_LoadLayoutMissingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The ContentPane &apos;{0}&apos; is supposed to be positioned within the DocumentContentHost but the XamDockManager does not have a DocumentContentHost..
        /// </summary>
        public static string LE_LoadLayoutNoDocumentContentHost {
            get {
                return ResourceManager.GetString("LE_LoadLayoutNoDocumentContentHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The ContentPane &apos;{0}&apos; is supposed to be positioned as &apos;{1}&apos; but information for that position was not in the layout..
        /// </summary>
        public static string LE_LoadLayoutPanePositionNotFound {
            get {
                return ResourceManager.GetString("LE_LoadLayoutPanePositionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Layout contains a reference to a ContentPane with name &apos;{0}&apos; that isn&apos;t defined in the ContentPanes section of the layout file..
        /// </summary>
        public static string LE_LoadLayoutUndefinedContentPane {
            get {
                return ResourceManager.GetString("LE_LoadLayoutUndefinedContentPane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]There are multiple &apos;{0}&apos; instances defined with a name of &apos;{1}&apos;..
        /// </summary>
        public static string LE_MultipleContainersWithSameName {
            get {
                return ResourceManager.GetString("LE_MultipleContainersWithSameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The &apos;Content&apos; property must be set to a &apos;DocumentContentHost&apos;..
        /// </summary>
        public static string LE_NeedDocumentContentHost {
            get {
                return ResourceManager.GetString("LE_NeedDocumentContentHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The NewPane for the InitializePaneContent event cannot have a logical or visual parent..
        /// </summary>
        public static string LE_NewPaneCannotHaveParent {
            get {
                return ResourceManager.GetString("LE_NewPaneCannotHaveParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]The ContentPane &apos;{0}&apos; has already been referenced in the loaded layout. This would happen if you provided an existing pane in the InitializePaneContent event..
        /// </summary>
        public static string LE_PaneAlreadyReferencedInLayout {
            get {
                return ResourceManager.GetString("LE_PaneAlreadyReferencedInLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]All panes being serialized must have a specific unique name..
        /// </summary>
        public static string LE_SaveLayoutPaneNameMissing {
            get {
                return ResourceManager.GetString("LE_SaveLayoutPaneNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Tool with Id &apos;{0}&apos; already exists. Cannot add multiple tool instances with the same Id..
        /// </summary>
        public static string LE_ToolRegisteredWithSameId {
            get {
                return ResourceManager.GetString("LE_ToolRegisteredWithSameId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]New Horizontal Tab Group.
        /// </summary>
        public static string MoveToNewHorizontalGroupPaneMenuItem {
            get {
                return ResourceManager.GetString("MoveToNewHorizontalGroupPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]New Vertical Tab Group.
        /// </summary>
        public static string MoveToNewVerticalGroupPaneMenuItem {
            get {
                return ResourceManager.GetString("MoveToNewVerticalGroupPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Move To Next Tab Group.
        /// </summary>
        public static string MoveToNextGroupPaneMenuItem {
            get {
                return ResourceManager.GetString("MoveToNextGroupPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Move to Next Tab Group.
        /// </summary>
        public static string MoveToNextTabGroupString {
            get {
                return ResourceManager.GetString("MoveToNextTabGroupString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Move To Previous Tab Group.
        /// </summary>
        public static string MoveToPreviousGroupPaneMenuItem {
            get {
                return ResourceManager.GetString("MoveToPreviousGroupPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Move to Previous Tab Group.
        /// </summary>
        public static string MoveToPreviousTabGroupString {
            get {
                return ResourceManager.GetString("MoveToPreviousTabGroupString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Navigation Pane Options....
        /// </summary>
        public static string NavigationAreaOptionsMenuItemHeader {
            get {
                return ResourceManager.GetString("NavigationAreaOptionsMenuItemHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Navigation Pane.
        /// </summary>
        public static string NavigationPaneMinimizedText {
            get {
                return ResourceManager.GetString("NavigationPaneMinimizedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Click to expand Navigation Pane.
        /// </summary>
        public static string NavigationPaneMinimizedTooltip {
            get {
                return ResourceManager.GetString("NavigationPaneMinimizedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Cancel.
        /// </summary>
        public static string NavigationPaneOptionsControlCancelButton {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlCancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Move Down.
        /// </summary>
        public static string NavigationPaneOptionsControlMoveDownButton {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlMoveDownButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Move Up.
        /// </summary>
        public static string NavigationPaneOptionsControlMoveUpButton {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlMoveUpButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] OK.
        /// </summary>
        public static string NavigationPaneOptionsControlOkButton {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlOkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Display buttons in this order.
        /// </summary>
        public static string NavigationPaneOptionsControlOrderLabel {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlOrderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Reset.
        /// </summary>
        public static string NavigationPaneOptionsControlResetButton {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsControlResetButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Navigation Pane Options.
        /// </summary>
        public static string NavigationPaneOptionsDialogTitle {
            get {
                return ResourceManager.GetString("NavigationPaneOptionsDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] New Horizontal Tab Group.
        /// </summary>
        public static string NewHorizontalTabGroupString {
            get {
                return ResourceManager.GetString("NewHorizontalTabGroupString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] New Vertical Tab Group.
        /// </summary>
        public static string NewVerticalTabGroupString {
            get {
                return ResourceManager.GetString("NewVerticalTabGroupString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable][Error: The Header of the ContentPane is set to an element. The Header is used as the default TabHeader and in the PaneNavigator. An element cannot be shown in multiple locations. Set the HeaderTemplate to the element that should be displayed in the pane caption and navigator and set the TabHeader or TabHeaderTemplate as needed.].
        /// </summary>
        public static string PaneHeaderContentValidationError {
            get {
                return ResourceManager.GetString("PaneHeaderContentValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Active Files.
        /// </summary>
        public static string PaneNavigatorActiveFilesLabel {
            get {
                return ResourceManager.GetString("PaneNavigatorActiveFilesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Active Tool Windows.
        /// </summary>
        public static string PaneNavigatorActiveToolWindowsLabel {
            get {
                return ResourceManager.GetString("PaneNavigatorActiveToolWindowsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Auto Hide.
        /// </summary>
        public static string PinButtonToolTip {
            get {
                return ResourceManager.GetString("PinButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Auto Hide.
        /// </summary>
        public static string PinPaneMenuItem {
            get {
                return ResourceManager.GetString("PinPaneMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localizable]Window Position.
        /// </summary>
        public static string PositionMenuToolTip {
            get {
                return ResourceManager.GetString("PositionMenuToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Localized] Window Position.
        /// </summary>
        public static string WindowPositionCommandString {
            get {
                return ResourceManager.GetString("WindowPositionCommandString", resourceCulture);
            }
        }
    }
}
