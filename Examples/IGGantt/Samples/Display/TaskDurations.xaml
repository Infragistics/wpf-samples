<framework:SampleContainer x:Class="IGGantt.Samples.Display.TaskDurations"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:framework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared" 
    xmlns:controls="clr-namespace:Infragistics.Samples.Shared.Controls;assembly=Infragistics.Samples.Shared" 
    xmlns:viewModels="clr-namespace:IGGantt.Samples.ViewModel"
    xmlns:res="clr-namespace:IGGantt.Resources"
    mc:Ignorable="d" 
    d:DesignHeight="500" d:DesignWidth="700"
    Title="Task Duration">

    <framework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                
                <ResourceDictionary Source="/IGGantt;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <res:GanttStrings x:Key="Strings" />
        </ResourceDictionary>
    </framework:SampleContainer.Resources>
    
    <Grid x:Name="LayoutRoot" Background="White">
        <!-- #BEGIN SNIPPET# -->
        <ig:XamGantt x:Name="xamGantt" Project="{Binding}">
            <!-- the mark-up below tunes the view of xamGantt. It changes display formats for timescale and changes the width of the columns. -->
            <ig:XamGantt.ViewSettings>
                <ig:ProjectViewSettings>
                    <ig:ProjectViewSettings.Timescale>
                        <ig:Timescale>
                            <ig:TimescaleBand Unit="Days" DisplayFormat="ddd MMM dd" UnitCount="1" />
                            <ig:TimescaleBand Unit="Hours" DisplayFormat="HH" UnitCount="3" />
                        </ig:Timescale>
                    </ig:ProjectViewSettings.Timescale>
                </ig:ProjectViewSettings>
            </ig:XamGantt.ViewSettings>
            <ig:XamGantt.ViewProvider>
                <ig:ListBackedProjectViewProvider>
                    <ig:ListBackedProjectViewProvider.ViewItemsSource>
                        <viewModels:ProjectViewCollection>
                            <ig:ProjectView Key="GanttChart" TableKey="Basic" />
                        </viewModels:ProjectViewCollection>
                    </ig:ListBackedProjectViewProvider.ViewItemsSource>
                    <ig:ListBackedProjectViewProvider.TableItemsSource>
                        <viewModels:ProjectTableCollection>
                            <ig:ProjectTable Key="Basic">
                                <ig:ProjectTable.Columns>
                                    <ig:ProjectColumn Key="Id" Width="20" />
                                    <ig:ProjectColumn Key="IsManual" Width="30" />
                                    <ig:ProjectColumn Key="TaskName" Width="70" />
                                    <ig:ProjectColumn Key="ManualDuration" Width="60" />
                                    <ig:ProjectColumn Key="ManualStart" Width="100" />
                                    <ig:ProjectColumn Key="ManualFinish" Width="100" />
                                    <ig:ProjectColumn Key="PredecessorsIdText" Width="50" />
                                </ig:ProjectTable.Columns>
                            </ig:ProjectTable>
                        </viewModels:ProjectTableCollection>
                    </ig:ListBackedProjectViewProvider.TableItemsSource>
                </ig:ListBackedProjectViewProvider>
            </ig:XamGantt.ViewProvider>

        </ig:XamGantt>
        <!-- #END SNIPPET# -->
        <controls:OptionsPanel Canvas.ZIndex="100"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               Margin="10"
                               HeaderText="{Binding Source={StaticResource Strings},Path=TaskDurations}">
            <!-- if you copy/paste the code, you can replace OptionsPanel with a standard container of your choice - StackPanel, Grid, WrapPanel, DockPanel for example. -->
            <!-- A minor adjustment in sample layout can be needed after this operation. -->
            <Grid>
                <Border>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width=".4*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!-- #BEGIN SNIPPET# -->
                        <TextBlock Text="{Binding Source={StaticResource Strings},Path=ChooseProjectLoaded}" Grid.Column="0" HorizontalAlignment="Right"
                                   VerticalAlignment="Top" TextWrapping="Wrap" FontWeight="Bold" />

                        <StackPanel Grid.Column="1" Margin="5,0" VerticalAlignment="Center">
                            <RadioButton GroupName="dur" Content="{Binding Source={StaticResource Strings},Path=NormalUnitsDurationSample}" 
                                         Tag="0" Checked="RadioButtonOnChecked" Margin="5,0" />
                            <RadioButton GroupName="dur" Content="{Binding Source={StaticResource Strings},Path=ElapsedUnitsDurationSample}" 
                                         Tag="1" Checked="RadioButtonOnChecked" Margin="5,3"/>
                            <RadioButton GroupName="dur" Content="{Binding Source={StaticResource Strings},Path=NormalAndElapsedUnitsDurationSample}" 
                                         Tag="2" IsChecked="True" Checked="RadioButtonOnChecked" Margin="5,0"/>
                        </StackPanel>
                        <!-- #END SNIPPET# -->
                    </Grid>
                </Border>
            </Grid>
        </controls:OptionsPanel>
    </Grid>
</framework:SampleContainer>
