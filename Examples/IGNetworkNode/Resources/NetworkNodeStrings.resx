<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AverageHourlyPostFrequency" xml:space="preserve">
    <value>avg. hourly post frequency</value>
  </data>
  <data name="CauseException" xml:space="preserve">
    <value>Cause Exception</value>
  </data>
  <data name="ConnectNodes" xml:space="preserve">
    <value>Connect Nodes</value>
  </data>
  <data name="DisconnectNodes" xml:space="preserve">
    <value>Disconnect Nodes</value>
  </data>
  <data name="DragOverANode" xml:space="preserve">
    <value>Drag Over a Node</value>
  </data>
  <data name="Events_Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Events_Loaded" xml:space="preserve">
    <value>Network Node Loaded.</value>
  </data>
  <data name="Events_NodeAttached" xml:space="preserve">
    <value>Node Attached: </value>
  </data>
  <data name="Events_NodeDetached" xml:space="preserve">
    <value>Node Detached.</value>
  </data>
  <data name="Events_RaisedEvents" xml:space="preserve">
    <value>Raised Events</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File:</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LoadData" xml:space="preserve">
    <value>Load Data</value>
  </data>
  <data name="NodeSelection_Extended" xml:space="preserve">
    <value>Extended</value>
  </data>
  <data name="NodeSelection_Multiple" xml:space="preserve">
    <value>Multiple</value>
  </data>
  <data name="NodeSelection_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NodeSelection_Single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Titles" xml:space="preserve">
    <value>Software Engineer;Application Developer;Systems Programmer;Visual Designer;Product Manager;Technology Evangelist</value>
  </data>
  <data name="Tooltips_Lat" xml:space="preserve">
    <value>Lat:</value>
  </data>
  <data name="Tooltips_Long" xml:space="preserve">
    <value>Long:</value>
  </data>
  <data name="UpdateLayoutString" xml:space="preserve">
    <value>Update Layout</value>
  </data>
  <data name="WorldLocation" xml:space="preserve">
    <value>world location</value>
  </data>
  <data name="XNN_AllowPan" xml:space="preserve">
    <value>Allow Pan</value>
  </data>
  <data name="XNN_AllowZoom" xml:space="preserve">
    <value>Allow Zoom</value>
  </data>
  <data name="XNN_ArrowKeys" xml:space="preserve">
    <value>Arrow Keys</value>
  </data>
  <data name="XNN_CannotGetFocus" xml:space="preserve">
    <value>Disabled node cannot be in focus</value>
  </data>
  <data name="XNN_Cannot_Remove_Node" xml:space="preserve">
    <value>Cannot remove a node that has connections to it</value>
  </data>
  <data name="XNN_ChildNodeNotFound" xml:space="preserve">
    <value>Some of the selected nodes have no children to Show/Hide</value>
  </data>
  <data name="XNN_ClearSelection" xml:space="preserve">
    <value>Clear Selection</value>
  </data>
  <data name="XNN_ClearStyle" xml:space="preserve">
    <value>Clear Style</value>
  </data>
  <data name="XNN_Ctrl_Key" xml:space="preserve">
    <value>Ctrl </value>
  </data>
  <data name="XNN_DesktopPC" xml:space="preserve">
    <value>Desktop PC</value>
  </data>
  <data name="XNN_EditState" xml:space="preserve">
    <value>Editing / NotEditing</value>
  </data>
  <data name="XNN_EnableExpansionIndicators" xml:space="preserve">
    <value>Enable Expansion Indicators</value>
  </data>
  <data name="XNN_EnableMultiNodeZooming" xml:space="preserve">
    <value>Enable Multi Node Zooming</value>
  </data>
  <data name="XNN_EnableSingleNodeZooming" xml:space="preserve">
    <value>Enable Single Node Zooming</value>
  </data>
  <data name="XNN_FocusState" xml:space="preserve">
    <value>Focused / Unfocused</value>
  </data>
  <data name="XNN_HistoryItem_Resumed" xml:space="preserve">
    <value>{0}: {1} resumed operation</value>
    <comment>Example: "{2012 06 06 17:28} {DeviceName} resumed operation"</comment>
  </data>
  <data name="XNN_HistoryItem_Stopped" xml:space="preserve">
    <value>{0}: {1} stopped working</value>
    <comment>Example: "{2012 06 06 17:28} {DeviceName} stopped working"</comment>
  </data>
  <data name="XNN_Laptop" xml:space="preserve">
    <value>Laptop</value>
  </data>
  <data name="XNN_LineCapSize" xml:space="preserve">
    <value>LineCap Size</value>
  </data>
  <data name="XNN_LineCapStyle" xml:space="preserve">
    <value>LineCap Style</value>
  </data>
  <data name="XNN_LineEndCap" xml:space="preserve">
    <value>LineEnd Cap</value>
  </data>
  <data name="XNN_LineEndCapStyle" xml:space="preserve">
    <value>LineEnd Cap Style</value>
  </data>
  <data name="XNN_LineStartCap" xml:space="preserve">
    <value>LineStart Cap</value>
  </data>
  <data name="XNN_LineStartCapStyle" xml:space="preserve">
    <value>LineStart Cap Style</value>
  </data>
  <data name="XNN_MaximumZoomLevel" xml:space="preserve">
    <value>Maximum Zoom Level</value>
  </data>
  <data name="XNN_MinimumZoomLevel" xml:space="preserve">
    <value>Minimum Zoom Level</value>
  </data>
  <data name="XNN_MouseWheel" xml:space="preserve">
    <value>Mouse Wheel</value>
  </data>
  <data name="XNN_Msg_ForEntringCharacters" xml:space="preserve">
    <value>Please enter starting charactes of a node for zooming</value>
  </data>
  <data name="XNN_Msg_ForSelectingNodes" xml:space="preserve">
    <value>Please select one or more nodes for zooming</value>
  </data>
  <data name="XNN_Msg_NodeNotFound" xml:space="preserve">
    <value>Node does not exist</value>
  </data>
  <data name="XNN_NavigationSettings" xml:space="preserve">
    <value>Navigation Settings</value>
  </data>
  <data name="XNN_NormalState" xml:space="preserve">
    <value>Disabled / Normal</value>
  </data>
  <data name="XNN_OPDP_Horizontal" xml:space="preserve">
    <value>Horizontal Alignment</value>
  </data>
  <data name="XNN_OPDP_Settings" xml:space="preserve">
    <value>Overview Plus Detail Pane Settings</value>
  </data>
  <data name="XNN_OPDP_Vertical" xml:space="preserve">
    <value>Vertical Alignment</value>
  </data>
  <data name="XNN_OPDP_Visibility" xml:space="preserve">
    <value>Overview Plus Detail Pane Visibility</value>
  </data>
  <data name="XNN_Pan" xml:space="preserve">
    <value>Pan</value>
  </data>
  <data name="XNN_Pause_Updates" xml:space="preserve">
    <value>Pause Updates</value>
  </data>
  <data name="XNN_Printer" xml:space="preserve">
    <value>Printer</value>
  </data>
  <data name="XNN_RemoveNodeFromSource" xml:space="preserve">
    <value>Remove Node From Source</value>
  </data>
  <data name="XNN_RemoveNodeFromView" xml:space="preserve">
    <value>Remove Node From View</value>
  </data>
  <data name="XNN_RestoreNodeIntoView" xml:space="preserve">
    <value>Restore Node Into View</value>
  </data>
  <data name="XNN_Resume_Updates" xml:space="preserve">
    <value>Resume Updates</value>
  </data>
  <data name="XNN_Router" xml:space="preserve">
    <value>Router</value>
  </data>
  <data name="XNN_ScaleToFit" xml:space="preserve">
    <value>Scale To Fit</value>
  </data>
  <data name="XNN_SearchNode" xml:space="preserve">
    <value>Search Node</value>
  </data>
  <data name="XNN_SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="XNN_SelectNode" xml:space="preserve">
    <value>Please select one or more nodes to Show/Hide</value>
  </data>
  <data name="XNN_SelectState" xml:space="preserve">
    <value>Selected / Unselected</value>
  </data>
  <data name="XNN_Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="XNN_Set_EditingAll" xml:space="preserve">
    <value>Set Editing All</value>
  </data>
  <data name="XNN_ShowHide" xml:space="preserve">
    <value>Show / Hide Nodes</value>
  </data>
  <data name="XNN_Switch" xml:space="preserve">
    <value>Switch</value>
  </data>
  <data name="XNN_WAN" xml:space="preserve">
    <value>WAN</value>
  </data>
  <data name="XNN_WirelessRouter" xml:space="preserve">
    <value>Wireless Router</value>
  </data>
  <data name="XNN_ZoomIn" xml:space="preserve">
    <value>Zoom In</value>
  </data>
  <data name="XNN_ZoomInOut" xml:space="preserve">
    <value>Zoom In / Out</value>
  </data>
  <data name="XNN_ZoomLevel" xml:space="preserve">
    <value>Zoom Level</value>
  </data>
  <data name="XNN_ZoomOut" xml:space="preserve">
    <value>Zoom Out</value>
  </data>
  <data name="XNN_ZoomSelection" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="XNN_ZoomTo100" xml:space="preserve">
    <value>Zoom To 100%</value>
  </data>
  <data name="XNN_ZoomToSpecificNode" xml:space="preserve">
    <value>Enter Starting Character to Zoom</value>
  </data>
</root>