<igFramework:SampleContainer x:Class="IGDataGrid.Samples.Style.Theming"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d"
      d:DesignHeight="500" d:DesignWidth="700"
      Title="Theming"
      xmlns:controls="clr-namespace:Infragistics.Samples.Shared.Controls;assembly=Infragistics.Samples.Shared"
      xmlns:igDP="http://infragistics.com/DataPresenter"
      xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared"
      xmlns:igThemes="http://infragistics.com/Themes"
      xmlns:res="clr-namespace:IGDataGrid.Resources"
      xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <igFramework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/IGDataGrid;component/Assets/Global.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <res:DataGridStrings x:Key="Strings" />
        </ResourceDictionary>
    </igFramework:SampleContainer.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions> 
        <Grid.Resources>
            <XmlDataProvider x:Key="QuarterbackData" /> 
        </Grid.Resources>

        <!-- #BEGIN SNIPPET# -->
        <!--
        Using Theming technology, StylePacks are registered with
        the application.  Once they are registered (see comments in the
        'code behind' file), developers can simply set the theme they want
        to apply by using the XamDataGrid, XamDataCarousel or
        XamDataPresenter Theme property.

        Note: the DataPresenter assembly also comes with several preloaded themes.
        -->
        <igDP:XamDataGrid Grid.Row="1"
                          x:Name="DataGrid"
                          DataSource="{Binding Source={StaticResource QuarterbackData}, XPath=season}"
                          IsGroupByAreaExpanded="False">
            <!-- #END SNIPPET# -->

            <!--
            Using the properties of the Field object, you can define custom
            header labels and also control the visibility of Fields within a
            FieldLayout
            -->

            <igDP:XamDataGrid.FieldLayoutSettings>
                <igDP:FieldLayoutSettings HeaderPrefixAreaDisplayMode="FieldChooserButton" AutoGenerateFields="False" />
            </igDP:XamDataGrid.FieldLayoutSettings>

            <igDP:XamDataGrid.FieldLayouts>
                <igDP:FieldLayout>
                    <igDP:FieldLayout.Fields>
                        <!--
                        NOTE: Most of these fields have their EditAsType set because the data source is XML.
                        The XamDataGrid treats XML data as strings unless you specify otherwise.
                        -->
                        <igDP:Field Name="comp"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Completions}">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type sys:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="pct"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Passing}">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type sys:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="qbrate"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Rating}">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type sys:Double}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="rushs"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Rushes}">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type sys:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                        <igDP:Field Name="team"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Team}" />
                        <igDP:Field Name="year"
                                    Label="{Binding Source={StaticResource Strings}, Path=CondForm_Year}">
                            <igDP:Field.Settings>
                                <igDP:FieldSettings EditAsType="{x:Type sys:Int32}" />
                            </igDP:Field.Settings>
                        </igDP:Field>
                    </igDP:FieldLayout.Fields>
                </igDP:FieldLayout>
            </igDP:XamDataGrid.FieldLayouts>
        </igDP:XamDataGrid>
                
        <!-- #BEGIN SNIPPET# -->
        <!-- ================================================================================================== -->
        <!-- Note theme are changed in code-behind -->
        <controls:ThemeSelector x:Name="ThemeSelector" 
                                HorizontalAlignment="Right"
                                SelectionChanged="OnSelectionChanged"/>
        <!-- ================================================================================================== -->
        <!-- #END SNIPPET# -->
    </Grid>
</igFramework:SampleContainer>
