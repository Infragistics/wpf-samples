<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DragDropFramework_Welcome_Paragraph1" xml:space="preserve">
    <value>Drag and Drop Framework は、コントロールとのインタラクティブな操作を可能にします。ユーザーはユーザー インターフェイス上の要素を直感的にドラッグ アンド ドロップできます。</value>
  </data>
  <data name="Excel_Welcome_Paragraph1" xml:space="preserve">
    <value>Infragistics Excel Engine™ によって、Workbook、Worksheet、Cell、Formula など人気の Microsoft® Excel® スプレッドシート オブジェクトを使用してスプレッドシート データで作業をすることができます。</value>
  </data>
  <data name="Math_Welcome_Paragraph1" xml:space="preserve">
    <value>Math ライブラリは複数の数学演算を実行するコア関数を提供します。数学演算は早くて、正確で、効率的にメモリを使用します。データ構造を複数形式に変換せずに数学演算を実行するアプリケーションを作成できます。数字メソッドを使用し、コンパートメント モデルを作成、Monte Carlo シミュレーションを実行し、回帰問題を解決します。</value>
  </data>
  <data name="Calendar_Welcome_Paragraph1" xml:space="preserve">
    <value>xamCalendar コントロールを使ってアプリケーションにカレンダー サポートを追加します。サンプルでは、コントロールのレイアウトやスタイリングを完全カスタマイズする方法を示します。簡単なプロパティ設定から高度なスタイル設定やテンプレートの変更を紹介します。</value>
  </data>
  <data name="CarouselListBox_Welcome_Paragraph1" xml:space="preserve">
    <value>バインド データのサポートを追加することによって、xamCarouselListboxは xamCarouselPanel が終わった場所を取得します。xamCarouselListbox の使用方法はインボックス Listbox と同じですが、xamCarouselListbox のビジュアルエフェクトははるかに説得力あります。</value>
  </data>
  <data name="CarouselListBox_Welcome_Paragraph2" xml:space="preserve">
    <value>このセクションでは、チュートリアル形式でサンプルを紹介します。コントロールのさまざまな設定を構成し、XMLDataSource をバインドして、xamCarouselListBox の項目の外観を効率よくカスタマイズします。</value>
  </data>
  <data name="CarouselPanel_Welcome_Paragraph1" xml:space="preserve">
    <value>xamCarouselPanel では Carousel の一連のコントロールを使用できます。WPF の他のパネル (グリッド、キャンバス、スタックパネル) 同様、このパネルは項目を取得し、その項目を自動的に配置します。</value>
  </data>
  <data name="CarouselPanel_Welcome_Paragraph2" xml:space="preserve">
    <value>このサンプルでは、xamCarouselPanel の ViewSettings プロパティを使用してさまざまなビジュアリゼーションの方法をご紹介します。コントロールの ViewSettings プロパティのあとは、データバインドされた xamCarouselListBox をご紹介します。</value>
  </data>
  <data name="ColorPicker_Welcome_Paragraph1" xml:space="preserve">
    <value>xamColorPicker コントロールは、定義済みの色パレットからユーザーが色を選択できるエディターです。コントロールはドロップタウン コンテナーにパレットを公開し、定義済みのパレットのセットを含みます。また、パレットのカスタム セットを定義することもできます。xamColorPicker コントロールによって返された値は、選択された色です。</value>
  </data>
  <data name="DataCards_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDataCards コントロールでは、Microsoft® Outlook 2007 の連絡先のようなカードを使用してフラット データを表示できます。</value>
  </data>
  <data name="DataCarousel_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDataCarousel は、xamCarouselPanel の豊かなレイアウトの機能と xamDataGrid のパワフルなデータ機能が組み合わされています。xamCarouselListBox では、データ構造の表示がフラットに限定されていますが、xamDataCarousel では階層形式でのデータの表示が可能となります。</value>
  </data>
  <data name="DataCarousel_Welcome_Paragraph2" xml:space="preserve">
    <value>xamCarouselPanel と xamDataGrid サンプルが組み合わされています。レイアウトやデータの表示方法を他のコントロールから取得して、xamDataCarousel に適用する方法をご紹介します。</value>
  </data>
  <data name="DataGrid_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDataGrid は、レポート、テーブル、プロダクト リストなどの作成が簡単で、さまざまな用途に使用できるパワフルなプレゼンテーション コントロールです。</value>
  </data>
  <data name="DataGrid_Welcome_Paragraph2" xml:space="preserve">
    <value>このサンプルでは、データ バインド、階層データのレンダリング、フィールドの並べ替え、グループ化、サイズの変更、スタイリング、そしてレイアウト機能など、便利な機能を多数ご紹介します。また、このコントロールは、WPF スタイリング アーキテクチャーを採用しているため、外観のコントロールが可能となります。</value>
  </data>
  <data name="DataTree_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDataTree コントロールは、高いパフォーマンスを提供し、データ バインドされるツリーのシナリオを重視したコントロールです。このコントロールは、N レベルの深さのデータ構造にバインドされるツリーを作成するプロセスを簡素化します。また、XAML で提供されるノード表示で柔軟性を保ちながら、ノード階層を作成するプロセスも自動化します。</value>
  </data>
  <data name="DialogWindow_Welcome_Paragraph1" xml:space="preserve">
    <value>従来の標準 Windows Forms ダイアログ ウィンドウを再現するようデザインされています。この xamDialogWindow™ によってモーダル ダイアログ ウィンドウと非モーダル ダイアログ ウィンドウの両方をアプリケーションで簡単にポップアップ表示できます。プログラミング可能なダイアログ動作 (最小化、最大化、閉じる、復元、有効化) と組み合わされた柔軟性のある XAML テンプレートやスタイリング機能では、ダイアログ ウィンドウやマルチ ドキュメント インターフェイス (MDI) パターンをアプリケーション に簡単に追加できます。</value>
  </data>
  <data name="Diagram_Welcome_Paragraph_1" xml:space="preserve">
    <value>WPF xamDiagram は、Visio などのダイアグラム ツールの機能を持つダイアグラムを作成できます。xamDiagram を使用すると、シンプルなフロー チャート、アクティビティ図、複雑な LinqToSQL 関係ダイアグラムなどを簡単に作成できます。</value>
  </data>
  <data name="DockManager_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDockManager は、高度な柔軟性をアプリケーション レイアウトに提供します。 Visual Studio のルック アンド フィールの再現、また xamRibbon の横に xamDockManager を使用してドック可能なアプリケーションの作成が可能です。更に Office 2007 のテーマを使用して、統一性のあるアプリケーション UI の作成も簡単に実現することができます。</value>
  </data>
  <data name="Editors_Welcome_Paragraph1" xml:space="preserve">
    <value>xamEditors は、入力時でのデータ検証、書式設定された値の入力、直感的な UI、外観をカスタマイズが可能なカスタム スタイル/テンプレートをサポートします。最新エディター コントロール、xamEditors を使用することによって、データ入力時のユーザー エクスペリエンスを飛躍的に向上できます。</value>
  </data>
  <data name="Editors_Welcome_Paragraph2" xml:space="preserve">
    <value>サンプルでは、スタンドアロン シナリオのエディター コントロール機能により、エディターに集中でるので、コントロール統合の手間が省くことができます。このエディター コントロールと Infragistics WPF の他のコントロールの統合方法については、Infragistics WPF ヘルプをご覧ください。</value>
  </data>
  <data name="FormulaEditor_Welcome_Paragraph_1" xml:space="preserve">
    <value>エンド ユーザーが数式を自由に編集できるインターフェイスを提供します。ボタンをクリックして FormulaEditorDialog を表示することも可能です。FormulaEditorDialog は、数式編集エクスペリエンスを提供し、数式の修正必要箇所にユーザーを導くことができるオペランド、関数リスト、演算子、また、一般的に使用される挿入ボタン、構文エラー機能など、補助機能を拡張しています。</value>
  </data>
  <data name="Grid_Welcome_Paragraph1" xml:space="preserve">
    <value>弊社のデータ グリッドは、標準の業務シナリオにおいて、他者のグリッド比べより速く処理することが可能です。高機能な階層データ グリッド コントロールは、一度バインドするだけで数千行の編集が可能となります。高度な UI ビジュアライゼーションと共にユーザーに最速のパフォーマンスと応答を提供します。レコード間のマスター/詳細の関係を展開形式での表示、列移動、グループ化、行フィルター、並べ替えなど、必要な機能がすべて含まれています。</value>
  </data>
  <data name="Inputs_Welcome_Paragraph1" xml:space="preserve">
    <value>xamInput コントロールは、入力時データの検証、書式設定付き値の入力、ユーザーへの情報提供、外観カスタマイズなど、データ入力時の UX を向上させる入力支援コントロールです。</value>
  </data>
  <data name="Menu_Welcome_Paragraph1" xml:space="preserve">
    <value>WPF の xamMenu™ コントロールでは、ポップアップ、ドロップダウン、階層化が可能なマルチレベルのメニューを作成できます。サブメニューは、アニメーション化したスライド式でスムーズに開閉できます。コマンドやオプションはデータバインドが可能で、水平/垂直メニューとして表示できます。カスタマイズ可能なメニュー項目には、写真、チェックボックスなどを使用できます。また、クリックまたはコマンドによってポップ アップするコンテキスト メニューを配置できます。</value>
  </data>
  <data name="PersistenceFramework_Welcome_Paragraph1" xml:space="preserve">
    <value>インフラジスティクスの Control Persistence Framework は、任意の依存関係オブジェクトのコントロール設定を保持できます。設定をデータベースまたは外部ファイルへ保存/読み込みが可能です。このフレームワークは、設定およびレイアウトを簡単に保存できます。例えば、グリッド列の固定状態など詳細な設定を保存して、アプリケーションで再び実行、あるいは読み込むことが可能です。</value>
  </data>
  <data name="MultiColumnComboEditor_Welcome_Paragraph1" xml:space="preserve">
    <value>xamMultiColumnComboEditor コントロールはグリッドのように機能します。コントロールの ItemsSource プロパティに設定された IEnumerable に含まれるデータ オブジェクトのすべてのプロパティの列を自動的に生成することができます。コントロールの AutoGenerateColumns プロパティ (デフォルトは true) は、この動作を制御します。</value>
  </data>
  <data name="MonthCalendar_Welcome_Paragraph1" xml:space="preserve">
    <value>xamMonthCalendar コントロールは、アプリケーションにカレンダーを追加します。サンプルでは、コントロールのレイアウトやスタイリングをカスタマイズする方法をご紹介します。簡単なプロパティ設定から高度なスタイリングやテンプレートの変更まで、xamMonthCalendar コントロールで実現できるさまざまな機能をご覧ください。</value>
  </data>
  <data name="OutlookBar_Welcome_Paragraph1" xml:space="preserve">
    <value>xamOutlookBar は、Outlook スタイルのナビゲーションを WPF アプリケーションに追加できます。このサンプルでは、xamOutlookBar の作成方法やランタイムでコントロールとインタラクションする方法をご紹介します。テーマやカスタム スタイルのセクションで、アプリケーションに合ったコントロールのルック アンド フィールをカスタマイズする方法もご覧いただけます。</value>
  </data>
  <data name="ResourceWasher_Welcome_Paragraph1" xml:space="preserve">
    <value>リソース ウォッシングを使用して、既存の ResourceDictionary 内のリソースのグループ (WashGroups) に色 (WashColor) を設定し、アプリケーションのコントロールの色を更新できます。</value>
  </data>
  <data name="Ribbon_Welcome_Paragraph1" xml:space="preserve">
    <value>xamRibbon コントロールは、Microsoft Office アプリケーションのルック アンド フィールを簡単に再現できます。さまざまな xamRibbon 機能については、各サンプルをご覧ください。基本機能を追加する方法、インタラクションを追加する方法は、XAML をご確認ください。</value>
  </data>
  <data name="Reporting_Welcome_Paragraph1" xml:space="preserve">
    <value>WPF のレポート エンジンは、プリンターへの送信, XPS ドキュメントを簡単に作成できます。アプリケーションでの XamDataGrid や視覚要素の印刷が可能です。また簡単なドキュメントの作成からテンプレートの使用やカスタマイズまで、すべて WPF のレポート エンジンで簡単にできます。</value>
  </data>
  <data name="Schedule_Welcome_Paragraph1" xml:space="preserve">
    <value>xamScheduleDataManager にはビューに加え、リソース、予定表、アクティビティなど、さまざまなアイテムが含まれます。</value>
  </data>
  <data name="Slider_Welcome_Paragraph1" xml:space="preserve">
    <value>xamSlider™ コントロールは、ユーザーに快適な編集エクスペリエンスを提供します。ベーシックなスライダーから複数のつまみを使用したスライダー、日付や数値、基本クラスから特定のデータ型まで、xamSlider はスライダー機能が多数含まれます。テンプレート サポートなど、機能豊かなスライダーをアプリケーションで実現できます。</value>
  </data>
  <data name="SpellChecker_Welcome_Paragraph1" xml:space="preserve">
    <value>インフラジスティックス スペルチェッカーでは、スペルミスをすばやく検出します。xamWebSpellChecker™ は、多数の言語に対応しており、複数言語をサポートするアプリケーションでご使用いただけます。xamSpellChecker™ のダイアログはカスタマイズが可能で、スペル修正候補を表示するユーザー インターフェイスを簡単に作成できます。</value>
  </data>
  <data name="Word_Welcome_Paragraph1" xml:space="preserve">
    <value>Infragistics Word Engine™ では、段階、フォント、ヘッダー、フッター、画像などの Microsoft® Word® オブジェクトを使用することによって文書データを処理することができます。</value>
  </data>
  <data name="TabControl_Welcome_Paragraph1" xml:space="preserve">
    <value>xamTabControl は、受信トレイの TabControl で使用しない領域を取得するために、各タブやタブのストリップに閉じるボタンを追加することが可能です。前後のタブ コンテンツを指定して、さまざまな種類のタブ インターフェイスを最新のルック アンド フィールを使って柔軟に表現できます。Infragistics WPF の他のすべてのコントロール同様、簡単に多様なルック アンド フィールが実現できる数多くのテーマが含まれています。</value>
  </data>
  <data name="TagCloud_Welcome_Paragraph1" xml:space="preserve">
    <value>xamTagCloud™ では、キー ワードまたはフレーズ （「タグ」） を選択し、重要性や頻度でウェイトし、タグ クラウド コントロールを使用して表示します。重要度に応じてより大きいサイズのフォントをタグに適用することによっり、情報を視覚的に表示できます。これによって xamTagCloud では、ユーザーに人気のあるタグを一目で分かるように表示することができます。</value>
  </data>
  <data name="BarcodeReader_Welcome_Paragraph_1" xml:space="preserve">
    <value>QR、EAN/UPC、Code 39、Code 128、Maxi Code、Interleaved 2 of 5 などの記号のバーコードをデコードします。</value>
  </data>
  <data name="Barcode_Welcome_Paragraph_1" xml:space="preserve">
    <value>データをすばやく正確に識別するバーコード画像をコントロールで作成します。多数の標準バーコード記号が提供されます。</value>
  </data>
  <data name="ComboEditor_Welcome_Paragraph1" xml:space="preserve">
    <value>アプリケーション インターフェイスに複数項目の選択機能を追加する場合、xamComboEditor をお勧めします。仮想化されているフラット データにバインドされているドロップダウンです。単一または複数選択機能に対応し、項目が多い場合も高いパフォーマンスを実現します。</value>
  </data>
  <data name="PieChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamPieChart では、簡易または分割円チャートを作成できます。「その他」のカテゴリを含むカスタマイズ可能なしきい値、および重複しないよう円の内側または外側に表示できるテキスト ラベルと画像を使用できます。基本データを表示するには、スライスをクリックまたはドリルダウンします。あるいは、円チャートのセクションを切り離してツールチップを表示できます。</value>
  </data>
  <data name="BulletGraph_Welcome_Paragraph1" xml:space="preserve">
    <value>シンプルで正確な KPI (キーパフォーマンスインジケーター) を作成します。目標に対する複数の測定結果を簡単に比較できます。</value>
  </data>
  <data name="CalculationManager_Welcome_Paragraph_1" xml:space="preserve">
    <value>すべての数式を管理し、ソースから値を取得して数式のターゲットに値を設定します。xamCalculationManager の定義済み関数は Excel 機能をエミュレートし 、開発でカスタム関数を登録することも可能です。</value>
  </data>
  <data name="ContextMenu_Welcome_Paragraph1" xml:space="preserve">
    <value>アプリケーションでコンテキスト依存メニューをカスケード形式で表示することができます。メニューの位置、配置、外観などのカスタマイズも可能です。</value>
  </data>
  <data name="DataChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>データ チャート コントロールは数百万のデータ ポイントを表示、わずか数ミリ秒で更新することが可能なチャートです。インフラジスティックスの他のコントロール同様、大量なデータを高速に処理することが可能です。また、同じチャートに複数のチャート エリアを使用し、統計データやテクニカル指標を描画することが可能となります。高パフォーマンスなデータ視覚化を実現するには、データ チャートをお勧めします。</value>
  </data>
  <data name="DataPresenter_Welcome_Paragraph1" xml:space="preserve">
    <value>xamDataPresenter コントロールは、データをカスタマイズ可能なビューで表示します。単一のコントロールでグリッド、カルーセル、カード ビュー、カスタム ビューを提供します。</value>
  </data>
  <data name="FunnelChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>ファンネル チャートは、ファンネル図形の単一シリーズでデータを表示するチャートです。セクションを複数含むことが可能で、データ全体に対する割合が一目で分かります。通常、100% を一番上に表示し、下へ行くに従って割合が低くなっていきます。</value>
  </data>
  <data name="TileManager_Welcome_Paragraph1" xml:space="preserve">
    <value>xamTileManager は、ユーザーによるタイトルの移動とサイズ変更が可能です。ランタイム時に状態を変更できる機能によって、レイアウトを完全にカスタマイズすることができます。セッション間にカスタム レイアウトが保存および読み込まれるため、ユーザーがアプリケーションを再起動するたびに xamTileManager のレイアウトの設定をする必要はありません。</value>
  </data>
  <data name="Gauge_Welcome_Paragraph_1" xml:space="preserve">
    <value>アプリケーション ダッシュボードなどにデジタル ゲージを使用し、デジタル文字または数字を表示できます。</value>
  </data>
  <data name="GeographicMap_Welcome_Paragraph_1" xml:space="preserve">
    <value>詳細な地理マップを作成できます。カスタム図形テンプレート、ポリラインおよびポリ図形の描画、マップの移動、散布図エリア プロット、概要ペインなどの機能を提供します。xamGeographicMap を使用すると、Bing Maps、OpenStreetMap などのマップにズーム機能を提供します。</value>
  </data>
  <data name="Map_Welcome_Paragraph_1" xml:space="preserve">
    <value>マップはビジネス インテリジェンス ソリューションを実現します。リッチな機能とスタイル設定が簡単なマップ コントロールです。xamMap でシェープファイル形式を使用すると、地理マップ、座席表、フロア プランなどを描画することができます。また、Bing Maps、OpenStreetMap などのマップにズーム機能を提供します。</value>
  </data>
  <data name="NetworkNode_Welcome_Paragraph1" xml:space="preserve">
    <value>ネットワークの関係を視覚化 - 生物系システム、サーバー インフラストラクチャー、メール コミュニケーション パターン、複雑なソーシャルネットワークやビジネス ネットワークなどを効果的に視覚化でいます。xamNetworkNode は Load Graph Modeling Language (GML) ファイルからデータを読み込みます。</value>
  </data>
  <data name="OrgChart_Welcome_Paragraph1" xml:space="preserve">
    <value>組織、部門、グループなどの階層構造をスタイルのカスタマイズが可能な組織図で表示することができます。</value>
  </data>
  <data name="PivotGrid_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamPivotGrid は、ユーザーによる OLAP キューブやデータ ウェアハウスの多次元データのスライス、ダイス、フィルターが可能です。xamPivotGrid の最新バージョンでは、パフォーマンスと使いやすさが向上しています。</value>
  </data>
  <data name="Sparkline_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamSparkline コントロールは、データのトレンド、変更、パターンをチャートでコンパクトに表示します。</value>
  </data>
  <data name="Timeline_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamTimeline™ は、ビジネス プロセス、ワークフロー、プロジェクト マイルストーンなど、さまざまなイベントを時系列に表示し、効果的に視覚化します。</value>
  </data>
  <data name="Treemap_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamTreemap™ (金融業界では「ヒートマップ」と呼ばれています) はドリルダウンせずに階層形式によるデータ関係の相対的なウェイト表示が可能です。色で違いを表示します: グループベースの機能またはスケールベースのグラデーション機能を提供します。</value>
  </data>
  <data name="Zoombar_Welcome_Paragraph_1" xml:space="preserve">
    <value>アプリケーションのチャートやタイムラインに xamZoombar™ を組み込むことが可能で、データのパンニング、ズームイン、ズームアウト機能をユーザーに提供します。データの範囲を動的に拡大/縮小およびスクロールすることができます。</value>
  </data>
  <data name="SyntaxEditor_Welcome_Paragraph1" xml:space="preserve">
    <value>xamSyntaxEditor は、Microsoft Visual Studio のコード エディターのようなコード編集エクスペリエンスを提供するテキスト編集コントロールです。新しい構文解析エンジンで作成されました。言語固有の文法ルールを設定すると、言語の部分を表示し、テキストが構文ルールに合わせない場合にエラー情報を表示します。</value>
  </data>
  <data name="UndoRedo_Welcome_Paragraph_1" xml:space="preserve">
    <value>Infragistics Undo/Redo Framework™ はアプリケーションで元に戻す/やり直し機能を提供します。フレームワーク API を使用すると、エンド ユーザー操作のリニア複数レベルの元に戻す/やり直すを実装できます。
フレームワークは操作の履歴を保存し、元に戻す/やり直す操作を実行し、複数の操作を 1 つの履歴項目に結合することが可能です。UI で元に戻す/やり直す操作を実行するには、コマンドを提供します。</value>
  </data>
  <data name="Gantt_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamGantt コントロールはプロジェクト タスク、関係、依存関係を視覚化します。Microsoft Project 2010 のようなユーザー インターフェイスを提供するコントロールです。プロジェクト計画を作成し、製品管理を処理し、プロジェクトの進行状況を表示します。</value>
  </data>
  <data name="SyntaxParsing_Welcome_Paragraph1" xml:space="preserve">
    <value>構文解析エンジンはスタンドアロンまたは xamSyntaxEditor エディター コントロールと共に使用可能なテキスト解析エンジンです。構文解析エンジンは EBNF 言語を取得し、言語のトークン、キーワード、コンストラクトに解析します。</value>
  </data>
  <data name="DoughnutChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>このドーナツ型チャートを使用すると、データを複数のシリーズに表示できます。円チャートのように、ドーナツ型チャートはカテゴリ データをパーセンテージとして表示します。センターが中空の場合、各リングがデータ シリーズを表す同心リングを使用して複数のシリーズを表示するために使用されています。データにバインドして内部の半径を構成します。次に、展開されたスライスを表示してテーマをカスタマイズできます。</value>
  </data>
  <data name="RadialGauge_Welcome_Paragraph_1" xml:space="preserve">
    <value>XamRadialGauge はパワフルなゲージ コントロールです。ページにドロップするだけで、デフォルトのルック アンド フィールが適用されます。構成オプションを変更すると、外観をカスタマイズできます。</value>
  </data>
  <data name="RichTextEditor_Welcome_Paragraph1" xml:space="preserve">
    <value>XamRichTextEditor はカスタマイズ可能なリッチ テキスト編集コントロールです。Microsoft Word のような機能および動作を提供します。XamRichTextEditor は WPF および Silverlight プラットフォームで提供されます。API は両方のプラットフォームで同じなため、リッチ テキスト編集の機能をクロス プラットフォーム アプリケーションに追加できます。</value>
  </data>
  <data name="LinearGauge_Welcome_Paragraph_1" xml:space="preserve">
    <value>XamLinearGauge はパワフルなゲージ コントロールです。ページにドロップするだけで、デフォルトのルック アンド フィールが適用されます。構成オプションを変更すると、外観をカスタマイズできます。</value>
  </data>
  <data name="RadialMenu_Welcome_Paragraph1" xml:space="preserve">
    <value>xamRadialMenu は、Microsoft OneNote ラジアル メニュー スタイルのツールおよび機能を提供します。ドロップダウンのネストされた階層の代わりに円形のメニューを提供します。コンテキスト メニューとして使用できます。xamRadialMenu で関連するサブメニュー項目にドリルダウン、その後メイン レベルのメニュー項目に戻る機能も提供されます。</value>
  </data>
  <data name="PropertyGrid_Welcome_Paragraph1" xml:space="preserve">
    <value>xamPropertyGrid コントロールでは単一のオブジェクト、プレーン プロパティまたはコンプレックス リスト形式プロパティを有する複数のオブジェクトを簡単に編集できます。</value>
  </data>
  <data name="Spreadsheet_Welcome_Paragraph1" xml:space="preserve">
    <value>xamSpreadsheet コントロールでは Infragistics Excel エンジンにサポートされるデータ モデルのようなスプレッドシート データを表示し編集できます。データ モデルはブック、ワークシート、セルや数式などを含みます。</value>
  </data>
  <data name="ThemeManager_Welcome_Paragraph1" xml:space="preserve">
    <value>Infragistics Theme Manager™ は、コード 1 行でアプリケーションまたはコントロールにテーマを適用できます。</value>
  </data>
  <data name="TreeGrid_Welcome_Paragraph_1" xml:space="preserve">
    <value>xamTreeGrid™ は、行および列でデータの表示機能と階層データの展開/縮小のツリー列を結合します。コントロールはデータ プレゼンター ファミリの一部です。ビュー間を動的に切り替える機能を使用せずに、単一の TreeView を実装する xamDataPresenter です。</value>
  </data>
  <data name="BusyIndicator_Welcome_Paragraph1" xml:space="preserve">
    <value>xamBusyIndicator コントロールは、長期的に実行するプロセスが開始されたことを視覚的な通知で提供し、そのプロセスの進行状況を表示する ContentControl です。</value>
  </data>
  <data name="SurfaceChartWelcome_Welcome_Paragraph1" xml:space="preserve">
    <value>3D 等高線グラフ コントロールは、立体表面の視覚化をすばやく簡単に実現できます。このコントロールは、あらゆる 3D 等高線の描画要件の実装が可能な API オプションを提供し、デフォルト値が設定されているためコーディングを最小限に抑えることができます。</value>
  </data>
  <data name="CategoryChartWelcome_Welcome_Paragraph1" xml:space="preserve">
    <value>カテゴリ チャートは、最小限の構成でカテゴリ データを簡単に表示できる XamDataChart のチャートです。</value>
  </data>
  <data name="ShapeChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>シェープ チャートは、デカルトおよび地理図形をチャート サーフェスで表示します。このコントロールは最小限の構成でデータをプロットでき、データ チャートと同様の高いパフォーマンスがあります。シェープ チャートは、間取り図、ダイアグラム、マップ、フラット データまたは階層データとして保存される散布点チャートで利用可能です。</value>
  </data>
  <data name="ScatterChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>散布チャートは、デカルトおよび地理ポイントをチャート サーフェイスで表示する新しい CTP コントロールです。このコントロールは最小限の構成でデータをプロットでき、データ チャートと同様の高いパフォーマンスがあります。散布チャートは、フラット データまたは階層データとして保存される散布点チャートで利用可能です。</value>
  </data>
  <data name="FinancialChart_Welcome_Paragraph_1" xml:space="preserve">
    <value>XamFinancialChart は軽量で高パフォーマンスなチャートです。このチャートは、シンプルで直感的な API を使用した財務データの表示を簡単に構成できます。データ (コレクションまたはコレクションのコレクション) をバインドするだけで後の作業はチャートがすべて行います。チャートを使用してデータを可視化する複数方法を提供します。価格およびボリュームに複数の表示モードおよび財務指標の大量を提供します。チャートにデータ コンテキストを表示するためにラベルの書式設定を使用します。</value>
  </data>
</root>