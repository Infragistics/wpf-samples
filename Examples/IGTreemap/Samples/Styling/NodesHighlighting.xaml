<igFramework:SampleContainer x:Class="IGTreemap.Samples.NodesHighlighting"
                 xmlns:igFramework="clr-namespace:Infragistics.Samples.Framework;assembly=Infragistics.Samples.Shared" 
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 mc:Ignorable="d"
                 xmlns:ig="http://schemas.infragistics.com/xaml" 
                             xmlns:models="clr-namespace:Infragistics.Samples.Shared.Models;assembly=Infragistics.Samples.Shared" Title="Nodes Highlighting">

    <igFramework:SampleContainer.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                
                <ResourceDictionary Source="/IGTreemap;component/Assets/Global.xaml" />
                <ResourceDictionary Source="/IGTreemap;component/Assets/TreemapStyles.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <models:ManufacturerModel x:Key="ManufacturerModel" />

            <!-- Brushes 1 -->
            <LinearGradientBrush x:Key="BaseOverlayBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF565656" />
                <GradientStop Color="#FF373737" Offset="1" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="BaseBorderBrush" Color="#993B3B3B" />
            <SolidColorBrush x:Key="BaseColorBrush" Color="#B2FFFFFF" />

            <!-- Brushes 2 -->
            <SolidColorBrush x:Key="BaseBorderBrush2" Color="#FF6C6C6C" />
            <LinearGradientBrush x:Key="BaseOverlayBrush2" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFa8a8a8" />
                <GradientStop Color="#FF808080" Offset="1" />
            </LinearGradientBrush>
            <!-- Brushes 3 -->
            <LinearGradientBrush x:Key="BaseOverlayBrush3" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFd3404b" />
                <GradientStop Color="#FFc62d36" Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="BaseBorderBrush3" Color="#FFAD1C24" />

            <!-- #BEGIN SNIPPET# -->
            <Style x:Key="ManufacturerNodeStyle" TargetType="ig:TreemapNode">
                <Setter Property="Fill" Value="{StaticResource TreemapContainerFill}" />
                <Setter Property="BorderBrush" Value="{StaticResource TreemapContainerStroke}" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ig:TreemapNode">
                            <Border x:Name="NodeBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Fill}" Margin="1">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HighlightBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>
                                                                Visible
                                                            </Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="ReadOnly" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border x:Name="HighlightBorder" BorderBrush="{StaticResource NodeHoverStroke}" BorderThickness="1" Background="{StaticResource NodeHoverBg}" Visibility="Collapsed" Grid.RowSpan="3" />
                                    <Border x:Name="SelectionBorder" Visibility="Collapsed" BorderBrush="{StaticResource NodeSelectedStroke}" BorderThickness="1" Background="{StaticResource NodeSelectedBg}" Grid.RowSpan="3" />
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding Text}" Foreground="{StaticResource ForegroundBrush}" Margin="5,3,5,5" />
                                    <ig:NodesPanel x:Name="NodesPanel" Grid.Row="2" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- #END SNIPPET# -->

            <Style x:Key="ProductNodeStyle" TargetType="ig:TreemapNode">
                <Setter Property="Fill" Value="{StaticResource BaseOverlayBrush2}" />
                <Setter Property="BorderBrush" Value="{StaticResource BaseBorderBrush2}" />
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ig:TreemapNode">
                            <Border x:Name="NodeBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Fill}"  Margin="1">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="MouseOver" To="Normal" GeneratedDuration="0:0:0.2" />
                                            <VisualTransition From="MouseOver" To="Pressed" GeneratedDuration="0:0:0.2" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" Storyboard.TargetName="OverlayBorder" Duration="0:0:0.2" To=".5" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="ReadOnly" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border x:Name="OverlayBorder" Grid.RowSpan="3" BorderBrush="Transparent"  Opacity="0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                <GradientStop Color="White" Offset="1" />
                                                <GradientStop Color="#FF6081B4" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>

                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{TemplateBinding Text}" Foreground="{StaticResource LightForegroundBrush}" Margin="5,3,5,5">
									<TextBlock.Effect>
										<DropShadowEffect ShadowDepth="0" Opacity="0.3" Color="Black" />
									</TextBlock.Effect>
                                    </TextBlock>
                                    <ig:NodesPanel x:Name="NodesPanel" Grid.Row="1" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="InventoryNodeStyle" TargetType="ig:TreemapNode">
                <Setter Property="Fill" Value="{StaticResource BaseOverlayBrush3}" />
                <Setter Property="BorderBrush" Value="{StaticResource BaseBorderBrush3}" />
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ig:TreemapNode">
                            <Border x:Name="NodeBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Fill}"  Margin="1">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="MouseOver" To="Normal" GeneratedDuration="0:0:0.2" />
                                            <VisualTransition From="MouseOver" To="Pressed" GeneratedDuration="0:0:0.2" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Border.Opacity)" Storyboard.TargetName="OverlayBorder" Duration="0:0:0.2" To=".5" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="ReadOnly" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border x:Name="OverlayBorder" Grid.RowSpan="3" BorderBrush="Transparent" Opacity="0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                <GradientStop Color="#FFD393E2" />
                                                <GradientStop Color="White" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>

                                    <TextBlock HorizontalAlignment="Left" Text="{TemplateBinding Text}" Foreground="{StaticResource LightForegroundBrush}" Margin="5,3,5,5">
									<TextBlock.Effect>
										<DropShadowEffect ShadowDepth="0" Opacity="0.3" Color="Black" />
									</TextBlock.Effect>
                                    </TextBlock>
                                    <ig:NodesPanel x:Name="NodesPanel" Grid.Row="2" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>

    </igFramework:SampleContainer.Resources>

    <Grid x:Name="LayoutRoot" Width="Auto">
		<ig:XamTreemap DataContext="{StaticResource ManufacturerModel}" ItemsSource="{Binding Manufacturers}">

			<ig:XamTreemap.DefaultStyle>
				<Style TargetType="ig:TreemapNode">
					<Setter Property="Padding" Value="0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ig:TreemapNode">
								<ig:NodesPanel x:Name="NodesPanel" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ig:XamTreemap.DefaultStyle>

			<!--Binding to the data-->
			<ig:XamTreemap.NodeBinders>

				<ig:NodeBinder TargetTypeName="Manufacturer" ValuePath="Revenue" TextPath="Name" ItemsSourcePath="Products" NodeStyle="{StaticResource ManufacturerNodeStyle}" />

				<ig:NodeBinder TargetTypeName="Product" ValuePath="StandardCost" TextPath="Name" ItemsSourcePath="InventoryEntries" NodeStyle="{StaticResource ProductNodeStyle}" />

				<ig:NodeBinder TargetTypeName="InventoryEntry" ValuePath="Quantity" TextPath="Shelf" NodeStyle="{StaticResource InventoryNodeStyle}" />

			</ig:XamTreemap.NodeBinders>

		</ig:XamTreemap>
	</Grid>
</igFramework:SampleContainer>