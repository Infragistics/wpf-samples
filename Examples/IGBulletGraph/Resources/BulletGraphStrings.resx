<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BulletGraph_options" xml:space="preserve">
    <value>OPTIONS</value>
  </data>
  <data name="million" xml:space="preserve">
    <value>million</value>
  </data>
  <data name="FiscalYear_Header" xml:space="preserve">
    <value>Fiscal Year Sales Target</value>
  </data>
  <data name="FiscalYear_SideDescription" xml:space="preserve">
    <value>Sales revenue this year (the horizontal white line) has exceeded last year's sales of 15k (the begginning of the acceptable rage)  by an average of 10% each quarter. Still there is a long way to go in order to reach our total target  for the year (vertical white line). Interestingly, sales have followed roughly the same trajectory as last year, reinforcing a pattern of buying habits we've witnessed over the past five years.</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Tasks_Title" xml:space="preserve">
    <value>Task Implementation Progress</value>
  </data>
  <data name="Tasks_Description" xml:space="preserve">
    <value>Even though these tasks are executed simultaneously at the course of three weeks, initially more time has been spent on development. This is demonstrated by the progress bars’ placement amongst the three different ranges (“Low, “Medium” and “High”), that represent the level of confidence for delivering the needed results.</value>
  </data>
  <data name="Bullet_Settings1" xml:space="preserve">
    <value>Setting one</value>
  </data>
  <data name="Bullet_Settings2" xml:space="preserve">
    <value>Setting two</value>
  </data>
  <data name="Bullet_Settings3" xml:space="preserve">
    <value>Setting three</value>
  </data>
  <data name="Transition_Duration" xml:space="preserve">
    <value>Transition Duration</value>
  </data>
  <data name="TaskStart" xml:space="preserve">
    <value>Starts</value>
  </data>
  <data name="TaskEnd" xml:space="preserve">
    <value>Ends</value>
  </data>
  <data name="Task_Dev" xml:space="preserve">
    <value>Development Task</value>
  </data>
  <data name="Task_QA" xml:space="preserve">
    <value>Quality Assurance Task</value>
  </data>
  <data name="Labels_Hardware" xml:space="preserve">
    <value>Hardware</value>
  </data>
  <data name="Labels_Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Labels_Software" xml:space="preserve">
    <value>Software</value>
  </data>
  <data name="Labels_TechIndustrySale" xml:space="preserve">
    <value>Tech Industry Sale</value>
  </data>
  <data name="EnergySource" xml:space="preserve">
    <value>Energy Source</value>
  </data>
  <data name="EnergySourceDescription" xml:space="preserve">
    <value>A particularly warm winter season reduced natural gas demand in the United States for home heating year-over-year, combined with reduced demand coming from the plastics and petrochemicals industry. May was unusually cool throughout much of the country, which led to unusually higher demand in that month, although weather forecasts anticipate warmer temperatures during the summer and continuing weak demand from industry.</value>
  </data>
  <data name="February" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="January" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="March" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="SunkostSalesAvgOrder" xml:space="preserve">
    <value>Avg Order</value>
  </data>
  <data name="SunkostSalesDescription" xml:space="preserve">
    <value>The sales totals to date for 2013 (white horizontal line), clearly exceed the total sales for all of 2012 (the begginning of the middle range). The 2013 sales numbers suggest that our new marketing campaign is successful, resulting in increased product penetration and a significant sales boost, working our way up to the targeted goals for the whole year (vertical white lines).</value>
  </data>
  <data name="SunkostSalesHeader" xml:space="preserve">
    <value>Sunkost: Sales Target of 2010</value>
  </data>
  <data name="SunkostSalesNewCustomers" xml:space="preserve">
    <value>New Customers</value>
  </data>
  <data name="SunkostSalesProfit" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="SunkostSalesRevenue" xml:space="preserve">
    <value>YTD Revenue</value>
  </data>
  <data name="Consumption" xml:space="preserve">
    <value>Consumption (TWh)</value>
  </data>
  <data name="TeamBudget" xml:space="preserve">
    <value>Team Events’ Budget Utilization</value>
  </data>
  <data name="TeamBudgetDescription" xml:space="preserve">
    <value>The target value shows the allocated budget, the progress bar shows the amount spent until now and the exploded range emphasizes on the progress that has been made.</value>
  </data>
  <data name="Tasks_Hours" xml:space="preserve">
    <value>h</value>
  </data>
  <data name="Tasks_Planned" xml:space="preserve">
    <value>Planned Time</value>
  </data>
  <data name="Tasks_Spent" xml:space="preserve">
    <value>Spent Time</value>
  </data>
  <data name="ConsumptionGraph" xml:space="preserve">
    <value>Consumption Graph (TWh)</value>
  </data>
  <data name="Production" xml:space="preserve">
    <value>Production (TWh)</value>
  </data>
  <data name="Orientation" xml:space="preserve">
    <value>Toggle Orientation</value>
  </data>
  <data name="ToolTipSettings_High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="ToolTipSettings_Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="ToolTipSettings_Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
</root>