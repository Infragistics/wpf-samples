<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrMsg_FileAlreadyExistsAndInUse" xml:space="preserve">
    <value>コンテンツを次のファイルにエクスポートできませんでした:
{0}
ファイルが既に存在し、使用中です。</value>
  </data>
  <data name="ErrMsg_OpenPasswordIsInvalid" xml:space="preserve">
    <value>読み取りパスワードが無効です。</value>
  </data>
  <data name="ExcelEngine_Combo_XLS" xml:space="preserve">
    <value>Excel XLS ファイル形式</value>
  </data>
  <data name="ExcelEngine_Combo_XLSX" xml:space="preserve">
    <value>Excel 2007 XLSX ファイル形式</value>
  </data>
  <data name="ExcelEngine_DataGrid_Category" xml:space="preserve">
    <value>カテゴリ</value>
  </data>
  <data name="ExcelEngine_DataGrid_OnBackOrder" xml:space="preserve">
    <value>入荷待ち</value>
  </data>
  <data name="ExcelEngine_DataGrid_ProductName" xml:space="preserve">
    <value>氏名</value>
  </data>
  <data name="ExcelEngine_DataGrid_QuantityPerUnit" xml:space="preserve">
    <value>1 単位の量</value>
  </data>
  <data name="ExcelEngine_DataGrid_SKU" xml:space="preserve">
    <value>SKU</value>
  </data>
  <data name="ExcelEngine_DataGrid_Supplier" xml:space="preserve">
    <value>仕入先</value>
  </data>
  <data name="ExcelEngine_DataGrid_UnitPrice" xml:space="preserve">
    <value>単価</value>
  </data>
  <data name="ExcelEngine_DataGrid_UnitsInStock" xml:space="preserve">
    <value>在庫数</value>
  </data>
  <data name="ExcelEngine_OptionsLabel" xml:space="preserve">
    <value>Excel の形式を選択してください</value>
  </data>
  <data name="ExcelEngine_PasswordToFileWriteLabel" xml:space="preserve">
    <value>ファイルを変更するためのパスワード</value>
  </data>
  <data name="ExcelEngine_PasswordToOpenLabel" xml:space="preserve">
    <value>ファイルを開くためのパスワード</value>
  </data>
  <data name="ExcelShapes_Diamod" xml:space="preserve">
    <value>ダイアモンド</value>
  </data>
  <data name="ExcelShapes_Diamod_InsideText" xml:space="preserve">
    <value>内部のテキスト</value>
  </data>
  <data name="ExcelShapes_Line" xml:space="preserve">
    <value>線</value>
  </data>
  <data name="ExcelShapes_Rectangle" xml:space="preserve">
    <value>矩形</value>
  </data>
  <data name="ExcelShapes_ShapesToExport" xml:space="preserve">
    <value>エクスポートする図の選択</value>
  </data>
  <data name="ExcelShapes_SheetName" xml:space="preserve">
    <value>図シート</value>
  </data>
  <data name="Excel_ButtonCaptionExport" xml:space="preserve">
    <value>データのエクスポート</value>
  </data>
  <data name="Excel_ButtonCaptionImport" xml:space="preserve">
    <value>データのインポート</value>
  </data>
  <data name="Excel_Cell_Comment" xml:space="preserve">
    <value>セルのコメント</value>
  </data>
  <data name="Excel_Cell_Formula" xml:space="preserve">
    <value>セルの数式</value>
  </data>
  <data name="Excel_Discount" xml:space="preserve">
    <value>割引</value>
  </data>
  <data name="Excel_Format_String" xml:space="preserve">
    <value>文字の書式設定</value>
  </data>
  <data name="Excel_Quantity" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="Excel_Set_Comment" xml:space="preserve">
    <value>コメントを設定する</value>
  </data>
  <data name="Excel_Set_Formula" xml:space="preserve">
    <value>数式を設定する</value>
  </data>
  <data name="Excel_Total" xml:space="preserve">
    <value>合計</value>
  </data>
  <data name="Excel_Unit_Price" xml:space="preserve">
    <value>単価</value>
  </data>
  <data name="ExportToExcel_Filter_Note" xml:space="preserve">
    <value>注: データがフィルターされ、XamDataGrid から xls または xlsx ファイルにエクスポートされます。詳細は C# コードを参照してください。</value>
  </data>
  <data name="ExportToExcel_Message_ExcelError_Caption" xml:space="preserve">
    <value>エクスポートされたワークブックの表示エラー</value>
  </data>
  <data name="ExportToExcel_Message_ExcelError_Text" xml:space="preserve">
    <value>エクスポートされたワークブックを表示するために Excel の実行でエラーが発生されました。Excel がインストールされることを確認してください。システム メッセージ: {0}</value>
  </data>
  <data name="ExportToExcel_Message_ExcelExportError_Text" xml:space="preserve">
    <value>ファイルのエクスポートでエラーが発生されました。アプリケーションに適切な権限がない可能性があります。システム メッセージ: {0}</value>
  </data>
  <data name="ExportToExcel_Message_ExportCompleted_Caption" xml:space="preserve">
    <value>エクスポート完了</value>
  </data>
  <data name="ExportToExcel_Message_ExportCompleted_Text" xml:space="preserve">
    <value>エクスポートが正しく完了しました。Excel はエクスポートされたワークブックを表示するために起動します。</value>
  </data>
  <data name="ExportToExcel_Message_FileError_Caption" xml:space="preserve">
    <value>エクスポートされたワークブックの一意のファイル名の作成エラー</value>
  </data>
  <data name="ExportToExcel_Message_FileError_Text" xml:space="preserve">
    <value>現在の作業フォルダーでエクスポートされたワークブックのための一意の名前を作成できませんでした。</value>
  </data>
  <data name="ImportFromExcel_BtnClearData" xml:space="preserve">
    <value>データをクリア</value>
  </data>
  <data name="ImportFromExcel_BtnSortData" xml:space="preserve">
    <value>データの並べ替え</value>
  </data>
  <data name="ImportFromExcel_Note" xml:space="preserve">
    <value>注：データは xls または xlsx ファイルからリソースとしてインポートされています。</value>
  </data>
  <data name="ImportFromExcel_SaveAndOpen" xml:space="preserve">
    <value>文書を保存して開きます</value>
  </data>
  <data name="NamedTables_AboveAverage" xml:space="preserve">
    <value>平均を上回る</value>
  </data>
  <data name="NamedTables_BelowAverage" xml:space="preserve">
    <value>平均を下回る</value>
  </data>
  <data name="NamedTables_ColumnName" xml:space="preserve">
    <value>列名</value>
  </data>
  <data name="NamedTables_ConvertTableToRange" xml:space="preserve">
    <value>このテーブルを生成されたファイルで範囲に変換する</value>
  </data>
  <data name="NamedTables_ExportModifications" xml:space="preserve">
    <value>変更のエクスポート</value>
  </data>
  <data name="NamedTables_Filter" xml:space="preserve">
    <value>フィルター</value>
  </data>
  <data name="NamedTables_Formula" xml:space="preserve">
    <value>数式</value>
  </data>
  <data name="NamedTables_HeaderCellGridInfo_01" xml:space="preserve">
    <value>これは</value>
  </data>
  <data name="NamedTables_HeaderCellGridInfo_02" xml:space="preserve">
    <value>テーブルの列情報です。各列の並べ替え方向およびフィルターを変更できます。</value>
  </data>
  <data name="NamedTables_Label" xml:space="preserve">
    <value>ラベル</value>
  </data>
  <data name="NamedTables_LoadExcelDescription" xml:space="preserve">
    <value>[テーブルの読み込み] ボタンを使用して、Excel の名前付きテーブルを読み込みます。</value>
  </data>
  <data name="NamedTables_LoadTables" xml:space="preserve">
    <value>テーブルの読み込み</value>
  </data>
  <data name="NamedTables_MakeSureNoOpenFile" xml:space="preserve">
    <value>次のファイルを閉じてください:</value>
  </data>
  <data name="NamedTables_NoFormulaApplied" xml:space="preserve">
    <value>適用されている数式はありません。</value>
  </data>
  <data name="NamedTables_NotApplied" xml:space="preserve">
    <value>適用しない</value>
  </data>
  <data name="NamedTables_ShowHeaderCell" xml:space="preserve">
    <value>ヘッダー セルの情報の表示</value>
  </data>
  <data name="NamedTables_ShowTotalRow" xml:space="preserve">
    <value>合計行の情報の表示</value>
  </data>
  <data name="NamedTables_SortCondition" xml:space="preserve">
    <value>並べ替え条件</value>
  </data>
  <data name="NamedTables_SortDirection_Ascending" xml:space="preserve">
    <value>昇順</value>
  </data>
  <data name="NamedTables_SortDirection_Descending" xml:space="preserve">
    <value>降順</value>
  </data>
  <data name="NamedTables_TableName" xml:space="preserve">
    <value>テーブル名:</value>
  </data>
  <data name="NamedTables_TableStyle" xml:space="preserve">
    <value>テーブルのスタイル設定:</value>
  </data>
  <data name="NamedTables_TotalRowGridInfo_01" xml:space="preserve">
    <value>以下は</value>
  </data>
  <data name="NamedTables_TotalRowGridInfo_02" xml:space="preserve">
    <value>の合計行のラベル、数式、値の詳細情報を参照してください。</value>
  </data>
  <data name="NamedTables_TotalRowNotVisible" xml:space="preserve">
    <value>合計行はこのテーブルに表示されていません。</value>
  </data>
  <data name="NamedTables_Value" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="NamedTables_YearToDate" xml:space="preserve">
    <value>年度累計</value>
  </data>
  <data name="NewColorModel_Export_Description_Color_One_and_Two" xml:space="preserve">
    <value>{0} 色 {1} および色 {2} が使用されます。</value>
  </data>
  <data name="NewColorModel_Export_Description_LinearGradient" xml:space="preserve">
    <value>次で線状グラデーション塗りつぶし:</value>
  </data>
  <data name="NewColorModel_Export_Description_PatternFill" xml:space="preserve">
    <value>背景色 {0} のパターン塗りつぶし、パターン色 {1}、および塗りつぶしパターン スタイル {2} が使用されます。</value>
  </data>
  <data name="NewColorModel_Export_Description_RectangularGradient" xml:space="preserve">
    <value>次で四角形グラデーション塗りつぶし:</value>
  </data>
  <data name="NewColorModel_Export_Description_SolidColorFill" xml:space="preserve">
    <value>色 {0} で実線塗りつぶしおよび濃淡値 {1} が使用されます。</value>
  </data>
  <data name="NewColorModel_Export_WarningMessage" xml:space="preserve">
    <value>"ファイル名 {0} の他のファイルが開いていないことを確認してください。"</value>
  </data>
  <data name="NewColorModel_Generate" xml:space="preserve">
    <value>ファイルの作成</value>
  </data>
  <data name="NewColorModel_GradientFillDescription" xml:space="preserve">
    <value>グラデーション ブラシのタイプと 2 つの色を指定できます。色設定に基づいて、生成された Excel ファイルの A8:B9 セル領域を塗りつぶします。</value>
  </data>
  <data name="NewColorModel_GradientFillOptions" xml:space="preserve">
    <value>グラデーションの塗りつぶしオプション:</value>
  </data>
  <data name="NewColorModel_PatternFillDescription" xml:space="preserve">
    <value>背景色、パターン塗りつぶし色、パターン タイプを指定できます。色設定に基づいて、生成されたファイルの A5:B6 セル領域を塗りつぶします。</value>
  </data>
  <data name="NewColorModel_PatternFillOptions" xml:space="preserve">
    <value>パターンの塗りつぶしオプション:</value>
  </data>
  <data name="NewColorModel_SelectBackgroundColor" xml:space="preserve">
    <value>背景色の選択:</value>
  </data>
  <data name="NewColorModel_SelectGradientColorNo1" xml:space="preserve">
    <value>グラデーション色 #1 の選択:</value>
  </data>
  <data name="NewColorModel_SelectGradientColorNo2" xml:space="preserve">
    <value>グラデーション色 #2 の選択:</value>
  </data>
  <data name="NewColorModel_SelectGradientType" xml:space="preserve">
    <value>グラデーション タイプの選択:</value>
  </data>
  <data name="NewColorModel_SelectPatternColor" xml:space="preserve">
    <value>パターン色の選択:</value>
  </data>
  <data name="NewColorModel_SelectPatternType" xml:space="preserve">
    <value>パターン タイプの選択:</value>
  </data>
  <data name="NewColorModel_SelectSolidColor" xml:space="preserve">
    <value>実線色の選択:</value>
  </data>
  <data name="NewColorModel_SelectTint" xml:space="preserve">
    <value>濃淡の選択:</value>
  </data>
  <data name="NewColorModel_SolidColorAndTintDescription" xml:space="preserve">
    <value>セルの背景色と濃淡を指定できます。色設定に基づいて生成されたファイルの A2:B3 セル領域を塗りつぶし、指定した濃淡を適用します。</value>
  </data>
  <data name="NewColorModel_SolidColorFillOptions" xml:space="preserve">
    <value>実線色の塗りつぶしオプション:</value>
  </data>
  <data name="XWG_Excel_ButtonCaptionExport" xml:space="preserve">
    <value>データのエクスポート</value>
  </data>
  <data name="XWG_Patient_AdmittanceDate" xml:space="preserve">
    <value>入院日</value>
  </data>
  <data name="XWG_Patient_DOB" xml:space="preserve">
    <value>生年月日</value>
  </data>
  <data name="XWG_Patient_FirstName" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="XWG_Patient_Gender" xml:space="preserve">
    <value>性別</value>
  </data>
  <data name="XWG_Patient_LastName" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="XWG_Patient_Location" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="XWG_Patient_Severity" xml:space="preserve">
    <value>程度</value>
  </data>
</root>