<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"  
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	 xmlns:igSLPrim="http://schemas.infragistics.com/xaml/primitives"
	 xmlns:igBase="http://schemas.infragistics.com/xaml"
	 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	 mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml"/>
		<ResourceDictionary Source="PartStyles.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<igSLPrim:BoolToVisibilityConverter x:Key="BoolVisibility"/>

	<ig:ContextualTabBackColorConverter x:Key="ctbcc"/>

	<igPrim:IsInQATValueConverter x:Key="iqvc"/>

	<igPrim:QATLocationValueConverter x:Key="qatLocationvc"/>

	<igPrim:XamRibbonLocalizedStrings x:Key="strings"/>
	
	<DataTemplate x:Key="ArrowUp">
		<Path  Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="0 0 0 -3">
			<Path.RenderTransform>
			<CompositeTransform Rotation="-225" TranslateX="-0.2" TranslateY="0.4"/>
			</Path.RenderTransform>
			</Path>
	</DataTemplate>
	
	<DataTemplate x:Key="ArrowDown">
		<Path  Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="0 -3 0 0">
			<Path.RenderTransform>
			<CompositeTransform Rotation="-45" TranslateX="-0.2" TranslateY="0.4"/>
			</Path.RenderTransform>
			</Path>
	</DataTemplate>
	
	<DataTemplate x:Key="ArrowRight">
		<StackPanel Orientation="Vertical">
            <TextBlock Text="{Binding Source={StaticResource strings}, Path=ShiftRightButton}"  Margin="0 0 0 5"/>
		<Path x:Name="path" Data="M4.7070313,12.990885 L6.3183594,12.990885 L9.2578125,16.330729 L6.3183594,19.63151 L4.7070313,19.63151 L7.65625,16.330729 z M0.87890625,12.990885 L2.5390625,12.990885 L5.4589844,16.330729 L2.5390625,19.63151 L0.87890625,19.63151 L3.8867188,16.330729 z" Fill="#FF333333" HorizontalAlignment="Center" 
			Height="8.308" RenderTransformOrigin="0.5,0.5" Stretch="Fill" 
			VerticalAlignment="Center"	Width="10.48"/>
		</StackPanel>
	</DataTemplate>
		
	<DataTemplate x:Key="RenameIcon">
	<Path Data="M12.288711,0.25158134 L14.345711,0.25158134 L14.345711,4.2515812 L12.288711,4.2515812 z M4.1356945,0.21606147 L11.461384,0.21606147 L11.461384,1.6211941 L6.1757002,1.6211941 L6.1757002,2.812088 L11.491787,2.812088 L11.491787,4.2172198 L6.1757002,4.2172198 L6.1757002,4.2190609 L4.1187878,4.2190609 L4.1187878,0.21868399 L4.1356945,0.21868399 z M3.2587538,0 L3.2600002,4.21 L0,2.1042085 z" Fill="Black" HorizontalAlignment="Left" Height="4.252" RenderTransformOrigin="0.928306055472977,0.529586771423219" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="14.346" d:LayoutRounding="Auto" Margin="1">
			<Path.RenderTransform>
				<CompositeTransform Rotation="-45" TranslateX="-1.877" TranslateY="-4.327"/>
			</Path.RenderTransform>
		</Path>
	</DataTemplate>
	
	<DataTemplate x:Key="ViewIcon">
<Path Data="M7.6119995,2.5619965 C8.5784979,2.5619965 9.3619995,3.3454981 9.3619995,4.3119965 C9.3619995,5.2784948 8.5784979,6.0619965 7.6119995,6.0619965 C6.6455011,6.0619965 5.8619995,5.2784948 5.8619995,4.3119965 C5.8619995,3.3454981 6.6455011,2.5619965 7.6119995,2.5619965 z M7.6119995,1.3119967 C5.9551454,1.3119966 4.6119995,2.6551423 4.6119995,4.3119965 C4.6119995,5.9688506 5.9551454,7.3119965 7.6119995,7.3119965 C9.2688541,7.3119965 10.612,5.9688506 10.612,4.3119965 C10.612,2.6551423 9.2688541,1.3119966 7.6119995,1.3119967 z M7.5916162,0 C11.78435,1.0500383E-07 15.119969,4.1310501 15.183232,4.2919998 C15.24325,4.4446902 11.78435,8.5839996 7.5916162,8.5839996 C3.3988824,8.5839996 9.230406E-16,4.45295 0,4.2919998 C8.0683324E-16,3.91645 3.3988824,1.0500383E-07 7.5916162,0 z" Fill="Black" HorizontalAlignment="Left" Height="8.584" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="15.184" Margin="1" />
	</DataTemplate>
	
    <DataTemplate x:Key="HiddenIcon">
        <Path Data="M10.22,5.02 L9.27,5.96 L9.28,5.98 C9.33,6.14 9.36,6.31 9.36,6.50 C9.36,7.46 8.57,8.25 7.61,8.25 C7.43,8.25 7.25,8.22 7.09,8.17 L7.06,8.16 L6.11,9.10 L6.18,9.13 C6.60,9.36 7.09,9.50 7.61,9.50 C9.26,9.50 10.61,8.15 10.61,6.50 C10.61,5.98 10.48,5.49 10.25,5.07 z M7.61,3.50 C5.95,3.50 4.61,4.84 4.61,6.50 C4.61,7.01 4.74,7.50 4.97,7.93 L5.04,8.05 L5.97,7.12 L5.96,7.10 C5.89,6.91 5.86,6.71 5.86,6.50 C5.86,5.53 6.64,4.75 7.61,4.75 C7.82,4.75 8.02,4.78 8.21,4.85 L8.25,4.87 L9.18,3.94 L9.16,3.93 C8.71,3.65 8.18,3.50 7.61,3.50 z M13.54,0.00 C13.73,-0.00 13.91,0.04 14.04,0.17 C14.33,0.47 14.25,1.02 13.85,1.41 L11.78,3.48 L11.82,3.50 C13.82,4.72 15.14,6.38 15.18,6.48 C15.24,6.63 11.78,10.77 7.59,10.77 C6.67,10.77 5.79,10.57 4.98,10.26 L4.95,10.25 L2.67,12.52 C2.27,12.91 1.72,12.99 1.43,12.70 C1.14,12.40 1.22,11.85 1.61,11.46 L3.52,9.56 L3.50,9.54 C1.39,8.31 5.91E-16,6.58 0,6.48 C8.06E-16,6.10 3.39,2.18 7.59,2.18 C8.57,2.18 9.51,2.41 10.36,2.76 L10.37,2.76 L12.80,0.35 C13.02,0.13 13.29,0.01 13.54,0.00 z" Fill="Black" HorizontalAlignment="Left" Height="12.87" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="15.18"/>
    </DataTemplate>
	<DataTemplate x:Key="RemoveIcon">
<Path Data="M6.8516374,2.4609821 L8.0870419,3.6963861 L6.5424047,5.2410231 L8.0870352,6.7856536 L6.8516307,8.0210581 L5.3070002,6.4764271 L3.7623763,8.0210514 L2.5269723,6.7856469 L4.0715961,5.2410231 L2.5269659,3.6963925 L3.7623699,2.4609885 L5.3070002,4.005619 z M5.307013,1.2690123 C3.0768869,1.2690123 1.2690128,3.0768864 1.2690128,5.3070126 C1.2690128,7.5371385 3.0768869,9.3450127 5.307013,9.3450127 C7.5371389,9.3450127 9.3450136,7.5371385 9.3450136,5.3070126 C9.3450136,3.0768864 7.5371389,1.2690123 5.307013,1.2690123 z M5.3070002,0 C8.2379751,0 10.614,2.3760247 10.614,5.3070002 C10.614,8.2379751 8.2379751,10.614 5.3070002,10.614 C2.3760247,10.614 0,8.2379751 0,5.3070002 C0,2.3760247 2.3760247,0 5.3070002,0 z" Fill="Black" HorizontalAlignment="Left" Height="12" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" Width="12" Margin="1"/>
	</DataTemplate>
	

	<!-- =================================================================== -->
	<!-- LargeToolCaptionPresenter Style -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:LargeToolCaptionPresenter">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:LargeToolCaptionPresenter">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<ContentControl
							Grid.Row="1"
							HorizontalAlignment="Center"			
							VerticalAlignment="Top"				
							Foreground="{TemplateBinding Foreground}"
							Margin="0,-3,0,0">
							<StackPanel Orientation="Horizontal">
								<TextBlock x:Name="PART_Line2"/>
								<Path x:Name="Glyph" Margin="0,5,0,0"
									Visibility="{TemplateBinding GlyphVisibility}"
									Height="3" Width="5" Stretch="Fill" Grid.Row="1"
									Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
									Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}"/>
							</StackPanel>
						</ContentControl>
						<TextBlock
							x:Name="PART_Line1"
							Margin="0,-3,0,0"
							TextAlignment="Center"
							HorizontalAlignment="Center"
							VerticalAlignment="Top"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbon Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbon">
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="BorderThickness" Value="0,1,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbon">
					<Grid x:Name="rootVisual">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="QATStates">
								<VisualState x:Name="AboveRibbon"/>
								<VisualState x:Name="BelowRibbon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="QuickAccessToolbarBottomSite" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CustomizationDialog">
								<VisualState x:Name="DialogHidden"/>
								<VisualState x:Name="DialogVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="xamRibbonCustomizationDialogWindow" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="29"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*" x:Name="tabContentRow" />
							<RowDefinition Height="Auto" x:Name="qatBelowRow" />
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="0"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="43" MaxWidth="56"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<igPrim:KeyNavigationTextBox x:Name="KBNavDebug" Grid.Row="4" Opacity="1" TabIndex="0" IsHitTestVisible="True" Height="0" Width="0"/>                        

						<Border Grid.ColumnSpan="3" Background="{StaticResource CaptionPanelBrush}" BorderBrush="{StaticResource CaptionPanelHighlightBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<igPrim:RibbonTitleBar Margin="39,0,0,0" x:Name="RibbonTitleBar"/>
						</Border>

						<igPrim:RibbonTabControl x:Name="RibbonTab" Background="{StaticResource TabControlBackgroundBrush}" 
							Grid.Row="1"
							Grid.RowSpan="2"
							Grid.Column="0"
							Grid.ColumnSpan="3"/>

						<ContentControl x:Name="ApplicationMenuSite" Width="56" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top"
							Grid.Row="1"
							Grid.RowSpan="3"
							Grid.Column="0"
							Grid.ColumnSpan="2">
							
							<ig:ContextMenuService.Manager>
								<ig:ContextMenuManager>
									<ig:ContextMenuManager.ContextMenu>
										<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuSeparator/>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
											</ig:XamMenuItem>
										</ig:XamContextMenu>
									</ig:ContextMenuManager.ContextMenu>
								</ig:ContextMenuManager>
							</ig:ContextMenuService.Manager>
							
						</ContentControl>

						<ContentControl Visibility="Collapsed" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" x:Name="QuickAccessToolbarBottomSite"
							Grid.Row="3" 
							Grid.ColumnSpan="3">
							<ig:ContextMenuService.Manager>
								<ig:ContextMenuManager>
									<ig:ContextMenuManager.ContextMenu>
										<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuSeparator/>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
												<ig:Commanding.Command>
													<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
												</ig:Commanding.Command>
											</ig:XamMenuItem>
											<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
											</ig:XamMenuItem>
										</ig:XamContextMenu>
									</ig:ContextMenuManager.ContextMenu>
								</ig:ContextMenuManager>
							</ig:ContextMenuService.Manager>
						</ContentControl>

						<ig:XamRibbonCustomizationDialogWindow Grid.Row="5" x:Name="xamRibbonCustomizationDialogWindow" Visibility="Collapsed" IsOpen="False" Height="780" Width="1030" />

                        
                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- =================================================================== -->
    <!-- Hyperlinkutton Style -->
    <!-- =================================================================== -->
	
<Style x:Key="HyperButton" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="#FF73A9D8" />
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="HyperlinkButton">
                  <Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
                      <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal"/>
                              <VisualState x:Name="MouseOver">
                                  <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                              <DiscreteObjectKeyFrame.Value>
                                                  <Visibility>Visible</Visibility>
                                              </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                      </ObjectAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Pressed">
                                  <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                              <DiscreteObjectKeyFrame.Value>
                                                  <Visibility>Visible</Visibility>
                                              </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                      </ObjectAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                  <Storyboard>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                              <DiscreteObjectKeyFrame.Value>
                                                  <Visibility>Visible</Visibility>
                                              </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                      </ObjectAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                              <VisualState x:Name="Focused"/>
                              <VisualState x:Name="Unfocused"/>
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <TextBlock
                          x:Name="UnderlineTextBlock"
                          Text="{TemplateBinding Content}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="{TemplateBinding Padding}"
                          TextDecorations="Underline"
                          Visibility="Collapsed"/>
                      <TextBlock Canvas.ZIndex="1"
                          x:Name="DisabledOverlay"
                          Text="{TemplateBinding Content}"
                          Foreground="#FFAAAAAA"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          Margin="{TemplateBinding Padding}"
                          Visibility="Collapsed"/>
                      <ContentPresenter 
                          x:Name="contentPresenter"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}"/>
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>


    <!-- =================================================================== -->
    <!-- ICONButton Style -->
    <!-- =================================================================== -->
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="#001F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                    	<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                          <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                	   <Storyboard>
                                	<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                               	</Storyboard>
							   </VisualState>
							    <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#00FFFFFF" CornerRadius="3" Opacity="0">
                            <Grid x:Name="Grid1" Background="#001F3B53" Margin="1">
                                <Border x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.6"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =================================================================== -->
	<!-- ButtonToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:ButtonToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:ButtonToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>
								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Medium">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>

								</VisualState>

								<VisualState x:Name="Menu">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>

								</VisualState>

								<VisualState x:Name="MenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescriptionContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								

								<VisualState x:Name="DialogButton">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DialogButtonContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenu2010">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenu2010Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeDisabled" Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=Tool.Ribbon.ApplicationMenu2010.TrimColor, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Path=Tool.Ribbon.ApplicationMenu2010.TrimColor, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHoverHighlight" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnHoverHighlightBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHoverHighlight" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource btnHoverHighlightBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0" Value="7,7,7,7"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContentWithDescription" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border x:Name="BtnChromeHoverHighlight" BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border x:Name="BtnChromePressedHighlight" BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border x:Name="BtnChromeDisabledHighlight" Background="{StaticResource ButtonToolDisabledBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<Grid >

								<Grid x:Name="ApplicationMenuContentWithDescription" Visibility="Collapsed" Margin="2" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Image x:Name="AppMenuContentWithDescImage" Height="32" Width="32" Margin="5,3,0,3" Grid.RowSpan="2" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="AppMenuContentWithDescCaption" Margin="7,0,5,0" FontWeight="Bold" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Margin="8,0,5,0" Grid.Row="1" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="ApplicationMenuContent" Visibility="Collapsed" Margin="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="AppMenuContentImage" Margin="5,3,0,3" Height="32" Width="32" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="AppMenuContentCaption" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="ApplicationMenu2010Content" Visibility="Collapsed" Margin="2" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="AppMenu2010ContentImage" Margin="5,3,0,3" Height="15" Width="15" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="AppMenu2010ContentCaption" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="LargeContent" Visibility="Collapsed" Margin="5,3,5,0">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<Image x:Name="LargeImage" Height="32" Width="32" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<igPrim:LargeToolCaptionPresenter Grid.Row="1"
									x:Name="LargeCaption"
									VerticalAlignment="Top"
									HorizontalAlignment="Center"
									Margin="0,4,0,0"
									Padding="0"
									Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" />
								</Grid>

								<Grid x:Name="MediumContent" HorizontalAlignment="Stretch" Visibility="Collapsed" Margin="4,3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Image x:Name="MediumImage" Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MediumCaption" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="MenuContent" HorizontalAlignment="Stretch" Visibility="Collapsed" Margin="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Image x:Name="MenuContentImage" Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MenuCaption" HorizontalAlignment="Left" Margin="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="MenuWithDescriptionContent" HorizontalAlignment="Stretch" Visibility="Collapsed" Margin="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions> 

									<Image Grid.RowSpan="2" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MenuWithDescriptionCaption" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="SmallContent" Visibility="Collapsed" Margin="3">
									<Image x:Name="SmallImage" Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid>

								<Grid x:Name="DialogButtonContent" Visibility="Collapsed" Margin="4,4,4,3">
									<Image x:Name="DialogButtonImage" Height="7" Width="7" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None"/>
								</Grid>
							</Grid>
						</Border>

                        <ig:ContextMenuService.Manager>
                            <ig:ContextMenuManager>
                                <ig:ContextMenuManager.ContextMenu>
                                    <ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuSeparator/>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuSeparator/>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        </ig:XamMenuItem>
                                    </ig:XamContextMenu>
                                </ig:ContextMenuManager.ContextMenu>
                            </ig:ContextMenuManager>
                        </ig:ContextMenuService.Manager>

                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- RadioButtonToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:RadioButtonToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:RadioButtonToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>

								<VisualState x:Name="Medium">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>

								</VisualState>

								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">

									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>

								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>


						<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="{Binding Path=Tool.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibility}}">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolDisabledBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
							<Grid>
								<Grid x:Name="ApplicationMenuContent" Visibility="Collapsed" Margin="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Border x:Name="AppMenuCheckIndicator" Height="32" Width="32" Margin="7,5,0,5" Background="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}" BorderBrush="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}" BorderThickness="1" CornerRadius="2" Visibility="{Binding Path=Tool.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibility}}"/>
									<Image x:Name="ApplicationMenuImage" Margin="5,3,0,3" Height="32" Width="32" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="ApplicationMenuCaption" Margin="7,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="MenuContent" Visibility="Collapsed" Margin="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="MenuImage" Height="16" Width="16" HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MenuCaption" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="MediumContent" Visibility="Collapsed" Margin="4,3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Image x:Name="MediumImage" Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MediumCaption" HorizontalAlignment="Left"  Padding="5,0,0,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>

								<Grid x:Name="SmallContent" Visibility="Collapsed" Margin="3">
									<Image x:Name="SmallImage" Height="16" Width="16" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Grid>

								<Grid x:Name="LargeContent" Visibility="Collapsed" Margin="5,3,5,0">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<Image x:Name="LargeImage" Height="32" Width="32" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<igPrim:LargeToolCaptionPresenter Grid.Row="1"
									x:Name="LargeCaption"
									VerticalAlignment="Top"
									HorizontalAlignment="Center"
									Margin="0,4,0,0"
									Padding="0"
									Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" />
								</Grid>
							</Grid>
						</Border>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- SeparatorToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:SeparatorToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:SeparatorToolControl">
					<Grid HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>
								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenu2010">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenu2010Content" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border Padding="2" x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
							<Grid >

								<Rectangle x:Name="ApplicationMenuContent" Height="1" Fill="#FFCFDBEB" Margin="42,0,-2,0" Visibility="Collapsed"/>

								<Rectangle x:Name="ApplicationMenu2010Content" Height="1" Fill="#FFCFDBEB" Margin="-2,0,-2,0" Visibility="Collapsed"/>

								<Border x:Name="LargeContent" Padding="2" Visibility="Collapsed">
									<Rectangle Width="1" Fill="#FFD69E22"></Rectangle>
								</Border>

								<Grid x:Name="MenuContent" HorizontalAlignment="Stretch" Visibility="Collapsed">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Rectangle Grid.Column="1" Height="1" Fill="#FFCFDBEB" Margin="8,0,-2,0" />

								</Grid>

							</Grid>
						</Border>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- CheckBoxToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:CheckBoxToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:CheckBoxToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>

								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Medium">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>

							<VisualStateGroup x:Name="HoverStates">
								<VisualState x:Name="Normal"/>

								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuButtonHoverElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuButtonHoverElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>


						<!--ApplicationMenu-->
						<Grid x:Name="ApplicationMenuElement" Visibility="Collapsed" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="BtnChromePressed" Grid.ColumnSpan="2" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="{Binding Path=Tool.IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibility}}">
								<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
							</Border>
							<Border x:Name="ApplicationMenuButtonHoverElement" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="2">
								<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
							</Border>
							<Border x:Name="AppMenuCheckIndicator" Height="32" Width="32" Margin="7,5,0,5" Background="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}" BorderBrush="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}" BorderThickness="1" CornerRadius="2" Visibility="{Binding Path=Tool.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibility}}"/>
							<Image x:Name="AppMenuImage" Height="32" Width="32" Margin="7,5,0,5" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left"/>
							<TextBlock x:Name="AppMenuCaption" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" HorizontalAlignment="Left"/>
						</Grid>

						<!--Menu-->
						<Grid x:Name="MenuElement" Visibility="Collapsed">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Border x:Name="MenuButtonHoverElement" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="3">
								<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
							</Border>
							<Grid Width="20" Height="20" Margin="2,1">
								<Border x:Name="MenuCheckIndicator" Background="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}"  BorderBrush="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}" BorderThickness="1" CornerRadius="1" Visibility="{Binding Path=Tool.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibility}}">
									<Path
										x:Name="checkGlyph"
										Width="9"
										Height="11"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Data="M 3.19,7.58 C3.19,7.58 0,5.34 0,5.34 0,5.34 0,6.56 0,6.56 0,6.56 4.12,10.69 4.12,10.69 4.12,10.69 8.65,0 8.65,0 8.65,0 7.80,0 7.80,0 7.80,0 3.19,7.58 3.19,7.58 z"
										Fill="{StaticResource CheckBoxToolCheckedGlyphBrush}"/>
								</Border>
							</Grid>
							<TextBlock x:Name="MenuCaption" Margin="9,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" HorizontalAlignment="Left"/>
						</Grid>


						<Grid x:Name="MediumElement" Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<CheckBox x:Name="CheckBoxElement" IsEnabled="{Binding Path=Tool.IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" VerticalAlignment="Center" IsChecked="{Binding Path=Tool.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" Style="{StaticResource XamRibbonCheckBoxStyle}" IsHitTestVisible="False" />
							<TextBlock x:Name="MediumCaption" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"/>
						</Grid>


						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- MenuToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:MenuToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:MenuToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>
								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Medium">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescriptionContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContentWithDescription" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="GalleryPreview">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GalleryPreviewContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeDisabled" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>


							</VisualStateGroup>

							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Closed"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="AppMenuDropDownStates">
								<VisualState x:Name="OpenApplicationSubMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationSubMenuTitleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubMenuImageAreaBackground" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedAppSubMenu"/>
							</VisualStateGroup>

							<VisualStateGroup x:Name="GalleryStates">
								<VisualState x:Name="NoGallery"/>
								<VisualState x:Name="Gallery">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeHandleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolDisabledBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
							<Grid>
								<!--ApplicationMenu-->
								<Grid x:Name="ApplicationMenuElement" Visibility="Collapsed" Margin="2" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Border x:Name="ApplicationMenuButtonHoverElement" Background="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="3">
										<Border Background="{StaticResource ButtonToolHottrackCenterBrush}" Margin="1" CornerRadius="1"/>
									</Border>
									<Image x:Name="AppMenuImage"  Height="32" Width="32" HorizontalAlignment="Left" Margin="5,3,0,3" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="AppMenuCaption" HorizontalAlignment="Left" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Path Margin="9,0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4" Grid.Column="2"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
								</Grid>

								<!-- ApplicationMenuContentWithDescription -->
								<Grid x:Name="ApplicationMenuContentWithDescription" Visibility="Collapsed" Margin="2">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Image x:Name="AppMenuDescImage" Height="32" Width="32" Grid.RowSpan="2" Margin="5,3,0,3" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="AppMenuDescCaption"  FontWeight="Bold" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Path Margin="9,0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4" Grid.RowSpan="2" Grid.Column="2"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
								</Grid>

								<!--Large-->
								<Grid  x:Name="LargeElement" Visibility="Collapsed" Margin="5,3,5,0">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<Image x:Name="LargeImage" Height="32" Width="32" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<igPrim:LargeToolCaptionPresenter 	
										x:Name="LargeCaption"
										Margin="0,4,0,0"
										Padding="0"
										Grid.Row="1"
										HorizontalAlignment="Center"
										VerticalAlignment="Top"
										Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" GlyphVisibility="Visible" />
								</Grid>

								<!--Medium-->
								<Grid x:Name="MediumElement" Visibility="Collapsed" Margin="4,3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Image x:Name="MediumImage" Height="16" Width="16" HorizontalAlignment="Left" Grid.Column="0" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="MediumCaption" Padding="5,0,0,0"  HorizontalAlignment="Left" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Path Margin="10,0,0,0" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1"
									Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
									Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
								</Grid>

								<!--Menu-->
								<Grid x:Name="MenuElement" Visibility="Collapsed" Margin="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="MenuImage" Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="MenuCaption" HorizontalAlignment="Left" Margin="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Path Margin="6,0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4" Grid.Column="2"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
								</Grid>

								<!--MenuWithDescription-->
								<Grid x:Name="MenuWithDescriptionContent" Visibility="Collapsed" Margin="3" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>

									<Image x:Name="MenuWithDescImage" Height="16" Width="16" Grid.RowSpan="2" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MenuWithDescCaption" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Path Margin="6,0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4" Grid.Column="2" Grid.RowSpan="2"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
								</Grid>

								<!--Small-->
								<Grid x:Name="SmallElement" Visibility="Collapsed" Background="Transparent" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="SmallImage" Height="16" Width="16" Margin="3,3,1,3" HorizontalAlignment="Left" Grid.Column="0" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<Path Margin="1,0,5,1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1" Grid.Column="1"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
										Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
								</Grid>

								<!--GalleryPreview-->
								<Grid x:Name="GalleryPreviewContent" Visibility="Collapsed">
									<igPrim:VerticalGalleryScrollViewer x:Name="GalleryPreviewScrollViewer" UseLayoutRounding="True" Height="60">
										<igPrim:GalleryWrapPanel x:Name="GalleryPreviewPanel">

										</igPrim:GalleryWrapPanel>
									</igPrim:VerticalGalleryScrollViewer>
								</Grid>
							</Grid>
						</Border>

						<Popup x:Name="Popup">
							<Grid x:Name="Items"  Visibility="Collapsed" Background="Transparent" IsHitTestVisible="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Border Grid.RowSpan="2" x:Name="MenuBackground" Background="{StaticResource MenuBackgroundBrush}" BorderBrush="{StaticResource MenuBorderBrush}" BorderThickness="1" CornerRadius="3"/>
								<Border Grid.RowSpan="2" x:Name="MenuBorderLightNormal" BorderBrush="{StaticResource MenuBorderLightBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,-1,-1"/>

								<Grid x:Name="ApplicationSubMenuTitleArea" Visibility="Collapsed" Height="23" Margin="2,2,2,0" >
									<Border Background="{StaticResource AppSubMenuTitleBackground}" BorderBrush="{StaticResource AppSubMenuTitleBorder}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"/>
									<TextBlock FontWeight="Bold" Text="{Binding Path=Tool.ApplicationSubmenuTitle, RelativeSource={RelativeSource TemplatedParent}}" Margin="7,3,0,3"/>
									<Border VerticalAlignment="Bottom" Background="{StaticResource ApplicationMenuLeftAreaBorderBrush}" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0,0,0,1" Height="2"/>
								</Grid>

								<Grid Margin="2,2,2,2" Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Border x:Name="SubMenuImageAreaBackground" Width="25" HorizontalAlignment="Left" Background="{StaticResource SubMenuImgAreaBackground}" BorderBrush="{StaticResource SubMenuImgAreaBorder}" BorderThickness="0,0,1,0"/>
									<igPrim:VerticalRibbonScrollViewer x:Name="ItemsScrollViewer">
										<StackPanel MinWidth="100"  Orientation="Vertical" x:Name="ItemsPanel" IsHitTestVisible="True" Background="Transparent"/>
									</igPrim:VerticalRibbonScrollViewer>
									<Border x:Name="ResizeHandleArea" 
											Background="{StaticResource ResizeHandleAreaBackgroundBrush}"
											BorderBrush="{StaticResource ResizeHandleAreaBorderBrush}"
											BorderThickness="0,1,0,0"
											Visibility="Collapsed"
											Grid.Row="1"
											Height="11"
											CornerRadius="0,0,2,2" IsHitTestVisible="True">
										<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,1"  x:Name="ResizeHandle" Background="Transparent" IsHitTestVisible="True">
											<Path
												Width="6"
												Height="6"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleGlyphBackgroundBrush}"
												Opacity="1"
												Stretch="None"/>
											<Path
												Width="6"
												Height="6"
												Margin="0,0,2,2"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleAreaBorderBrush}"
												Opacity="1"
												Stretch="None"/>
										</Grid>
									</Border>
								</Grid>
								<Border Grid.RowSpan="3" x:Name="CollapsedGroupborderLightHover" BorderBrush="#DDFFFFFF" BorderThickness="1" CornerRadius="3" Opacity="0" Margin="1"/>
							</Grid>
						</Popup>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- SegmentedMenuToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:SegmentedMenuToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:SegmentedMenuToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>
								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeElements" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Medium">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescriptionContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallElements" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContentWithDescription" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="GalleryPreview">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GalleryPreviewContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeDisabled" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>

							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="topSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="botSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenu" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenuDescrip" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleSmall" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverIndirect">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHoverIndirect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="topSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="botSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenu" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenuDescrip" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleSmall" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="topSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="botSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="SegmentedCommonStates">
								<VisualState x:Name="SegmentNormal"/>
								<VisualState x:Name="SegmentMouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegAppMenu" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegAppMenuDescrip" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegMenu" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegMenuDescrip" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LargeSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonToolHottrackCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonToolHottrackCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SegmentMouseOverIndirect">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SegmentPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightRight" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed"/>
							</VisualStateGroup>

							<VisualStateGroup x:Name="AppMenuDropDownStates">
								<VisualState x:Name="OpenApplicationSubMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationSubMenuTitleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubMenuImageAreaBackground" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedAppSubMenu"/>
							</VisualStateGroup>

							<VisualStateGroup x:Name="GalleryStates">
								<VisualState x:Name="NoGallery"/>
								<VisualState x:Name="Gallery">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeHandleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" IsHitTestVisible="False" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeHoverIndirect" Background="{StaticResource MenuToolMouseOverIndirect}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" IsHitTestVisible="False" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolDisabledBorderLightBrush}" Margin="1"/>
						</Border>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">

							<Grid >
								<!--ApplicationMenu-->
								<Grid x:Name="ApplicationMenuElement" Visibility="Collapsed" Margin="2" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="AppMenuImage"  Height="32" Width="32" HorizontalAlignment="Left" Margin="5,4,0,4" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="AppMenuCaption" HorizontalAlignment="Left" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle Width="1" Margin="0,-1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" Grid.Column="1"/>
									<Border x:Name="AppMenuSplit" Width="23" Grid.Column="2">
										<igPrim:SegmentedMenuControlSplitButton x:Name="AppMenuSplitButton">
											<Border x:Name="delayedHoverSegAppMenu" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z" IsHitTestVisible="False"/>
											<Rectangle x:Name="segSplitRuleAppMenu" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,-1,0,-1"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!-- ApplicationMenuContentWithDescription -->
								<Grid x:Name="ApplicationMenuContentWithDescription" Visibility="Collapsed" Margin="2" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Image x:Name="AppMenuDescImage" Height="32" Width="32" Grid.RowSpan="2" Margin="5,4,0,4" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="AppMenuDescCaption" FontWeight="Bold" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle Width="1" Margin="0,-1"  Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="AppMenuWithDescripSplit" Grid.RowSpan="2" Width="23" Grid.Column="2">
										<igPrim:SegmentedMenuControlSplitButton x:Name="AppMenuDescripSplitButton">
											<Border x:Name="delayedHoverSegAppMenuDescrip" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="segSplitRuleAppMenuDescrip" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,-1,0,-1"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!--Large-->
								<Grid  x:Name="LargeElements" Visibility="Collapsed" Margin="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid x:Name="LargeElement" Background="Transparent">
										<Image x:Name="LargeImage" Height="32" Width="32" Margin="4,2" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Grid>
									<Border x:Name="LargeSplit" Grid.Row="1" Background="Transparent" CornerRadius="0,0,2,2">
										<igPrim:LargeToolCaptionPresenter
											x:Name="LargeCaption"
											Margin="1,2,1,0"
											Grid.Row="1" HorizontalAlignment="Center"									
											Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" GlyphVisibility="Visible" />
									</Border>
									<Border x:Name="topSegHighlight" BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1" CornerRadius="2,2,0,0" Visibility="Collapsed" UseLayoutRounding="True"/>
									<Border x:Name="botSegHighlight" BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1" Grid.Row="1" CornerRadius="0,0,2,2" Visibility="Collapsed" UseLayoutRounding="True" Margin="0,1,0,0" IsHitTestVisible="False" />
									<Rectangle x:Name="segSplitRule" Height="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" VerticalAlignment="Top" Visibility="Collapsed" Grid.Row="1"/>
								</Grid>

								<!--Medium-->
								<Grid x:Name="MediumElement" Visibility="Collapsed" Margin="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="MediumImage" Height="16" Width="16" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="MediumCaption" Padding="5,0,0,0"  HorizontalAlignment="Left" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="medSplitRule" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" Width="1" HorizontalAlignment="Right" Grid.Column="1" Margin="0,-3" Visibility="Collapsed"/>
									<Border x:Name="MediumSplit" Background="Transparent" Width="12" Grid.Column="2" CornerRadius="0,1,1,0" Margin="0,-2,-2,-2">
										<Path VerticalAlignment="Center" HorizontalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
										Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
									</Border>
								</Grid>

								<!--Menu-->
								<Grid x:Name="MenuElement" Visibility="Collapsed" Margin="3" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="MenuImage" Height="16" Width="16" HorizontalAlignment="Left" Grid.Column="0" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="MenuCaption"  HorizontalAlignment="Left" Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="menuSegHighlightLeft" Width="1" Margin="0,-2"  Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="MenuSplit" Width="20" Grid.Column="2" CornerRadius="0,1,1,0" Margin="0,-2,-2,-2">
										<igPrim:SegmentedMenuControlSplitButton x:Name="MenuSplitButton">
											<Border x:Name="delayedHoverSegMenu" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
												Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="menuSegSplitRule" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle x:Name="menuSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!--MenuWithDescription-->
								<Grid x:Name="MenuWithDescriptionContent" Visibility="Collapsed" Margin="3" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>

									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>

									<Image x:Name="MenuDescImage" Grid.RowSpan="2" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
									<TextBlock x:Name="MenuDescCaption" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" HorizontalAlignment="Left"  Padding="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="menuDescripSegHighlightLeft" Width="1" Margin="0,-2" Grid.RowSpan="2" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="MenuWithDescripSplit" Grid.RowSpan="2" Width="20" Grid.Column="2" Margin="0,-2,-2,-2" CornerRadius="0,1,1,0">
										<igPrim:SegmentedMenuControlSplitButton x:Name="MenuWithDescripSplitButton">
											<Border x:Name="delayedHoverSegMenuDescrip" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed" CornerRadius="0,1,1,0"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
												Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="menuDescripSegSplitRule" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed"/>
											<Rectangle x:Name="menuDescripSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!--Small-->
								<Grid x:Name="SmallElements" Visibility="Collapsed" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid x:Name="SmallElement" Background="Transparent">
										<Image x:Name="SmallImage" Height="16" Width="16" Margin="3,3,2,3" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
										<Rectangle x:Name="smallSegHighlightLeft" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" Visibility="Collapsed" Margin="0,1"/>
									</Grid>
									<Border x:Name="SmallSplit" Width="12" Background="Transparent"  Grid.Column="1" CornerRadius="0,1,1,0" Margin="0,1,1,1">
										<Grid>
											<Path Margin="3,0,2,1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
												Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
											<Rectangle x:Name="segSplitRuleSmall" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed"/>
											<Rectangle x:Name="smallSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0" Visibility="Collapsed" />
										</Grid>
									</Border>
								</Grid>

								<!--GalleryPreview-->
								<Grid x:Name="GalleryPreviewContent" Visibility="Collapsed">
									<igPrim:VerticalGalleryScrollViewer x:Name="GalleryPreviewScrollViewer" UseLayoutRounding="True" Height="60">
										<igPrim:GalleryWrapPanel x:Name="GalleryPreviewPanel">

										</igPrim:GalleryWrapPanel>
									</igPrim:VerticalGalleryScrollViewer>
								</Grid>
							</Grid>
						</Border>

						<Popup x:Name="Popup">
							<Grid x:Name="Items" Visibility="Collapsed" Background="Transparent" IsHitTestVisible="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Border Grid.RowSpan="2" x:Name="MenuBackground" Background="{StaticResource MenuBackgroundBrush}" BorderBrush="{StaticResource MenuBorderBrush}" BorderThickness="1" CornerRadius="3"/>
								<Border Grid.RowSpan="2" x:Name="MenuBorderLightNormal" BorderBrush="{StaticResource MenuBorderLightBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,-1,-1"/>

								<Grid x:Name="ApplicationSubMenuTitleArea" Visibility="Collapsed" Height="23" Margin="2,2,2,0" >
									<Border Background="{StaticResource AppSubMenuTitleBackground}" BorderBrush="{StaticResource AppSubMenuTitleBorder}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"/>
									<TextBlock FontWeight="Bold" Text="{Binding Path=Tool.ApplicationSubmenuTitle, RelativeSource={RelativeSource TemplatedParent}}" Margin="7,3,0,3"/>
									<Border VerticalAlignment="Bottom" Background="{StaticResource ApplicationMenuLeftAreaBorderBrush}" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0,0,0,1" Height="2"/>
								</Grid>
								<Grid Margin="2,2,2,2" Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Border x:Name="SubMenuImageAreaBackground" Width="25" HorizontalAlignment="Left" Background="{StaticResource SubMenuImgAreaBackground}" BorderBrush="{StaticResource SubMenuImgAreaBorder}"  BorderThickness="0,0,1,0"></Border>
									<igPrim:VerticalRibbonScrollViewer x:Name="ItemsScrollViewer">
										<StackPanel MinWidth="100"  Orientation="Vertical" x:Name="ItemsPanel" IsHitTestVisible="True" Background="Transparent"/>
									</igPrim:VerticalRibbonScrollViewer>
									<Border x:Name="ResizeHandleArea" 
											Background="{StaticResource ResizeHandleAreaBackgroundBrush}"
											BorderBrush="{StaticResource ResizeHandleAreaBorderBrush}"
											BorderThickness="0,1,0,0"
											Visibility="Collapsed"
											Grid.Row="1"
											Height="11"
											CornerRadius="0,0,2,2" IsHitTestVisible="True">
										<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,1"  x:Name="ResizeHandle" Background="Transparent" IsHitTestVisible="True">
											<Path
												Width="6"
												Height="6"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleGlyphBackgroundBrush}"
												Opacity="1"
												Stretch="None"/>
											<Path
												Width="6"
												Height="6"
												Margin="0,0,2,2"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleAreaBorderBrush}"
												Opacity="1"
												Stretch="None"/>
										</Grid>
									</Border>
								</Grid>
								<Border Grid.RowSpan="2" x:Name="CollapsedGroupborderLightHover" BorderBrush="#DDFFFFFF" BorderThickness="1" CornerRadius="3" Opacity="0" Margin="1"/>
							</Grid>
						</Popup>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- SegmentedStateMenuToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:SegmentedStateMenuToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:SegmentedStateMenuToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SizeStates">
								<VisualState x:Name="Unknown"/>
								<VisualState x:Name="ApplicationMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Large">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeElements" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Medium">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Menu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescriptionContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallElements" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="ApplicationMenuWithDescription">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationMenuContentWithDescription" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="GalleryPreview">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="GalleryPreviewContent" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeDisabled" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="topSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="botSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenu" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenuDescrip" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleSmall" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverIndirect">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHoverIndirect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="topSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="botSegHighlight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenu" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleAppMenuDescrip" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRuleSmall" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>

							<VisualStateGroup x:Name="SegmentedCommonStates">
								<VisualState x:Name="SegmentNormal"/>
								<VisualState x:Name="SegmentMouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegAppMenu" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegAppMenuDescrip" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppMenuSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegMenu" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="delayedHoverSegMenuDescrip" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LargeSegmentedMouseOver}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonToolHottrackCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonToolHottrackCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SegmentMouseOverIndirect">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedMouseOverIndirect}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SegmentPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckedStates">
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuChecked" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuChecked" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripChecked" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuWithDescripChecked" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripChecked" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuWithDescripChecked" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuChecked" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuChecked" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CheckBoxToolCheckedInMenuCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeChecked" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="segSplitRule" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FFD69E22"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="medSplitRule" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FFD69E22"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuSegSplitRule" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FFD69E22"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="menuDescripSegSplitRule" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FFD69E22"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="appMenuDescripSegHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="appMenuDescripSegHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="appMenuSegHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="appMenuSegHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediumSplit" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SegmentedCheckedPressed}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="smallSegHighlightRight" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Closed"/>
							</VisualStateGroup>

							<VisualStateGroup x:Name="AppMenuDropDownStates">
								<VisualState x:Name="OpenApplicationSubMenu">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ApplicationSubMenuTitleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubMenuImageAreaBackground" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ClosedAppSubMenu"/>
							</VisualStateGroup>

							<VisualStateGroup x:Name="GalleryStates">
								<VisualState x:Name="NoGallery"/>
								<VisualState x:Name="Gallery">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeHandleArea" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" IsHitTestVisible="False" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeHoverIndirect" Background="{StaticResource MenuToolMouseOverIndirect}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeChecked" IsHitTestVisible="False" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" IsHitTestVisible="False" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1"/>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True">
							<Border BorderBrush="{StaticResource ButtonToolDisabledBorderLightBrush}" Margin="1"/>
						</Border>
						<Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">

							<Grid >
								<!--ApplicationMenu-->
								<Grid x:Name="ApplicationMenuElement" Visibility="Collapsed" Margin="2" Background="Transparent">

									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Border x:Name="AppMenuChecked" CornerRadius="2" Margin="4,2,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1">
										<Image x:Name="AppMenuImage" Height="32" Width="32" HorizontalAlignment="Left" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Border>
									<TextBlock x:Name="AppMenuCaption" HorizontalAlignment="Left" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="appMenuSegHighlightLeft" Width="1" Margin="0,-1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="AppMenuSplit" Width="23" Grid.Column="2">
										<igPrim:SegmentedMenuControlSplitButton>
											<Border x:Name="delayedHoverSegAppMenu" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z" IsHitTestVisible="False"/>
											<Rectangle x:Name="segSplitRuleAppMenu" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle x:Name="appMenuSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,-1,0,-1"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!-- ApplicationMenuContentWithDescription -->
								<Grid x:Name="ApplicationMenuContentWithDescription" Visibility="Collapsed" Margin="2" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Border x:Name="AppMenuWithDescripChecked"  Grid.RowSpan="2" CornerRadius="2" Margin="4,2,0,2" BorderThickness="1">
										<Image x:Name="AppMenuDescImage" Height="32" Width="32" Grid.RowSpan="2" Grid.Column="0" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" />
									</Border>
									<TextBlock x:Name="AppMenuDescCaption" FontWeight="Bold" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" Margin="7,0,5,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="appMenuDescripSegHighlightLeft" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="AppMenuWithDescripSplit" Grid.RowSpan="2" Width="23" Grid.Column="2">
										<igPrim:SegmentedMenuControlSplitButton>
											<Border x:Name="delayedHoverSegAppMenuDescrip" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
											Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="segSplitRuleAppMenuDescrip" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle x:Name="appMenuDescripSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!--Large-->
								<Grid  x:Name="LargeElements" Visibility="Collapsed" Margin="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid x:Name="LargeElement" Background="Transparent">
										<Image x:Name="LargeImage" Height="32" Width="32" Margin="4,2" Source="{Binding Path=Tool.LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Grid>
									<Border x:Name="LargeSplit" Grid.Row="1" Background="Transparent" CornerRadius="0,0,2,2" BorderThickness="0">
										<igPrim:LargeToolCaptionPresenter
											x:Name="LargeCaption"
											Margin="1,2,1,0"
											Grid.Row="1" HorizontalAlignment="Center"									
											Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" GlyphVisibility="Visible" />
									</Border>
									<Border x:Name="topSegHighlight" Background="Transparent" BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1" CornerRadius="2,2,0,0" Visibility="Collapsed" UseLayoutRounding="True"/>
									<Border x:Name="botSegHighlight" BorderBrush="{StaticResource SegmentedButtonToolHighlightBrush}" BorderThickness="1" Grid.Row="1" CornerRadius="0,0,2,2" Visibility="Collapsed" UseLayoutRounding="True" Margin="0,1,0,0" IsHitTestVisible="False" />
									<Rectangle x:Name="segSplitRule" Height="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" VerticalAlignment="Top" Visibility="Collapsed" Grid.Row="1"/>
								</Grid>

								<!--Medium-->
								<Grid x:Name="MediumElement" Visibility="Collapsed" Margin="3">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image x:Name="MediumImage" Height="16" Width="16" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									<TextBlock x:Name="MediumCaption" Padding="5,0,0,0"  HorizontalAlignment="Left" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="medSplitRule" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" Width="1" HorizontalAlignment="Right" Grid.Column="1" Margin="0,-3" Visibility="Collapsed"/>
									<Border x:Name="MediumSplit" Background="Transparent" Width="12" Grid.Column="2" CornerRadius="0,1,1,0" Margin="0,-2,-2,-2">
										<Path VerticalAlignment="Center" HorizontalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
										Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
									</Border>
								</Grid>

								<!--Menu-->
								<Grid x:Name="MenuElement" Visibility="Collapsed" Margin="3" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Border x:Name="MenuChecked" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Left" VerticalAlignment="Center">
										<Image x:Name="MenuImage" Height="16" Width="16" HorizontalAlignment="Left" Grid.Column="0" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Border>
									<TextBlock x:Name="MenuCaption" HorizontalAlignment="Left" Margin="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="menuSegHighlightLeft" Width="1" Margin="0,-2" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="MenuSplit" Width="20" Grid.Column="2" CornerRadius="0,1,1,0" Margin="0,-2,-2,-2">
										<igPrim:SegmentedMenuControlSplitButton x:Name="MenuSplitButton">
											<Border x:Name="delayedHoverSegMenu" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
												Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="menuSegSplitRule" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,-1"/>
											<Rectangle x:Name="menuSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
										</igPrim:SegmentedMenuControlSplitButton>
									</Border>
								</Grid>

								<!--MenuWithDescription-->
								<Grid x:Name="MenuWithDescriptionContent" Visibility="Collapsed" Margin="3" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="22" />
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<Border x:Name="MenuWithDescripChecked" Grid.RowSpan="2" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Left" VerticalAlignment="Center">
										<Image x:Name="MenuDescImage" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
									</Border>
									<TextBlock x:Name="MenuDescCaption" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Left" Margin="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<TextBlock Grid.Row="1" HorizontalAlignment="Left" Margin="8,0,5,0" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Description, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
									<Rectangle x:Name="menuDescripSegHighlightLeft" Width="1" Margin="0,-2" Grid.RowSpan="2" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" IsHitTestVisible="False" Grid.Column="1"/>
									<Border x:Name="MenuWithDescripSplit" Grid.RowSpan="2" Width="20" Grid.Column="2" HorizontalAlignment="Right"  VerticalAlignment="Stretch" Margin="0,-2,-2,-2" CornerRadius="0,1,1,0">
										<Grid>
											<Border x:Name="delayedHoverSegMenuDescrip" Background="{StaticResource ButtonToolHottrackCenterBrush}" Visibility="Collapsed" CornerRadius="0,1,1,0"/>
											<Path Margin="0" Fill="{StaticResource MenuItemGlyphBrush}" Stretch="Fill" HorizontalAlignment="Center" Height="7" VerticalAlignment="Center" Width="4"
												Data="M 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,6 1,6 1,6 2,6 2,6 2,6 2,5 2,5 2,5 3,5 3,5 3,5 3,4 3,4 3,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"/>
											<Rectangle x:Name="menuDescripSegSplitRule" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed"/>
											<Rectangle x:Name="menuDescripSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0"/>
										</Grid>
									</Border>
								</Grid>

								<!--Small-->
								<Grid x:Name="SmallElements" Visibility="Collapsed" Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid x:Name="SmallElement" Background="Transparent">
										<Image x:Name="SmallImage" Height="16" Width="16" Margin="3,3,2,3" HorizontalAlignment="Left" Source="{Binding Path=Tool.SmallImage, RelativeSource={RelativeSource TemplatedParent}}" />
										<Rectangle x:Name="smallSegHighlightLeft" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Right" Visibility="Collapsed" Margin="0,1"/>
									</Grid>
									<Border x:Name="SmallSplit" Width="12" Background="Transparent" Grid.Column="1" CornerRadius="0,1,1,0" Margin="0,1,1,1">
										<Grid>
											<Path Margin="3,0,2,1" HorizontalAlignment="Center" VerticalAlignment="Center" Height="3" Width="5" Stretch="Fill" Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
												Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}" />
											<Rectangle x:Name="segSplitRuleSmall" Width="1" Fill="{StaticResource ButtonToolHottrackBorderDarkBrush}" HorizontalAlignment="Left" Visibility="Collapsed"/>
											<Rectangle x:Name="smallSegHighlightRight" Width="1" Fill="{StaticResource SegmentedButtonToolHighlightBrush}" HorizontalAlignment="Left" Margin="1,0,0,0" Visibility="Collapsed" />
										</Grid>
									</Border>
								</Grid>

								<!--GalleryPreview-->
								<Grid x:Name="GalleryPreviewContent" Visibility="Collapsed">
									<igPrim:VerticalGalleryScrollViewer x:Name="GalleryPreviewScrollViewer" UseLayoutRounding="True" Height="60">
										<igPrim:GalleryWrapPanel x:Name="GalleryPreviewPanel">

										</igPrim:GalleryWrapPanel>

									</igPrim:VerticalGalleryScrollViewer>
								</Grid>

							</Grid>
						</Border>

						<Popup x:Name="Popup">
							<Grid x:Name="Items" Visibility="Collapsed" Background="Transparent" IsHitTestVisible="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Border Grid.RowSpan="2" x:Name="MenuBackground" Background="{StaticResource MenuBackgroundBrush}" BorderBrush="{StaticResource MenuBorderBrush}" BorderThickness="1" CornerRadius="3"/>
								<Border Grid.RowSpan="2" x:Name="MenuBorderLightNormal" BorderBrush="{StaticResource MenuBorderLightBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,-1,-1"/>

								<Grid x:Name="ApplicationSubMenuTitleArea" Visibility="Collapsed" Height="23" Margin="2,2,2,0" >
									<Border Background="{StaticResource AppSubMenuTitleBackground}" BorderBrush="{StaticResource AppSubMenuTitleBorder}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"/>
									<TextBlock FontWeight="Bold" Text="{Binding Path=Tool.ApplicationSubmenuTitle, RelativeSource={RelativeSource TemplatedParent}}" Margin="7,3,0,3"/>
									<Border VerticalAlignment="Bottom" Background="{StaticResource ApplicationMenuLeftAreaBorderBrush}" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0,0,0,1" Height="2"/>
								</Grid>
								<Grid Margin="2,2,2,2" Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<Border x:Name="SubMenuImageAreaBackground" Width="25" HorizontalAlignment="Left" Background="{StaticResource SubMenuImgAreaBackground}" BorderBrush="{StaticResource SubMenuImgAreaBorder}"  BorderThickness="0,0,1,0"></Border>
									<igPrim:VerticalRibbonScrollViewer x:Name="ItemsScrollViewer">
										<StackPanel MinWidth="100"  Orientation="Vertical" x:Name="ItemsPanel" IsHitTestVisible="True" Background="Transparent"/>
									</igPrim:VerticalRibbonScrollViewer>
									<Border x:Name="ResizeHandleArea" 
											Background="{StaticResource ResizeHandleAreaBackgroundBrush}"
											BorderBrush="{StaticResource ResizeHandleAreaBorderBrush}"
											BorderThickness="0,1,0,0"
											Visibility="Collapsed"
											Grid.Row="1"
											Height="11"
											CornerRadius="0,0,2,2" IsHitTestVisible="True">
										<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,1"  x:Name="ResizeHandle" Background="Transparent" IsHitTestVisible="True">
											<Path
												Width="6"
												Height="6"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleGlyphBackgroundBrush}"
												Opacity="1"
												Stretch="None"/>
											<Path
												Width="6"
												Height="6"
												Margin="0,0,2,2"
												Data="M 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,4 C4,4 4,6 4,6 4,6 6,6 6,6 6,6 6,4 6,4 6,4 4,4 4,4 zM 0,4 C0,4 0,6 0,6 0,6 2,6 2,6 2,6 2,4 2,4 2,4 0,4 0,4 z"
												Fill="{StaticResource ResizeHandleAreaBorderBrush}"
												Opacity="1"
												Stretch="None"/>
										</Grid>
									</Border>
								</Grid>
								<Border Grid.RowSpan="2" x:Name="CollapsedGroupborderLightHover" BorderBrush="#DDFFFFFF" BorderThickness="1" CornerRadius="3" Opacity="0" Margin="1"/>
							</Grid>
						</Popup>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- GalleryToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:GalleryToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:GalleryToolControl">
					<Grid>
						<ScrollViewer x:Name="GalleryToolScrollViewer" HorizontalScrollBarVisibility="Hidden" BorderBrush="{StaticResource GalleryToolBorderBrush}" BorderThickness="0,1" VerticalScrollBarVisibility="Auto" UseLayoutRounding="True" Padding="0" Margin="0">
							<igPrim:GalleryWrapPanel x:Name="GalleryToolPanel" Background="{StaticResource GalleryToolBackgroundBrush}"/>
						</ScrollViewer>
						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Tool.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Tool.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- GalleryItemGroupControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:GalleryItemGroupControl">
		<Setter Property="Foreground" Value="{StaticResource GalleryGroupHeaderTextBrush}"/>
		<Setter Property="Background" Value="{StaticResource GalleryGroupHeaderBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource GalleryToolBorderBrush}"/>
		<Setter Property="BorderThickness" Value="0,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:GalleryItemGroupControl">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DefaultStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="contentPresenter">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Border			
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							>
								<Border BorderThickness="0,1,0,0" BorderBrush="#FFFFFFFF" Padding="7,3,7,2">
									<TextBlock Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"/>
								</Border>
							</Border>
							<igPrim:GalleryWrapPanel x:Name="GalleryToolPanel" Background="Transparent" Grid.Row="1"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- GalleryItemControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:GalleryItemControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:GalleryItemControl">
					<Grid VerticalAlignment="Stretch">
						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="SelectedStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ImageBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="EntireItemBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TextDisplayMode">
								<VisualState x:Name="Below"/>
								<VisualState x:Name="Left">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Right">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Above">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="(Grid.Column)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
							<!--TextDisplayMode-->

							<VisualStateGroup x:Name="CaptionVisibilityStates">
								<VisualState x:Name="VisibleCaption">
									<Storyboard>

										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapsedCaption">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="HighlightMode">
								<VisualState x:Name="None"/>

								<VisualState x:Name="Image">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="ImageBorder" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Both">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="EntireItemBorder" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
							<!--HighlightMode-->

							<VisualStateGroup x:Name="HoverStates">
								<VisualState x:Name="Normal"/>

								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="GalleryItemElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>


							</VisualStateGroup>

							<VisualStateGroup x:Name="PressedStates">

								<VisualState x:Name="NotPressed"/>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>


						<Grid x:Name="GalleryItemElement" VerticalAlignment="Stretch" IsHitTestVisible="True" Background="Transparent" MinHeight="60">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<!-- Normal Hover -->
							<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="3" Grid.RowSpan="3">
								<Border Background="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
							</Border>

							<!-- Pressed -->
							<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="2">
								<Border Background="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
							</Border>

							<!-- Application Menu Hover-->
							<Border x:Name="ApplicationMenuButtonHoverElement" Background="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="3" Grid.RowSpan="3">
								<Border Background="{StaticResource ButtonToolHottrackCenterBrush}" Margin="1" CornerRadius="1"/>
							</Border>

							<!-- Highlight Entire Item -->
							<Border x:Name="EntireItemBorder" Opacity="0" Grid.ColumnSpan="3" Grid.RowSpan="3" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" UseLayoutRounding="True"/>


							<!-- Highlight Image Only-->
							<Border x:Name="ImageBorder" Opacity="0" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" Visibility="Collapsed" CornerRadius="2" Grid.Column="1" Grid.Row="1" Margin="2"/>

							<Image x:Name="GalleryItemImage" Height="32" Width="32" Grid.Column="1" Grid.Row="1" Source="{Binding Path=GalleryItemControlOwner.Image, RelativeSource={RelativeSource TemplatedParent}}" Margin="3" Stretch="None"/>
							<TextBlock x:Name="CaptionElement" VerticalAlignment="{Binding Path=GalleryItemControlOwner.VerticalTextAlignmentResolved, RelativeSource={RelativeSource TemplatedParent}}" TextAlignment="{Binding Path=GalleryItemControlOwner.HorizontalTextAlignmentResolved, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="2" Grid.Column="1" Text="{Binding Path=GalleryItemControlOwner.Text, RelativeSource={RelativeSource TemplatedParent}}" Margin="3,0,3,3"/>

						</Grid>
						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddGalleryToQAT}" >
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- QATMenu Style -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:QATMenu">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:QATMenu">
					<Grid HorizontalAlignment="Stretch" Background="Transparent">
						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">
								<VisualState x:Name="Open">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0" Value="True" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Closed"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>

						<Border Padding="2" x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
						</Border>

						<Popup x:Name="Popup">
							<Grid x:Name="Items" Visibility="Visible" Background="Transparent" IsHitTestVisible="True">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Border Grid.RowSpan="2" x:Name="MenuBackground" Background="{StaticResource MenuBackgroundBrush}" BorderBrush="{StaticResource MenuBorderBrush}" BorderThickness="1" CornerRadius="3"/>
								<Border Grid.RowSpan="2" x:Name="MenuBorderLightNormal" BorderBrush="{StaticResource MenuBorderLightBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,-1,-1"/>
								<Grid Height="22" Margin="2,2,2,0">
									<Border Background="{StaticResource AppSubMenuTitleBackground}" BorderBrush="{StaticResource AppSubMenuTitleBorder}" BorderThickness="0,0,0,1" CornerRadius="2,2,0,0"/>
									<TextBlock Foreground="{StaticResource GalleryGroupHeaderTextBrush}" FontWeight="Bold" FontSize="10" Text="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}}" Margin="5,4"/>
								</Grid>
								<Grid Margin="2,1,2,2" Grid.Row="1">
									<Border x:Name="SubMenuImageAreaBackground" Width="24" HorizontalAlignment="Left" Background="{StaticResource SubMenuImgAreaBackground}"></Border>
									<igPrim:VerticalRibbonScrollViewer x:Name="ItemsScrollViewer">
										<StackPanel MinWidth="100"  Orientation="Vertical" x:Name="ItemsPanel" IsHitTestVisible="True" Background="Transparent"/>
									</igPrim:VerticalRibbonScrollViewer>
								</Grid>
								<Border Grid.RowSpan="2" x:Name="CollapsedGroupborderLightHover" BorderBrush="#DDFFFFFF" BorderThickness="1" CornerRadius="3" Opacity="0" Margin="1"/>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- QATOverflowButtonStyle  -->
	<!-- =================================================================== -->
	<Style x:Key="QATOverflowButtonStyle" TargetType="ToggleButton">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="LayoutRoot" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="BtnChromePressed" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="BtnChromeHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="BtnChromePressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- QuickAccessToolbar Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:QuickAccessToolbar">
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:QuickAccessToolbar">
					<Border x:Name="Bd">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="OverflowToolbarPaneStates">
								<VisualState x:Name="Closed"/>
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="OverflowToolbarPanel" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OverflowToolbarPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="QATStates">
								<VisualState x:Name="AboveRibbon"/>
								<VisualState x:Name="BelowRibbon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource QATBelowRibbonBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource QATBelowRibbonBorderBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.Padding)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,0,1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="verticalRule" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="QATMenuStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="ShowOverflow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="QatMenu" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OverflowButton" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EnabledStates">
								<VisualState x:Name="Enabled"/>
								<VisualState x:Name="Disabled">

									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>



									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="Stretch" x:Name="RootElement">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<igPrim:QuickAccessToolbarPanel  x:Name="ItemsPanel" Height="22"/>
								<ToggleButton Visibility="Collapsed" x:Name="OverflowButton" Grid.Column="1" IsChecked="{Binding Path=OverflowButtonIsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource QATOverflowButtonStyle}">
									<ToggleButton.Resources>
										<DataTemplate x:Name="OverflowPopupTemplate">
											<Popup OpacityMask="Black" x:Name="OverflowPopup">
												<Border Background="{StaticResource QATOverflowPanelBackgroundBrush}" BorderBrush="{StaticResource QATOverflowPanelBorderBrush}" CornerRadius="2" Padding="2,1,2,2" BorderThickness="1">
													<Border.Effect>
														<DropShadowEffect Opacity="0.35" ShadowDepth="4"/>
													</Border.Effect>
													<Grid x:Name="OverflowToolbarPanel" >
														<Grid.ColumnDefinitions>
															<ColumnDefinition/>
															<ColumnDefinition/>
														</Grid.ColumnDefinitions>
														<igPrim:QuickAccessToolbarOverflowPanel x:Name="OverflowContainerControl" Height="22" Orientation="Horizontal"/>
														<igPrim:QATMenu x:Name="QatOverflowMenu" Grid.Column="1" Width="13" Height="22">
															<igPrim:QATMenu.Content>
																<Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
																	<Path
															Width="7"
															Height="6"
															Data="M 1,3 C1,3 1,4 1,4 1,4 2,4 2,4 2,4 2,5 2,5 2,5 3,5 3,5 3,5 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 1,3 1,3 zM 0,0 C0,0 0,1 0,1 0,1 7,1 7,1 7,1 7,0 7,0 7,0 0,0 0,0 z"
															Fill="{StaticResource QATCustomizeDropdownNormalBackgroundBrush}"
															Opacity="1"
															Stretch="Fill"
															Margin="0,2,0,0"/>
																	<Path
															Width="7"
															Height="6"
															Data="M 1,3 C1,3 1,4 1,4 1,4 2,4 2,4 2,4 2,5 2,5 2,5 3,5 3,5 3,5 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 1,3 1,3 zM 0,0 C0,0 0,1 0,1 0,1 7,1 7,1 7,1 7,0 7,0 7,0 0,0 0,0 z"
															Fill="{StaticResource QATCustomizeDropdownNormalForegroundBrush}"
															Opacity="1"
															Stretch="Fill"/>
																</Grid>
															</igPrim:QATMenu.Content>
														</igPrim:QATMenu>
													</Grid>
												</Border>
											</Popup>
										</DataTemplate>
									</ToggleButton.Resources>
									<Grid>

										<Path
										Width="6"
										Height="3"
										Data="M 4,0 C4,0 4,3 4,3 4,3 5,3 5,3 5,3 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 4,0 4,0 zM 0,0 C0,0 0,3 0,3 0,3 1,3 1,3 1,3 1,2 1,2 1,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"
										Fill="{StaticResource DarkBrush}"
										Opacity="1"
										Stretch="Fill"/>

									</Grid>
								</ToggleButton>
								<igPrim:QATMenu x:Name="QatMenu" Grid.Column="1" Width="13" Height="22" VerticalAlignment="Bottom">
									<igPrim:QATMenu.Content>
										<Grid>
											<Path
												Width="7"
												Height="6"
												Data="M 1,3 C1,3 1,4 1,4 1,4 2,4 2,4 2,4 2,5 2,5 2,5 3,5 3,5 3,5 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 1,3 1,3 zM 0,0 C0,0 0,1 0,1 0,1 7,1 7,1 7,1 7,0 7,0 7,0 0,0 0,0 z"
												Fill="{StaticResource QATCustomizeDropdownNormalBackgroundBrush}"
												Opacity="1"
												Stretch="Fill"
												Margin="0,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
											<Path
												Width="7"
												Height="6"
												Data="M 1,3 C1,3 1,4 1,4 1,4 2,4 2,4 2,4 2,5 2,5 2,5 3,5 3,5 3,5 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 1,3 1,3 zM 0,0 C0,0 0,1 0,1 0,1 7,1 7,1 7,1 7,0 7,0 7,0 0,0 0,0 z"
												Fill="{StaticResource QATCustomizeDropdownNormalForegroundBrush}"
												Opacity="1"
												Stretch="Fill"/>
										</Grid>
									</igPrim:QATMenu.Content>
								</igPrim:QATMenu>
								<Rectangle x:Name="verticalRule" Width="3" Height="15" Fill="{StaticResource QATSeparatorFillBrush}" Stroke="{StaticResource QATSeparatorBorderBrush}" StrokeThickness="1" Grid.Column="2" Margin="6,0,0,0" RadiusX="1" RadiusY="1"/>
							</Grid>


						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbonApplicationMenuRecentItemsItem Style -->
	<!-- =================================================================== -->
	<Style x:Key="RecentItemsItemStyle" TargetType="ListBoxItem">
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{StaticResource MenuItemHottrackCenterBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource MenuItemHottrackBorderDarkBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ItemHottrackVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ItemHottrackVisual" Margin="0" Visibility="Collapsed">
							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource MenuItemHottrackBorderLightBrush}" CornerRadius="2"/>
							<Rectangle Fill="{TemplateBinding Background}" Margin="2"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbonApplicationMenu Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbonApplicationMenu">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbonApplicationMenu">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="NormalApplicationMenuStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Open" To="Closed" GeneratedDuration="00:00:00.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Closed"/>
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="MainMenuArea" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Opened" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MainMenuArea" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="applicationMenuButton2" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Popupx" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0" Value="true" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="MouseOver" To="Normal" GeneratedDuration="00:00:00.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Hover2" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- application Menu Button -->
						<Grid x:Name="applicationMenuButton2" Width="56"  Height="23"  Background="#00ffffff"  HorizontalAlignment="Left" VerticalAlignment="Top">

							<Grid x:Name="Normal2" Height="22" VerticalAlignment="Center">
								<Border BorderBrush="{StaticResource ApplicationMenuButtonNormalOuterBorderBrush}" BorderThickness="1" Background="{StaticResource ApplicationMenuButtonNormalCenterBrush}" CornerRadius="1,3,0,0">
									<Border BorderBrush="{StaticResource ApplicationMenuButtonNormalHighlightBrush}" BorderThickness="1,1,1,0" Height="9" VerticalAlignment="Top" CornerRadius="0,2,0,0"/>
								</Border>
							</Grid>
							<Grid x:Name="Hover2" Opacity="0" Height="22" VerticalAlignment="Center">
								<Border BorderBrush="{StaticResource ApplicationMenuButtonHoverOuterBorderBrush}" BorderThickness="1" Background="{StaticResource ApplicationMenuButtonHoverCenterBrush}" CornerRadius="1,3,0,0">
									<Border BorderThickness="1,1,1,0" Height="9" VerticalAlignment="Top" BorderBrush="{StaticResource ApplicationMenuButtonHoverHighlightBrush}" CornerRadius="0,2,0,0"/>
								</Border>
							</Grid>
							<Grid x:Name="Opened2" Opacity="0" Height="23">
								<Border Background="{StaticResource ApplicationMenuButtonPressedCenterBrush}"/>
							</Grid>
							<Image x:Name="applicationMenuButtonImage2" MaxWidth="16" MaxHeight="16" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Path=Image, RelativeSource={RelativeSource TemplatedParent}}" />
						</Grid>

						<Popup x:Name="Popupx" IsOpen="False" Canvas.ZIndex="0" Grid.Row="1" IsHitTestVisible="True">
							<Canvas Background="Transparent">
								<Grid x:Name="MainMenuArea" Background="Transparent" Width="519" Opacity="0" Visibility="Collapsed">

									<Grid.RowDefinitions>
										<RowDefinition Height="25"/>
										<RowDefinition/>
										<RowDefinition Height="Auto" MinHeight="17"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<!-- Menu Chrome -->
									<Border x:Name="appMenuBorder" BorderBrush="{StaticResource ApplicationMenuOuterBorderDarkBrush}" BorderThickness="1" Grid.RowSpan="3" Grid.ColumnSpan="2" CornerRadius="1"/>
									<Border x:Name="appMenuHeaderChrome" Background="{StaticResource ApplicationMenuHeaderChromeBrush}" Grid.ColumnSpan="2" Margin="1,1,1,0" BorderThickness="0,0,0,1" BorderBrush="{StaticResource ApplicationMenuHeaderChromeBorderBrush}"/>
									<!-- End Menu Chrome -->

									<!-- Menu Items Background -->
									<Border Grid.Row="1" Margin="1,0,0,0" Background="{StaticResource ApplicationMenuLeftAreaCenterBrush}" BorderBrush="{StaticResource ApplicationMenuLeftAreaBorderBrush}" BorderThickness="0,0,1,0"/>

									<!-- Menu Items Area -->
									<StackPanel Orientation="Vertical" x:Name="ItemsPanel" Grid.Row="1" IsHitTestVisible="True" Background="Transparent" Margin="1,0"/>
									<Border Width="{Binding Path=AppMenuRecentItemColumnActualWidth, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=AppMenuActualHeight, RelativeSource={RelativeSource TemplatedParent}}" x:Name="RecentItemsBackground" Grid.Row="1" Grid.Column="1" Margin="0,0,1,0"  MinHeight="64"  Background="{StaticResource ApplicationMenuRecentItemsCenterBrush}"  BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0">
										<Grid>
											<Border HorizontalAlignment="Stretch" Width="Auto" Background="{StaticResource ApplicationMenuRecentItemsCenterBrush}" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="1,0,0,0">
												<Grid>
													<Grid.RowDefinitions>
														<RowDefinition Height="23"></RowDefinition>
														<RowDefinition Height="*"></RowDefinition>
													</Grid.RowDefinitions>
													<ContentControl Grid.Row="0" x:Name="RecentItemsHeader" Content="{TemplateBinding RecentItemsHeader}" IsTabStop="False" Margin="7,3,0,3"/>
													<Border VerticalAlignment="Bottom" Background="{StaticResource ApplicationMenuLeftAreaBorderBrush}" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0,0,0,1" Height="2" d:IsHidden="True"/>
													<ListBox VerticalAlignment="Stretch" Background="Transparent" HorizontalAlignment="Stretch"  Grid.Row="1" x:Name="RecentItemsPanel" BorderThickness="0" ItemContainerStyle="{StaticResource RecentItemsItemStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" />
												</Grid>
											</Border>
										</Grid>
									</Border>
									<!-- FooterToolbar -->
									<Grid Grid.Row="2" Grid.ColumnSpan="2">
										<Border x:Name="footerChromeBg" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{StaticResource ApplicationMenuFooterChromeBrush}" Margin="1,0,1,1" BorderThickness="0,1,0,0" BorderBrush="{StaticResource ApplicationMenuFooterChromeBorderBrush}"/>
										<ContentControl x:Name="FooterToolbar" Content="{TemplateBinding Footer}" Margin="6,1,5,2"/>
									</Grid>
								</Grid>
								<!-- application Menu Button -->
								<Grid x:Name="applicationMenuButton" Width="56"  Height="23"  Background="#00ffffff"  HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.ZIndex="999">

									<Grid x:Name="Normal1" Height="22" VerticalAlignment="Center">
										<Border BorderBrush="{StaticResource ApplicationMenuButtonNormalOuterBorderBrush}" BorderThickness="1" Background="{StaticResource ApplicationMenuButtonNormalCenterBrush}" CornerRadius="1,3,0,0">
											<Border BorderBrush="{StaticResource ApplicationMenuButtonNormalHighlightBrush}" BorderThickness="1,1,1,0" Height="9" VerticalAlignment="Top" CornerRadius="0,2,0,0"/>
										</Border>
									</Grid>
									<Grid x:Name="Hover" Opacity="0" Height="22" VerticalAlignment="Center">
										<Border BorderBrush="{StaticResource ApplicationMenuButtonHoverOuterBorderBrush}" BorderThickness="1" Background="{StaticResource ApplicationMenuButtonHoverCenterBrush}" CornerRadius="1,3,0,0">
											<Border BorderThickness="1,1,1,0" Height="9" VerticalAlignment="Top" BorderBrush="{StaticResource ApplicationMenuButtonHoverHighlightBrush}" CornerRadius="0,2,0,0"/>
										</Border>
									</Grid>
									<Grid x:Name="Opened" Opacity="0" Height="23">
										<Border Background="{StaticResource ApplicationMenuButtonPressedCenterBrush}"/>
									</Grid>
									<!-- Image -->
									<Image x:Name="applicationMenuButtonImage" MaxWidth="16" MaxHeight="16" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Path=Image, RelativeSource={RelativeSource TemplatedParent}}" />

								</Grid>
								<!-- End Orb -->
							</Canvas>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbonApplicationMenu2010 Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbonApplicationMenu2010">
		<Setter Property="TrimColor" Value="{StaticResource DefaultTrimBrush}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbonApplicationMenu2010">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="NormalApplicationMenuStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Open" To="Closed" GeneratedDuration="00:00:00.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Closed"/>
								<VisualState x:Name="Open">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="MainMenuArea" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Opened" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MainMenuArea" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="applicationMenuButton2" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Popupx" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0" Value="true" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="Hover2" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- application Menu Button -->

						<Grid Width="56"  Height="23" x:Name="applicationMenuButton2" Background="#00ffffff"  HorizontalAlignment="Left" VerticalAlignment="Top">

							<!-- Base Trim Color -->
							<Border Background="{Binding Path=TrimColor, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="4,4,0,0"/>

							<Grid x:Name="Normal2" Width="56" Height="23">
								<Border BorderBrush="#59000000" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
								<Border BorderBrush="#26000000" BorderThickness="1,1,1,0" Margin="1,1,1,0" CornerRadius="2,2,0,0"/>
								<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
									<Border.Background>
										<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#33000000"/>
													<GradientStop Offset="0.30" Color="#59000000"/>
													<GradientStop Offset="0.44" Color="#58000000"/>
													<GradientStop Offset="1" Color="#19000000"/>
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>

							<Grid x:Name="Hover2" Opacity="0" Height="23">
								<Border BorderThickness="1,1,1,0" BorderBrush="#59000000" CornerRadius="3,3,0,0"/>
								<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
									<Border.Background>
										<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#33000000"/>
													<GradientStop Offset="0.30" Color="#58000000"/>
													<GradientStop Offset="0.32" Color="#55000000"/>
													<GradientStop Offset="0.44" Color="#4c000000"/>
													<GradientStop Offset="1" Color="#00000000"/>
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>

							<Grid x:Name="Opened2" Opacity="0" Height="23">
								<Border BorderBrush="#7F000000" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
								<Border Margin="1,1,1,0" BorderBrush="#3F000000" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0"/>
								<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
									<Border.Background>
										<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#72000000"/>
													<GradientStop Offset="1" Color="#00000000"/>
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>


							<ContentControl Foreground="{TemplateBinding Foreground}" x:Name="applicationMenuButtonContentArea2" HorizontalAlignment="Center" VerticalAlignment="Center" ContentTemplate="{Binding Path=CaptionTemplate, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}}" />

						</Grid>

						<Popup x:Name="Popupx" IsOpen="False" Canvas.ZIndex="0" Grid.Row="1" IsHitTestVisible="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
							<Canvas>
								<Grid x:Name="MainMenuArea" Opacity="1" Visibility="Collapsed" IsHitTestVisible="True" ScrollViewer.VerticalScrollBarVisibility="Visible">

									<Grid.RowDefinitions>
										<RowDefinition Height="25"/>
										<RowDefinition/>
										<!--<RowDefinition/>-->
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="155" MinWidth="155"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>

									<!-- Menu Chrome -->
									<Border x:Name="appMenuTopBorder" BorderBrush="{Binding Path=TrimColor,  RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,0,0,1" Grid.RowSpan="2" Grid.ColumnSpan="2" CornerRadius="1" IsHitTestVisible="False" Canvas.ZIndex="999"/>
									<Border x:Name="appMenuBorder" BorderBrush="{StaticResource ApplicationMenu2010MenuBorderBrush}" BorderThickness="1" Grid.Row="1" Grid.ColumnSpan="2" IsHitTestVisible="False" Canvas.ZIndex="999" Margin="0,-2,0,0"/>
									<Border x:Name="appMenuHeaderChrome" Background="Transparent" Grid.ColumnSpan="2" Margin="0,0,1,0" BorderThickness="0,0,0,2" BorderBrush="{Binding Path=TrimColor, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False"/>
									<Border BorderBrush="{StaticResource ApplicationMenu2010TopTrimFadeBrush}" BorderThickness="{Binding Path=BorderThickness, ElementName=appMenuHeaderChrome}" Grid.ColumnSpan="2" IsHitTestVisible="False" Canvas.ZIndex="999" Margin="1,0"/>
									<!-- End Menu Chrome     -->

									<!-- Menu Items Background -->
									<Border Grid.Row="1" BorderBrush="{StaticResource ApplicationMenu2010MenuItemsBorderBrush}" BorderThickness="0,0,1,0" Background="{StaticResource ApplicationMenu2010MenuItemsBackgroundBrush}" IsHitTestVisible="True">
										<Rectangle Fill="{StaticResource ApplicationMenu2010MenuItemsShdwBrush}" Width="5" HorizontalAlignment="Right"/>
									</Border>

									<!-- Menu Items Area -->
									<StackPanel Orientation="Vertical" x:Name="ItemsPanel" Grid.Row="1" Canvas.ZIndex="1" ScrollViewer.VerticalScrollBarVisibility="Hidden"/>

									<Border x:Name="BackStageBackground" Grid.Row="1" Grid.Column="1" MinHeight="64"  Background="#FFFFFFFF" BorderBrush="{StaticResource ApplicationMenuRecentItemsBorderBrush}" BorderThickness="0" IsHitTestVisible="True">
										<Grid x:Name="BackStageContentContainer">
											<igPrim:KeyTipProvidingContentControl x:Name="BackStageContent" IsTabStop="False" Padding="5" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ContentTemplate="{Binding Path=SelectedTab.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"  />
										</Grid>
									</Border>

								</Grid>
								<!-- application Menu Button -->

								<Grid x:Name="applicationMenuButton" Width="56"  Height="23"  Background="#00ffffff"  HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.ZIndex="999">

									<!-- Base Trim Color -->
									<Border Background="{Binding Path=TrimColor, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="4,4,0,0"/>

									<Grid x:Name="Normal1" Width="56" Height="23">
										<Border BorderBrush="#59000000" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
										<Border BorderBrush="#26000000" BorderThickness="1,1,1,0" Margin="1,1,1,0" CornerRadius="2,2,0,0"/>
										<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
											<Border.Background>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStopCollection>
															<GradientStop Offset="0" Color="#33000000"/>
															<GradientStop Offset="0.30" Color="#59000000"/>
															<GradientStop Offset="0.44" Color="#58000000"/>
															<GradientStop Offset="1" Color="#19000000"/>
														</GradientStopCollection>
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Border.Background>
										</Border>
									</Grid>

									<Grid x:Name="Hover" Opacity="0" Height="23">
										<Border BorderThickness="1,1,1,0" BorderBrush="#59000000" CornerRadius="3,3,0,0"/>
										<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
											<Border.Background>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStopCollection>
															<GradientStop Offset="0" Color="#33000000"/>
															<GradientStop Offset="0.30" Color="#58000000"/>
															<GradientStop Offset="0.32" Color="#55000000"/>
															<GradientStop Offset="0.44" Color="#4c000000"/>
															<GradientStop Offset="1" Color="#00000000"/>
														</GradientStopCollection>
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Border.Background>
										</Border>
									</Grid>

									<Grid x:Name="Opened" Opacity="0" Height="24" Margin="0,0,0,-1">
										<Border BorderBrush="#7F000000" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
										<Border Margin="1,1,1,0" BorderBrush="#3F000000" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0"/>
										<Border Margin="2,2,2,0" CornerRadius="2,2,0,0">
											<Border.Background>
												<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
													<LinearGradientBrush.GradientStops>
														<GradientStopCollection>
															<GradientStop Offset="0" Color="#72000000"/>
															<GradientStop Offset="1" Color="#00000000"/>
														</GradientStopCollection>
													</LinearGradientBrush.GradientStops>
												</LinearGradientBrush>
											</Border.Background>
										</Border>
									</Grid>

									<!-- Caption -->
									<ContentControl x:Name="applicationMenuButtonContentArea" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=CaptionTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
								</Grid>
								<!-- End Orb -->
							</Canvas>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- Office2010ApplicationMenuTabToolControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:Office2010ApplicationMenuTabToolControl">
		<Setter Property="Foreground" Value="{StaticResource ToolEnabledForegroundTextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:Office2010ApplicationMenuTabToolControl">
					<Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" Background="Transparent" Height="37">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BtnChromeSelected" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AppMenuContentCaption" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="BtnChromeHover" BorderBrush="{Binding Path=Tool.ApplicationMenu.TrimColor, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,1" Background="{Binding Path=Tool.ApplicationMenu.TrimColor, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
							<Border Background="{StaticResource btnHoverHighlightBackgroundBrush}" BorderBrush="{StaticResource btnHoverHighlightBorderBrush}" BorderThickness="0,1"/>
						</Border>
						<Border x:Name="BtnChromeSelected" Visibility="Collapsed">
							<Grid>
								<Border Background="{Binding Path=Tool.ApplicationMenu.TrimColor, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,1" BorderBrush="{Binding Path=Tool.ApplicationMenu.TrimColor, RelativeSource={RelativeSource TemplatedParent}}"/>
								<Rectangle
										 Height="1"
										 VerticalAlignment="Bottom"
										 Fill="#000000"
										 Opacity="0.65"/>
								<Rectangle
										 Height="1"
										 VerticalAlignment="Top"
										 Fill="#000000"
										 Opacity="0.75"/>
								<Rectangle Margin="0,1,0,1">
									<Rectangle.Fill>
										<RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,1" RadiusX="0.5" RadiusY="1">
											<RadialGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#00000000"/>
													<GradientStop Offset="0.38" Color="#29000000"/>
													<GradientStop Offset="1" Color="#7d000000"/>
												</GradientStopCollection>
											</RadialGradientBrush.GradientStops>
										</RadialGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Height="5" Margin="0,1,0,0" VerticalAlignment="Top">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#3f000000"/>
													<GradientStop Offset="1" Color="#000d5c31"/>
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Rectangle Height="5" Margin="0,0,0,1" VerticalAlignment="Bottom">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Offset="0" Color="#000d5c31"/>
													<GradientStop Offset="1" Color="#3f000000"/>
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								<Path x:Name="SelectMark" Data="M 0,7 C0,7 0,8 0,8 0,8 1,8 1,8 1,8 1,9 1,9 1,9 2,9 2,9 2,9 2,10 2,10 2,10 3,10 3,10 3,10 3,11 3,11 3,11 4,11 4,11 4,11 4,12 4,12 4,12 5,12 5,12 5,12 5,13 5,13 5,13 6,13 6,13 6,13 6,14 6,14 6,14 7,14 7,14 7,14 7,15 7,15 7,15 8,15 8,15 8,15 8,0 8,0 8,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,5 3,5 3,5 2,5 2,5 2,5 2,6 2,6 2,6 1,6 1,6 1,6 1,7 1,7 1,7 0,7 0,7 z" Fill="#FFFFFFFF" VerticalAlignment="Center" Canvas.ZIndex="999" HorizontalAlignment="Right"/>
							</Grid>
						</Border>
						<Border x:Name="BtnChromeDisabled" Background="{StaticResource ButtonToolDisabledCenterBrush}" BorderBrush="{StaticResource ButtonToolDisabledBorderDarkBrush}" BorderThickness="0,1" Visibility="Collapsed">
							<Border BorderBrush="{StaticResource ButtonToolDisabledBorderLightBrush}" BorderThickness="0,1"/>
						</Border>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<Grid>
								<Grid x:Name="ApplicationMenuContent" Visibility="Visible" Margin="0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<TextBlock x:Name="AppMenuContentCaption" Margin="34,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource ToolEnabledForegroundTextBrush}" FontSize="11" Text="{Binding Path=Tool.Caption, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
								</Grid>
							</Grid>
						</Border>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- RibbonTabControl -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:RibbonTabControl">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:RibbonTabControl">
					<Grid Background="{TemplateBinding Background}" >
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ContextualTabSelectedStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ContextualTabSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<Grid.RowDefinitions>
							<RowDefinition Height="23"/>
							<RowDefinition />
							<RowDefinition Height="0"/>
						</Grid.RowDefinitions>


						<Grid Grid.Row="1" x:Name="GroupAreaPanel">
							<Grid x:Name="GroupArea" Height="93">

								<Border x:Name="NormalBorder" Background="{StaticResource GroupAreaBackgroundBrush}" BorderBrush="{StaticResource GroupAreaBorderBrush}" BorderThickness="0,1">
									<Rectangle Fill="{StaticResource GroupAreaHighlightBrush}" VerticalAlignment="Bottom" Height="1" Margin="0,0,0,1"/>
								</Border>

								<Border x:Name="ContextualTabSelected" Background="{StaticResource GroupAreaBackgroundBrush}" BorderBrush="{Binding SelectedTab.ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0,1" Visibility="Collapsed">
									<Rectangle Fill="{StaticResource GroupAreaHighlightBrush}" VerticalAlignment="Bottom" Height="1" Margin="0,0,0,1"/>
								</Border>
								<igPrim:HorizontalRibbonScrollViewer x:Name="GroupScrollViewer" Margin="1,2,1,3" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" >
									<igPrim:RibbonGroupPanel x:Name="GroupsPanel"/>
								</igPrim:HorizontalRibbonScrollViewer>
                                <ig:ContextMenuService.Manager>
                                    <ig:ContextMenuManager>
                                        <ig:ContextMenuManager.ContextMenu>
                                            <ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                                                <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
                                                    <ig:Commanding.Command>
                                                        <ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
                                                    </ig:Commanding.Command>
                                                </ig:XamMenuItem>
                                                <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ig:Commanding.Command>
                                                        <ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
                                                    </ig:Commanding.Command>
                                                </ig:XamMenuItem>
                                                <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ig:Commanding.Command>
                                                        <ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
                                                    </ig:Commanding.Command>
                                                </ig:XamMenuItem>
                                                <ig:XamMenuSeparator/>
                                                <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
                                                    <ig:Commanding.Command>
                                                        <ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
                                                    </ig:Commanding.Command>
                                                </ig:XamMenuItem>
                                                <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                </ig:XamMenuItem>
                                            </ig:XamContextMenu>
                                        </ig:ContextMenuManager.ContextMenu>
                                    </ig:ContextMenuManager>
                                </ig:ContextMenuService.Manager>
                            </Grid>
						</Grid>

						<igPrim:HorizontalRibbonScrollViewer Margin="55,0,10,-1" x:Name="TabScrollViewer" HorizontalContentAlignment="Left" >
                            <igPrim:RibbonTabItemPanel x:Name="TabPanel" />
                        </igPrim:HorizontalRibbonScrollViewer>

                        <Popup x:Name="Popup" Grid.Row="2"></Popup>

                        <ig:ContextMenuService.Manager>
                            <ig:ContextMenuManager>
                                <ig:ContextMenuManager.ContextMenu>
                                    <ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuSeparator/>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
                                            <ig:Commanding.Command>
                                                <ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
                                            </ig:Commanding.Command>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        </ig:XamMenuItem>
                                    </ig:XamContextMenu>
                                </ig:ContextMenuManager.ContextMenu>
                            </ig:ContextMenuManager>
                        </ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbonTabItem -->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbonTabItem">
		<Setter Property="Foreground" Value="{StaticResource TabIsSelectedTextBrush}"/>
		<Setter Property="Margin" Value="0,1,0,0"/>
		<Setter Property="MinWidth" Value="40"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbonTabItem">
					<Grid>
						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="CommonStates">

								<VisualStateGroup.Transitions>
									<VisualTransition From="Hover" To="Normal" GeneratedDuration="00:00:00.15"/>
									<VisualTransition From="SelectedHover" To="Selected" GeneratedDuration="00:00:00.1"/>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Normal"/>

								<VisualState x:Name="Hover">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="TabMouseOverNotSelected" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="TabSelected" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="ContextualTabSelected" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedHover">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="TabSelected" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="00:00:00.1" To="1" Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetName="ContextualTabSelected" Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>

							<VisualStateGroup x:Name="AvailableSpaceStates">
								<VisualState x:Name="EnoughSpace"/>
								<VisualState x:Name="LimitedSpace">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TabSeparatorDark" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TabSeparatorLight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TabTypeStates">
								<VisualState x:Name="Standard"/>
								<VisualState x:Name="Contextual">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContextualTabSelected" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TabSelected" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TabHottrack" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ContextualFirstStates">
								<VisualState x:Name="NotFirst"/>
								<VisualState x:Name="First">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContextualTabInTabAreaSeparatorLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContextualTabInTabAreaHighlightLeft" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ContextualLastStates">
								<VisualState x:Name="NotLast"/>
								<VisualState x:Name="Last">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContextualTabInTabAreaSeparatorRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContextualTabInTabAreaHighlightRight" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<!-- Normal Hover-->
						<Grid  Opacity="0" x:Name="TabMouseOverNotSelected"  Height="Auto" Margin="0,0,0,1" >
							<Border x:Name="BorderDark" Background="{StaticResource TabInactiveHoverCenterBrush}" BorderBrush="{StaticResource TabInactiveHoverBorderDarkBrush}" BorderThickness="1,1,1,0" CornerRadius="4,4,0,0" Visibility="Visible">
								<Border BorderBrush="{StaticResource TabInactiveHoverBorderLightBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0"/>
							</Border>
							<Border x:Name="contextualHoverNotSelected" 
								BorderBrush="#FFBDBEC1"
								BorderThickness="1,1,1,0"
								CornerRadius="4,4,0,0" Visibility="Collapsed"/>
						</Grid>

						<!-- Selected -->
						<Grid x:Name="TabSelected" Opacity="0" Margin="0,0,0,-1" VerticalAlignment="Stretch">
							<Path Height="3" Width="3" Stretch="Fill" Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z" Fill="{StaticResource TabActiveNormalLeftHighlightBrush}" x:Name="BottomLeftInnerFilet1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="1,0,0,0"/>
							<Path Height="3" Width="3" Stretch="Fill" Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z" Fill="{StaticResource TabActiveNormalLeftHighlightBrush}" x:Name="BottomRightInnerFilet1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,0"/>
							<Path HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="2" Width="3" Stretch="Fill" Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z" Fill="{StaticResource TabActiveNormalBorderBrush}" x:Name="BottomLeftFilet1" />
							<Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="2" Width="3" Stretch="Fill" Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z" Fill="{StaticResource TabActiveNormalBorderBrush}" x:Name="BottomRightFilet1" />
							<Border Margin="3,0,3,0" x:Name="OuterStroke1" BorderBrush="{StaticResource TabActiveNormalBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
							<Border Background="{StaticResource TabActiveNormalCenterBrush}" Margin="4,1,4,0" CornerRadius="2,2,0,0"/>
						</Grid>

						<!-- Selected Hover -->
						<Grid x:Name="TabHottrack" Opacity="0">
							<Border CornerRadius="3,3,0,0" BorderBrush="{StaticResource TabInactiveHoverBorderDarkBrush}" BorderThickness="1,1,1,0" Margin="1,0" Opacity="0.2"  />
							<Border CornerRadius="3,3,0,0" BorderBrush="{StaticResource TabInactiveHoverBorderDarkBrush}" BorderThickness="1,1,1,0" Margin="2,0" Opacity="0.35"  />
							<Border CornerRadius="3,3,0,0" BorderBrush="{StaticResource TabInactiveHoverBorderDarkBrush}" BorderThickness="1,1,1,0" Margin="3,0" />
						</Grid>

						<!-- Contextual Tab Selected-->
						<Grid  x:Name="ContextualTabSelected"  Visibility="Collapsed"  Opacity="0" Margin="0,0,0,-1">
							<Path Height="3" Width="3" Stretch="Fill" Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z" Fill="{StaticResource TabActiveNormalLeftHighlightBrush}" x:Name="CTBottomLeftInnerFilet1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="1,0,0,0"/>
							<Path Height="3" Width="3" Stretch="Fill" Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z" Fill="{StaticResource TabActiveNormalLeftHighlightBrush}" x:Name="CTBottomRightInnerFilet1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,1,0"/>
							<Path HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="2" Width="3" Stretch="Fill" Data="M 24,71 C24,71 24,72 24,72 24,73 23,74 22,74 22,74 21,74 21,74 21,74 21,75 21,75 21,75 22,75 22,75 22,75 23,75 23,75 24,75 25,74 25,73 25,73 25,71 25,71 25,71 24,71 24,71 z" Fill="{Binding ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}" x:Name="CTBottomLeftFilet1" />
							<Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="2" Width="3" Stretch="Fill" Data="M 28,75 C28,75 29,75 29,75 29,75 30,75 30,75 30,75 30,74 30,74 30,74 29,74 29,74 28,74 27,73 27,72 27,72 27,71 27,71 27,71 26,71 26,71 26,71 26,72 26,72 26,72 26,73 26,73 26,74 27,75 28,75 z" Fill="{Binding ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}" x:Name="CTBottomRightFilet1" />
							<Border x:Name="CTOuterStroke1" BorderBrush="{Binding ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0"/>
							<Border Background="{StaticResource TabActiveNormalCenterBrush}" Margin="1,1,1,0" CornerRadius="2,2,0,0"/>
						</Grid>

						<ContentControl x:Name="tabItemText" Margin="12,1,12,0" Content="{TemplateBinding Header}" VerticalAlignment="Center" FontSize="11" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center"/>

						<!-- Separator -->
						<Line x:Name="TabSeparatorDark" HorizontalAlignment="Right" Stretch="Fill" Visibility="Collapsed" StrokeThickness="1" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False" Margin="0,-2,1,0" Stroke="{StaticResource TabSeparatorDarkBrush}"/>
						<Line x:Name="TabSeparatorLight" HorizontalAlignment="Right" Stretch="Fill" Visibility="Collapsed" StrokeThickness="1" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False" Margin="1,-2,0,0" Stroke="{StaticResource TabSeparatorLightBrush}"/>

						<!-- ContextTab Right Separator -->
						<Line x:Name="ContextualTabInTabAreaSeparatorRight" HorizontalAlignment="Right" Stretch="Fill" Visibility="Collapsed" StrokeThickness="1" Margin="0, -7, 0, 0" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False" Stroke="{Binding ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}"/>
						<Line x:Name="ContextualTabInTabAreaHighlightRight" HorizontalAlignment="Right" Stretch="Fill" Visibility="Collapsed" StrokeThickness="1" Margin="0, -7, -1, 1" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False">
							<Line.Stroke>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<LinearGradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop Offset="0" Color="#72ffffff"/>
											<GradientStop Offset="1" Color="#00ffffff"/>
										</GradientStopCollection>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Line.Stroke>
						</Line>

						<!-- ContextTab Left Separator -->
						<Line x:Name="ContextualTabInTabAreaSeparatorLeft" HorizontalAlignment="Left" Stretch="Fill" StrokeThickness="1" Margin="0, -7, 0, 0" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False" Visibility="Collapsed" Stroke="{Binding ContextualTab.BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}"/>
						<Line x:Name="ContextualTabInTabAreaHighlightLeft" HorizontalAlignment="Left" Stretch="Fill" StrokeThickness="1" Margin="-1, -7, 0, 1" X1="0" X2="0" Y1="0" Y2="1" IsHitTestVisible="False" Visibility="Collapsed">
							<Line.Stroke>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<LinearGradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop Offset="0" Color="#72ffffff"/>
											<GradientStop Offset="1" Color="#00ffffff"/>
										</GradientStopCollection>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Line.Stroke>
						</Line>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbonContextualTab -->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbonContextualTab">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="#FFFFFFFF"/>
		<Setter Property="Margin" Value="16,1,-16,0"/>
		<Setter Property="Padding" Value="10,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbonContextualTab">
					<Grid >
						<Border Background="{Binding BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}">
							<Border.OpacityMask>
								<LinearGradientBrush  EndPoint="0.5,0" StartPoint="0.5,1">
									<GradientStop Color="#00F8CC62" Offset="0"/>
									<GradientStop Color="#CCF8CC62" Offset="1"/>
								</LinearGradientBrush>
							</Border.OpacityMask>
						</Border>
						<Border Background="{Binding BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}" Height="4" VerticalAlignment="Top"/>
						<Border BorderThickness="1,0" BorderBrush="{Binding BaseBackColor, Converter={StaticResource ctbcc},  RelativeSource={RelativeSource TemplatedParent}}"/>
						<Border BorderThickness="1,0" Margin="-1,0" >
							<Border.BorderBrush>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<LinearGradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop Offset="0" Color="#ccffffff"/>
											<GradientStop Offset="1" Color="#72ffffff"/>
										</GradientStopCollection>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Border.BorderBrush>
						</Border>
						<ContentControl Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}">
							<ContentPresenter>
								<ContentPresenter.Effect>
									<DropShadowEffect Direction="270" ShadowDepth="0" Opacity="0.75" BlurRadius="5"/>
								</ContentPresenter.Effect>
							</ContentPresenter>
						</ContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- HorizontalRibbonScrollViewer -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:HorizontalRibbonScrollViewer">
		<Setter Property="Foreground" Value="#FF4C607A"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:HorizontalRibbonScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Button x:Name="LeftScrollButton" Width="13" Visibility="Collapsed" Canvas.ZIndex="1" HorizontalAlignment="Left" Style="{StaticResource HorizontalRibbonScrollViewerLeftScrollBtnStyle}">
							<Button.Content>
								<Path
										Height="5"
										Width="3"
										Stretch="Fill"
										Data="M 3,0 C3,0 3,5 3,5 3,5 2,5 2,5 2,5 2,4 2,4 2,4 1,4 1,4 1,4 1,3 1,3 1,3 0,3 0,3 0,3 0,2 0,2 0,2 1,2 1,2 1,2 1,1 1,1 1,1 2,1 2,1 2,1 2,0 2,0 2,0 3,0 3,0 z"
										Fill="{TemplateBinding Foreground}" />
							</Button.Content>
						</Button>
						<igPrim:HorizontalRibbonScrollViewerPanel x:Name="ScrollPanel"/>
						<Button x:Name="RightScrollButton" Width="13" Visibility="Collapsed" Canvas.ZIndex="1" HorizontalAlignment="Right" Style="{StaticResource HorizontalRibbonScrollViewerRightScrollBtnStyle}">
							<Button.Content>
								<Path
										Height="5"
										Width="3"
										Stretch="Fill"
										Data="M 0,0 C0,0 0,5 0,5 0,5 1,5 1,5 1,5 1,4 1,4 1,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 z"
										Fill="{TemplateBinding Foreground}" />
							</Button.Content>
						</Button>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="LeftScrollButtonVisibility">
								<VisualState x:Name="NoLeftScroll"></VisualState>
								<VisualState x:Name="LeftScroll">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LeftScrollButton">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="RightScrollButtonVisibility">
								<VisualState x:Name="NoRightScroll"></VisualState>
								<VisualState x:Name="RightScroll">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RightScrollButton">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- VerticalRibbonScrollViewer Buttons -->
	<!-- =================================================================== -->
	<Style x:Key="VerticalRibbonScrollViewerBtnStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="{x:Null}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HvrChrm" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Nrml" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HvrChrm" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Nrml" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Nrml" Fill="{StaticResource MenuScrollViewerNormalCenterBrush}" Stroke="{StaticResource MenuScrollViewerNormalBorderBrush}" RadiusX="2" RadiusY="2"/>
						<Border x:Name="HvrChrm" BorderBrush="{StaticResource MenuScrollViewerHoverBorderBrush}" BorderThickness="1" CornerRadius="2" Background="{StaticResource MenuScrollViewerHoverCenterBrush}" Visibility="Collapsed">
							<Rectangle Stroke="{StaticResource MenuScrollViewerHoverHighlightBrush}" RadiusX="1" RadiusY="1"/>
						</Border>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- VerticalRibbonScrollViewer -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:VerticalRibbonScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:VerticalRibbonScrollViewer">
					<Grid Background="{TemplateBinding Background}">


						<Button x:Name="TopScrollButton" Height="12" Visibility="Collapsed" Canvas.ZIndex="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource VerticalRibbonScrollViewerBtnStyle}">
							<Button.Content>
								<Grid>
									<Path
								Width="5"
								Height="3"
								Data="M 0,2 C0,2 0,3 0,3 0,3 5,3 5,3 5,3 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 2,1 2,1 2,1 1,1 1,1 1,1 1,2 1,2 1,2 0,2 0,2 z"
								Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}"
								Stretch="Fill"/>
								</Grid>
							</Button.Content>
						</Button>
						<igPrim:VerticalRibbonScrollViewerPanel x:Name="ScrollPanel"/>
						<Button x:Name="BottomScrollButton" Height="12" Visibility="Collapsed" Canvas.ZIndex="1" HorizontalAlignment="Stretch"  VerticalAlignment="Bottom" Style="{StaticResource VerticalRibbonScrollViewerBtnStyle}">
							<Button.Content>
								<Grid>
									<Path
								Width="5"
								Height="3"
								Data="M 0,1 C0,1 0,0 0,0 0,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
								Fill="{StaticResource MenuScrollViewerNormalGlyphBrush}"
								Stretch="Fill"/>
								</Grid>
							</Button.Content>
						</Button>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="TopScrollButtonVisibility">
								<VisualState x:Name="NoTopScroll"></VisualState>
								<VisualState x:Name="TopScroll">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TopScrollButton">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="BottomScrollButtonVisibility">
								<VisualState x:Name="NoBottomScroll"></VisualState>
								<VisualState x:Name="BottomScroll">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BottomScrollButton">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- RibbonGroupControl -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:RibbonGroupControl">
		<Setter Property="Foreground" Value="{StaticResource RibbonGroupCaptionTextBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:RibbonGroupControl">
					<Grid Margin="2,1,2,0" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="Hover" To="Normal" GeneratedDuration="00:00:00.3"/>
									<VisualTransition From="PopupHover" To="PopupNormal" GeneratedDuration="00:00:00.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Hover">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RibbonGroupGlowHover" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Small">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="separator" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SmallPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroupPressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="separator" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapsedPressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonPressedCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonPressedBorderDarkBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlightStroke" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonPressedBorderLightBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="lowerGlowEffect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SmallHover">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroupHover" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="separator" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CollapsedHover">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonHoverCenterBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonHoverBorderDarkBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlightStroke" Storyboard.TargetProperty="Stroke">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedGroupButtonHoverBorderLightBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="lowerGlowEffect" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="DroppedDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SmallDroppedDown">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroup" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SmallGroupPressed" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToolsContainer" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="separator" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PopupCommonStates">
								<VisualState x:Name="PopupNormal"/>
								<VisualState x:Name="PopupHover">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CollapsedRibbonGroupGlowHover" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="CaptionOverflowStates">
								<VisualState x:Name="HideCaptionOverflow"/>
								<VisualState x:Name="ShowCaptionOverflow">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CaptionOverflow" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid>
							<Grid x:Name="NormalGroup" Margin="0,0,4,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition MinHeight="15" Height="Auto"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid x:Name="RibbonGroupGlowHover" Grid.RowSpan="2" Opacity="0" Grid.ColumnSpan="2">
									<Grid.OpacityMask>
										<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
											<GradientStop Offset="0" Color="#3F000000"/>
											<GradientStop Color="#EAFFFFFF" Offset="0.1"/>
											<GradientStop Color="#FFE5E5E5" Offset="0.9"/>
											<GradientStop Color="#3FFFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Grid.OpacityMask>
									<Rectangle Fill="{StaticResource RibbonGroupHoverGlow}"/>
									<Rectangle Fill="{StaticResource RibbonGroupHoverOverlay}"/>
									<Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource RibbonGroupHoverHighlight}"/>
								</Grid>
								<ig:VerticalRibbonToolWrapPanel x:Name="ToolsPanelNormal" Margin="3,0" Grid.ColumnSpan="2"/>
								<Grid Grid.Row="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid Grid.Row="1" HorizontalAlignment="Center" Margin="5,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBlock x:Name="Caption" Text="{Binding Path=Group.Caption, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Bottom"  />
										<TextBlock x:Name="CaptionOverflow" Visibility="Collapsed" Text="..." Foreground="{TemplateBinding Foreground}" VerticalAlignment="Bottom" Grid.Column="1" />
									</Grid>
									<ContentControl x:Name="DialogButtonPlaceholder" Grid.Row="1" Grid.Column = "1"/>                                    
								</Grid>
							</Grid>

							<Grid x:Name="SmallGroup" Visibility="Collapsed" Width="22">
								<Border x:Name="SmallGroupHover" Background="{StaticResource ButtonToolHottrackCenterBrush}" BorderBrush="{StaticResource ButtonToolHottrackBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
									<Border BorderBrush="{StaticResource ButtonToolHottrackBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
								</Border>
								<Border x:Name="SmallGroupPressed" Background="{StaticResource ButtonToolPressedCenterBrush}" BorderBrush="{StaticResource ButtonToolPressedBorderDarkBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
									<Border BorderBrush="{StaticResource ButtonToolPressedBorderLightBrush}" BorderThickness="1" CornerRadius="1"/>
								</Border>
								<Image x:Name="SmallGroupImage" Height="16" Width="16" Margin="0,1,0,0" Source="{Binding Path=Group.SmallImage, RelativeSource={RelativeSource TemplatedParent}}"/>
							</Grid>

							<Grid x:Name="CollapsedGroup" Visibility="Collapsed" Background="Transparent" Margin="4,0" >
								<Grid Margin="{TemplateBinding Padding}">
									<Grid>
										<Border
										x:Name="Bd"
										Background="{StaticResource CollapsedGroupButtonNormalCenterBrush}"
										BorderBrush="{StaticResource CollapsedGroupButtonNormalBorderDarkBrush}"
										BorderThickness="1"
										CornerRadius="2">
											<Grid>
												<Rectangle
													x:Name="highlightStroke"
													Stroke="{StaticResource CollapsedGroupButtonNormalBorderLightBrush}"
													RadiusX="1"
													RadiusY="1"/>
												<Rectangle x:Name="lowerGlowEffect" Visibility="Collapsed" Fill="{StaticResource CollapsedGroupButtonLowerGlowBrush}"/>
											</Grid>
										</Border>
									</Grid>

									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Border
											x:Name="InnerAreaBd"
											Margin="7,5,7,3"
											Background="{StaticResource CollapsedGroupButtonInnerAreaCenterBrush}"
											BorderBrush="{StaticResource CollapsedGroupButtonInnerAreaBorderBrush}"
											VerticalAlignment="Top"
											HorizontalAlignment="Center"
											BorderThickness="1"
											CornerRadius="2"
											Width="30" Height="30">
											<Border BorderBrush="{StaticResource CollapsedGroupButtonInnerAreaHighlightBrush}" BorderThickness="1" CornerRadius="1">
												<Image x:Name="LargeGroupImage" Height="32" Width="32" Source="{Binding Path=Group.LargeImage, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
											</Border>
										</Border>

										<igPrim:LargeToolCaptionPresenter
											x:Name="CollapsedGroupButtonCaption"
											Grid.Row="1"
											HorizontalAlignment="Center"
											Margin="5,3,5,0"
											Text="{Binding Path=Group.Caption, RelativeSource={RelativeSource TemplatedParent}}"
											Foreground="{StaticResource TabIsSelectedTextBrush}"
											GlyphVisibility="Visible"/>
									</Grid>

								</Grid>

							</Grid>

							<Rectangle x:Name="separator" Width="3" Fill="{StaticResource RibbonGroupSeparatorFill}" Stroke="{StaticResource RibbonGroupSeparatorStroke}" StrokeThickness="1" HorizontalAlignment="Right" Margin="0,3,0,5" />

						</Grid>

						<Popup x:Name="Popup" Height="89">
							<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden" x:Name="ToolsScrollViewer" Margin="0" Padding="0" BorderThickness="0">
								<Grid x:Name="ToolsContainer" Visibility="Collapsed" Height="89">
									<Border x:Name="CollapsedGroupborderDarkNormal" Background="{StaticResource GroupAreaBackgroundBrush}" BorderBrush="{StaticResource RibbonGroupNormalBorderDarkBrush}" BorderThickness="1" CornerRadius="1"/>
									<Grid Margin="1">
										<Grid.RowDefinitions>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid x:Name="CollapsedRibbonGroupGlowHover" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0">
											<Grid.OpacityMask>
												<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
													<GradientStop Offset="0" Color="#3F000000"/>
													<GradientStop Color="#EAFFFFFF" Offset="0.1"/>
													<GradientStop Color="#FFE5E5E5" Offset="0.9"/>
													<GradientStop Color="#3FFFFFFF" Offset="1"/>
												</LinearGradientBrush>
											</Grid.OpacityMask>
											<Rectangle Fill="{StaticResource RibbonGroupHoverGlow}"/>
											<Rectangle Fill="{StaticResource RibbonGroupHoverOverlay}"/>
											<Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource RibbonGroupHoverHighlight}"/>
										</Grid>
										<ig:VerticalRibbonToolWrapPanel x:Name="ToolsPanelCollapsed" Margin="7,1" Grid.ColumnSpan="2"/>
										<TextBlock x:Name="CollapsedGroupCaption" Text="{Binding Path=Group.Caption, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0" Grid.Row="1" Grid.ColumnSpan="2"/>
										<ContentControl x:Name="CollapsedGroupDialogButtonPlaceholder" Grid.Row="1" Grid.Column="1"/>
									</Grid>
									<ig:ContextMenuService.Manager>
										<ig:ContextMenuManager>
											<ig:ContextMenuManager.ContextMenu>
												<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuSeparator/>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Group.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Group.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuSeparator/>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
														<ig:Commanding.Command>
															<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
														</ig:Commanding.Command>
													</ig:XamMenuItem>
													<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Group.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
													</ig:XamMenuItem>
												</ig:XamContextMenu>
											</ig:ContextMenuManager.ContextMenu>
										</ig:ContextMenuManager>
									</ig:ContextMenuService.Manager>
								</Grid>
							</ScrollViewer>
						
						</Popup>

						<ig:ContextMenuService.Manager>
							<ig:ContextMenuManager>
								<ig:ContextMenuManager.ContextMenu>
									<ig:XamContextMenu FlowDirection="{TemplateBinding FlowDirection}" Placement="MouseClick" ig:Commanding.CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=AddToQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="AddToQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=RemoveFromQAT}" Visibility="{Binding Path=Location, Converter={StaticResource iqvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="RemoveFromQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeQAT}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeQAT" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATBelow}"  Visibility="{Binding Path=Group.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=true, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATBelowRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ShowQATAbove}"  Visibility="{Binding Path=Group.Ribbon.QuickAccessToolbarLocation, Converter={StaticResource qatLocationvc}, ConverterParameter=false, RelativeSource={RelativeSource TemplatedParent}}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="ShowQATAboveRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuSeparator/>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=CustomizeRibbon}">
											<ig:Commanding.Command>
												<ig:CustomizationCommandSource CommandType="CustomizeRibbon" EventName="Click" />
											</ig:Commanding.Command>
										</ig:XamMenuItem>
										<ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=MinimizeRibbon}" IsCheckable="True" IsChecked="{Binding Path=Group.Ribbon.IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
										</ig:XamMenuItem>
									</ig:XamContextMenu>
								</ig:ContextMenuManager.ContextMenu>
							</ig:ContextMenuManager>
						</ig:ContextMenuService.Manager>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- KeyTip Style -->
	<!-- =================================================================== -->
	<Style TargetType="igPrim:KeyTip">
		<Setter Property="Foreground" Value="#FF333333" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="2,-1,2,-2"/>
		<Setter Property="Background" Value="{StaticResource KeyTipBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource KeyTipBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igPrim:KeyTip">
					<Grid IsHitTestVisible="False">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="LayoutRoot" IsHitTestVisible="True" Background="Transparent">
							<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2">
								<TextBlock Text="{Binding Path=Value, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}"/>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- ButtonGroupControl Style -->
	<!-- =================================================================== -->
	<Style TargetType="ig:ButtonGroupControl">
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource ButtonGroupBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonGroupBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:ButtonGroupControl">
					<Grid>
						<Border
							x:Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2">
							<Grid>
								<Rectangle Stroke="{StaticResource ButtonGroupHighlightBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
								<igPrim:ButtonGroupPanel x:Name="ToolContainer" Margin="{TemplateBinding Padding}"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- RibbonCustomizationDialog -->
	<!-- =================================================================== -->

	<!-- =================================================================== -->
	<!-- RibbonCustomizationDialog Brushes -->
	<!-- =================================================================== -->
	<SolidColorBrush x:Key="RibbonCustomizationDialogBackgroundBrush" Color="#FFFFFFFF"/>
	<LinearGradientBrush x:Key="RibbonCustomizationDialogBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFa3aeb9"/>
				<GradientStop Offset="0.37" Color="#FF8399a9"/>
				<GradientStop Offset="0.370" Color="#FF718597"/>
				<GradientStop Offset="1" Color="#FF617583"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="RibbonCustomizationDialogCloseBtnBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0"/>
		<GradientStop Color="#FF8399A9" Offset="0.375"/>
		<GradientStop Color="#FF718597" Offset="0.375"/>
		<GradientStop Color="#FF617584" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="RibbonCustomizationDialogCloseBtnHoverBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFb5bdc8"/>
				<GradientStop Offset="0.370" Color="#FF8399a9"/>
				<GradientStop Offset="0.370" Color="#FF718597"/>
				<GradientStop Offset="0.906" Color="#FFb9c1ca"/>
				<GradientStop Offset="1" Color="#FFb9c1ca"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="Separatorbrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0.5" Color="#FF617584"/>
				<GradientStop Offset="0.5" Color="#FFEDF0F3"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="RibbonCustomizationDialogCloseBtnPressedBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FF6b7c8d"/>
				<GradientStop Offset="0.370" Color="#FF4d606f"/>
				<GradientStop Offset="0.370" Color="#FF465460"/>
				<GradientStop Offset="0.906" Color="#FF262d33"/>
				<GradientStop Offset="1" Color="#FF262d33"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="HeaderNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFfefefe"/>
				<GradientStop Offset="0.5" Color="#FFeff1f2"/>
				<GradientStop Offset="1" Color="#FFd0d6db"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="HeaderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFfefefe"/>
				<GradientStop Offset="0.35" Color="#FFf4f9fc"/>
				<GradientStop Offset="1" Color="#FFa9cae6"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="#FFC9CACA"/>
	<SolidColorBrush x:Key="HeaderMovingBackgroundBrush" Color="#FF000000"/>
	<SolidColorBrush x:Key="FooterBackgroundBrush" Color="#FFEDF0F3"/>

	<SolidColorBrush x:Key="HeaderNormalForegroundBrush" Color="#FF444444"/>
	<SolidColorBrush x:Key="HeaderHoverForegroundBrush" Color="#FF444444"/>
	<SolidColorBrush x:Key="CellItemNormalForegroundBrush" Color="#FF444444"/>
	<SolidColorBrush x:Key="CellItemHoverForegroundBrush" Color="#FF444444"/>
	<SolidColorBrush x:Key="CellItemSelectedForegroundBrush" Color="#FF444444"/>
	<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFa3aeb9"/>
				<GradientStop Offset="1" Color="#FF617583"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="NodeLineBrush" Color="#FFA3AEB9"/>
	<SolidColorBrush x:Key="LineTerminatorBrush" Color="#FFA3AEB9"/>
	<LinearGradientBrush x:Key="SilverlightDarkBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0"/>
		<GradientStop Color="#FF8399A9" Offset="0.375"/>
		<GradientStop Color="#FF718597" Offset="0.375"/>
		<GradientStop Color="#FF617584" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="SilverlightLightBrush" StartPoint="0,0" EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Offset="0" Color="#FFfefefe"/>
				<GradientStop Offset="0.5" Color="#FFeff1f2"/>
				<GradientStop Offset="1" Color="#FFd0d6db"/>
			</GradientStopCollection>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="ItemHottrackOuterBorderFill" Color="#FFB5DDE7"/>
	<SolidColorBrush x:Key="ItemHottrackCenterFill" Color="#FFDCEDF3"/>
	<SolidColorBrush x:Key="ItemSelectedOuterBorderFill" Color="#FF90CCDB"/>
	<SolidColorBrush x:Key="ItemSelectedCenterFill" Color="#FFCAE4ED"/>

	<SolidColorBrush x:Key="DropIndicatorFill" Color="#FF6DBDD1"/>

	<!-- =================================================================== -->
	<!-- RibbonCustomizationDialog Close Button-->
	<!-- =================================================================== -->
	<Style x:Key="RibbonCustomizationDialogCloseBtn" TargetType="Button">
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Width" Value="23"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RibbonCustomizationDialogCloseBtnHoverBrush}"></DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RibbonCustomizationDialogCloseBtnPressedBrush}"></DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" CornerRadius="2" Background="{StaticResource RibbonCustomizationDialogCloseBtnBackgroundBrush}">
							<Border Margin="1" BorderBrush="#59FFFFFF" BorderThickness="1" CornerRadius="1"/>
						</Border>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
						<Border x:Name="DisabledVisualElement" Background="#FFFFFFFF" CornerRadius="1" IsHitTestVisible="false" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- RibbonCustomizationDialog Static Resources for the XamDataTree-->
	<!-- =================================================================== -->

	<Style x:Key="cbstyle" TargetType="CheckBox">
		<Setter Property="Padding" Value="4,1,0,0"/>
	</Style>

	<igSLPrim:BoolToVisibilityConverter x:Key="BoolToVis"/>

	<DataTemplate x:Key="toolNodeLayout">
		<StackPanel Orientation="Horizontal">
			<Image Source="{Binding Data.ImageSource}" Height="16" Width="16"/>
            <TextBlock Text="{Binding Data.MenuHeader}" FontSize="10" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="toolNodeLayoutEdit">
		<StackPanel Orientation="Horizontal">
			<Image Source="{Binding Data.ImageSource}"/>
            <TextBox Text="{Binding Data.MenuHeader, Mode=TwoWay}" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="groupNodeLayout">
		<StackPanel Orientation="Horizontal">
            <Image Source="{Binding Data.ImageSource}" Height="16" Width="16"/>
            <TextBlock Text="{Binding Data.MenuHeader}" FontWeight="Bold" FontSize="10" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="groupNodeLayoutEdit">
		<StackPanel Orientation="Horizontal">
			<Image Source="{Binding Data.ImageSource}"/>
            <TextBox Text="{Binding Data.MenuHeader, Mode=TwoWay}" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="tabNodeLayout">
		<StackPanel Orientation="Horizontal">
            <Image Source="{Binding Data.ImageSource}" />
            <TextBlock Text="{Binding Data.MenuHeader}" FontSize="12" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="tabNodeLayoutEdit">
		<StackPanel Orientation="Horizontal">
			<Image Source="{Binding Data.ImageSource}"/>
            <TextBox Text="{Binding Data.MenuHeader, Mode=TwoWay}" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="tabGroupNodeLayout">
        <Border BorderThickness="1"  CornerRadius="0 0 3 0" Margin="-5 -4 0 0" Background="{StaticResource ItemHottrackCenterFill}" BorderBrush="{StaticResource ItemHottrackOuterBorderFill}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                <TextBlock Text="{Binding Data.MenuHeader}" FontSize="12" Margin="10,2,20,2"  />
            </StackPanel>
        </Border>
    </DataTemplate>

	<DataTemplate x:Key="qatToolNodeLayout">
		<StackPanel Orientation="Horizontal">
            <Image Source="{Binding Data.ImageSource}" Height="16" Width="16"/>
            <TextBlock Text="{Binding Data.MenuHeader}" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>
	
	<DataTemplate x:Key="qatToolNodeLayoutEdit">
		<StackPanel Orientation="Horizontal">
			<Image Source="{Binding Data.ImageSource}"/>
            <TextBox Text="{Binding Data.MenuHeader, Mode=TwoWay}" Margin="5 0 0 0"/>
		</StackPanel>
	</DataTemplate>

	<!-- =================================================================== -->
	<!-- XamDataTree ExpansionIndicatorStyle1-->
	<!-- =================================================================== -->
	<Style x:Key="ExpansionIndicatorStyle1" TargetType="igSLPrim:ExpansionIndicator">
		<Setter Property="Background" Value="#FF666666"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igSLPrim:ExpansionIndicator">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
								<VisualState x:Name="Selected" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpansionStates">

								<VisualState x:Name="Expanded">
									<Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph1" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpansionIndicatorGlyph1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF666666"/>
										</ColorAnimationUsingKeyFrames>
														</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed">

								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="15"/>
							<ColumnDefinition Width="5"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid x:Name="ExpansionIndicator" Background="#00000000" Grid.ColumnSpan="2" Grid.RowSpan="2" >
                            <Path x:Name="ExpansionIndicatorGlyph1" Data="M1.96875,4.1669998 L8.53125,4.1669998 L8.53125,6.1669998 L1.96875,6.1669998 z M0.87500012,0.84725028 L0.87500012,9.3197498 L9.625,9.3197498 L9.625,0.84725028 z M0,0 L10.5,0 L10.5,10.167 L0,10.167 z" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}" Margin="5" Opacity="0" Stretch="Fill"/>
                            <Path x:Name="ExpansionIndicatorGlyph" Data="M4.2500014,1.8010004 L6.2500019,1.8010004 L6.2500019,4.0830007 L8.5315008,4.0830007 L8.5315008,6.0830011 L6.2500019,6.0830011 L6.2500019,8.3650007 L4.2500014,8.3650007 L4.2500014,6.0830011 L1.9685,6.0830011 L1.9685,4.0830007 L4.2500014,4.0830007 z M0.87499934,0.84700042 L0.87499934,9.3190002 L9.624999,9.3190002 L9.624999,0.84700042 z M0,0 L10.5,0 L10.5,10.166 L0,10.166 z" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}" Margin="5" Stretch="Fill" />
                        </Grid>
						<ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamDataTree Advanced Tree Node Control-->
	<!-- =================================================================== -->
	<Style x:Key="advancedTreeNode" TargetType="igBase:XamDataTreeNodeControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="igBase:XamDataTreeNodeControl">
                    <Grid Background="Transparent" Visibility="{Binding Node.Data.NodeVisibility}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"></VisualState>
								<VisualState x:Name="MouseOver"></VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="NodeHoverState">
								<VisualState x:Name="NodeMouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="grdExtraControls" Storyboard.TargetProperty="VisibilityA">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NodeMouseGone"></VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ExpandedIconStates">
								<VisualState x:Name="HideIcons"></VisualState>
								<VisualState x:Name="ShowCollapsedIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="CollapsedIcon" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ShowExpandedIcon">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ExpandedIcon" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ActiveStates">
								<VisualState x:Name="Inactive"></VisualState>
								<VisualState x:Name="Active">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectedStates">
								<VisualState x:Name="NotSelected"></VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="grdExtraControls" Storyboard.TargetProperty="VisibilityB">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="EndLines">
								<VisualState x:Name="None" >
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd"  >
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<igBase:NodeLineTemination>None</igBase:NodeLineTemination>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TShape">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<igBase:NodeLineTemination>TShape</igBase:NodeLineTemination>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LShape">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="LineTerminator" Storyboard.TargetProperty="NodeLineEnd">
											<DiscreteObjectKeyFrame KeyTime="00:00:00" >
												<DiscreteObjectKeyFrame.Value>
													<igBase:NodeLineTemination>LShape</igBase:NodeLineTemination>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DropStates">
								<VisualState x:Name="NoDrop" />
								<VisualState x:Name="DropOnto" >
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DropOntoElem" Storyboard.TargetProperty="Opacity">
											<EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DropBefore">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropBeforeElem" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DropAfter">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropAfterElem" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="main">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="20" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<igSLPrim:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
							<igSLPrim:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}" />
                            <igSLPrim:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" Visibility="{Binding Node.Data.ExpansionIndicatorVisibility}" IsExpanded="{Binding Node.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{StaticResource ExpansionIndicatorStyle1}" />
							<CheckBox x:Name="Checkbox" 
									  Grid.Column="2" 
									  IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}"
									  IsTabStop="False"
									  Style="{StaticResource cbstyle}"
									  Visibility="{Binding Node.NodeLayout.CheckBoxSettings.CheckBoxVisibilityResolved}" 
									  IsChecked="{Binding Node.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							   VerticalAlignment="Center" HorizontalAlignment="Center"></CheckBox>
							<Border x:Name="Bd" Grid.Column="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
							<Border x:Name="hoverBorder" Background="{StaticResource ItemHottrackCenterFill}" BorderBrush="{StaticResource ItemHottrackOuterBorderFill}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1"></Border>
							<Border x:Name="SelectedBorder" Background="{StaticResource ItemSelectedCenterFill}" BorderBrush="{StaticResource ItemSelectedOuterBorderFill}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Grid.Column="5" CornerRadius="1"></Border>
							<ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
							<ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />

							<igSLPrim:ActiveNodeIndicator x:Name="ActiveBorder" Visibility="Collapsed" Grid.Column="5" IsTabStop="false"  />

							<StackPanel Grid.Column="5" Orientation="Horizontal">
                                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="{Binding Node.Data.ContentPresenterVisibility}"/>

                                <HyperlinkButton Content="{Binding Node.Data.MenuHeader}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="{Binding Node.Data.CreateNewGroupVisibility}" Style="{StaticResource HyperButton}">
                                    <igBase:Commanding.Command>
                                        <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="AddNewGroup" />
                                    </igBase:Commanding.Command>                                    
                                </HyperlinkButton>

                                <igPrim:DualVisibilityGrid Visibility="Collapsed" x:Name="grdExtraControls">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
										<ColumnDefinition/>
										<ColumnDefinition/>
                                        <ColumnDefinition/>
									</Grid.ColumnDefinitions>
                                    <Button ContentTemplate="{StaticResource RenameIcon}" Width="25" Height="20"  Grid.Column="0" Margin="2,0" Visibility="{Binding Node.Data.RenameButtonVisibility}" Style="{StaticResource IconButton}">>
										<igBase:Commanding.Command>
                                            <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="RenameNode" ParameterBinding="{Binding Node}"/>
										</igBase:Commanding.Command>
									</Button>
                                    <Button ContentTemplate="{StaticResource ViewIcon}" Width="25" Height="20"  Grid.Column="1" Margin="2,0" Visibility="{Binding Node.Data.VisibilityButtonVisibility}" Style="{StaticResource IconButton}">>
										<igBase:Commanding.Command>
                                            <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ToggleNodeVisibility" ParameterBinding="{Binding Node}"/>
										</igBase:Commanding.Command>
									</Button>
                                    <Button ContentTemplate="{StaticResource HiddenIcon}" Width="25" Height="20"  Grid.Column="2" Margin="2,0" Visibility="{Binding Node.Data.HiddenButtonVisibility}" Style="{StaticResource IconButton}">>
                                        <igBase:Commanding.Command>
                                            <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ToggleNodeVisibility" ParameterBinding="{Binding Node}"/>
                                        </igBase:Commanding.Command>
                                    </Button>
                                    <Button ContentTemplate="{StaticResource RemoveIcon}" Width="25" Height="20"  Grid.Column="3" Margin="2,0" Visibility="{Binding Node.Data.DeleteButtonVisibility}" Style="{StaticResource IconButton}">>
										<igBase:Commanding.Command>
                                            <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="RemoveNode" ParameterBinding="{Binding Node}"/>
										</igBase:Commanding.Command>
									</Button>
                                </igPrim:DualVisibilityGrid>
							</StackPanel>
						</Grid>
						<Grid x:Name="DropBeforeElem" Visibility="Collapsed" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform Y="-3"/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Rectangle x:Name="bar" Fill="{StaticResource DropIndicatorFill}" Height="1" StrokeThickness="0"/>
							<Path x:Name="arrowLeft"
														Height="7"
														Width="6"
														Stretch="Fill"
														Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z"
														Fill="{StaticResource DropIndicatorFill}" HorizontalAlignment="Left" />
							<Path x:Name="arrowRight"
														HorizontalAlignment="Right"
														Height="7"
														Width="6"
														Stretch="Fill"
														Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z"
														Fill="{StaticResource DropIndicatorFill}" />
						</Grid>
						<Grid x:Name="DropAfterElem" Visibility="Collapsed" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform Y="4"/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Rectangle x:Name="bar1" Fill="{StaticResource DropIndicatorFill}" Height="1" StrokeThickness="0"/>
							<Path x:Name="arrowLeft1"
														Height="7"
														Width="6"
														Stretch="Fill"
														Data="M 166,184 C166,184 166,194 166,194 166,194 171,189 171,189 171,189 166,184 166,184 z"
														Fill="{StaticResource DropIndicatorFill}" HorizontalAlignment="Left" />
							<Path x:Name="arrowRight1"
														HorizontalAlignment="Right"
														Height="7"
														Width="6"
														Stretch="Fill"
														Data="M 178,194 C178,194 178,184 178,184 178,184 173,189 173,189 173,189 178,194 178,194 z"
														Fill="{StaticResource DropIndicatorFill}" />
						</Grid>
						<Rectangle x:Name="DropOntoElem" Opacity="0" Stroke="{StaticResource ItemSelectedOuterBorderFill}" StrokeThickness="2" RadiusX="2" RadiusY="2"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- =================================================================== -->
    <!-- XamDataTree Advanced Tree Node Control For Tab Groups ONLY-->
    <!-- =================================================================== -->
    <Style x:Key="advancedTreeNodeTabGroup" TargetType="igBase:XamDataTreeNodeControl">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igBase:XamDataTreeNodeControl">
                    <Grid Background="Transparent">
                        <Grid x:Name="main">
                            <igSLPrim:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="{Binding Node.Data.ContentPresenterVisibility}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =================================================================== -->
	<!-- QAT Customization Control -->
	<!-- =================================================================== -->
	<Style TargetType="ig:QATCustomizationControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:QATCustomizationControl">
						<Grid>
							<Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
                                <RowDefinition Height="185"/>
                                <RowDefinition Height="110"/>
                            </Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="280" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<!-- Row 0 -->
                        <TextBlock FontWeight="Bold" Text="{Binding Source={StaticResource strings}, Path=ChooseCommandsFromLabel}" />
                        <TextBlock Grid.Column="2" FontWeight="Bold" Text="{Binding Source={StaticResource strings}, Path=CustomizeTheQATLabel}" />
							
							<!-- Row 1 -->
                        <ComboBox Grid.Row="1" Name="cmbCommandGroups" DisplayMemberPath="Name" Margin="0,5"></ComboBox>
                        <!-- Row 2 -->
                        <HyperlinkButton Grid.Row="2" Grid.Column="0" Content="{Binding Source={StaticResource strings}, Path=CollapseAllLabel}" HorizontalAlignment="Right" Style="{StaticResource HyperButton}">
                                <igBase:Commanding.Command>
                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="CollapseLeft"/>
                                </igBase:Commanding.Command>
                            </HyperlinkButton>

                        <!-- Row 3 -->
                        <igBase:XamDataTree Grid.Row="3" Name="treeRibbonLayout" Grid.Column="0" NodeStyle="{StaticResource advancedTreeNode}"  Grid.RowSpan="2" IsExpandedMemberPath="IsNodeExpanded">
								<igBase:XamDataTree.GlobalNodeLayouts>
                                    <igBase:NodeLayout Key="RibbonTabGroup" TargetTypeName="RibbonTabGroupDataModel" ItemTemplate="{StaticResource tabGroupNodeLayout}" NodeStyle="{StaticResource advancedTreeNodeTabGroup}" />
									<igBase:NodeLayout Key="RibbonTab" TargetTypeName="RibbonTabDataModel" ItemTemplate="{StaticResource tabNodeLayout}" />
                                    <igBase:NodeLayout Key="RibbonGroup" TargetTypeName="RibbonGroupDataModel" ItemTemplate="{StaticResource groupNodeLayout}" />
                                    <igBase:NodeLayout Key="RibbonTool" TargetTypeName="RibbonToolDataModel" ItemTemplate="{StaticResource toolNodeLayout}" />
								</igBase:XamDataTree.GlobalNodeLayouts>
							</igBase:XamDataTree>

                        <Button Grid.Row="3" Grid.Column="1" Width="30" Height="50" Grid.RowSpan="2" ContentTemplate="{StaticResource ArrowRight}" Margin="5">
								<igBase:Commanding.Command>
									<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftRight" />
								</igBase:Commanding.Command>
							</Button>
                            
                        <igBase:XamDataTree Grid.Row="3" Name="treeRibbonVisualized" Grid.Column="2" NodeStyle="{StaticResource advancedTreeNode}">
								<igBase:XamDataTree.GlobalNodeLayouts>
                                    <igBase:NodeLayout IsDraggable="true" IsDropTarget="true" Key="QATTool" TargetTypeName="QATItemDataModel" ItemTemplate="{StaticResource qatToolNodeLayout}" EditorTemplate="{StaticResource qatToolNodeLayoutEdit}"/>
								</igBase:XamDataTree.GlobalNodeLayouts>
							</igBase:XamDataTree>

                        <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Vertical" VerticalAlignment="Center">
								<Button Width="25" Height="25"  Margin="5" ContentTemplate="{StaticResource ArrowUp}">
									<igBase:Commanding.Command>
										<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftUp" />
									</igBase:Commanding.Command>
								</Button>
								<Button Width="25" Height="25" Margin="5" ContentTemplate="{StaticResource ArrowDown}">
									<igBase:Commanding.Command>
										<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftDown" />
									</igBase:Commanding.Command>
								</Button>
							</StackPanel>

                            <!-- Row 4 -->
                            <Grid Grid.Row="4" Grid.Column="2" Margin="0, 6, 0, 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <!-- 0 -->
                                <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=CustomizeQATSettingsLabel}" />
                                    <Rectangle Fill="{StaticResource Separatorbrush}" Stretch="Fill" Height="2" Margin="5 0" VerticalAlignment="Center" Width="540" />
                                </StackPanel>

                                <!-- Row 1 Qat Above or below -->
                                <TextBlock Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=QATPositionLabel}" />
                                <CheckBox  Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" Name="chkShowBelowRibbon" VerticalAlignment="Center"/>

                                <!-- 2 -->
                            <TextBlock Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=SaveOrShareLabel}"/>

                                    <ig:XamMenu Height="25" Grid.Row="2" Grid.Column="1" MenuOrientation="Horizontal" HorizontalAlignment="Right">
                                        <ig:XamMenuItem SubmenuPreferredLocation="Bottom"  >
                                            <ig:XamMenuItem.Header>
                                                <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Source={StaticResource strings}, Path=ImportExportDropdownLabel}" />
                                                    <Path Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="8 2 0 0">
                                                        <Path.RenderTransform>
                                                            <CompositeTransform Rotation="-45" TranslateX="-0.2" TranslateY="0.4"/>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </StackPanel>
                                            </ig:XamMenuItem.Header>

                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ImportAllCustomizations}" >
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="DoImportForEverything"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ExportAllCustomizations}">
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="DoExportForEverything"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                        </ig:XamMenuItem>
                                    </ig:XamMenu>
                               <Border Height="24" BorderThickness="1" Grid.Row="2" Grid.Column="1" BorderBrush="{StaticResource RibbonCustomizationDialogBorderBrush}" Width="123" CornerRadius="1" HorizontalAlignment="Right" />

                                <!-- 3-->
                            <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=ResetLayoutLabel}" />

                                    <ig:XamMenu Height="25" Grid.Row="3" Grid.Column="1" MenuOrientation="Horizontal" HorizontalAlignment="Right">
                                        <ig:XamMenuItem SubmenuPreferredLocation="Bottom"  >
                                            <ig:XamMenuItem.Header>
                                                <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Source={StaticResource strings}, Path=ResetDropdownLabel}" />
                                                    <Path Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="15 2 0 0">
                                                        <Path.RenderTransform>
                                                            <CompositeTransform Rotation="-45" TranslateX="-0.2" TranslateY="0.4"/>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </StackPanel>
                                            </ig:XamMenuItem.Header>

                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ResetQATCustomizationsOnlyLabel}" >
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ResetCurrentSelectedControl"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ResetAllCustomizations}">
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ResetEverything"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                        </ig:XamMenuItem>
                                    </ig:XamMenu>
                                <Border Height="24" BorderThickness="1" Grid.Row="3" Grid.Column="1" BorderBrush="{StaticResource RibbonCustomizationDialogBorderBrush}" Width="74" CornerRadius="1" HorizontalAlignment="Right" />
                            </Grid>
						</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- Ribbon Customization Control -->
	<!-- =================================================================== -->
	<Style TargetType="ig:RibbonCustomizationControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:RibbonCustomizationControl">
						<Grid>
							<Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="205"/>
								<RowDefinition Height="90"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="280" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<!-- Row 0 -->
                        <TextBlock FontWeight="Bold" Text="{Binding Source={StaticResource strings}, Path=ChooseCommandsFromLabel}" />
                        <TextBlock Grid.Column="2" FontWeight="Bold" Text="{Binding Source={StaticResource strings}, Path=CustomizeTheRibbonLabel}" />

							<!-- Row 1 -->
                        <ComboBox Grid.Column="0" Grid.Row="1" Name="cmbCommandGroups" DisplayMemberPath="Name" Margin="0,5"></ComboBox>
                        <ComboBox Grid.Column="2" Grid.Row="1" Name="cmbRibbonGroups" DisplayMemberPath="Name" Margin="0,5"></ComboBox>
                        <!-- Row 2 -->
                        <HyperlinkButton Grid.Row="2" Grid.Column="0" Content="{Binding Source={StaticResource strings}, Path=CollapseAllLabel}" HorizontalAlignment="Right" Style="{StaticResource HyperButton}">
                                <igBase:Commanding.Command>
                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="CollapseLeft"/>
                                </igBase:Commanding.Command>
                            </HyperlinkButton>
                            
                        <Grid Grid.Row="2" Grid.Column="2" >
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
                            <HyperlinkButton Grid.Column="0" Content="{Binding Source={StaticResource strings}, Path=NewTabLabel}" HorizontalAlignment="Left" Style="{StaticResource HyperButton}">
									<igBase:Commanding.Command>
										<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="AddNewTab" />
									</igBase:Commanding.Command>
                                </HyperlinkButton>

                            <HyperlinkButton Content="{Binding Source={StaticResource strings}, Path=CollapseAllLabel}" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource HyperButton}">
                                    <igBase:Commanding.Command>
                                        <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="CollapseRight" />
                                    </igBase:Commanding.Command>
                                </HyperlinkButton>
                            </Grid>

                        <!-- Row 3 -->
                        <igBase:XamDataTree Grid.Row="3" Name="treeRibbonLayout" Grid.Column="0" Grid.RowSpan="2" NodeStyle="{StaticResource advancedTreeNode}" IsExpandedMemberPath="IsNodeExpanded">
								<igBase:XamDataTree.GlobalNodeLayouts>
                                    <igBase:NodeLayout Key="RibbonTabGroup" TargetTypeName="RibbonTabGroupDataModel" ItemTemplate="{StaticResource tabGroupNodeLayout}" NodeStyle="{StaticResource advancedTreeNodeTabGroup}" />
                                    <igBase:NodeLayout Key="RibbonTab" TargetTypeName="RibbonTabDataModel" ItemTemplate="{StaticResource tabNodeLayout}" />
                                    <igBase:NodeLayout Key="RibbonGroup" TargetTypeName="RibbonGroupDataModel" ItemTemplate="{StaticResource groupNodeLayout}" />
                                    <igBase:NodeLayout Key="RibbonTool" TargetTypeName="RibbonToolDataModel" ItemTemplate="{StaticResource toolNodeLayout}" />
							   </igBase:XamDataTree.GlobalNodeLayouts>
							</igBase:XamDataTree>

                        <Button Grid.Row="3" Grid.Column="1" Width="30" Height="50" Grid.RowSpan="2" ContentTemplate="{StaticResource ArrowRight}" Margin="5">
								<igBase:Commanding.Command>
									<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftRight" />
								</igBase:Commanding.Command>
							</Button>
                            
                        <igBase:XamDataTree Grid.Row="3" Name="treeRibbonVisualized" Grid.Column="2" NodeStyle="{StaticResource advancedTreeNode}" IsExpandedMemberPath="IsNodeExpanded">
								<igBase:XamDataTree.GlobalNodeLayouts>
                                    <igBase:NodeLayout Key="RibbonTabGroup" TargetTypeName="RibbonTabGroupDataModel" ItemTemplate="{StaticResource tabGroupNodeLayout}" NodeStyle="{StaticResource advancedTreeNodeTabGroup}" />
                                    <igBase:NodeLayout IsDraggable="true" IsDropTarget="true" Key="RibbonTab" TargetTypeName="RibbonTabDataModel" ItemTemplate="{StaticResource tabNodeLayout}" EditorTemplate="{StaticResource tabNodeLayoutEdit}"/>
                                    <igBase:NodeLayout IsDraggable="true" IsDropTarget="true" Key="RibbonGroup" TargetTypeName="RibbonGroupDataModel" ItemTemplate="{StaticResource groupNodeLayout}" EditorTemplate="{StaticResource groupNodeLayoutEdit}" />
                                    <igBase:NodeLayout IsDraggable="true" IsDropTarget="true" Key="RibbonTool" TargetTypeName="RibbonToolDataModel" ItemTemplate="{StaticResource toolNodeLayout}" EditorTemplate="{StaticResource toolNodeLayoutEdit}"/>
								</igBase:XamDataTree.GlobalNodeLayouts>
							</igBase:XamDataTree>

                        <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Vertical" VerticalAlignment="Center">
								<Button Width="25" Height="25"  Margin="5" ContentTemplate="{StaticResource ArrowUp}">
									<igBase:Commanding.Command>
										<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftUp" />
									</igBase:Commanding.Command>
								</Button>
								<Button Width="25" Height="25" Margin="5" ContentTemplate="{StaticResource ArrowDown}">
									<igBase:Commanding.Command>
										<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ShiftDown" />
									</igBase:Commanding.Command>
								</Button>
							</StackPanel>

							<!-- Row 4 -->
							<Grid Grid.Row="4" Grid.Column="2" Margin="0, 6, 0, 0">
								<Grid.RowDefinitions>
									<RowDefinition />
                                    <RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
                                    <ColumnDefinition />
								</Grid.ColumnDefinitions>

                                <!-- 0 -->
								<StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=CustomizeRibbonSettingsLabel}"/>
									<Rectangle Fill="{StaticResource Separatorbrush}" Stretch="Fill" Height="2" Margin="5 0" VerticalAlignment="Center" Width="540" />
								</StackPanel>

                                <!-- 1 -->
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=SaveOrShareLabel}"/>

                                      <ig:XamMenu Height="25" Grid.Row="1" Grid.Column="1" MenuOrientation="Horizontal" HorizontalAlignment="Right">
                                        <ig:XamMenuItem SubmenuPreferredLocation="Bottom"  >
                                            <ig:XamMenuItem.Header>
                                                <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Source={StaticResource strings}, Path=ImportExportDropdownLabel}" />
                                                    <Path Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="8 2 0 0">
                                                        <Path.RenderTransform>
                                                            <CompositeTransform Rotation="-45" TranslateX="-0.2" TranslateY="0.4"/>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </StackPanel>
                                            </ig:XamMenuItem.Header>

                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ImportAllCustomizations}" >
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="DoImportForEverything"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ExportAllCustomizations}">
                                                <igBase:Commanding.Command>
                                                    <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="DoExportForEverything"/>
                                                </igBase:Commanding.Command>
                                            </ig:XamMenuItem>
                                        </ig:XamMenuItem>
                                    </ig:XamMenu>
                                <Border Height="24" BorderThickness="1" Grid.Row="1" Grid.Column="1" BorderBrush="{StaticResource RibbonCustomizationDialogBorderBrush}" Width="123" CornerRadius="1" HorizontalAlignment="Right"/>

                                <!-- 2-->
                            <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" VerticalAlignment="Center" Text="{Binding Source={StaticResource strings}, Path=ResetLayoutLabel}" />

                                       <ig:XamMenu Height="25" Grid.Row="2" Grid.Column="1" MenuOrientation="Horizontal" HorizontalAlignment="Right">
                                            <ig:XamMenuItem SubmenuPreferredLocation="Bottom"  >
                                                <ig:XamMenuItem.Header>
                                                    <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Source={StaticResource strings}, Path=ResetDropdownLabel}" />
                                                        <Path Data="M0.877496,0.8775804 L6.1224194,6.1223941 L0,7 z" Fill="Black" HorizontalAlignment="Left" Height="8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Top" Width="8" UseLayoutRounding="False" Margin="15 2 0 0">
                                                            <Path.RenderTransform>
                                                                <CompositeTransform Rotation="-45" TranslateX="-0.2" TranslateY="0.4"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </StackPanel>
                                                </ig:XamMenuItem.Header>

                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ResetRibbonCustomizationsOnlyLabel}" >
                                                    <igBase:Commanding.Command>
                                                        <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ResetCurrentSelectedControl"/>
                                                    </igBase:Commanding.Command>
                                                </ig:XamMenuItem>
                                    <ig:XamMenuItem Header="{Binding Source={StaticResource strings}, Path=ResetAllCustomizations}">
                                                    <igBase:Commanding.Command>
                                                        <ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="ResetEverything"/>
                                                    </igBase:Commanding.Command>
                                                </ig:XamMenuItem>
                                            </ig:XamMenuItem>
                                        </ig:XamMenu>
                                <Border Height="24" BorderThickness="1" Grid.Row="2" Grid.Column="1" BorderBrush="{StaticResource RibbonCustomizationDialogBorderBrush}" Width="74" CornerRadius="1" HorizontalAlignment="Right" />
                            </Grid>
						</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- =================================================================== -->
	<!-- XamRibbon Customization Control Dialog Window-->
	<!-- =================================================================== -->
	<Style TargetType="ig:XamRibbonCustomizationDialogWindow">
		<Setter Property="Background" Value="{StaticResource RibbonCustomizationDialogBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource RibbonCustomizationDialogBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="0,0,0,5"/>
		<Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ig:XamRibbonCustomizationDialogWindow">
					<Grid>
						<Popup x:Name="Popup">
							<Grid x:Name="RootElement" >
								<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"   CornerRadius="3">
									<Border.Effect>
										<DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="15" Opacity="0.6"/>
									</Border.Effect>
								</Border>
								<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="Transparent"   CornerRadius="3">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>

										<Grid Grid.Row="1" Grid.Column="1" >
											<Grid.RowDefinitions>
												<RowDefinition Height="25"/>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>

											<!-- HEADER CAPTION -->
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*"/>
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Border x:Name="HeaderElem" Background="{StaticResource HeaderNormalBackgroundBrush}" BorderBrush="{StaticResource HeaderNormalBorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" CornerRadius="2,2,0,0">
                                                    <TextBlock Foreground="{TemplateBinding Foreground}" Text="{Binding Source={StaticResource strings}, Path=DialogCaption}" VerticalAlignment="Center" Margin="5,0"/>
												</Border>
												<Button Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource RibbonCustomizationDialogCloseBtn}" VerticalAlignment="Center" Margin="5,0" Cursor="Hand">
													<igBase:Commanding.Command>
														<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="Close" />
													</igBase:Commanding.Command>
													<Path x:Name="path"
													Height="6"
													Width="7"
													Data="M 2,6 C2,6 3,6 3,6 3,6 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 5,6 5,6 5,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,4 6,4 6,4 5,4 5,4 5,4 5,2 5,2 5,2 6,2 6,2 6,2 6,1 6,1 6,1 7,1 7,1 7,1 7,0 7,0 7,0 5,0 5,0 5,0 4,0 4,0 4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 0,0 0,0 0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,4 2,4 2,4 1,4 1,4 1,4 1,5 1,5 1,5 0,5 0,5 0,5 0,6 0,6 0,6 2,6 2,6 z"
													Fill="#FFFFFFFF" Margin="0,0,0,1"/>
												</Button>
											</Grid>

											<!--- HERE BE THE CONTENT -->

											<Grid Grid.Row="1" Height="420" Width="690">
												<Grid.RowDefinitions>
													<RowDefinition Height="*"/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>

												<sdk:TabControl Grid.Row="0" Margin="5 10" x:Name="tabView" Padding="5 5 0 5">
                                                    <igBase:Commanding.Command>
                                                        <ig:XamRibbonCustomizationCommandSource EventName="SelectionChanged" CommandType="TabSelectionChanged" />
                                                    </igBase:Commanding.Command>
                                                    <sdk:TabItem Header="{Binding Source={StaticResource strings}, Path=RibbonCustomizationTab}" >
														<ig:RibbonCustomizationControl x:Name="ribbonCustomizationControl" />
													</sdk:TabItem>
                                                    <sdk:TabItem Header="{Binding Source={StaticResource strings}, Path=QATCustomizationTab}">
														<ig:QATCustomizationControl x:Name="qatCustomizationControl" />
													</sdk:TabItem>
												</sdk:TabControl>
											</Grid>

											<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,10">
                                                <Button Name="btnOk" Width="80" Height="25" VerticalAlignment="Center" Content="{Binding Source={StaticResource strings}, Path=DialogOkButton}">
													<igBase:Commanding.Command>
														<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="Ok" />
													</igBase:Commanding.Command>
												</Button>
                                                <Button Name="btnCancel" Width="80" Height="25" VerticalAlignment="Center" Margin="10,0" Content="{Binding Source={StaticResource strings}, Path=DialogCancelButton}">
													<igBase:Commanding.Command>
														<ig:XamRibbonCustomizationCommandSource EventName="Click" CommandType="Close" />
													</igBase:Commanding.Command>
												</Button>
											</StackPanel>
										</Grid>

									</Grid>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
