<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnExecuteCommand" xml:space="preserve">
    <value>Execute Command</value>
  </data>
  <data name="Language_Docx" xml:space="preserve">
    <value>Word Document</value>
  </data>
  <data name="Language_Text" xml:space="preserve">
    <value>Text Files</value>
  </data>
  <data name="lblSelectCommand" xml:space="preserve">
    <value>Select Command:</value>
  </data>
  <data name="lblSelectInputFileType" xml:space="preserve">
    <value>Select Input File Type:</value>
  </data>
  <data name="btnOpenFile" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="btnSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="btnCloseFile" xml:space="preserve">
    <value>Close File</value>
  </data>
  <data name="lblSelectionEndIndex" xml:space="preserve">
    <value>Selection End Index:</value>
  </data>
  <data name="lblSelectionStartIndex" xml:space="preserve">
    <value>Selection Start Index:</value>
  </data>
  <data name="errValidNumbers" xml:space="preserve">
    <value>Please enter valid positive integer number.</value>
  </data>
  <data name="lblSelectionLength" xml:space="preserve">
    <value>Select Length:</value>
  </data>
  <data name="lblAllowSplitting" xml:space="preserve">
    <value>Allow Splitting:</value>
  </data>
  <data name="lblHiddenSymbols" xml:space="preserve">
    <value>Hidden Symbols:</value>
  </data>
  <data name="lblTextUpdateMode" xml:space="preserve">
    <value>Text Update Mode:</value>
  </data>
  <data name="lblViewSplit" xml:space="preserve">
    <value>View Split:</value>
  </data>
  <data name="lblZoom" xml:space="preserve">
    <value>Zoom:</value>
  </data>
  <data name="btnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="lblSelectOutputFileType" xml:space="preserve">
    <value>Select Output File Type:</value>
  </data>
  <data name="btnSaveFile" xml:space="preserve">
    <value>Save File</value>
  </data>
  <data name="lblContent" xml:space="preserve">
    <value>Content:</value>
  </data>
  <data name="lblSelectionActiveColor" xml:space="preserve">
    <value>Selection Active Color:</value>
  </data>
  <data name="lblSelectionInactiveColor" xml:space="preserve">
    <value>Selection Inactive Color:</value>
  </data>
  <data name="lblSettings" xml:space="preserve">
    <value>Settings: </value>
  </data>
  <data name="lblType" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="setBold" xml:space="preserve">
    <value>bold</value>
  </data>
  <data name="setColor" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="setDoubleStrikeThrough" xml:space="preserve">
    <value>double strike through</value>
  </data>
  <data name="setItalics" xml:space="preserve">
    <value>italics</value>
  </data>
  <data name="setStrikeThrough" xml:space="preserve">
    <value>strike through</value>
  </data>
  <data name="setUnderline" xml:space="preserve">
    <value>underline</value>
  </data>
  <data name="lblFontColor" xml:space="preserve">
    <value>Font Color:</value>
  </data>
  <data name="lblHighlightColor" xml:space="preserve">
    <value>Highlight Color:</value>
  </data>
  <data name="btnDeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="btnLoadContent" xml:space="preserve">
    <value>Load Content</value>
  </data>
  <data name="btnMakeBold" xml:space="preserve">
    <value>Make Bold</value>
  </data>
  <data name="btnMakeItalic" xml:space="preserve">
    <value>Make Italic</value>
  </data>
  <data name="btnMakeRed" xml:space="preserve">
    <value>Make Red</value>
  </data>
  <data name="btnStartUndoLogging" xml:space="preserve">
    <value>Start Undo Logging</value>
  </data>
  <data name="btnStopUndoLogging" xml:space="preserve">
    <value>Stop Undo Logging</value>
  </data>
  <data name="lblEditingCodeBehind" xml:space="preserve">
    <value>Editing using code-behind</value>
  </data>
  <data name="lblUndoRedoManager" xml:space="preserve">
    <value>Undo / Redo Manager</value>
  </data>
  <data name="lblFont" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="lblFontSize" xml:space="preserve">
    <value>Font Size:</value>
  </data>
  <data name="fileDocxRichContent" xml:space="preserve">
    <value>Doc-RichContent.docx</value>
  </data>
  <data name="fileDocxText" xml:space="preserve">
    <value>Doc-Text.docx</value>
  </data>
  <data name="filterDocx" xml:space="preserve">
    <value>Word Documents|*.docx|All Files|*.*</value>
  </data>
  <data name="filterText" xml:space="preserve">
    <value>Text Files|*.txt|All Files|*.*</value>
  </data>
  <data name="lblEnd" xml:space="preserve">
    <value>End:</value>
  </data>
  <data name="lblMultipleSelection" xml:space="preserve">
    <value>Allow Multiple Selection</value>
  </data>
  <data name="lblSelectedText" xml:space="preserve">
    <value>Selected Text:</value>
  </data>
  <data name="lblSelectionRanges" xml:space="preserve">
    <value>Selection Ranges:</value>
  </data>
  <data name="lblStart" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="btnClearEvents" xml:space="preserve">
    <value>Clear Events Log</value>
  </data>
  <data name="lblCancelCBEvents" xml:space="preserve">
    <value>Cancel Clipboard Event</value>
  </data>
  <data name="lblCaretColor" xml:space="preserve">
    <value>Caret Color:</value>
  </data>
  <data name="setHAlignment" xml:space="preserve">
    <value>h-align</value>
  </data>
  <data name="setIdentation" xml:space="preserve">
    <value>identation</value>
  </data>
  <data name="setSpacing" xml:space="preserve">
    <value>spacing</value>
  </data>
  <data name="setVAlignment" xml:space="preserve">
    <value>v-align</value>
  </data>
  <data name="setWordWrap" xml:space="preserve">
    <value>word-wrap</value>
  </data>
  <data name="setAfter" xml:space="preserve">
    <value>After:</value>
  </data>
  <data name="setBefore" xml:space="preserve">
    <value>Before:</value>
  </data>
  <data name="setDropCap" xml:space="preserve">
    <value>drop-cap</value>
  </data>
  <data name="setLine" xml:space="preserve">
    <value>Line:</value>
  </data>
  <data name="setLines" xml:space="preserve">
    <value>Lines:</value>
  </data>
  <data name="txtItem1" xml:space="preserve">
    <value>Item #1</value>
  </data>
  <data name="txtItem2" xml:space="preserve">
    <value>Item #2</value>
  </data>
  <data name="txtItem3" xml:space="preserve">
    <value>Item #3</value>
  </data>
  <data name="txtAuthor" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="txtReleaseDate" xml:space="preserve">
    <value>Release Date</value>
  </data>
  <data name="txtTitle" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="txtUnitPrice" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="txtUrl" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="txtItem" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="txtDropCap11" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="txtDropCap12" xml:space="preserve">
    <value>he .NET Framework consists of the common language runtime and the .NET Framework class library. The common language runtime is the foundation of the .NET Framework. You can think of the runtime as an agent that manages code at execution time, providing core services such as memory management, thread management, and remoting, while also enforcing strict type safety and other forms of code accuracy that promote security and robustness. In fact, the concept of code management is a fundamental principle of the runtime. Code that targets the runtime is known as managed code, while code that does not target the runtime is known as unmanaged code. The class library is a comprehensive, object-oriented collection of reusable types that you can use to develop applications ranging from traditional command-line or graphical user interface (GUI) applications to applications based on the latest innovations provided by ASP.NET, such as Web Forms and XML Web services.</value>
  </data>
  <data name="filterRtf" xml:space="preserve">
    <value>Rich Text Format|*.rtf|All Files|*.*</value>
  </data>
  <data name="Language_Rtf" xml:space="preserve">
    <value>Rich Text Format</value>
  </data>
  <data name="lblBadMood" xml:space="preserve">
    <value>Bad mood</value>
  </data>
  <data name="lblCancelHyperlinkEvents" xml:space="preserve">
    <value>Cancel "HyperlinkExecuting" Events</value>
  </data>
  <data name="lblCarsAvailableForRent" xml:space="preserve">
    <value>Cars available for rent:</value>
  </data>
  <data name="lblCatEVs" xml:space="preserve">
    <value>Electric / Hybrids:</value>
  </data>
  <data name="lblCatFamilyVans" xml:space="preserve">
    <value>Family Vans:</value>
  </data>
  <data name="lblCatHatchbacks" xml:space="preserve">
    <value>Hatchbacks:</value>
  </data>
  <data name="lblCatSedans" xml:space="preserve">
    <value>Sedans:</value>
  </data>
  <data name="lblCatSports" xml:space="preserve">
    <value>Sports cars:</value>
  </data>
  <data name="lblCatSUVs" xml:space="preserve">
    <value>SUVs:</value>
  </data>
  <data name="lblComputer" xml:space="preserve">
    <value>Computer</value>
  </data>
  <data name="lblFriends" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="lblGoodMood" xml:space="preserve">
    <value>Good mood</value>
  </data>
  <data name="lblProjects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="lblSunglasses" xml:space="preserve">
    <value>Sunglasses</value>
  </data>
  <data name="lblSunUmbrella" xml:space="preserve">
    <value>Sun Umbrella</value>
  </data>
  <data name="lblSwimsuit" xml:space="preserve">
    <value>Swimsuit</value>
  </data>
  <data name="lblTargetDates" xml:space="preserve">
    <value>Target dates</value>
  </data>
  <data name="lblThingsToForget" xml:space="preserve">
    <value>Things to FORGET during summer vacation:</value>
  </data>
  <data name="lblThingsToTake" xml:space="preserve">
    <value>Things to TAKE on summer vacation:</value>
  </data>
  <data name="lblWork" xml:space="preserve">
    <value>Work</value>
  </data>
  <data name="lblArgon" xml:space="preserve">
    <value>Argon</value>
  </data>
  <data name="lblAtomicWeight" xml:space="preserve">
    <value>Atomic weight: </value>
  </data>
  <data name="lblBromine" xml:space="preserve">
    <value>Bromine</value>
  </data>
  <data name="lblChlorine" xml:space="preserve">
    <value>Chlorine</value>
  </data>
  <data name="lblCoinageMetal" xml:space="preserve">
    <value>Coinage metal</value>
  </data>
  <data name="lblCopper" xml:space="preserve">
    <value>Copper</value>
  </data>
  <data name="lblCreatedInCode" xml:space="preserve">
    <value>This link is created by adding a ParagraphNode and a HyperlinkNode in the document's body.</value>
  </data>
  <data name="lblCreateUsingMethod" xml:space="preserve">
    <value>This link is created using the "InsertHyperlink" method.</value>
  </data>
  <data name="lblFluorine" xml:space="preserve">
    <value>Fluorine</value>
  </data>
  <data name="lblGold" xml:space="preserve">
    <value>Gold</value>
  </data>
  <data name="lblHalogens" xml:space="preserve">
    <value>Halogens</value>
  </data>
  <data name="lblHelium" xml:space="preserve">
    <value>Helium</value>
  </data>
  <data name="lblHoverOverTheLinks" xml:space="preserve">
    <value>Hover over the links to see tooltips on how these links are created.</value>
  </data>
  <data name="lblIridium" xml:space="preserve">
    <value>Iridium</value>
  </data>
  <data name="lblNeon" xml:space="preserve">
    <value>Neon</value>
  </data>
  <data name="lblNobleGases" xml:space="preserve">
    <value>Noble gases</value>
  </data>
  <data name="lblPalladium" xml:space="preserve">
    <value>Palladium</value>
  </data>
  <data name="lblPeriodicTableElements" xml:space="preserve">
    <value>Some periodic table elements and their respective groups:</value>
  </data>
  <data name="lblPlatinum" xml:space="preserve">
    <value>Platinum</value>
  </data>
  <data name="lblPreciousMetals" xml:space="preserve">
    <value>Precious metals</value>
  </data>
  <data name="lblSilver" xml:space="preserve">
    <value>Silver</value>
  </data>
  <data name="lblSymbol" xml:space="preserve">
    <value>Symbol: </value>
  </data>
  <data name="btnFind" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="btnReplaceFind" xml:space="preserve">
    <value>Replace/Find</value>
  </data>
  <data name="lblFind" xml:space="preserve">
    <value>Find: </value>
  </data>
  <data name="lblReplace" xml:space="preserve">
    <value>Replace: </value>
  </data>
  <data name="lblBottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="lblCrop" xml:space="preserve">
    <value>Crop:</value>
  </data>
  <data name="lblFlipHor" xml:space="preserve">
    <value>Flip Horizontal</value>
  </data>
  <data name="lblFlipVer" xml:space="preserve">
    <value>Flip Vertical</value>
  </data>
  <data name="lblHeight" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="lblLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="lblMargins" xml:space="preserve">
    <value>Margins:</value>
  </data>
  <data name="lblRight" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="lblRotate" xml:space="preserve">
    <value>Rotate:</value>
  </data>
  <data name="lblSize" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="lblTop" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="lblWidth" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="lblMatchCase" xml:space="preserve">
    <value>Match Case</value>
  </data>
  <data name="lblUseWildcard" xml:space="preserve">
    <value>Use Wildcard</value>
  </data>
  <data name="setHighlight" xml:space="preserve">
    <value>highlight</value>
  </data>
  <data name="setFont" xml:space="preserve">
    <value>font</value>
  </data>
  <data name="setFontSize" xml:space="preserve">
    <value>font-size</value>
  </data>
  <data name="setListId" xml:space="preserve">
    <value>list-id</value>
  </data>
  <data name="setListLevel" xml:space="preserve">
    <value>list-level</value>
  </data>
  <data name="setFormat" xml:space="preserve">
    <value>format</value>
  </data>
  <data name="setHeight" xml:space="preserve">
    <value>height</value>
  </data>
  <data name="setWidth" xml:space="preserve">
    <value>width</value>
  </data>
  <data name="setTooltip" xml:space="preserve">
    <value>tooltip</value>
  </data>
  <data name="setUri" xml:space="preserve">
    <value>uri</value>
  </data>
  <data name="setColumns" xml:space="preserve">
    <value>columns</value>
  </data>
  <data name="setRows" xml:space="preserve">
    <value>rows</value>
  </data>
  <data name="txtDropCap21" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="txtDropCap22" xml:space="preserve">
    <value>he .NET Framework can be hosted by unmanaged components that load the common language runtime into their processes and initiate the execution of managed code, thereby creating a software environment that can exploit both managed and unmanaged features. The .NET Framework not only provides several runtime hosts, but also supports the development of third-party runtime hosts.</value>
  </data>
  <data name="btnReloadContent" xml:space="preserve">
    <value>Reload Content</value>
  </data>
  <data name="txtLink1" xml:space="preserve">
    <value>look at our products and services</value>
  </data>
  <data name="txtLink2" xml:space="preserve">
    <value>visiting our forums</value>
  </data>
  <data name="txtLinkText1" xml:space="preserve">
    <value>We define our success through our customers’ delivery of great experiences. See for yourself what sets Infragistics apart from the rest and </value>
  </data>
  <data name="txtLinkText2" xml:space="preserve">
    <value>. Check out our current openings to see how you can join our team, see who shares our commitment to quality by learning more about our partners program, or get in on the latest discussions on products, services, and tech news by </value>
  </data>
  <data name="lblTabStopOffset" xml:space="preserve">
    <value>Tab stop offset:</value>
  </data>
  <data name="btnDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="lblTabStopList" xml:space="preserve">
    <value>Tab stops in the current paragraph</value>
  </data>
  <data name="lblCreateNewTabStop" xml:space="preserve">
    <value>Create new tab stop in the current paragraph:</value>
  </data>
  <data name="lblTabStopAlignment" xml:space="preserve">
    <value>Tab Stop Alignment:</value>
  </data>
  <data name="lblTabStopLeader" xml:space="preserve">
    <value>Tab Stop Leader Character:</value>
  </data>
  <data name="txtTabStopLine1" xml:space="preserve">
    <value>\tIncandescent\tFluorescents (CFLs)\tLight Emitting Diodes (LED)</value>
  </data>
  <data name="txtTabStopLine2" xml:space="preserve">
    <value>Average Life Span\t1200\t8000\t50000</value>
  </data>
  <data name="txtTabStopLine3" xml:space="preserve">
    <value>On/off cycles reduce life span\tSome\tYes\tNo</value>
  </data>
  <data name="txtTabStopLine4" xml:space="preserve">
    <value>Turn on instantly\tYes\tNo\tYes</value>
  </data>
  <data name="txtTabStopLine5" xml:space="preserve">
    <value>Lumens per watt\t11\t40\t100</value>
  </data>
  <data name="txtTabStopLine6" xml:space="preserve">
    <value>Sensitivity to low temperatures\tSome\tYes\tNo</value>
  </data>
  <data name="btnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="lblTabStopDescr1" xml:space="preserve">
    <value>Tab stop at Position: </value>
  </data>
  <data name="lblTabStopDescr2" xml:space="preserve">
    <value>, Alignment: </value>
  </data>
  <data name="lblTabStopDescr3" xml:space="preserve">
    <value>, Leading: </value>
  </data>
  <data name="lblOutputRefreshTrigger" xml:space="preserve">
    <value>Output Refresh Trigger: </value>
  </data>
  <data name="lblRTFOutput" xml:space="preserve">
    <value>RTF Output</value>
  </data>
  <data name="fileDocxTextList" xml:space="preserve">
    <value>Doc-TextList.docx</value>
  </data>
  <data name="errTextToFindEmpty" xml:space="preserve">
    <value>Text to find must not be empty!</value>
  </data>
  <data name="Language_Html" xml:space="preserve">
    <value>HTML Content</value>
  </data>
  <data name="filterHtml" xml:space="preserve">
    <value>HTML Content|*.htm|HTML Content|*.html|All Files|*.*</value>
  </data>
  <data name="lblOutputFormat" xml:space="preserve">
    <value>Output Format:</value>
  </data>
  <data name="lblHTMLOutput" xml:space="preserve">
    <value>HTML Output</value>
  </data>
  <data name="txtLink1Url" xml:space="preserve">
    <value>http://www.infragistics.com/products/</value>
  </data>
  <data name="txtLink2Url" xml:space="preserve">
    <value>https://www.infragistics.com/community/forums/f/ultimate-ui-for-wpf</value>
  </data>
</root>